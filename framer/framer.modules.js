require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"StatusBarLayer":[function(require,module,exports){

/*
	 * USING STATUSBARLAYER

	 * Require the module
	StatusBarLayer = require "StatusBarLayer"

	myStatusBar = new StatusBarLayer
		 * iOS version
		version: <number> (10 || 11)

		 * Text
		carrier: <string>
		time: <string> # if not set, will use local time
		percent: <number>

		 * Show or hide status items
		signal: <boolean>
		wifi: <boolean>
		powered: <boolean>
		showPercentage: <boolean>
		ipod: <boolean> # also affects signal and carrier

		 * Colors
		style: <string> ("light" || "dark")
		foregroundColor: <string> (hex or rgba)
		backgroundColor: <string> (hex or rgba)
		vibrant: <boolean>

		 * Behavior
		hide: <boolean> # initial visibility
		autoHide: <boolean> # hide in landscape where device-appropriate

		 * Simulate call
		myStatusBar.startCall(message, color) # <string>, <string> (hex or rgba)
		myStatusBar.endCall()

		 * Check visibility and call status
		print myStatusBar.hidden
		print myStatusBar.onCall
 */
var StatusBarLayer, defaults,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

defaults = {
  style: "light",
  powered: false,
  carrier: "Carrier",
  foregroundColor: "",
  backgroundColor: "",
  time: "",
  percent: 100,
  showPercentage: true,
  wifi: true,
  signal: true,
  ipod: false,
  hide: false,
  autoHide: true,
  onCall: false,
  vibrant: false,
  version: 11
};

StatusBarLayer = (function(superClass) {
  var batteryGreen, onCallColor;

  extend(StatusBarLayer, superClass);

  batteryGreen = "#4cd964";

  onCallColor = "#4cd964";

  function StatusBarLayer(options) {
    var alarmMargin, baseFontSize, battery, batteryColor, battery_v10_2x, battery_v10_3x, battery_v11_2x, battery_v11_3x, carrier, carrierMargin, colorBattery, colorForeground, device, fontWeight, foregroundItems, getBatteryLevel, getBatteryMargin, getBatterySVG, getBatteryWidth, getOnCallMargin, getSignalSVG, getTime, getTopMargin, i, ipodMargin, isiPhonePlus, layer, len, letterSpacing, locationMargin, onCallBlock, onCallFontSize, onCallLetterSpacing, onCallMargin, onCallMessage, onCallWordSpacing, percentage, percentageMargin, power, powerMargin, powerSVG, ref, selectForegroundColor, signal, signalMargin, signal_v10_2x, signal_v10_3x, signal_v11_2x, signal_v11_3x, statusBarHeight, styleBar, svg, time, timeFontWeight, topMargin, updateOrientation, wifi, wifiMargin, wifiSVG;
    this.options = options != null ? options : {};
    this.options = _.assign({}, defaults, this.options);
    fontWeight = 400;
    timeFontWeight = 600;
    isiPhonePlus = function() {
      if (_.includes(Framer.Device.deviceType, "plus")) {
        return true;
      } else {
        return false;
      }
    };
    StatusBarLayer.__super__.constructor.call(this, this.options);
    getTopMargin = (function(_this) {
      return function() {
        switch (isiPhonePlus()) {
          case true:
            return 8;
          default:
            return 5;
        }
      };
    })(this);
    getOnCallMargin = (function(_this) {
      return function() {
        switch (isiPhonePlus()) {
          case true:
            return 53;
          default:
            return 38;
        }
      };
    })(this);
    getBatteryMargin = (function(_this) {
      return function() {
        if (_this.options.powered === false) {
          if (isiPhonePlus() && _this.options.version > 10) {
            return 5;
          } else {
            return 5.5;
          }
        } else {
          return 2.5;
        }
      };
    })(this);
    getBatteryWidth = (function(_this) {
      return function() {
        if (_this.options.version > 10 && isiPhonePlus()) {
          return 26;
        } else if (_this.options.version > 10) {
          return 26.5;
        } else {
          return 24.5;
        }
      };
    })(this);
    getBatterySVG = (function(_this) {
      return function() {
        var size;
        size = isiPhonePlus() ? "at3x" : "at2x";
        return svg["battery"]["v" + _this.options.version][size];
      };
    })(this);
    getSignalSVG = (function(_this) {
      return function() {
        var size;
        size = isiPhonePlus() ? "at3x" : "at2x";
        return svg["signal"]["v" + _this.options.version][size];
      };
    })(this);
    statusBarHeight = 20;
    topMargin = getTopMargin();
    onCallMargin = topMargin + getOnCallMargin();
    carrierMargin = isiPhonePlus() ? 2 : 4.5;
    signalMargin = isiPhonePlus() ? 6 : 6.5;
    wifiMargin = isiPhonePlus() ? -4 : 4;
    powerMargin = 5.5;
    percentageMargin = 2.5;
    alarmMargin = 6.5;
    locationMargin = 6;
    ipodMargin = 6;
    baseFontSize = 12;
    onCallFontSize = 13.5;
    letterSpacing = isiPhonePlus() ? 2 : 0;
    onCallLetterSpacing = 0;
    onCallWordSpacing = 0;
    this.height = statusBarHeight;
    if (this.options.ipod === true) {
      this.options.carrier = "iPod";
      this.options.signal = false;
    }
    if (this.options.powered === true) {
      batteryColor = batteryGreen;
    } else {
      batteryColor = this.options.foregroundColor;
    }
    getBatteryLevel = (function(_this) {
      return function(defaultBatteryWidth) {
        var percentageWidth;
        percentageWidth = _this.options.percent / 100 * defaultBatteryWidth;
        percentageWidth = Math.round(percentageWidth);
        return percentageWidth;
      };
    })(this);
    signal_v10_2x = "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 34 16'><circle cx='2.75' cy='2.75' r='2.75' fill='" + this.options.foregroundColor + "' /><circle cx='9.75' cy='2.75' r='2.75' fill='" + this.options.foregroundColor + "' /><circle cx='16.75' cy='2.75' r='2.75' fill='" + this.options.foregroundColor + "' /><circle cx='23.75' cy='2.75' r='2.75' fill='" + this.options.foregroundColor + "' /><circle cx='30.75' cy='2.75' r='2.5' stroke='" + this.options.foregroundColor + "' stroke-width='0.5' fill-opacity='0' class='stroked' /></svg>";
    signal_v11_2x = "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 33 33'><rect x='0' y='11' width='6' height='9' rx='2' fill='" + this.options.foregroundColor + "' /><rect x='9' y='8' width='6' height='12' rx='2' fill='" + this.options.foregroundColor + "' /><rect x='18' y='4' width='6' height='16' rx='2' fill='" + this.options.foregroundColor + "' /><rect x='27' y='0' width='6' height='20' rx='2' fill='" + this.options.foregroundColor + "' /></svg>";
    signal_v10_3x = "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 67 32'><circle cx='5.5' cy='5.5' r='5.5' fill='" + this.options.foregroundColor + "' /><circle cx='19.5' cy='5.5' r='5.5' fill='" + this.options.foregroundColor + "' /><circle cx='33.5' cy='5.5' r='5.5' fill='" + this.options.foregroundColor + "' /><circle cx='47.5' cy='5.5' r='5.5' fill='" + this.options.foregroundColor + "' /><path d='M61.5,1A4.5,4.5,0,1,1,57,5.5,4.51,4.51,0,0,1,61.5,1m0-1A5.5,5.5,0,1,0,67,5.5,5.5,5.5,0,0,0,61.5,0Z' fill='" + this.options.foregroundColor + "' /></svg>";
    signal_v11_3x = "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 49.5 60'><rect x='0' y='17' width='9' height='13' rx='3' fill='" + this.options.foregroundColor + "' /><rect x='13' y='12' width='9' height='18' rx='3' fill='" + this.options.foregroundColor + "' /><rect x='26' y='6' width='9' height='24' rx='3' fill='" + this.options.foregroundColor + "' /><rect x='39' y='0' width='9' height='30' rx='3' fill='" + this.options.foregroundColor + "' /></svg>";
    wifiSVG = "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 36'><path d='M 8.085 13.63 L 11.995 18 L 15.905 13.63 C 13.752 11.454 10.238 11.454 8.085 13.63 Z M 4.085 9.16 L 6.085 11.39 C 9.376 8.192 14.614 8.192 17.905 11.39 L 19.905 9.16 C 15.479 4.943 8.521 4.943 4.095 9.16 Z M 11.995 0 C 7.576 0.001 3.322 1.681 0.095 4.7 L 2.095 6.93 C 7.659 1.691 16.341 1.691 21.905 6.93 L 23.905 4.7 C 20.676 1.678 16.418 -0.002 11.995 0 Z' fill='" + this.options.foregroundColor + "' /></svg>";
    battery_v10_2x = "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 49 32'><rect x='0.5' y='0.5'  width='44' height='18' rx='3' ry='3' stroke='" + this.options.foregroundColor + "' fill-opacity='0' class='stroked' /><rect x='2' y='2' width='" + (getBatteryLevel(41)) + "' height='15' rx='1.5' ry='1.5' fill='" + batteryColor + "' id='batteryFill' /><path d='M46,6v7a3.28,3.28,0,0,0,3-3.5A3.28,3.28,0,0,0,46,6Z' fill='" + this.options.foregroundColor + "'/></svg>";
    battery_v11_2x = "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 53 32'><rect fill='" + this.options.foregroundColor + "' x='4' y='4' width='" + (getBatteryLevel(40)) + "' height='15' rx='2' /><rect stroke='" + this.options.foregroundColor + "' fill-opacity='0' class='stroked' stroke-width='2' opacity='0.4' x='1' y='1' width='46' height='21' rx='5' /><path d='M50,7.25605856 C51.7477886,7.87381317 53,9.54067176 53,11.5 C53,13.4593282 51.7477886,15.1261868 50,15.7439414 L50,7.25605856 Z' fill='" + this.options.foregroundColor + "' opacity='0.4' /></svg>";
    battery_v10_3x = "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 73 42'><path d='M62,0H5A5,5,0,0,0,0,5V24a5,5,0,0,0,5,5H62a5,5,0,0,0,5-5V5A5,5,0,0,0,62,0Zm4,24a4,4,0,0,1-4,4H5a4,4,0,0,1-4-4V5A4,4,0,0,1,5,1H62a4,4,0,0,1,4,4Z' fill='" + this.options.foregroundColor + "' /><rect x='2' y='2' width='" + (getBatteryLevel(63)) + "' height='25' rx='3' ry='3' fill='" + batteryColor + "' id='batteryFill' /><path d='M69,10.06v9.89A4.82,4.82,0,0,0,73,15,4.82,4.82,0,0,0,69,10.06Z' fill='" + this.options.foregroundColor + "' /></svg>";
    battery_v11_3x = "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 78 42'><rect fill='" + batteryColor + "' id='batteryFill' x='6' y='6' width='" + (getBatteryLevel(59)) + "' height='22' rx='3' /><rect stroke='" + this.options.foregroundColor + "' fill-opacity='0' class='stroked' stroke-width='3' opacity='0.4' x='1.5' y='1.5' width='68' height='31' rx='7.5' /><path d='M 74 10.674 C 76.365 11.797 78 14.208 78 17 C 78 19.792 76.365 22.203 74 23.326 L 74 10.674 Z' fill='" + this.options.foregroundColor + "' opacity='0.4'/></svg>";
    powerSVG = "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 6 17'><polygon points='6 3.75 3.43 3.75 4.5 0 0.5 5.25 2.98 5.25 1.5 9.5 6 3.75' fill='" + this.options.foregroundColor + "' /></svg>";
    svg = {
      battery: {
        v10: {
          at2x: battery_v10_2x,
          at3x: battery_v10_3x
        },
        v11: {
          at2x: battery_v11_2x,
          at3x: battery_v11_3x
        }
      },
      signal: {
        v10: {
          at2x: signal_v10_2x,
          at3x: signal_v10_3x
        },
        v11: {
          at2x: signal_v11_2x,
          at3x: signal_v11_3x
        }
      },
      wifi: wifiSVG,
      power: powerSVG
    };
    onCallBlock = new Layer({
      parent: this,
      name: "onCallBlock",
      height: statusBarHeight
    });
    this.onCallBlock = onCallBlock;
    onCallMessage = new TextLayer({
      parent: this,
      name: "onCallMessage",
      padding: {
        top: onCallMargin
      },
      text: "",
      fontSize: onCallFontSize,
      fontWeight: fontWeight,
      textAlign: "center",
      color: "white",
      letterSpacing: onCallLetterSpacing,
      wordSpacing: onCallWordSpacing
    });
    this.onCallMessage = onCallMessage;
    carrier = new TextLayer({
      parent: this,
      name: "carrier",
      padding: {
        top: getTopMargin()
      },
      text: this.options.carrier,
      fontSize: baseFontSize,
      fontWeight: fontWeight,
      letterSpacing: letterSpacing
    });
    this.carrier = carrier;
    signal = new Layer({
      parent: this,
      name: "signal",
      width: this.options.version > 10 ? 16.5 : 34,
      height: this.options.version > 10 ? 10 : 6,
      y: Align.center,
      html: getSignalSVG()
    });
    this.signal = signal;
    wifi = new Layer({
      parent: this,
      name: "wifi",
      y: Align.center,
      width: 13,
      height: 9,
      html: wifiSVG
    });
    this.wifi = wifi;
    getTime = (function(_this) {
      return function() {
        var day, hour, minute, second, suffix, today;
        today = new Date;
        day = today.getDay();
        hour = today.getHours();
        minute = today.getMinutes();
        second = today.getSeconds();
        suffix = hour >= 12 ? ' PM' : ' AM';
        hour = hour > 12 ? hour - 12 : hour;
        minute = minute < 10 ? "0" + minute : minute;
        if (_this.options.time === "") {
          return hour + ':' + minute + suffix;
        } else {
          return _this.options.time;
        }
      };
    })(this);
    time = new TextLayer({
      parent: this,
      name: "time",
      width: this.width,
      padding: {
        top: getTopMargin()
      },
      text: getTime(),
      fontSize: baseFontSize,
      fontWeight: timeFontWeight,
      textAlign: "center",
      letterSpacing: letterSpacing
    });
    this.time = time;
    power = new Layer({
      parent: this,
      name: "power",
      y: Align.center,
      width: 5.5,
      height: 9.5,
      html: powerSVG
    });
    this.power = power;
    battery = new Layer({
      parent: this,
      name: "battery",
      y: Align.center,
      width: getBatteryWidth(),
      height: this.options.version > 10 ? 11.5 : 9,
      html: getBatterySVG()
    });
    this.battery = battery;
    percentage = new TextLayer({
      parent: this,
      name: "percentage",
      padding: {
        top: getTopMargin()
      },
      text: this.options.percent + "%",
      fontSize: baseFontSize,
      fontWeight: fontWeight,
      textAlign: "right",
      letterSpacing: letterSpacing
    });
    this.percentage = percentage;
    ref = this.subLayers;
    for (i = 0, len = ref.length; i < len; i++) {
      layer = ref[i];
      layer.backgroundColor = "clear";
    }
    this.hide = (function(_this) {
      return function() {
        _this.options.hide = true;
        return _this.animate({
          properties: {
            y: 0 - statusBarHeight
          },
          time: 0.25
        });
      };
    })(this);
    this.show = (function(_this) {
      return function() {
        _this.options.hide = false;
        return _this.animate({
          properties: {
            y: 0
          },
          time: 0.25
        });
      };
    })(this);
    this.layout = (function(_this) {
      return function() {
        _this.width = Screen.width;
        if (_this.options.hide === true) {
          _this.hide();
        } else if (_this.options.autoHide === true) {
          if (Framer.Device.orientation > 0 && (Screen.width === 2208 || Screen.width === 1334 || Screen.width === 1136 || Screen.width === 736 || Screen.width === 667)) {
            _this.hide();
          }
        } else {
          _this.show();
        }
        if (_this.options.carrier === "") {
          carrierMargin = 0;
        }
        if (_this.options.signal === true) {
          signal.visible = true;
          signal.x = signalMargin;
          carrier.x = signal.x + signal.width + carrierMargin;
        } else {
          signal.visible = false;
          carrier.x = ipodMargin;
        }
        if (_this.options.wifi === true) {
          wifi.visible = true;
        } else {
          wifi.visible = false;
        }
        wifi.x = carrier.x + carrier.width + wifiMargin;
        time.width = Screen.width;
        onCallBlock.width = Screen.width;
        onCallMessage.width = Screen.width;
        if (_this.options.powered === true) {
          power.x = Align.right(-powerMargin);
        } else {
          power.x = Screen.width;
        }
        battery.x = power.x - battery.width - getBatteryMargin();
        if (_this.options.showPercentage === false) {
          percentageMargin = 0;
          percentage.text = "";
        } else {
          percentage.text = _this.options.percent + "%";
        }
        return percentage.maxX = battery.x - percentageMargin;
      };
    })(this);
    getTime();
    this.layout();
    foregroundItems = [percentage, power, time, wifi, signal, carrier, battery];
    selectForegroundColor = (function(_this) {
      return function() {
        if (_this.options.foregroundColor === "") {
          if (_this.options.style === "dark") {
            return "white";
          } else {
            return "black";
          }
        } else {
          return _this.options.foregroundColor;
        }
      };
    })(this);
    colorForeground = (function(_this) {
      return function(color) {
        var SVG, j, k, layerSVG, len1, len2, results, strokedSVG;
        if (color == null) {
          color = "";
        }
        if (color === "") {
          color = selectForegroundColor();
        }
        results = [];
        for (j = 0, len1 = foregroundItems.length; j < len1; j++) {
          layer = foregroundItems[j];
          layer.color = color;
          layerSVG = layer.querySelectorAll('path, circle, rect, polygon');
          strokedSVG = layer.querySelectorAll('.stroked');
          for (k = 0, len2 = layerSVG.length; k < len2; k++) {
            SVG = layerSVG[k];
            SVG.setAttribute('fill', color);
          }
          results.push((function() {
            var l, len3, results1;
            results1 = [];
            for (l = 0, len3 = strokedSVG.length; l < len3; l++) {
              SVG = strokedSVG[l];
              SVG.setAttribute('stroke', color);
              results1.push(SVG.setAttribute('fill-opacity', '0'));
            }
            return results1;
          })());
        }
        return results;
      };
    })(this);
    colorBattery = (function(_this) {
      return function() {
        var SVG, batteryFillSVG, j, k, l, len1, len2, len3, results, results1, results2;
        batteryFillSVG = layer.querySelectorAll('#batteryFill');
        if (_this.options.onCall === true) {
          results = [];
          for (j = 0, len1 = batteryFillSVG.length; j < len1; j++) {
            SVG = batteryFillSVG[j];
            SVG.style.WebkitTransition = 'all 0.25s';
            results.push(SVG.setAttribute('fill', "white"));
          }
          return results;
        } else if (_this.options.powered === true) {
          results1 = [];
          for (k = 0, len2 = batteryFillSVG.length; k < len2; k++) {
            SVG = batteryFillSVG[k];
            SVG.style.WebkitTransition = 'all 0.25s';
            results1.push(SVG.setAttribute('fill', batteryGreen));
          }
          return results1;
        } else {
          results2 = [];
          for (l = 0, len3 = batteryFillSVG.length; l < len3; l++) {
            SVG = batteryFillSVG[l];
            SVG.style.WebkitTransition = 'all 0.25s';
            results2.push(SVG.setAttribute('fill', selectForegroundColor()));
          }
          return results2;
        }
      };
    })(this);
    styleBar = (function(_this) {
      return function(style, backgroundColor) {
        var barColor;
        if (backgroundColor == null) {
          backgroundColor = "";
        }
        if (backgroundColor === "") {
          _this.style = {
            "-webkit-backdrop-filter": "blur(60px)"
          };
          if (style === "dark") {
            _this.backgroundColor = "rgba(0, 0, 0, 0.5)";
          } else {
            _this.backgroundColor = "rgba(255, 255, 255, 0.5)";
          }
        } else {
          _this.backgroundColor = backgroundColor;
        }
        if (_this.options.vibrant === true) {
          barColor = new Color(backgroundColor).alpha(.5);
          _this.backgroundColor = barColor;
          return _this.style = {
            "-webkit-backdrop-filter": "blur(60px)"
          };
        }
      };
    })(this);
    this.applyStyle = (function(_this) {
      return function(style, foregroundColor, backgroundColor) {
        if (style == null) {
          style = _this.options.style;
        }
        if (foregroundColor == null) {
          foregroundColor = _this.options.foregroundColor;
        }
        if (backgroundColor == null) {
          backgroundColor = _this.options.backgroundColor;
        }
        if (style === "light" && foregroundColor === "") {
          foregroundColor = "black";
        }
        if (style === "dark" && foregroundColor === "") {
          foregroundColor = "white";
        }
        styleBar(style, backgroundColor);
        colorForeground();
        return colorBattery();
      };
    })(this);
    this.applyStyle();
    this.startCall = (function(_this) {
      return function(message, color) {
        if (message == null) {
          message = "Touch to return to call 0:30";
        }
        if (color == null) {
          color = onCallColor;
        }
        _this.options.onCall = true;
        colorForeground("white");
        colorBattery();
        onCallBlock.animate({
          properties: {
            backgroundColor: color,
            opacity: 1,
            height: statusBarHeight * 2
          },
          time: 0.25
        });
        return onCallBlock.onAnimationEnd(function() {
          if (_this.options.onCall === true) {
            return onCallMessage.text = message;
          }
        });
      };
    })(this);
    this.endCall = (function(_this) {
      return function() {
        _this.options.onCall = false;
        onCallMessage.text = "";
        onCallBlock.animate({
          properties: {
            opacity: 0,
            height: statusBarHeight
          },
          time: 0.25
        });
        return _this.applyStyle();
      };
    })(this);
    updateOrientation = (function(_this) {
      return function(device) {
        var deviceOrientation, deviceRotation, rotation, value;
        value = device === "Framer" ? Framer.Device.orientation : window.orientation;
        if (value < 0 && device === "Framer") {
          value = Math.abs(value);
        }
        rotation = (function() {
          switch (false) {
            case value !== 0:
              return deviceRotation = "Portrait";
            case value !== 180:
              return deviceRotation = "Portrait (Upside-Down)";
            case value !== -90:
              return deviceRotation = "Landscape (Clockwise)";
            case value !== 90:
              return deviceRotation = "Landscape (Counterclockwise)";
          }
        })();
        deviceOrientation = deviceRotation;
        return _this.layout();
      };
    })(this);
    if (Utils.isMobile()) {
      device = "mobile";
      window.addEventListener("orientationchange", function() {
        return updateOrientation(device);
      });
    } else {
      Framer.Device.on("change:orientation", function() {
        device = "Framer";
        return updateOrientation(device);
      });
    }
  }

  StatusBarLayer.define('hidden', {
    get: function() {
      return this.options.hide;
    }
  });

  StatusBarLayer.define('onCall', {
    get: function() {
      return this.options.onCall;
    }
  });

  return StatusBarLayer;

})(Layer);

module.exports = StatusBarLayer;


},{}],"alex-messenger-kit-tab-bar":[function(require,module,exports){

/*
	tabBarModule
	–
	Created by Petter Nilsson
	http://petter.pro
 */
var defaults, getItemFromName, setBadgeValue, setSelected, updateViews;

defaults = {
  screenWidth: Screen.width,
  screenHeight: Screen.height,
  barHeight: 98,
  labelOffset: -28,
  iconOffset: -12,
  tintColor: "#007aff",
  tintColorUnselected: "#929292",
  blur: 40,
  opacity: 0.75,
  borderShadow: "0px -1px 0px 0px rgba(0,0,0,0.32)",
  backgroundColor: "#f8f8f8",
  showLabels: true,
  badgeSize: 36,
  badgeColor: "#FF3B30"
};

defaults.labelTextStyle = {
  fontSize: "20px",
  textAlign: "center",
  fontFamily: "Helvetica Neue', sans-serif"
};

defaults.badgeTextStyle = {
  fontSize: "26px",
  lineHeight: "36px",
  color: "#fff",
  textAlign: "center",
  fontFamily: "Helvetica Neue', sans-serif"
};

exports.defaults = defaults;

getItemFromName = function(name) {
  var item, j, len, ref;
  ref = this.items;
  for (j = 0, len = ref.length; j < len; j++) {
    item = ref[j];
    if (item.name === name) {
      return item;
    }
  }
};

updateViews = function(selectedItem) {
  var item, j, len, ref, results;
  ref = this.items;
  results = [];
  for (j = 0, len = ref.length; j < len; j++) {
    item = ref[j];
    if (item.view != null) {
      if (item.view === selectedItem.view) {
        item.view.visible = true;
      } else {
        item.view.visible = false;
      }
      if (item.blurView === selectedItem.blurView) {
        results.push(item.blurView.visible = true);
      } else {
        results.push(item.blurView.visible = false);
      }
    } else {
      results.push(void 0);
    }
  }
  return results;
};

setSelected = function(name) {
  var item, j, len, ref, results;
  if (name !== this.selected) {
    ref = this.items;
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      item = ref[j];
      if (item.name === name) {
        item.iconLayer.backgroundColor = defaults.tintColor;
        if (item.labelLayer) {
          item.labelLayer.style = {
            "color": defaults.tintColor
          };
        }
        if (item.iconLayer.selectedIcon) {
          item.iconLayer.image = item.iconLayer.selectedIcon;
        }
        this.selected = item.name;
        this.updateViews(item);
        results.push(this.emit("tabBarDidSwitch", item.name));
      } else {
        item.iconLayer.backgroundColor = defaults.tintColorUnselected;
        if (item.labelLayer) {
          item.labelLayer.style = {
            "color": defaults.tintColorUnselected
          };
        }
        if (item.iconLayer.selectedIcon) {
          results.push(item.iconLayer.image = item.iconLayer.icon);
        } else {
          results.push(void 0);
        }
      }
    }
    return results;
  }
};

setBadgeValue = function(name, value) {
  var item, j, len, ref, results;
  ref = this.items;
  results = [];
  for (j = 0, len = ref.length; j < len; j++) {
    item = ref[j];
    if (item.name === name) {
      if (value) {
        item.badgeLayer.html = value;
        results.push(item.badgeLayer.visible = true);
      } else {
        results.push(item.badgeLayer.visible = false);
      }
    } else {
      results.push(void 0);
    }
  }
  return results;
};

exports.tabBar = function(barItems) {
  var background, badgeLayer, blurView, i, iconLayer, itemCount, itemLayer, labelLayer, name, params, tabBar;
  tabBar = new Layer({
    x: 0,
    y: defaults.screenHeight - defaults.barHeight,
    width: defaults.screenWidth,
    height: defaults.barHeight,
    backgroundColor: defaults.backgroundColor,
    label: "tabBar"
  });
  tabBar.style = {
    "box-shadow": defaults.borderShadow
  };
  tabBar.getItemFromName = getItemFromName;
  tabBar.updateViews = updateViews;
  tabBar.setSelected = setSelected;
  tabBar.setBadgeValue = setBadgeValue;
  tabBar.selected = null;
  tabBar.items = [];
  background = new Layer({
    x: 0,
    y: 0,
    width: defaults.screenWidth,
    height: defaults.barHeight,
    backgroundColor: defaults.backgroundColor,
    opacity: defaults.opacity,
    superLayer: tabBar
  });
  itemCount = Object.keys(barItems).length;
  i = 0;
  for (name in barItems) {
    params = barItems[name];
    itemLayer = new Layer({
      backgroundColor: "none",
      width: defaults.screenWidth / itemCount,
      height: defaults.barHeight,
      x: i * (defaults.screenWidth / itemCount),
      y: 0,
      superLayer: tabBar,
      name: name
    });
    if (params.view != null) {
      blurView = params.view.copy();
      if (ScrollComponent.prototype.isPrototypeOf(blurView)) {
        blurView.content.blur = defaults.blur;
      } else {
        blurView.blur = defaults.blur;
      }
      blurView.superLayer = tabBar;
      blurView.index = 0;
      blurView.y = blurView.y - (defaults.screenHeight - defaults.barHeight);
      itemLayer.view = params.view;
      itemLayer.blurView = blurView;
    }
    iconLayer = new Layer({
      width: 60,
      height: 60,
      superLayer: itemLayer
    });
    iconLayer.icon = params.icon;
    if (params.selectedIcon != null) {
      iconLayer.selectedIcon = params.selectedIcon;
    }
    iconLayer.style = {
      "-webkit-mask-image": "url(" + iconLayer.icon + ")",
      "-webkit-mask-repeat": "no-repeat",
      "-webkit-mask-position": "center center"
    };
    iconLayer.centerX();
    iconLayer.centerY(defaults.iconOffset);
    itemLayer.iconLayer = iconLayer;
    if (defaults.showLabels) {
      labelLayer = new Layer({
        width: itemLayer.width,
        x: 0,
        y: defaults.barHeight + defaults.labelOffset,
        superLayer: itemLayer,
        backgroundColor: "none"
      });
      labelLayer.html = name;
      labelLayer.style = defaults.labelTextStyle;
      itemLayer.labelLayer = labelLayer;
    }
    badgeLayer = new Layer({
      width: defaults.badgeSize,
      height: defaults.badgeSize,
      x: 0,
      y: 6,
      borderRadius: 18,
      superLayer: itemLayer,
      backgroundColor: defaults.badgeColor
    });
    badgeLayer.style = defaults.badgeTextStyle;
    badgeLayer.centerX(26);
    itemLayer.badgeLayer = badgeLayer;
    itemLayer.badgeLayer.visible = false;
    tabBar.items.push(itemLayer);
    itemLayer.on(Events.Click, function() {
      return tabBar.setSelected(this.name);
    });
    i++;
  }
  tabBar.setSelected(tabBar.items[0].name);
  return tabBar;
};


},{}],"ios-kit-alert":[function(require,module,exports){
var ios;

ios = require('ios-kit');

exports.defaults = {
  title: "Title",
  message: "",
  actions: ["OK"]
};

exports.defaults.props = Object.keys(exports.defaults);

exports.create = function(obj) {
  var act, actLabel, actLabel2, action, action2, actionDivider, actions, alert, cleanName, i, index, j, len, len1, ref, setup;
  setup = ios.utils.setupComponent(obj, exports.defaults);
  alert = new ios.View({
    backgroundColor: "transparent",
    name: "alert",
    constraints: {
      leading: 0,
      trailing: 0,
      top: 0,
      bottom: 0
    }
  });
  alert.overlay = new ios.View({
    backgroundColor: "rgba(0,0,0,.3)",
    superLayer: alert,
    name: ".overlay",
    constraints: {
      leading: 0,
      trailing: 0,
      top: 0,
      bottom: 0
    }
  });
  alert.modal = new ios.View({
    backgroundColor: "white",
    superLayer: alert,
    borderRadius: ios.utils.px(10),
    name: ".modal",
    constraints: {
      align: "center",
      width: 280,
      height: 400
    }
  });
  alert.title = new ios.Text({
    superLayer: alert.modal,
    text: setup.title,
    fontWeight: "semibold",
    name: ".title",
    textAlign: "center",
    lineHeight: 20,
    constraints: {
      top: 20,
      width: 220,
      align: "horizontal"
    }
  });
  alert.message = new ios.Text({
    superLayer: alert.modal,
    text: setup.message,
    fontSize: 13,
    name: ".message",
    textAlign: "center",
    lineHeight: 16,
    constraints: {
      top: [alert.title, 10],
      align: "horizontal",
      width: 220
    }
  });
  if (setup.message.length === 0) {
    alert.message.height = -24;
  }
  alert.horiDivider = new ios.View({
    superLayer: alert.modal,
    backgroundColor: "#E2E8EB",
    name: ".horiDivider",
    constraints: {
      leading: 0,
      trailing: 0,
      height: 1,
      bottom: 44
    }
  });
  cleanName = function(n) {
    if (n[0] === "-") {
      return n.slice(9);
    } else {
      return n;
    }
  };
  alert.modal.constraints["height"] = 20 + ios.utils.pt(alert.title.height) + 10 + ios.utils.pt(alert.message.height) + 24 + 44;
  actions = [];
  switch (setup.actions.length) {
    case 1:
      actLabel = ios.utils.capitalize(setup.actions[0]);
      action = new ios.View({
        superLayer: alert.modal,
        backgroundColor: "white",
        name: cleanName(setup.actions[0]),
        borderRadius: ios.utils.px(10),
        constraints: {
          leading: 0,
          trailing: 0,
          bottom: 0,
          height: 44
        }
      });
      action.label = new ios.Text({
        color: ios.utils.color("blue"),
        superLayer: action,
        text: actLabel,
        name: "label",
        constraints: {
          align: "horizontal",
          bottom: 16
        }
      });
      actions.push(action);
      break;
    case 2:
      actLabel = ios.utils.capitalize(setup.actions[0]);
      action = new ios.View({
        superLayer: alert.modal,
        name: cleanName(setup.actions[0]),
        borderRadius: ios.utils.px(10),
        backgroundColor: "white",
        constraints: {
          leading: 0,
          trailing: ios.utils.pt(alert.modal.width / 2),
          bottom: 0,
          height: 44
        }
      });
      action.label = new ios.Text({
        color: ios.utils.color("blue"),
        superLayer: action,
        text: actLabel,
        name: "label",
        constraints: {
          align: "horizontal",
          bottom: 16
        }
      });
      actions.push(action);
      alert.vertDivider = new ios.View({
        superLayer: alert.modal,
        backgroundColor: "#E2E8EB",
        name: ".vertDivider",
        constraints: {
          width: 1,
          bottom: 0,
          height: 44,
          align: "horizontal"
        }
      });
      actLabel2 = ios.utils.capitalize(setup.actions[1]);
      action2 = new ios.View({
        superLayer: alert.modal,
        name: cleanName(setup.actions[1]),
        borderRadius: ios.utils.px(10),
        backgroundColor: "white",
        constraints: {
          leading: ios.utils.pt(alert.modal.width / 2),
          trailing: 0,
          bottom: 0,
          height: 44
        }
      });
      action2.label = new ios.Text({
        color: ios.utils.color("blue"),
        superLayer: action2,
        text: actLabel2,
        name: "label",
        constraints: {
          align: "horizontal",
          bottom: 16
        }
      });
      actions.push(action2);
      break;
    default:
      ref = setup.actions;
      for (index = i = 0, len = ref.length; i < len; index = ++i) {
        act = ref[index];
        actLabel = ios.utils.capitalize(act);
        action = new ios.View({
          superLayer: alert.modal,
          name: cleanName(act),
          borderRadius: ios.utils.px(10),
          backgroundColor: "white",
          constraints: {
            leading: 0,
            trailing: 0,
            bottom: 0 + ((setup.actions.length - index - 1) * 44),
            height: 44
          }
        });
        actionDivider = new ios.View({
          superLayer: alert.modal,
          backgroundColor: "#E2E8EB",
          name: "action divider",
          constraints: {
            leading: 0,
            trailing: 0,
            height: 1,
            bottom: 0 + ((setup.actions.length - index) * 44)
          }
        });
        action.label = new ios.Text({
          style: "alertAction",
          color: ios.utils.color("blue"),
          superLayer: action,
          text: actLabel,
          name: "label",
          constraints: {
            align: "horizontal",
            bottom: 14
          }
        });
        actions.push(action);
        alert.modal.constraints["height"] = alert.modal.constraints["height"] + 42 - 12;
      }
  }
  alert.actions = {};
  for (index = j = 0, len1 = actions.length; j < len1; index = ++j) {
    act = actions[index];
    act.type = "button";
    ios.utils.specialChar(act);
    if (setup.actions[index].indexOf("-r") === 0) {
      act.origColor = ios.utils.color("red");
    } else {
      act.origColor = ios.utils.color("blue");
    }
    ios.layout.set(act.label);
    act.on(Events.TouchStart, function() {
      this.backgroundColor = "white";
      this.animate({
        properties: {
          backgroundColor: act.backgroundColor.darken(5)
        },
        time: .25
      });
      return this.label.animate({
        properties: {
          color: this.origColor.lighten(10)
        },
        time: .25
      });
    });
    act.on(Events.TouchEnd, function() {
      this.animate({
        properties: {
          backgroundColor: "white"
        },
        time: .25
      });
      this.label.animate({
        properties: {
          color: this.origColor
        },
        time: .25
      });
      return alert.destroy();
    });
    alert.actions[act.name] = act;
  }
  ios.layout.set(actions[actions.length - 1]);
  return alert;
};


},{"ios-kit":"ios-kit"}],"ios-kit-banner":[function(require,module,exports){
var ios;

ios = require('ios-kit');

exports.defaults = {
  title: "Title",
  message: "Message",
  action: "Action",
  time: "now",
  app: "app",
  icon: void 0,
  duration: 7,
  animated: true,
  reply: true
};

exports.defaults.props = Object.keys(exports.defaults);

exports.create = function(obj) {
  var banner, setup, specs;
  setup = ios.utils.setupComponent(obj, exports.defaults);
  specs = {
    leadingIcon: 15,
    topIcon: 8,
    topTitle: 6,
    width: 0
  };
  switch (ios.device.name) {
    case "iphone-5":
      specs.width = 304;
      break;
    case "iphone-6s":
      specs.width = 359;
      break;
    case "iphone-6s-plus":
      specs.leadingIcon = 15;
      specs.topIcon = 12;
      specs.topTitle = 10;
      specs.width = 398;
      break;
    case "ipad":
      specs.leadingIcon = 8;
      specs.topIcon = 8;
      specs.topTitle = 11;
      specs.width = 398;
      break;
    case "ipad-pro":
      specs.leadingIcon = 8;
      specs.topIcon = 8;
      specs.topTitle = 9;
      specs.width = 556;
  }
  banner = new ios.View({
    backgroundColor: "rgba(255,255,255,.6)",
    name: "banner",
    borderRadius: ios.px(12),
    shadowColor: "rgba(0,0,0,.3)",
    shadowY: ios.px(2),
    shadowBlur: ios.px(10),
    clip: true,
    constraints: {
      align: 'horizontal',
      width: specs.width,
      top: 8,
      height: 93
    }
  });
  banner.header = new ios.View({
    backgroundColor: "rgba(255,255,255, .3)",
    name: ".header",
    superLayer: banner,
    constraints: {
      height: 36,
      leading: 0,
      trailing: 0
    }
  });
  if (setup.icon === void 0) {
    banner.icon = new ios.View({
      superLayer: banner.header
    });
    banner.icon.style["background"] = "linear-gradient(-180deg, #67FF81 0%, #01B41F 100%)";
  } else {
    banner.header.addSubLayer(setup.icon);
    banner.icon = setup.icon;
  }
  banner.icon.borderRadius = ios.utils.px(4.5);
  banner.icon.name = ".icon";
  banner.icon.constraints = {
    height: 20,
    width: 20,
    leading: specs.leadingIcon,
    align: "vertical"
  };
  ios.layout.set(banner.icon);
  banner.app = new ios.Text({
    text: setup.app.toUpperCase(),
    color: "rgba(0,0,0,.5)",
    fontSize: 13,
    letterSpacing: .5,
    superLayer: banner.header,
    constraints: {
      leading: [banner.icon, 6],
      align: "vertical"
    }
  });
  banner.title = new ios.Text({
    text: setup.title,
    color: "black",
    fontWeight: "semibold",
    fontSize: 15,
    superLayer: banner,
    name: ".title",
    constraints: {
      top: 45,
      leading: 15
    }
  });
  banner.message = new ios.Text({
    text: setup.message,
    color: "black",
    fontSize: 15,
    fontWeight: "light",
    superLayer: banner,
    name: ".message",
    constraints: {
      leadingEdges: banner.title,
      top: [banner.title, 6]
    }
  });
  banner.time = new ios.Text({
    text: setup.time,
    color: "rgba(0,0,0,.5)",
    fontSize: 13,
    superLayer: banner.header,
    name: ".time",
    constraints: {
      trailing: 16,
      align: "vertical"
    }
  });
  if (ios.device.name === "ipad" || ios.device.name === "ipad-pro") {
    banner.time.constraints = {
      bottomEdges: banner.title,
      trailing: specs.leadingIcon
    };
  }
  ios.utils.bgBlur(banner);
  banner.draggable = true;
  banner.draggable.horizontal = false;
  banner.draggable.constraints = {
    y: ios.px(8),
    x: ios.px(8)
  };
  banner.draggable.bounceOptions = {
    friction: 25,
    tension: 250
  };
  banner.on(Events.DragEnd, function() {
    if (banner.maxY < ios.utils.px(68)) {
      banner.animate({
        properties: {
          maxY: 0
        },
        time: .15,
        curve: "ease-in-out"
      });
      return Utils.delay(.25, function() {
        return banner.destroy();
      });
    }
  });
  if (setup.animated === true) {
    banner.y = 0 - banner.height;
    ios.layout.animate({
      target: banner,
      time: .25,
      curve: 'ease-in-out'
    });
  }
  if (setup.duration) {
    Utils.delay(setup.duration, function() {
      return banner.animate({
        properties: {
          maxY: 0
        },
        time: .25,
        curve: "ease-in-out"
      });
    });
    Utils.delay(setup.duration + .25, function() {
      return banner.destroy();
    });
  }
  return banner;
};


},{"ios-kit":"ios-kit"}],"ios-kit-button":[function(require,module,exports){
var ios;

ios = require('ios-kit');

exports.defaults = {
  text: "Button",
  type: "text",
  style: "light",
  backgroundColor: "white",
  color: "#007AFF",
  fontSize: 17,
  fontWeight: "regular",
  name: "button",
  blur: true,
  superLayer: void 0,
  constraints: void 0
};

exports.defaults.props = Object.keys(exports.defaults);

exports.create = function(array) {
  var backgroundColor, button, color, rgbString, rgbaString, setup;
  setup = ios.utils.setupComponent(array, exports.defaults);
  button = new ios.View({
    name: setup.name,
    constraints: setup.constraints,
    superLayer: setup.superLayer
  });
  button.type = setup.type;
  color = "";
  switch (setup.type) {
    case "big":
      setup.fontSize = 20;
      setup.fontWeight = "medium";
      button.borderRadius = ios.utils.px(12.5);
      backgroundColor = "";
      if (button.constraints === void 0) {
        button.constraints = {};
      }
      button.constraints.leading = 10;
      button.constraints.trailing = 10;
      button.constraints.height = 57;
      switch (setup.style) {
        case "light":
          color = ios.utils.color("blue");
          if (setup.blur) {
            backgroundColor = "rgba(255, 255, 255, .9)";
            ios.utils.bgBlur(button);
          } else {
            backgroundColor = "white";
          }
          break;
        case "dark":
          color = "#FFF";
          if (setup.blur) {
            backgroundColor = "rgba(43, 43, 43, .9)";
            ios.utils.bgBlur(button);
          } else {
            backgroundColor = "#282828";
          }
          break;
        default:
          if (setup.blur) {
            color = setup.color;
            backgroundColor = new Color(setup.backgroundColor);
            rgbString = backgroundColor.toRgbString();
            rgbaString = rgbString.replace(")", ", .9)");
            rgbaString = rgbaString.replace("rgb", "rgba");
            backgroundColor = rgbaString;
            ios.utils.bgBlur(button);
          } else {
            color = setup.color;
            backgroundColor = new Color(setup.backgroundColor);
          }
      }
      button.backgroundColor = backgroundColor;
      button.on(Events.TouchStart, function() {
        var newColor;
        newColor = "";
        if (setup.style === "dark") {
          newColor = button.backgroundColor.lighten(10);
        } else {
          newColor = button.backgroundColor.darken(10);
        }
        return button.animate({
          properties: {
            backgroundColor: newColor
          },
          time: .5
        });
      });
      button.on(Events.TouchEnd, function() {
        return button.animate({
          properties: {
            backgroundColor: backgroundColor
          },
          time: .5
        });
      });
      break;
    case "small":
      setup.fontSize = 14;
      setup.top = 4;
      button.borderRadius = ios.utils.px(2.5);
      setup.fontWeight = 500;
      setup.text = setup.text.toUpperCase();
      color = setup.color;
      button.borderColor = setup.color;
      button.backgroundColor = "transparent";
      button.borderWidth = ios.utils.px(1);
      break;
    default:
      button.backgroundColor = "transparent";
      button.origColor = ios.utils.specialChar(button);
      color = setup.color;
      button.labelOrigColor = color;
      button.on(Events.TouchStart, function() {
        var newColor;
        this.labelOrigColor = button.label.color;
        newColor = button.subLayers[0].color.lighten(30);
        return button.subLayers[0].animate({
          properties: {
            color: newColor
          },
          time: .5
        });
      });
      button.on(Events.TouchEnd, function() {
        return this.subLayers[0].animate({
          properties: {
            color: ios.utils.color(this.labelOrigColor)
          },
          time: .5
        });
      });
  }
  button.label = new ios.Text({
    name: ".label",
    text: setup.text,
    color: color,
    lineHeight: 16,
    superLayer: button,
    fontSize: setup.fontSize,
    fontWeight: setup.fontWeight,
    constraints: {
      align: "center"
    }
  });
  switch (setup.type) {
    case "small":
      button.props = {
        width: button.label.width + ios.utils.px(20),
        height: button.label.height + ios.utils.px(10)
      };
      button.on(Events.TouchStart, function() {
        button.animate({
          properties: {
            backgroundColor: color
          },
          time: .5
        });
        return button.label.animate({
          properties: {
            color: "#FFF"
          },
          time: .5
        });
      });
      button.on(Events.TouchEnd, function() {
        button.animate({
          properties: {
            backgroundColor: "transparent"
          },
          time: .5
        });
        return button.label.animate({
          properties: {
            color: color
          },
          time: .5
        });
      });
      break;
    default:
      button.props = {
        width: button.label.width,
        height: button.label.height
      };
  }
  ios.layout.set({
    target: button
  });
  ios.layout.set({
    target: button.label
  });
  return button;
};


},{"ios-kit":"ios-kit"}],"ios-kit-converter":[function(require,module,exports){
var genCSS, ios;

ios = require('ios-kit');

genCSS = function(cssArray) {
  var colonIndex, cssObj, i, j, key, len, prop, value;
  cssObj = {};
  for (i = j = 0, len = cssArray.length; j < len; i = ++j) {
    prop = cssArray[i];
    colonIndex = prop.indexOf(":");
    key = prop.slice(0, colonIndex);
    value = prop.slice(colonIndex + 2, prop.length - 1);
    cssObj[key] = value;
  }
  return cssObj;
};

exports.convert = function(obj) {
  var Artboard, artboards, b, children, device, found, genAlert, genBanner, genButton, genConstraints, genField, genKeyboard, genLayer, genNavBar, genSheet, genStatusBar, genTabBar, genText, getCSS, getColorString, getDesignedDevice, getImage, getLayer, getString, j, key, layerKeys, layers, len, len1, m, newArtboards, newLayers;
  getDesignedDevice = function(w) {
    var device;
    device = {};
    switch (w) {
      case 320:
      case 480:
      case 640:
      case 960:
      case 1280:
        device.scale = 2;
        device.height = 568;
        device.width = 320;
        device.name = 'iphone-5';
        break;
      case 375:
      case 562.5:
      case 750:
      case 1125:
      case 1500:
        device.scale = 2;
        device.height = 667;
        device.width = 375;
        device.name = 'iphone-6s';
        break;
      case 414:
      case 621:
      case 828:
      case 1242:
      case 1656:
        device.scale = 3;
        device.height = 736;
        device.width = 414;
        device.name = 'iphone-6s-plus';
        break;
      case 768:
      case 1152:
      case 1536:
      case 2304:
      case 3072:
        device.scale = 2;
        device.height = 1024;
        device.width = 768;
        device.name = 'ipad';
        break;
      case 1024:
      case 1536:
      case 2048:
      case 3072:
      case 4096:
        device.scale = 2;
        device.height = 1366;
        device.width = 1024;
        device.name = 'ipad-pro';
    }
    switch (w) {
      case 320:
      case 375:
      case 414:
      case 768:
      case 1024:
        device.iScale = 1;
        break;
      case 480:
      case 562.5:
      case 621:
      case 1152:
      case 1536:
        device.iScale = 1.5;
        break;
      case 640:
      case 750:
      case 828:
      case 1536:
      case 2048:
        device.iScale = 2;
        break;
      case 960:
      case 1125:
      case 1242:
      case 2304:
      case 3072:
        device.iScale = 3;
        break;
      case 1280:
      case 1500:
      case 1656:
      case 3072:
      case 4096:
        device.iScale = 4;
    }
    device.obj = 'device';
    return device;
  };
  layerKeys = Object.keys(obj);
  layers = [];
  artboards = [];
  newLayers = {};
  newArtboards = [];
  for (j = 0, len = layerKeys.length; j < len; j++) {
    key = layerKeys[j];
    if (obj[key]._info.kind === 'artboard') {
      artboards.push(obj[key]);
    }
  }
  for (m = 0, len1 = artboards.length; m < len1; m++) {
    b = artboards[m];
    device = getDesignedDevice(b.width);
    Artboard = function(artboard) {
      var board;
      board = new ios.View({
        name: artboard.name,
        backgroundColor: b.backgroundColor,
        constraints: {
          top: 0,
          bottom: 0,
          leading: 0,
          trailing: 0
        }
      });
      return board;
    };
    getString = function(l) {
      return l._info.metadata.string;
    };
    getCSS = function(l) {
      return genCSS(l._info.metadata.css);
    };
    getColorString = function(l) {
      return '-' + getCSS(l).color + ' ' + getString(l);
    };
    getImage = function(l) {
      return l.image;
    };
    getLayer = function(l) {
      return l.copy();
    };
    found = function(o, t) {
      if (o.indexOf(t) !== -1) {
        return true;
      }
    };
    genConstraints = function(l) {
      var bY, cX, cY, constraints, f, lX, r, s, tX, tY;
      constraints = {};
      s = device.iScale;
      cX = device.width / 2;
      cY = device.height / 2;
      tY = device.height / 4 * 3;
      bY = device.height / 4 * 3;
      lX = device.width / 4 * 3;
      tX = device.width / 4 * 3;
      r = function(n) {
        return Math.round(n);
      };
      f = function(n) {
        return Math.floor(n);
      };
      if (cX === l.midX / s || r(cX) === r(l.midX / s) || f(cX) === f(l.midX / s)) {
        constraints.align = 'horizontal';
      }
      if (cY === l.midY / s || r(cY) === r(l.midY / s) || f(cY) === f(l.midY / s)) {
        if (constraints.align === 'horizontal') {
          constraints.align = 'center';
        } else {
          constraints.align = 'vertical';
        }
      }
      if (l.x / s < lX) {
        constraints.leading = r(l.x / s);
      }
      if (l.x / s > tX) {
        constraints.trailing = r(l.parent.width / s - l.maxX / s);
      }
      if (l.y / s < tY) {
        constraints.top = r(l.y / s);
      }
      if (l.y / s > bY) {
        constraints.bottom = r(l.parent.height / s - l.maxY / s);
      }
      if (l.width / s === device.width) {
        constraints.leading = 0;
        constraints.trailing = 0;
      } else {
        constraints.width = l.width / s;
      }
      if (l.height / s === device.height) {
        constraints.top = 0;
        constraints.bottom = 0;
      } else {
        constraints.height = l.height / s;
      }
      return constraints;
    };
    genLayer = function(l, parent) {
      var props;
      props = {
        backgroundColor: 'transparent',
        name: l.name,
        image: l.image,
        superLayer: parent,
        constraints: genConstraints(l)
      };
      return new ios.View(props);
    };
    genAlert = function(l, nP) {
      var c, len2, n, props, q, ref;
      props = {
        actions: [],
        superLayer: nP
      };
      ref = l.children;
      for (q = 0, len2 = ref.length; q < len2; q++) {
        c = ref[q];
        n = c.name;
        if (found(n, 'title')) {
          props.title = getString(c);
        }
        if (found(n, 'message')) {
          props.message = getString(c);
        }
        if (found(n, 'action')) {
          props.actions.unshift(getColorString(c));
        }
        c.destroy();
      }
      return new ios.Alert(props);
    };
    genBanner = function(l, nP) {
      var c, len2, n, props, q, ref;
      props = {
        superLayer: nP
      };
      ref = l.children;
      for (q = 0, len2 = ref.length; q < len2; q++) {
        c = ref[q];
        n = c.name;
        if (found(n, 'app')) {
          props.app = getString(c);
        }
        if (found(n, 'title')) {
          props.title = getString(c);
        }
        if (found(n, 'message')) {
          props.message = getString(c);
        }
        if (found(n, 'time')) {
          props.time = getString(c);
        }
        if (found(n, 'icon')) {
          props.icon = getLayer(c);
        }
        c.destroy();
      }
      return new ios.Banner(props);
    };
    genButton = function(l, nP) {
      var c, len2, n, props, q, ref;
      props = {
        superLayer: nP,
        constraints: genConstraints(l)
      };
      ref = l.children;
      for (q = 0, len2 = ref.length; q < len2; q++) {
        c = ref[q];
        n = c.name;
        if (found(n, 'small')) {
          props.type = 'small';
        }
        if (found(n, 'big')) {
          props.type = 'big';
        }
        if (found(n, 'dark')) {
          props.style = 'dark';
        }
        if (found(n, 'label')) {
          props.text = getString(c);
          props.color = getCSS(c).color;
          props.fontSize = getCSS(c)['font-size'].replace('px', '');
        }
        c.destroy();
      }
      return new ios.Button(props);
    };
    genField = function(l, nP) {
      var c, len2, n, props, q, ref;
      props = {
        superLayer: nP,
        constraints: genConstraints(l)
      };
      ref = l.children;
      for (q = 0, len2 = ref.length; q < len2; q++) {
        c = ref[q];
        n = c.name;
        if (found(n, 'placeholder')) {
          props.placeholder = getString(c);
        }
        c.destroy();
      }
      return new ios.Field(props);
    };
    genKeyboard = function(l, nP) {
      var c, len2, n, props, q, ref;
      props = {
        superLayer: nP
      };
      ref = l.children;
      for (q = 0, len2 = ref.length; q < len2; q++) {
        c = ref[q];
        n = c.name;
        if (found(n, 'return')) {
          props.returnText = getString(c);
        }
        if (found(n, 'dark')) {
          props.style = 'dark';
        }
        c.destroy();
      }
      return new ios.Keyboard(props);
    };
    genNavBar = function(l, nP) {
      var c, len2, n, props, q, ref;
      props = {
        superLayer: nP
      };
      ref = l.children;
      for (q = 0, len2 = ref.length; q < len2; q++) {
        c = ref[q];
        n = c.name;
        if (found(n, 'title')) {
          props.title = getString(c);
          props.titleColor = getCSS(c).color;
        }
        if (found(n, 'right')) {
          props.right = getString(c);
          props.color = getCSS(c).color;
        }
        if (found(n, 'left')) {
          props.left = getString(c);
        }
        c.destroy();
      }
      return new ios.NavBar(props);
    };
    genSheet = function(l, nP) {
      var c, i, len2, n, props, q, ref;
      props = {
        actions: [],
        superLayer: nP
      };
      ref = l.children;
      for (i = q = 0, len2 = ref.length; q < len2; i = ++q) {
        c = ref[i];
        n = c.name;
        if (found(n, 'action')) {
          props.actions.push(getColorString(c));
        }
        if (found(n, 'exit')) {
          props.exit = getString(c);
        }
        c.destroy();
      }
      return new ios.Sheet(props);
    };
    genStatusBar = function(l, nP) {
      var c, len2, n, props, q, ref;
      props = {
        superLayer: nP
      };
      ref = l.children;
      for (q = 0, len2 = ref.length; q < len2; q++) {
        c = ref[q];
        n = c.name;
        if (found(n, 'carrier')) {
          props.carrier = getString(c);
        }
        if (found(n, 'battery')) {
          props.battery = getString(c).replace('%', '');
        }
        if (found(n, 'network')) {
          props.network = getString(c);
        }
        if (found(n, 'dark')) {
          props.style = 'light';
        }
        c.destroy();
      }
      return new ios.StatusBar(props);
    };
    genTabBar = function(l, nP) {
      var c, len2, len3, n, props, q, ref, ref1, t, tn, tprops, u;
      props = {
        tabs: [],
        superLayer: nP
      };
      ref = l.children;
      for (q = 0, len2 = ref.length; q < len2; q++) {
        c = ref[q];
        n = c.name;
        tprops = {};
        ref1 = c.children;
        for (u = 0, len3 = ref1.length; u < len3; u++) {
          t = ref1[u];
          tn = t.name;
          if (n === 'tab_active' && tn.indexOf('label') !== -1) {
            props.activeColor = getCSS(t).color;
          }
          if (n !== 'tab_active' && tn.indexOf('label') !== -1) {
            props.inactiveColor = getCSS(t).color;
          }
          if (found(tn, 'active') && tn.indexOf('inactive') === -1) {
            tprops.active = getLayer(t);
          }
          if (found(tn, 'inactive')) {
            tprops.inactive = getLayer(t);
          }
          if (found(tn, 'label')) {
            tprops.label = getString(t);
          }
          t.destroy();
        }
        props.tabs.unshift(new ios.Tab(tprops));
        c.destroy();
      }
      return new ios.TabBar(props);
    };
    genText = function(l, nP) {
      var css, k, keys, len2, props, q;
      props = {
        superLayer: nP,
        text: getString(l),
        constraints: genConstraints(l)
      };
      css = getCSS(l);
      keys = Object.keys(getCSS(l));
      for (q = 0, len2 = keys.length; q < len2; q++) {
        k = keys[q];
        if (found(k, 'font-family')) {
          props.fontFamily = css[k];
        }
        if (found(k, 'opacity')) {
          props.opacity = Number(css[k]);
        }
        if (found(k, 'color')) {
          props.color = css[k];
        }
        if (found(k, 'font-size')) {
          props.fontSize = css[k].replace('px', '');
        }
        if (found(k, 'letter-spacing')) {
          props.letterSpacing = css[k];
        }
        if (found(k, 'line-height')) {
          props.lineHeight = css[k].replace('px', '');
        }
      }
      return new ios.Text(props);
    };
    children = function(p, nP) {
      var c, len2, n, newLayer, q, ref, results;
      ref = p.children;
      results = [];
      for (q = 0, len2 = ref.length; q < len2; q++) {
        c = ref[q];
        n = c.name;
        newLayer = 0;
        if (c.name[0] === '_') {
          if (found(n, '_Alert')) {
            newLayer = genAlert(c, nP);
          }
          if (found(n, '_Banner')) {
            newLayer = genBanner(c, nP);
          }
          if (found(n, '_Button')) {
            newLayer = genButton(c, nP);
          }
          if (found(n, '_Field')) {
            newLayer = genField(c, nP);
          }
          if (found(n, '_Keyboard')) {
            newLayer = genKeyboard(c, nP);
          }
          if (found(n, '_NavBar')) {
            newLayer = genNavBar(c, nP);
          }
          if (found(n, '_Sheet')) {
            newLayer = genSheet(c, nP);
          }
          if (found(n, '_TabBar')) {
            newLayer = genTabBar(c, nP);
          }
          if (found(n, '_StatusBar')) {
            newLayer = new genStatusBar(c, nP);
          }
          if (found(n, '_Text')) {
            newLayer = genText(c, nP);
          }
          if (newLayer === void 0) {
            newLayer = genLayer(c, nP);
          }
        } else {
          newLayer = genLayer(c, nP);
        }
        newLayers[n] = newLayer;
        if (c.children) {
          children(c, newLayer);
        }
        results.push(c.destroy());
      }
      return results;
    };
    ios.l[b.name] = new Artboard(b);
    children(b, ios.l[b.name]);
    b.destroy();
    newArtboards.push(ios.l[b.name]);
    newLayers[b.name] = ios.l[b.name];
  }
  return newLayers;
};


},{"ios-kit":"ios-kit"}],"ios-kit-field":[function(require,module,exports){
var ios;

ios = require('ios-kit');

exports.defaults = {
  name: 'field',
  active: false,
  keyboard: true,
  placeholder: "Enter text",
  placeholderColor: "#999",
  superLayer: void 0,
  backgroundColor: "white",
  borderColor: "#CCCCCC",
  borderRadius: ios.px(5),
  borderWidth: ios.px(1),
  height: ios.px(30),
  width: ios.px(97),
  fontSize: 17,
  color: 'black',
  textConstraints: {
    leading: 4,
    align: "vertical"
  },
  constraints: {
    height: 30,
    width: 97,
    align: "center"
  }
};

exports.defaults.props = Object.keys(exports.defaults);

exports.create = function(array) {
  var field, setup;
  setup = ios.utils.setupComponent(array, exports.defaults);
  field = new ios.View({
    name: setup.name,
    constraints: setup.constraints,
    backgroundColor: setup.backgroundColor,
    borderColor: setup.borderColor,
    borderRadius: setup.borderRadius,
    borderWidth: setup.borderWidth,
    height: setup.height,
    width: setup.width,
    clip: true,
    superLayer: setup.superLayer
  });
  field.text = new ios.Text({
    superLayer: field,
    name: ".text",
    constraints: setup.textConstraints,
    text: '',
    fontSize: 17,
    color: setup.color
  });
  field.text.placeholder = new ios.Text({
    superLayer: field,
    name: ".placeholder",
    constraints: setup.textConstraints,
    text: setup.placeholder,
    fontSize: 17,
    color: setup.placeholderColor
  });
  field.active = setup.active;
  field.type = 'field';
  field.on(Events.TouchEnd, function() {
    if (field.active !== true) {
      field.active = true;
      if (setup.keyboard === true && field.keyboard === void 0) {
        field.keyboard = new ios.Keyboard({
          output: field.text,
          hidden: true
        });
      }
      if (typeof setup.keyboard === 'object') {
        field.input(setup.keyboard);
        field.keyboard = setup.keyboard;
      }
      field.keyboard.call();
      field.text.cursor = new ios.View({
        superLayer: field,
        name: "cursor",
        backgroundColor: ios.color("blue"),
        constraints: {
          width: 2,
          height: setup.fontSize + 6,
          leading: 4,
          align: "vertical"
        }
      });
      if (field.text.html !== setup.placeholder) {
        field.text.cursor.constraints.leading = field.text;
        ios.layout.set(field.text.cursor);
      }
      field.listeningToField = Utils.interval(.1, function() {
        if (field.active === false) {
          clearInterval(field.interval);
          clearInterval(field.listeningToField);
          return field.text.cursor.destroy();
        }
      });
      field.interval = Utils.interval(.6, function() {
        if (field.active) {
          if (field.text.cursor.opacity) {
            return field.text.cursor.animate({
              properties: {
                opacity: 0
              },
              time: .5
            });
          } else {
            return field.text.cursor.animate({
              properties: {
                opacity: 1
              },
              time: .5
            });
          }
        }
      });
      return field.text.on("change:html", function() {
        this.cursor.constraints.leading = this;
        if (this.html === '') {
          this.placeholder.visible = true;
        } else {
          this.placeholder.visible = false;
        }
        if (this.html.indexOf(this.placeholder) !== -1) {
          this.html = this.html.replace(this.placeholder, '');
        }
        return ios.layout.set(this.cursor);
      });
    }
  });
  field.input = function(keyboard) {
    return keyboard.output(field);
  };
  return field;
};


},{"ios-kit":"ios-kit"}],"ios-kit-keyboard":[function(require,module,exports){
var arrayOfCodes, codeMap, device, ios, letters, numbers, symbols;

ios = require('ios-kit');

exports.defaults = {
  style: "light",
  shift: true,
  output: void 0,
  returnText: "return",
  state: "letters",
  hidden: false,
  returnColor: "blue",
  superLayer: void 0
};

device = {
  "iphone-5": {
    popUpChar: 40,
    popUpTop: 4,
    height: 215,
    lineHeight: 36,
    letterKey: {
      keyTop: 6,
      height: 39,
      width: 26.5,
      borderRadius: 5,
      fontSize: 22.5
    },
    specialKeyWidth: 38.5,
    specialKeyHeight: 38.5,
    space: 5,
    row1: {
      leading: 0,
      top: 0
    },
    row2: {
      leading: 19,
      top: 16
    },
    row3: {
      top: 16,
      leading: 51
    },
    area: {
      top: 11,
      leading: 3,
      trailing: 3,
      bottom: 4
    },
    returnWidth: 75,
    popUpOffset: {
      x: 4,
      y: 30
    }
  },
  "iphone-6s": {
    popUpChar: 40,
    popUpTop: 6,
    height: 218,
    lineHeight: 40,
    letterKey: {
      keyTop: 10,
      height: 42,
      width: 31.5,
      borderRadius: 5,
      fontSize: 23,
      top: 10
    },
    specialKeyWidth: 42,
    specialKeyHeight: 42,
    space: 6,
    row1: {
      leading: 0,
      top: 0
    },
    row2: {
      leading: 22,
      top: 12
    },
    row3: {
      top: 12,
      leading: 59
    },
    area: {
      top: 12,
      leading: 3,
      trailing: 3,
      bottom: 4
    },
    returnWidth: 87,
    popUpOffset: {
      x: 5,
      y: 32
    }
  },
  "iphone-6s-plus": {
    popUpChar: 38,
    popUpTop: 6,
    height: 226,
    lineHeight: 42,
    letterKey: {
      keyTop: 12,
      height: 45,
      width: 36,
      borderRadius: 5,
      fontSize: 24,
      top: 10
    },
    specialKeyWidth: 45,
    specialKeyHeight: 45,
    space: 5,
    row1: {
      leading: 0,
      top: 0
    },
    row2: {
      leading: 20,
      top: 11
    },
    row3: {
      top: 11,
      leading: 63
    },
    area: {
      top: 8,
      leading: 4,
      trailing: 4,
      bottom: 5
    },
    returnWidth: 97,
    popUpOffset: {
      x: 10,
      y: 38
    }
  },
  "ipad": {
    height: 313,
    lineHeight: 55,
    letterKey: {
      height: 55,
      width: 56,
      borderRadius: 5,
      fontSize: 23
    },
    specialKeyWidth: 56,
    specialKeyHeight: 55,
    space: 12,
    returnWidth: 106,
    row1: {
      leading: 0,
      top: 0
    },
    row2: {
      leading: 30,
      top: 9
    },
    row3: {
      leading: 68,
      top: 9
    },
    area: {
      top: 55,
      leading: 6,
      trailing: 6,
      bottom: 8
    }
  },
  "ipad-pro": {
    height: 378,
    lineHeight: 61,
    letterKey: {
      height: 61,
      width: 63,
      borderRadius: 5,
      fontSize: 23
    },
    space: 7,
    returnWidth: 120,
    specialKeyHeight: 61,
    specialKeyWidth: 93,
    row1: {
      leading: 111,
      top: 53
    },
    row2: {
      leading: 126,
      top: 7
    },
    row3: {
      leading: 161,
      top: 7
    },
    area: {
      top: 56,
      leading: 4,
      trailing: 4,
      bottom: 4
    }
  }
};

codeMap = {
  8: 'delete',
  9: 'tab',
  13: 'return',
  16: 'shift',
  20: 'caps',
  32: 'space',
  27: "dismiss",
  33: "!",
  34: "\"",
  35: "#",
  36: "$",
  37: "%",
  38: "&",
  39: "\'",
  40: "(",
  41: ")",
  42: "*",
  43: "+",
  44: ",",
  45: "-",
  47: "/",
  46: ".",
  48: "0",
  49: "!",
  50: "@",
  51: "#",
  52: "$",
  53: "%",
  54: "^",
  55: "&",
  56: "*",
  57: "(",
  48: ")",
  59: "_",
  60: "<",
  61: "=",
  62: ">",
  63: "?",
  64: "@",
  65: "A",
  66: "B",
  67: "C",
  68: "D",
  69: "E",
  70: "F",
  71: "G",
  72: "H",
  73: "I",
  74: "J",
  75: "K",
  76: "L",
  77: "M",
  78: "N",
  79: "O",
  80: "P",
  81: "Q",
  82: "R",
  83: "S",
  84: "T",
  85: "U",
  86: "V",
  87: "W",
  88: "X",
  89: "Y",
  90: "Z",
  91: 'cmd',
  219: "[",
  92: "\\",
  221: "]",
  94: "^",
  95: "_",
  96: "`",
  97: "a",
  98: "b",
  99: "c",
  100: "d",
  101: "e",
  102: "f",
  103: "g",
  104: "h",
  105: "i",
  106: "j",
  107: "k",
  108: "l",
  109: "m",
  110: "n",
  111: "o",
  112: "p",
  113: "q",
  114: "r",
  115: "s",
  116: "t",
  117: "u",
  118: "v",
  119: "w",
  120: "x",
  121: "y",
  122: "z",
  123: "{",
  124: "|",
  125: "}",
  126: "~",
  186: ":",
  187: "+",
  188: "<",
  190: ">",
  191: "?",
  189: "_",
  192: "~",
  219: "{",
  220: "\|",
  221: "}",
  222: "&rdquo;"
};

arrayOfCodes = Object.keys(codeMap);

letters = ["q", "w", "e", "r", "t", "y", "u", "i", "o", "p", "a", "s", "d", "f", "g", "h", "j", "k", "l", "z", "x", "c", "v", "b", "n", "m"];

numbers = ["1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "-", "/", ":", ";", "(", ")", "$", "&", "@", "\"", ".", ",", "?", "!", "′"];

symbols = ["[", "]", "{", "}", "#", "%", "^", "*", "+", "=", "_", "\\", "|", "~", "<", ">", "€", "£", "¥", "•"];

exports.defaults.props = Object.keys(exports.defaults);

exports.create = function(obj) {
  var Delete, Dismiss, Emoji, Icon, IconWithState, Key, Letter, Numbers, Return, Shift, Space, SpecialKey, Tab, board, capitalizeKeys, colors, handleKeyColor, popUp, setup, specs, style;
  setup = ios.utils.setupComponent(obj, exports.defaults);
  style = {
    light: {
      backgroundColor: "#D1D5DA",
      color: "#000",
      specialKeyBG: "#ACB3BD",
      keyBG: "#F7F7F7",
      shadowY: ios.px(1),
      shadowColor: "#898B8F",
      returnBG: ios.color(setup.returnColor)
    },
    dark: {
      backgroundColor: "rgba(0,0,0,.7)",
      color: "#FFF",
      specialKeyBG: "rgba(67,67,67,.8)",
      keyBG: "rgba(105,105,105,.8)",
      shadowY: ios.px(1),
      shadowColor: "rgba(0,0,0,.4)",
      returnBG: ios.color(setup.returnColor)
    }
  };
  specs = device[ios.device.name];
  colors = style[setup.style];
  device;
  board = new ios.View({
    name: "Keyboard",
    superLayer: setup.superLayer,
    backgroundColor: style[setup.style].backgroundColor,
    y: ios.device.height,
    constraints: {
      leading: 0,
      trailing: 0,
      bottom: -1 * specs.height,
      height: specs.height
    }
  });
  ios.utils.bgBlur(board);
  board.output = function(obj) {
    if (board.target) {
      if (board.target.type === 'field') {
        board.target.active = false;
      }
    }
    board.target = obj;
    if (board.target) {
      if (board.target.type === 'field') {
        return board.target.active = true;
      }
    }
  };
  board.hidden = setup.hidden;
  if (board.hidden === false) {
    board.constraints.bottom = 0;
    ios.layout.set(board);
  }
  board.call = function() {
    board.y = ios.device.height;
    board.constraints.bottom = 0;
    if (board.hidden) {
      board.hidden = false;
      ios.layout.animate({
        target: board,
        time: .5,
        curve: 'ease-in-out'
      });
    }
    return board.bringToFront();
  };
  board.dismiss = function() {
    board.constraints.bottom = -1 * ios.pt(board.height);
    board.hidden = true;
    board.target.active = false;
    return ios.layout.animate({
      target: board,
      time: .5,
      curve: 'ease-in-out'
    });
  };
  board["delete"] = function() {
    var isSpace, layer, text;
    layer = "";
    if (board.target) {
      if (board.target.type === 'field') {
        layer = board.target.text;
      } else {
        layer = board.target;
      }
      isSpace = layer.html.slice(layer.html.length - 5, +(layer.html.length - 1) + 1 || 9e9);
      if (isSpace !== 'nbsp;') {
        text = layer.html.slice(0, -1);
        return layer.html = text;
      } else {
        text = layer.html.slice(0, -6);
        return layer.html = text;
      }
    }
  };
  board.capsLock = function() {
    board.isCapsLock = true;
    board.isCapital = true;
    board.keys.shift.icon.toggle('off');
    handleKeyColor(board.keys.shift);
    if (ios.device.name === 'ipad-pro') {
      board.keys.shiftalt.icon.toggle('off');
      return handleKeyColor(board.keys.shiftalt);
    }
  };
  board.output(setup.output);
  board.keysArray = [];
  board.keys = {};
  board.isCapital = setup.shift;
  board.area = new ios.View({
    name: ".area",
    superLayer: board,
    constraints: specs.area,
    backgroundColor: "transparent"
  });
  Key = function(obj) {
    var key;
    key = new ios.View({
      name: ".keys." + obj.name,
      constraints: obj.constraints,
      superLayer: board.area,
      borderRadius: ios.px(specs.letterKey.borderRadius),
      shadowY: colors.shadowY,
      shadowColor: colors.shadowColor
    });
    key.style.fontFamily = "-apple-system, Helvetica, Arial, sans-serif";
    key.on(Events.TouchStart, function(event) {
      return event.preventDefault();
    });
    return key;
  };
  Letter = function(obj) {
    var key;
    key = new Key(obj);
    key.backgroundColor = colors.keyBG;
    key.html = obj.letter;
    key.color = colors.color;
    key.style.textAlign = "center";
    key.style.lineHeight = ios.px(specs.lineHeight) + "px";
    key.style.fontSize = ios.px(specs.letterKey.fontSize) + "px";
    key.value = obj.letter;
    if (key.value === "space") {
      key.value = "&nbsp;";
    }
    if (ios.isPad()) {
      key.down = function() {
        key.backgroundColor = colors.specialKeyBG;
        if (board.target) {
          return ios.utils.write(board.target, key.value);
        }
      };
      key.up = function() {
        key.backgroundColor = colors.keyBG;
        if (board.isCapital && board.isCapsLock !== true) {
          board.isCapital = false;
          capitalizeKeys();
          board.keys.shift.up();
          if (ios.isPad()) {
            return board.keys.shiftalt.up();
          }
        }
      };
      key.on(Events.TouchStart, function() {
        return key.down();
      });
      key.on(Events.TouchEnd, function() {
        return key.up();
      });
    } else {
      if (key.value !== '&nbsp;') {
        key.down = function() {
          board.popUp.visible = true;
          board.bringToFront();
          board.popUp.bringToFront();
          board.popUp.midX = key.midX;
          board.popUp.maxY = key.maxY;
          board.popUp.text.html = key.value;
          if (board.target) {
            return ios.utils.write(board.target, key.value);
          }
        };
        key.up = function() {
          board.popUp.visible = false;
          if (board.isCapital && board.capsLock !== true) {
            board.isCapital = false;
            capitalizeKeys();
            return board.keys.shift.up();
          }
        };
        key.on(Events.TouchStart, function() {
          return key.down();
        });
        key.on(Events.TouchEnd, function() {
          return key.up();
        });
      } else {
        key.down = function() {
          key.backgroundColor = colors.specialKeyBG;
          if (board.target) {
            return ios.utils.write(board.target, key.value);
          }
        };
        key.up = function() {
          return key.backgroundColor = colors.keyBG;
        };
        key.on(Events.TouchStart, function() {
          return key.down();
        });
        key.on(Events.TouchEnd, function() {
          return key.up();
        });
      }
    }
    return key;
  };
  SpecialKey = function(obj) {
    var key;
    key = new Key(obj);
    key.backgroundColor = colors.specialKeyBG;
    key.color = colors.color;
    key.style.textAlign = "center";
    if (ios.device.name === 'ipad-pro') {
      key.style.fontSize = ios.px(18) + "px";
    } else {
      key.style.fontSize = ios.px(16) + "px";
    }
    return key;
  };
  Icon = function(obj) {
    var icon;
    icon = new ios.View({
      name: 'icon',
      backgroundColor: "transparent",
      superLayer: obj.superLayer,
      constraints: {
        align: 'center'
      }
    });
    icon.props = {
      height: obj.icon.height,
      width: obj.icon.width,
      html: obj.icon.svg
    };
    ios.utils.changeFill(icon, colors.color);
    return icon;
  };
  IconWithState = function(obj) {
    var icon;
    icon = new ios.View({
      name: 'icon',
      backgroundColor: "transparent",
      superLayer: obj.superLayer,
      constraints: {
        align: 'center'
      }
    });
    icon.toggle = function(state) {
      if (state === void 0) {
        if (icon.state === 'on') {
          state = 'off';
        } else {
          state = 'on';
        }
      }
      if (state === "on") {
        if (ios.device.name !== 'ipad-pro') {
          icon.html = obj.on.svg;
          icon.width = obj.on.width;
          icon.height = obj.on.height;
        }
        icon.state = 'on';
      } else {
        if (ios.device.name !== 'ipad-pro') {
          icon.html = obj.off.svg;
          icon.width = obj.on.width;
          icon.height = obj.on.height;
        }
        icon.state = 'off';
      }
      return ios.utils.changeFill(icon, colors.color);
    };
    if (obj.state) {
      icon.toggle('on');
    } else {
      icon.toggle('off');
    }
    return icon;
  };
  capitalizeKeys = function() {
    var j, key, len, ref, results;
    ref = board.keysArray;
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      key = ref[j];
      if (board.isCapital) {
        if (key.html.length === 1 && key.html.match(/[a-z]/i)) {
          key.html = key.html.toUpperCase();
          key.value = key.html;
        }
        if (key.alt) {
          key.alt.destroy();
          key.alt = void 0;
        }
        if (key.height > ios.px(46)) {
          key.style.lineHeight = ios.px(specs.letterKey.height) + 'px';
          key.style.fontSize = ios.px(23) + 'px';
        } else {
          if (ios.device.name === 'ipad-pro') {
            key.style.lineHeight = ios.px(46) + 'px';
          } else {
            key.style.lineHeight = ios.px(specs.lineHeight) + 'px';
          }
          key.style.fontSize = ios.px(20) + 'px';
        }
        results.push(key.value = key.html);
      } else {
        if (key.html.length === 1 && key.html.match(/[a-z]/i)) {
          key.html = key.html.toLowerCase();
          results.push(key.value = key.html);
        } else {
          if (key.alt === void 0) {
            key.alt = new ios.Text({
              text: "",
              superLayer: key,
              color: colors.color,
              constraints: {
                align: "horizontal",
                bottom: 4
              },
              fontSize: specs.letterKey.fontSize
            });
            if (board.topRow) {
              if (board.topRow.indexOf(key) !== -1) {
                key.style.lineHeight = ios.px(23) + 'px';
                key.style.fontSize = ios.px(16) + 'px';
                key.alt.style.fontSize = ios.px(16) + 'px';
              } else {
                key.style.lineHeight = ios.px(36) + 'px';
                key.style.fontSize = ios.px(20) + 'px';
                key.alt.style.fontSize = ios.px(20) + 'px';
                key.alt.constraints.bottom = 8;
              }
            }
            switch (key.value) {
              case "&lt;":
                key.alt.html = ".";
                break;
              case "&gt;":
                key.alt.html = ",";
                break;
              case "<":
                key.alt.html = ".";
                break;
              case ">":
                key.alt.html = ",";
                break;
              case "?":
                key.alt.html = ".";
                break;
              case "{":
                key.alt.html = "[";
                break;
              case "}":
                key.alt.html = "}";
                break;
              case "\|":
                key.alt.html = "\\";
                break;
              case "~":
                key.alt.html = "`";
                break;
              case "!":
                key.alt.html = ".";
                break;
              case "@":
                key.alt.html = "2";
                break;
              case "#":
                key.alt.html = "3";
                break;
              case "$":
                key.alt.html = "4";
                break;
              case "%":
                key.alt.html = "5";
                break;
              case "^":
                key.alt.html = "6";
                break;
              case "&amp;":
                key.alt.html = "7";
                break;
              case "&":
                key.alt.html = "7";
                break;
              case "*":
                key.alt.html = "8";
                break;
              case "(":
                key.alt.html = "9";
                break;
              case ")":
                key.alt.html = "0";
                break;
              case "_":
                key.alt.html = "-";
                break;
              case "+":
                key.alt.html = "=";
                break;
              default:
                key.alt.html = "&prime;";
            }
            ios.layout.set(key.alt);
            if (ios.device.name === 'ipad-pro' && key.value === '!') {
              key.alt.html = '1';
            }
            if (ios.device.name === 'ipad-pro' && key.value === '?') {
              key.alt.html = '/';
            }
            if (ios.device.name === 'ipad-pro' && key.value === ':') {
              key.alt.html = ';';
            }
            if (ios.device.name === 'ipad-pro' && key.value === '&rdquo;') {
              key.alt.html = '&prime;';
            }
            results.push(key.value = key.alt.html);
          } else {
            results.push(void 0);
          }
        }
      }
    }
    return results;
  };
  handleKeyColor = function(key) {
    if (ios.isPhone) {
      if (key.icon.state === 'on') {
        return key.backgroundColor = colors.keyBG;
      } else {
        return key.backgroundColor = colors.specialKeyBG;
      }
    }
  };
  Space = function(obj) {
    var key;
    key = new Letter(obj);
    key.html = 'space';
    key.backgroundColor = colors.keyBG;
    key.style.lineHeight = ios.px(specs.specialKeyHeight) + "px";
    key.style.fontSize = ios.px(16) + 'px';
    return key;
  };
  Shift = function(obj) {
    var key;
    key = new SpecialKey(obj);
    key.icon = new IconWithState({
      superLayer: key,
      state: obj.shift,
      on: ios.utils.svg(ios.assets.shift.on),
      off: ios.utils.svg(ios.assets.shift.off)
    });
    handleKeyColor(key);
    key.on(Events.TouchEnd, function() {
      this.icon.toggle();
      handleKeyColor(key);
      if (this.icon.state === 'on') {
        board.isCapital = true;
      } else {
        board.isCapital = false;
      }
      return capitalizeKeys();
    });
    key.down = function() {
      key.icon.toggle('on');
      handleKeyColor(key);
      board.isCapital = true;
      return capitalizeKeys();
    };
    key.up = function() {
      key.icon.toggle('off');
      handleKeyColor(key);
      board.isCapital = false;
      return capitalizeKeys();
    };
    ios.layout.set(key.icon);
    if (ios.isPad()) {
      key.on(Events.TouchEnd, function() {
        if (this.icon.state === 'on') {
          board.keys.shift.icon.toggle('on');
          board.keys.shiftalt.icon.toggle('on');
        } else {
          board.keys.shift.icon.toggle('off');
          board.keys.shiftalt.icon.toggle('off');
        }
        handleKeyColor(board.keys.shift);
        return handleKeyColor(board.keys.shiftalt);
      });
    }
    return key;
  };
  Delete = function(obj) {
    var key;
    key = new SpecialKey(obj);
    key.icon = new IconWithState({
      superLayer: key,
      on: ios.utils.svg(ios.assets["delete"].on),
      off: ios.utils.svg(ios.assets["delete"].off)
    });
    key.fire = function() {
      return board["delete"]();
    };
    key.down = function() {
      key.icon.toggle('on');
      handleKeyColor(key);
      return key.fire();
    };
    key.up = function() {
      key.icon.toggle('off');
      return handleKeyColor(key);
    };
    key.on(Events.TouchStart, function() {
      return key.down();
    });
    key.on(Events.TouchEnd, function() {
      return key.up();
    });
    return key;
  };
  Numbers = function(obj) {
    var key;
    key = new SpecialKey(obj);
    if (ios.isPhone()) {
      key.html = '123';
    } else {
      key.html = '.?123';
    }
    key.style.lineHeight = ios.px(specs.specialKeyHeight) + "px";
    return key;
  };
  Emoji = function(obj) {
    var key;
    key = new SpecialKey(obj);
    key.icon = new Icon({
      superLayer: key,
      icon: ios.utils.svg(ios.assets.emoji)
    });
    return key;
  };
  Return = function(obj) {
    var key;
    key = new SpecialKey(obj);
    key.backgroundColor = colors.returnBG;
    key.html = setup.returnText;
    key.style.lineHeight = ios.px(specs.specialKeyHeight) + "px";
    key.color = ios.utils.autoColor(colors.returnBG);
    key.down = function() {
      var nothingHappens;
      return nothingHappens = true;
    };
    key.up = function() {
      board.dismiss();
      if (board.target) {
        if (board.target.parent) {
          return board.target.parent.active = false;
        }
      }
    };
    key.on(Events.TouchEnd, function() {
      return key.down();
    });
    key.on(Events.TouchStart, function() {
      return key.up();
    });
    return key;
  };
  Dismiss = function(obj) {
    var key;
    key = new SpecialKey(obj);
    key.icon = new Icon({
      superLayer: key,
      icon: ios.utils.svg(ios.assets.keyboard)
    });
    key.icon.scale = .8;
    key.icon.constraints = {
      bottom: 12,
      trailing: 12
    };
    ios.layout.set(key.icon);
    key.down = function() {
      return board.dismiss();
    };
    key.up = function() {
      var nothingHappens;
      return nothingHappens = false;
    };
    key.on(Events.TouchEnd, function() {
      return key.down();
    });
    return key;
  };
  Tab = function(obj) {
    var key;
    key = new SpecialKey(obj);
    key.html = 'tab';
    key.style.lineHeight = ios.px(70) + 'px';
    key.style.textAlign = 'left';
    key.style.paddingLeft = ios.px(12) + 'px';
    return key;
  };
  board.switchLetters = function() {
    var i, j, k, key, l, len, len1, row1Break, row2Break, topKey, topLetters;
    row1Break = 10;
    row2Break = 19;
    if (ios.isPad()) {
      letters.push('!');
      letters.push('?');
    }
    if (ios.device.name === "ipad-pro") {
      letters = ["q", "w", "e", "r", "t", "y", "u", "i", "o", "p", "{", "}", "\|", "a", "s", "d", "f", "g", "h", "j", "k", "l", ":", "&rdquo;", "z", "x", "c", "v", "b", "n", "m", "<", ">", "?"];
      topLetters = ["~", "!", "@", "#", "$", "%", "^", "&", "*", "(", ")", "_", "+"];
      row1Break = 13;
      row2Break = 24;
    }
    for (i = j = 0, len = letters.length; j < len; i = ++j) {
      l = letters[i];
      key = new Letter({
        name: l,
        constraints: {
          height: specs.letterKey.height,
          width: specs.letterKey.width
        },
        letter: l
      });
      if (l === 'w' || l === 'r' || l === 'y' || l === 'i' || l === 'p') {
        key.constraints.width = key.constraints.width + 1;
      }
      board.keys[l] = key;
      board.keysArray.push(key);
      if (i === 0) {
        key.constraints.leading = specs.row1.leading;
        key.constraints.top = specs.row1.top;
      }
      if (i > 0 && i < row1Break) {
        key.constraints.leading = [board.keysArray[i - 1], specs.space];
        key.constraints.top = specs.row1.top;
      }
      if (i === row1Break) {
        key.constraints.leading = specs.row2.leading;
        key.constraints.top = [board.keysArray[0], specs.row2.top];
      }
      if (i > row1Break && i < row2Break) {
        key.constraints.leading = [board.keysArray[i - 1], specs.space];
        key.constraints.top = [board.keysArray[0], specs.row2.top];
      }
      if (i === row2Break) {
        key.constraints.leading = specs.row3.leading;
        key.constraints.top = [board.keysArray[row1Break], specs.row3.top];
      }
      if (i > row2Break) {
        key.constraints.leading = [board.keysArray[i - 1], specs.space];
        key.constraints.top = [board.keysArray[row1Break], specs.row3.top];
      }
      ios.layout.set(key);
    }
    board.keys.shift = new Shift({
      name: "shift",
      shift: setup.shift,
      constraints: {
        height: specs.specialKeyHeight,
        width: specs.specialKeyWidth,
        bottomEdges: board.keys.z
      }
    });
    board.keys["delete"] = new Delete({
      name: "delete",
      constraints: {
        height: specs.specialKeyHeight,
        width: specs.specialKeyWidth,
        bottomEdges: board.keys.z,
        trailing: 0
      }
    });
    board.keys.numbers = new Numbers({
      name: "numbers",
      constraints: {
        height: specs.specialKeyHeight,
        width: specs.specialKeyWidth,
        bottom: 0,
        leading: 0
      }
    });
    board.keys.emoji = new Emoji({
      name: "emoji",
      constraints: {
        height: specs.specialKeyHeight,
        width: specs.specialKeyWidth,
        leading: [board.keys.numbers, specs.space],
        bottom: 0
      }
    });
    board.keys["return"] = new Return({
      name: "return",
      constraints: {
        bottom: 0,
        trailing: 0,
        width: specs.returnWidth,
        height: specs.specialKeyHeight
      }
    });
    board.keys.space = new Space({
      name: "space",
      letter: "space",
      constraints: {
        leading: [board.keys.emoji, specs.space],
        trailing: [board.keys["return"], specs.space],
        bottom: 0,
        height: specs.specialKeyHeight
      }
    });
    if (ios.isPad()) {
      board.keys["return"].constraints.bottom = void 0;
      board.keys["return"].constraints.bottomEdges = board.keysArray[row1Break];
      board.keys["delete"].constraints.top = 0;
      board.keys["delete"].constraints.bottomEdges = void 0;
      board.keys["delete"].constraints.width = 61;
      board.keys.shiftalt = new Shift({
        name: "shiftalt",
        shift: setup.shift,
        constraints: {
          height: specs.specialKeyHeight,
          width: 76,
          bottomEdges: board.keys.z,
          trailing: 0
        }
      });
      board.keys.dismiss = new Dismiss({
        name: "dismiss",
        constraints: {
          height: specs.specialKeyHeight,
          width: specs.specialKeyWidth,
          bottom: 0,
          trailing: 0
        }
      });
      board.keys.numbersalt = new Numbers({
        name: "numbersalt",
        constraints: {
          height: specs.specialKeyHeight,
          width: 93,
          bottom: 0,
          trailing: [board.keys.dismiss, specs.space]
        }
      });
      board.keys.space.html = "";
      board.keys.space.constraints.trailing = [board.keys.numbersalt, specs.space];
      ios.layout.set();
    }
    board.topRow = [];
    if (ios.device.name === 'ipad-pro') {
      for (i = k = 0, len1 = topLetters.length; k < len1; i = ++k) {
        l = topLetters[i];
        topKey = new Letter({
          letter: l,
          name: l,
          constraints: {
            height: 46,
            width: 63,
            top: 0
          }
        });
        if (i === 0) {
          topKey.constraints.leading = 0;
        } else {
          topKey.constraints.leading = [board.topRow[i - 1], specs.space];
        }
        topKey.style.lineHeight = ios.px(46) + 'px';
        ios.layout.set(topKey);
        board.topRow.push(topKey);
        board.keysArray.push(topKey);
        board.keys[l] = topKey;
      }
      board.keys["delete"].icon.destroy();
      board.keys["delete"].html = 'delete';
      board.keys["delete"].style.lineHeight = ios.px(53) + 'px';
      board.keys["delete"].style.textAlign = 'right';
      board.keys["delete"].style.paddingRight = ios.px(12) + 'px';
      board.keys["delete"].constraints = {
        top: 0,
        trailing: 0,
        height: 46,
        width: 106
      };
      board.keys.shift.icon.destroy();
      board.keys.shift.html = 'shift';
      board.keys.shift.style.lineHeight = ios.px(70) + 'px';
      board.keys.shift.style.textAlign = 'left';
      board.keys.shift.style.paddingLeft = ios.px(12) + 'px';
      board.keys.shift.constraints.width = 154;
      board.keys.shiftalt.icon.destroy();
      board.keys.shiftalt.html = 'shift';
      board.keys.shiftalt.style.lineHeight = ios.px(70) + 'px';
      board.keys.shiftalt.style.textAlign = 'right';
      board.keys.shiftalt.style.paddingRight = ios.px(12) + 'px';
      board.keys.shiftalt.constraints.width = 155;
      board.keys.emoji.icon.constraints = {
        leading: 15,
        bottom: 11
      };
      board.keys.emoji.constraints = {
        width: 144,
        height: 61,
        leading: 0,
        bottom: 0
      };
      ios.layout.set();
      board.keys.numbersalt.constraints.width = 93;
      board.keys.dismiss.constraints.width = 93;
      board.keys.com = new Letter({
        name: '.com',
        letter: '.com',
        constraints: {
          height: specs.letterKey.height,
          width: specs.letterKey.width,
          bottom: 0,
          trailing: [board.keys.numbersalt, specs.space]
        }
      });
      board.keys.com.style.fontSize = ios.px(16) + 'px';
      board.keys.numbers.constraints = {
        width: 143,
        height: 61,
        leading: [board.keys.emoji, specs.space]
      };
      board.keys.numbers.style.lineHeight = ios.px(70) + 'px';
      board.keys.numbers.style.textAlign = 'left';
      board.keys.numbers.style.paddingLeft = ios.px(12) + 'px';
      board.keys["return"].style.lineHeight = ios.px(70) + 'px';
      board.keys["return"].style.textAlign = 'right';
      board.keys["return"].style.paddingRight = ios.px(12) + 'px';
      board.keys.space.constraints.leading = [board.keys.numbers, specs.space];
      board.keys.space.constraints.trailing = [board.keys.com, specs.space];
      board.keys.caps = new Shift({
        name: 'caps',
        caps: true,
        constraints: {
          height: specs.specialKeyHeight,
          width: 119,
          bottomEdges: board.keysArray[row1Break]
        }
      });
      board.keys.caps.icon.destroy();
      board.keys.caps.html = 'caps lock';
      board.keys.caps.style.lineHeight = ios.px(70) + 'px';
      board.keys.caps.style.textAlign = 'left';
      board.keys.caps.style.paddingLeft = ios.px(12) + 'px';
      board.keys.caps.down = function() {
        if (board.isCapsLock) {
          return board.isCapsLock = false;
        } else {
          return board.capsLock();
        }
      };
      board.keys.caps.on(Events.TouchEnd, function() {
        return board.keys.caps.down();
      });
      board.keys.caps.up = function() {
        var nothingHappens;
        return nothingHappens = true;
      };
      board.keys.tab = new Tab({
        name: 'tab',
        constraints: {
          height: specs.specialKeyHeight,
          width: 106,
          bottomEdges: board.keysArray[0]
        }
      });
      return ios.layout.set();
    }
  };
  if (ios.isPhone()) {
    popUp = ios.utils.svg(ios.assets.keyPopUp[setup.style][ios.device.name]);
    board.popUp = new Layer({
      height: popUp.height,
      width: popUp.width,
      backgroundColor: 'transparent',
      name: '.popUp',
      superLayer: board.area,
      visible: false
    });
    board.popUp.svg = new Layer({
      html: popUp.svg,
      height: popUp.height,
      width: popUp.width,
      superLayer: board.popUp,
      name: '.svg',
      backgroundColor: 'transparent'
    });
    board.popUp.text = new ios.Text({
      text: 'A',
      superLayer: board.popUp,
      fontSize: specs.popUpChar,
      fontWeight: 300,
      color: colors.color,
      textAlign: 'center',
      constraints: {
        align: 'horizontal',
        top: specs.popUpTop,
        width: ios.pt(popUp.width)
      }
    });
    board.popUp.center();
    switch (ios.device.name) {
      case 'iphone-6s-plus':
        board.popUp.width = board.popUp.width - 18;
        board.popUp.height = board.popUp.height - 24;
        board.popUp.svg.x = ios.px(-3);
        board.popUp.svg.y = ios.px(-3);
        break;
      case 'iphone-6s':
        board.popUp.width = board.popUp.width - 12;
        board.popUp.height = board.popUp.height - 12;
        board.popUp.svg.x = ios.px(-3);
        board.popUp.svg.y = ios.px(-2);
        break;
      case 'iphone-5':
        board.popUp.width = board.popUp.width - 12;
        board.popUp.height = board.popUp.height - 12;
        board.popUp.svg.x = ios.px(-3);
        board.popUp.svg.y = ios.px(-2);
    }
    capitalizeKeys();
  }
  board["switch"] = function(state) {
    switch (state) {
      case "letters":
        return board.switchLetters();
    }
  };
  board["switch"]("letters");
  document.addEventListener('keydown', function(e) {
    var key;
    if (arrayOfCodes.indexOf(e.keyCode.toString()) !== -1) {
      key = board.keys[codeMap[e.keyCode].toLowerCase()];
      if (key) {
        key.down();
      }
      if (ios.isPad()) {
        if (key === board.keys.shift || key === board.keys.shiftalt) {
          board.keys.shift.down();
          board.keys.shiftalt.icon.toggle('on');
          return handleKeyColor(board.keys.shiftalt);
        }
      }
    }
  });
  document.addEventListener('keyup', function(e) {
    var key;
    if (arrayOfCodes.indexOf(e.keyCode.toString()) !== -1) {
      key = board.keys[codeMap[e.keyCode].toLowerCase()];
      if (key) {
        key.up();
      }
      if (ios.isPad()) {
        if (key === board.keys.shift || key === board.keys.shiftalt) {
          board.keys.shift.up();
          board.keys.shiftalt.icon.toggle('off');
          return handleKeyColor(board.keys.shiftalt);
        }
      }
    }
  });
  capitalizeKeys();
  return board;
};


},{"ios-kit":"ios-kit"}],"ios-kit-layout":[function(require,module,exports){
var ios, layout;

ios = require('ios-kit');

exports.defaults = {
  animations: {
    target: void 0,
    constraints: void 0,
    curve: "ease-in-out",
    curveOptions: void 0,
    time: 1,
    delay: 0,
    repeat: void 0,
    colorModel: void 0,
    stagger: void 0,
    fadeOut: false,
    fadeIn: false
  }
};

layout = function(array) {
  var blueprint, i, index, j, k, l, layer, len, len1, len2, newConstraint, props, ref, ref1, setup, targetLayers;
  setup = {};
  targetLayers = [];
  blueprint = [];
  if (array) {
    ref = Object.keys(exports.defaults.animations);
    for (j = 0, len = ref.length; j < len; j++) {
      i = ref[j];
      if (array[i]) {
        setup[i] = array[i];
      } else {
        setup[i] = exports.defaults.animations[i];
      }
    }
  }
  if (setup.target) {
    if (setup.target.length) {
      targetLayers = setup.target;
    } else {
      targetLayers.push(setup.target);
    }
  } else {
    targetLayers = Framer.CurrentContext.layers;
  }
  if (setup.target) {
    if (setup.constraints) {
      ref1 = Object.keys(setup.constraints);
      for (k = 0, len1 = ref1.length; k < len1; k++) {
        newConstraint = ref1[k];
        setup.target.constraints[newConstraint] = setup.constraints[newConstraint];
      }
    }
  }
  for (index = l = 0, len2 = targetLayers.length; l < len2; index = ++l) {
    layer = targetLayers[index];
    layer.calculatedPosition = {};
    if (layer.constraints) {
      props = {};
      layer.superFrame = {};
      if (layer.superLayer) {
        layer.superFrame.height = layer.superLayer.height;
        layer.superFrame.width = layer.superLayer.width;
      } else {
        layer.superFrame.height = ios.device.height;
        layer.superFrame.width = ios.device.width;
      }
      if (layer.constraints.leading !== void 0 && layer.constraints.trailing !== void 0) {
        layer.constraints.autoWidth = {};
      }
      if (layer.constraints.top !== void 0 && layer.constraints.bottom !== void 0) {
        layer.constraints.autoHeight = {};
      }
      if (layer.constraints.width !== void 0) {
        props.width = ios.utils.px(layer.constraints.width);
      } else {
        props.width = layer.width;
      }
      if (layer.constraints.height !== void 0) {
        props.height = ios.utils.px(layer.constraints.height);
      } else {
        props.height = layer.height;
      }
      if (layer.constraints.leading !== void 0) {
        if (layer.constraints.leading === parseInt(layer.constraints.leading, 10)) {
          props.x = ios.utils.px(layer.constraints.leading);
        } else {
          if (layer.constraints.leading.length === void 0) {
            props.x = layer.constraints.leading.calculatedPosition.x + layer.constraints.leading.calculatedPosition.width;
          } else {
            props.x = layer.constraints.leading[0].calculatedPosition.x + layer.constraints.leading[0].calculatedPosition.width + ios.utils.px(layer.constraints.leading[1]);
          }
        }
      }
      if (layer.constraints.autoWidth !== void 0) {
        layer.constraints.autoWidth.startX = props.x;
      }
      if (layer.constraints.trailing !== void 0) {
        if (layer.constraints.trailing === parseInt(layer.constraints.trailing, 10)) {
          props.x = layer.superFrame.width - ios.utils.px(layer.constraints.trailing) - props.width;
        } else {
          if (layer.constraints.trailing.length === void 0) {
            props.x = layer.constraints.trailing.calculatedPosition.x - props.width;
          } else {
            props.x = layer.constraints.trailing[0].calculatedPosition.x - ios.utils.px(layer.constraints.trailing[1]) - props.width;
          }
        }
      }
      if (layer.constraints.autoWidth !== void 0) {
        layer.constraints.autoWidth.calculatedPositionX = props.x;
        props.x = layer.constraints.autoWidth.startX;
        props.width = layer.constraints.autoWidth.calculatedPositionX - layer.constraints.autoWidth.startX + props.width;
      }
      if (layer.constraints.top !== void 0) {
        if (layer.constraints.top === parseInt(layer.constraints.top, 10)) {
          props.y = ios.utils.px(layer.constraints.top);
        } else {
          if (layer.constraints.top.length === void 0) {
            props.y = layer.constraints.top.calculatedPosition.y + layer.constraints.top.calculatedPosition.height;
          } else {
            props.y = layer.constraints.top[0].calculatedPosition.y + layer.constraints.top[0].calculatedPosition.height + ios.utils.px(layer.constraints.top[1]);
          }
        }
      }
      if (layer.constraints.autoHeight !== void 0) {
        layer.constraints.autoHeight.startY = props.y;
      }
      if (layer.constraints.bottom !== void 0) {
        if (layer.constraints.bottom === parseInt(layer.constraints.bottom, 10)) {
          props.y = layer.superFrame.height - ios.utils.px(layer.constraints.bottom) - props.height;
        } else {
          if (layer.constraints.bottom.length === void 0) {
            props.y = layer.constraints.bottom.calculatedPosition.y - props.height;
          } else {
            props.y = layer.constraints.bottom[0].calculatedPosition.y - ios.utils.px(layer.constraints.bottom[1]) - props.height;
          }
        }
      }
      if (layer.constraints.autoHeight !== void 0) {
        layer.constraints.autoHeight.calculatedPositionY = props.y;
        props.height = layer.constraints.autoHeight.calculatedPositionY - layer.constraints.autoHeight.startY + props.height;
        props.y = layer.constraints.autoHeight.startY;
      }
      if (layer.constraints.align !== void 0) {
        if (layer.constraints.align === "horizontal") {
          props.x = layer.superFrame.width / 2 - props.width / 2;
        }
        if (layer.constraints.align === "vertical") {
          props.y = layer.superFrame.height / 2 - props.height / 2;
        }
        if (layer.constraints.align === "center") {
          props.x = layer.superFrame.width / 2 - props.width / 2;
          props.y = layer.superFrame.height / 2 - props.height / 2;
        }
      }
      if (layer.constraints.horizontalCenter !== void 0) {
        props.x = layer.constraints.horizontalCenter.calculatedPosition.x + (layer.constraints.horizontalCenter.calculatedPosition.width - props.width) / 2;
      }
      if (layer.constraints.verticalCenter !== void 0) {
        props.y = layer.constraints.verticalCenter.calculatedPosition.y + (layer.constraints.verticalCenter.calculatedPosition.height - props.height) / 2;
      }
      if (layer.constraints.center !== void 0) {
        props.x = layer.constraints.center.calculatedPosition.x + (layer.constraints.center.calculatedPosition.width - props.width) / 2;
        props.y = layer.constraints.center.calculatedPosition.y + (layer.constraints.center.calculatedPosition.height - props.height) / 2;
      }
      if (layer.constraints.leadingEdges !== void 0) {
        props.x = layer.constraints.leadingEdges.calculatedPosition.x;
      }
      if (layer.constraints.trailingEdges !== void 0) {
        props.x = layer.constraints.trailingEdges.calculatedPosition.x - props.width + layer.constraints.trailingEdges.calculatedPosition.width;
      }
      if (layer.constraints.topEdges !== void 0) {
        props.y = layer.constraints.topEdges.calculatedPosition.y;
      }
      if (layer.constraints.bottomEdges !== void 0) {
        props.y = layer.constraints.bottomEdges.calculatedPosition.y - props.height + layer.constraints.bottomEdges.calculatedPosition.height;
      }
      layer.calculatedPosition = props;
    } else {
      layer.calculatedPosition = layer.props;
    }
    blueprint.push(layer);
  }
  return blueprint;
};

exports.set = function(array) {
  var blueprint, i, index, j, k, key, layer, len, len1, props, ref, results, setup;
  setup = {};
  props = {};
  if (array) {
    ref = Object.keys(exports.defaults.animations);
    for (j = 0, len = ref.length; j < len; j++) {
      i = ref[j];
      if (array[i]) {
        setup[i] = array[i];
      } else {
        setup[i] = exports.defaults.animations[i];
      }
    }
  }
  blueprint = layout(array);
  results = [];
  for (index = k = 0, len1 = blueprint.length; k < len1; index = ++k) {
    layer = blueprint[index];
    results.push((function() {
      var l, len2, ref1, results1;
      ref1 = Object.keys(layer.calculatedPosition);
      results1 = [];
      for (l = 0, len2 = ref1.length; l < len2; l++) {
        key = ref1[l];
        results1.push(layer[key] = layer.calculatedPosition[key]);
      }
      return results1;
    })());
  }
  return results;
};

exports.animate = function(array) {
  var blueprint, delay, i, index, j, k, layer, len, len1, props, ref, results, setup, stag;
  setup = {};
  props = {};
  if (array) {
    ref = Object.keys(exports.defaults.animations);
    for (j = 0, len = ref.length; j < len; j++) {
      i = ref[j];
      if (array[i]) {
        setup[i] = array[i];
      } else {
        setup[i] = exports.defaults.animations[i];
      }
    }
  }
  blueprint = layout(array);
  results = [];
  for (index = k = 0, len1 = blueprint.length; k < len1; index = ++k) {
    layer = blueprint[index];
    delay = setup.delay;
    if (setup.stagger) {
      stag = setup.stagger;
      delay = (index * stag) + delay;
    }
    if (setup.fadeOut) {
      if (layer === setup.fadeOut) {
        layer.calculatedPosition.opacity = 0;
      }
    }
    if (setup.fadeIn) {
      layer.calculatedPosition.opacity = 1;
    }
    layer.animate({
      properties: layer.calculatedPosition,
      time: setup.time,
      delay: delay,
      curve: setup.curve,
      repeat: setup.repeat,
      colorModel: setup.colorModel,
      curveOptions: setup.curveOptions
    });
    results.push(layer.calculatedPosition = props);
  }
  return results;
};


},{"ios-kit":"ios-kit"}],"ios-kit-library":[function(require,module,exports){
var ios, layer;

ios = require("ios-kit");

layer = new Layer;

exports.layerProps = Object.keys(layer.props);

exports.layerProps.push("superLayer");

exports.layerProps.push("constraints");

exports.layerStyles = Object.keys(layer.style);

layer.destroy();

exports.assets = {
  sheetTip: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='27px' height='13px' viewBox='0 0 27 13' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 39.1 (31720) - http://www.bohemiancoding.com/sketch --> <title>Triangle</title> <desc>Created with Sketch.</desc> <defs></defs> <g id='iOS-Kit' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'> <g id='Navigation-Bar-Copy' transform='translate(-2634.000000, -124.000000)' fill='#FFFFFF'> <path d='M2644.71916,125.883834 C2646.25498,124.291136 2648.74585,124.291992 2650.28084,125.883834 L2661,137 L2634,137 L2644.71916,125.883834 Z' id='Triangle'></path> </g> </g> </svg>",
  bluetooth: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='7px' height='13px' viewBox='0 0 8 15' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 3.6.1 (26313) - http://www.bohemiancoding.com/sketch --> <title>Bluetooth</title> <desc>Created with Sketch.</desc> <defs></defs> <g id='Status-Icons-(White)' transform='translate(-137.000000, 0.000000)' fill='#FFF'> <path d='M140.5,14.5 L145,10.25 L141.8,7.5 L145,4.75 L140.5,0.5 L140.5,6.07142857 L137.8,3.75 L137,4.5 L140.258333,7.375 L137,10.25 L137.8,11 L140.5,8.67857143 L140.5,14.5 Z M141.5,3 L143.366667,4.75 L141.5,6.25 L141.5,3 Z M141.5,8.5 L143.366667,10.25 L141.5,12 L141.5,8.5 Z' id='Bluetooth'></path> </g> </svg>",
  batteryHigh: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='25px' height='10px' viewBox='0 0 25 10' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 3.7.2 (28276) - http://www.bohemiancoding.com/sketch --> <title>Battery</title> <desc>Created with Sketch.</desc> <defs></defs> <g id='Symbols' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'> <g id='Status-Bar/Black/100%' transform='translate(-345.000000, -5.000000)' fill='#030303'> <path d='M346.493713,5.5 C345.668758,5.5 345,6.16802155 345,7.00530324 L345,13.4946968 C345,14.3260528 345.67338,15 346.493713,15 L366.006287,15 C366.831242,15 367.5,14.3319784 367.5,13.4946968 L367.5,7.00530324 C367.5,6.17394722 366.82662,5.5 366.006287,5.5 L346.493713,5.5 Z M368,8.5 L368,12 L368.75,12 C369.164214,12 369.5,11.6644053 369.5,11.25774 L369.5,9.24225998 C369.5,8.83232111 369.167101,8.5 368.75,8.5 L368,8.5 Z M346.508152,6 C345.951365,6 345.5,6.45699692 345.5,7.00844055 L345.5,13.4915594 C345.5,14.0485058 345.949058,14.5 346.508152,14.5 L365.991848,14.5 C366.548635,14.5 367,14.0430031 367,13.4915594 L367,7.00844055 C367,6.45149422 366.550942,6 365.991848,6 L346.508152,6 Z M346.506744,6.5 C346.226877,6.5 346,6.71637201 346,6.99209595 L346,13.5079041 C346,13.7796811 346.230225,14 346.506744,14 L365.993256,14 C366.273123,14 366.5,13.783628 366.5,13.5079041 L366.5,6.99209595 C366.5,6.72031886 366.269775,6.5 365.993256,6.5 L346.506744,6.5 Z' id='Battery'></path> </g> </g> </svg>",
  batteryMid: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='25px' height='10px' viewBox='0 0 25 10' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 3.7.2 (28276) - http://www.bohemiancoding.com/sketch --> <title>Battery</title> <desc>Created with Sketch.</desc> <defs></defs> <g id='Symbols' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'> <g id='Status-Bar/Black/Low-Power' transform='translate(-345.000000, -5.000000)' fill='#030303'> <path d='M346.493713,5.5 C345.668758,5.5 345,6.16802155 345,7.00530324 L345,13.4946968 C345,14.3260528 345.67338,15 346.493713,15 L366.006287,15 C366.831242,15 367.5,14.3319784 367.5,13.4946968 L367.5,7.00530324 C367.5,6.17394722 366.82662,5.5 366.006287,5.5 L346.493713,5.5 Z M368,8.5 L368,12 L368.75,12 C369.164214,12 369.5,11.6644053 369.5,11.25774 L369.5,9.24225998 C369.5,8.83232111 369.167101,8.5 368.75,8.5 L368,8.5 Z M346.508152,6 C345.951365,6 345.5,6.45699692 345.5,7.00844055 L345.5,13.4915594 C345.5,14.0485058 345.949058,14.5 346.508152,14.5 L365.991848,14.5 C366.548635,14.5 367,14.0430031 367,13.4915594 L367,7.00844055 C367,6.45149422 366.550942,6 365.991848,6 L346.508152,6 Z M346.50965,6.5 C346.228178,6.5 346,6.71637201 346,6.99209595 L346,13.5079041 C346,13.7796811 346.227653,14 346.50965,14 L356,14 L356,6.5 L346.50965,6.5 Z' id='Battery'></path> </g> </g> </svg>",
  batteryLow: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='25px' height='10px' viewBox='0 0 25 10' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 3.7.2 (28276) - http://www.bohemiancoding.com/sketch --> <title>Battery</title> <desc>Created with Sketch.</desc> <defs></defs> <g id='Symbols' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'> <g id='Status-Bar/Black/20%' transform='translate(-345.000000, -5.000000)' fill='#030303'> <path d='M346.493713,5.5 C345.668758,5.5 345,6.16802155 345,7.00530324 L345,13.4946968 C345,14.3260528 345.67338,15 346.493713,15 L366.006287,15 C366.831242,15 367.5,14.3319784 367.5,13.4946968 L367.5,7.00530324 C367.5,6.17394722 366.82662,5.5 366.006287,5.5 L346.493713,5.5 L346.493713,5.5 Z M368,8.5 L368,12 L368.75,12 C369.164214,12 369.5,11.6644053 369.5,11.25774 L369.5,9.24225998 C369.5,8.83232111 369.167101,8.5 368.75,8.5 L368,8.5 L368,8.5 Z M346.508152,6 C345.951365,6 345.5,6.45699692 345.5,7.00844055 L345.5,13.4915594 C345.5,14.0485058 345.949058,14.5 346.508152,14.5 L365.991848,14.5 C366.548635,14.5 367,14.0430031 367,13.4915594 L367,7.00844055 C367,6.45149422 366.550942,6 365.991848,6 L346.508152,6 Z M346.490479,6.5 C346.219595,6.5 346,6.71637201 346,6.99209595 L346,13.5079041 C346,13.7796811 346.215057,14 346.490479,14 L350,14 L350,6.5 L346.490479,6.5 Z' id='Battery'></path> </g> </g> </svg>",
  bannerBG: {
    "iphone-5": "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='320px' height='68px' viewBox='0 0 320 68' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 3.6.1 (26313) - http://www.bohemiancoding.com/sketch --> <title>iphone5</title> <desc>Created with Sketch.</desc> <defs></defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0.9'> <g id='iPhone-5/5S/5C' fill='#1A1A1C'> <path d='M0,0 L320,0 L320,68 L0,68 L0,0 Z M142,61.0048815 C142,59.897616 142.896279,59 144.0024,59 L176.9976,59 C178.103495,59 179,59.8938998 179,61.0048815 L179,61.9951185 C179,63.102384 178.103721,64 176.9976,64 L144.0024,64 C142.896505,64 142,63.1061002 142,61.9951185 L142,61.0048815 Z' id='iphone5'></path> </g> </g> </svg>",
    "iphone-6s": "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='375px' height='68px' viewBox='0 0 375 68' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 3.6 (26304) - http://www.bohemiancoding.com/sketch --> <title>Notification background</title> <desc>Created with Sketch.</desc> <defs></defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0.9'> <g id='iOS8-Push-Notification' transform='translate(-58.000000, -23.000000)' fill='#1A1A1C'> <g transform='translate(58.000000, 7.000000)' id='Notification-container'> <g> <path d='M0,16 L375,16 L375,84 L0,84 L0,16 Z M169,77.0048815 C169,75.897616 169.896279,75 171.0024,75 L203.9976,75 C205.103495,75 206,75.8938998 206,77.0048815 L206,77.9951185 C206,79.102384 205.103721,80 203.9976,80 L171.0024,80 C169.896505,80 169,79.1061002 169,77.9951185 L169,77.0048815 Z' id='Notification-background'></path> </g> </g> </g> </g> </svg>",
    "iphone-6s-plus": "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='414px' height='68px' viewBox='0 0 414 68' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 3.6 (26304) - http://www.bohemiancoding.com/sketch --> <title>Notification background Copy</title> <desc>Created with Sketch.</desc> <defs></defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0.9'> <g id='iOS8-Push-Notification' transform='translate(-43.000000, -74.000000)' fill='#1A1A1C'> <g transform='translate(43.000000, 74.000000)' id='Notification-container'> <g> <path d='M0,0 L414,0 L414,68 L0,68 L0,0 Z M189,61.0048815 C189,59.897616 189.896279,59 191.0024,59 L223.9976,59 C225.103495,59 226,59.8938998 226,61.0048815 L226,61.9951185 C226,63.102384 225.103721,64 223.9976,64 L191.0024,64 C189.896505,64 189,63.1061002 189,61.9951185 L189,61.0048815 Z' id='Notification-background-Copy'></path> </g> </g> </g> </g> </svg>",
    "ipad": "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='768px' height='68px' viewBox='0 0 768 68' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 3.6.1 (26313) - http://www.bohemiancoding.com/sketch --> <title>ipad-portrait</title> <desc>Created with Sketch.</desc> <defs></defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0.9'> <g id='iPad-Portrait' fill='#1A1A1C'> <path d='M0,0 L768,0 L768,68 L0,68 L0,0 Z M366,61.0048815 C366,59.897616 366.896279,59 368.0024,59 L400.9976,59 C402.103495,59 403,59.8938998 403,61.0048815 L403,61.9951185 C403,63.102384 402.103721,64 400.9976,64 L368.0024,64 C366.896505,64 366,63.1061002 366,61.9951185 L366,61.0048815 Z' id='ipad-portrait'></path> </g> </g> </svg>",
    "ipad-pro": "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='1024px' height='68px' viewBox='0 0 1024 68' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 3.6.1 (26313) - http://www.bohemiancoding.com/sketch --> <title>ipad-pro-portrait</title> <desc>Created with Sketch.</desc> <defs></defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0.9'> <g id='iPad-Pro-Portrait' fill='#1A1A1C'> <path d='M0,0 L1024,0 L1024,68 L0,68 L0,0 Z M494,61.0048815 C494,59.897616 494.896279,59 496.0024,59 L528.9976,59 C530.103495,59 531,59.8938998 531,61.0048815 L531,61.9951185 C531,63.102384 530.103721,64 528.9976,64 L496.0024,64 C494.896505,64 494,63.1061002 494,61.9951185 L494,61.0048815 Z' id='ipad-pro-portrait'></path> </g> </g> </svg>"
  },
  emojiCodes: ["98 80", "98 AC", "98 81", "98 82", "98 83", "98 84", "98 85", "98 86", "98 87", "98 89", "98 8a", "99 82", "99 83", "E2 98 BA EF B8 8F", "98 8B", "98 8C", "98 8D", "98 98", "98 97", "98 99", "98 9A", "98 9C", "98 9D", "98 9B", "A4 91", "A4 93", "98 8E", "A4 97", "98 8F", "98 B6", "98 90", "98 91", "98 92", "99 84", "A4 94", "98 B3", "98 9E", "98 9F", "98 A0", "98 A1", "98 94", "98 95", "99 81", "E2 98 B9 EF B8 8F", "98 A3", "98 96", "98 AB", "98 A9", "98 A4", "98 AE", "98 B1", "98 A8", "98 B0", "98 AF", "98 A6", "98 A7", "98 A2", "98 A5", "98 AA", "98 93", "98 AD", "98 B5", "98 B2", "A4 90", "98 B7", "A4 92", "A4 95", "98 B4", "92 A4", "92 A9", "98 88", "91 BF", "91 B9", "91 BA", "92 80", "91 BB", "91 BD", "A4 96", "98 BA", "98 B8", "98 B9", "98 BB", "98 BC", "98 BD", "99 80", "98 BF", "98 BE", "99 8C", "91 8F", "91 8B", "91 8D", "91 8E", "91 8A", "E2 9C 8A", "E2 9C 8C EF B8 8F", "91 8C", "E2 9C 8B", "91 90", "92 AA", "99 8F", "E2 98 9D EF B8 8F", "91 86", "91 87", "91 88", "91 89", "96 95", "96 90", "A4 98", "96 96", "E2 9C 8D EF B8 8F", "92 85", "91 84", "91 85", "91 82", "91 83", "91 81", "91 80", "91 A4", "91 A5", "97 A3", "91 B6", "91 A6", "91 A7", "91 A8", "91 A9", "91 B1", "91 B4", "91 B5", "91 B2", "91 B3", "91 AE", "91 B7", "92 82", "95 B5", "8E 85", "91 BC", "91 B8", "91 B0", "9A B6", "8F 83", "92 83", "91 AF", "91 AB", "91 AC", "91 AD", "99 87", "92 81", "99 85", "99 86", "99 8B", "99 8E", "99 8D", "92 87", "92 86", "92 91", "91 A9 E2 80 8D E2 9D A4 EF B8 8F E2 80 8D F0 9F 91 A9", "91 A8 E2 80 8D E2 9D A4 EF B8 8F E2 80 8D F0 9F 91 A8", "92 8F", "91 A9 E2 80 8D E2 9D A4 EF B8 8F E2 80 8D F0 9F 92 8B E2 80 8D F0 9F 91 A9", "91 A8 E2 80 8D E2 9D A4 EF B8 8F E2 80 8D F0 9F 92 8B E2 80 8D F0 9F 91 A8", "91 AA", "91 A8 E2 80 8D F0 9F 91 A9 E2 80 8D F0 9F 91 A7", "91 A8 E2 80 8D F0 9F 91 A9 E2 80 8D F0 9F 91 A7 E2 80 8D F0 9F 91 A6", "91 A8 E2 80 8D F0 9F 91 A9 E2 80 8D F0 9F 91 A6 E2 80 8D F0 9F 91 A6", "91 A8 E2 80 8D F0 9F 91 A9 E2 80 8D F0 9F 91 A7 E2 80 8D F0 9F 91 A7", "91 A9 E2 80 8D F0 9F 91 A9 E2 80 8D F0 9F 91 A6", "91 A9 E2 80 8D F0 9F 91 A9 E2 80 8D F0 9F 91 A7", "91 A9 E2 80 8D F0 9F 91 A9 E2 80 8D F0 9F 91 A7 E2 80 8D F0 9F 91 A6", "91 A9 E2 80 8D F0 9F 91 A9 E2 80 8D F0 9F 91 A6 E2 80 8D F0 9F 91 A6", "91 A9 E2 80 8D F0 9F 91 A9 E2 80 8D F0 9F 91 A7 E2 80 8D F0 9F 91 A7", "91 A8 E2 80 8D F0 9F 91 A8 E2 80 8D F0 9F 91 A6", "91 A8 E2 80 8D F0 9F 91 A8 E2 80 8D F0 9F 91 A7", "91 A8 E2 80 8D F0 9F 91 A8 E2 80 8D F0 9F 91 A7 E2 80 8D F0 9F 91 A6", "91 A8 E2 80 8D F0 9F 91 A8 E2 80 8D F0 9F 91 A6 E2 80 8D F0 9F 91 A6", "91 A8 E2 80 8D F0 9F 91 A8 E2 80 8D F0 9F 91 A7 E2 80 8D F0 9F 91 A7", "91 9A", "91 95", "91 96", "91 94", "91 97", "91 99", "91 98", "92 84", "92 8B", "91 A3", "91 A0", "91 A1", "91 A2", "91 9E", "91 9F", "91 92", "8E A9", "E2 9B 91", "8E 93", "91 91", "8E 92", "91 9D", "91 9B", "91 9C", "92 BC", "91 93", "95 B6", "92 8D", "8C 82", "9B 91", "90 B6", "90 B1", "90 AD", "90 B9", "90 B0", "90 BB", "90 BC", "90 A8", "90 AF", "A6 81", "90 AE", "90 B7", "90 BD", "90 B8", "90 99", "90 B5", "99 88", "99 89", "99 8A", "90 92", "90 94", "90 A7", "90 A6", "90 A4", "90 A3", "90 A5", "90 BA", "90 97", "90 B4", "A6 84", "90 9D", "90 9B", "90 8C", "90 9E", "90 9C", "95 B7", "A6 82", "A6 80", "90 8D", "90 A2", "90 A0", "90 9F", "90 A1", "90 AC", "90 B3", "90 8B", "90 8A", "90 86", "90 85", "90 83", "90 82", "90 84", "90 AA", "90 AB", "90 98", "90 90", "90 8F", "90 91", "90 8E", "90 96", "90 80", "90 81", "90 93", "A6 83", "95 8A", "90 95", "90 A9", "90 88", "90 87", "90 BF", "90 BE", "90 89", "90 B2", "8C B5", "8E 84", "8C B2", "8C B3", "8C B4", "8C B1", "8C BF", "E2 98 98", "8D 80", "8E 8D", "8E 8B", "8D 83", "8D 82", "8D 81", "8C BE", "8C BA", "8C BA", "8C BB", "8C B9", "8C B7", "8C BC", "8C B8", "92 90", "8D 84", "8C B0", "8E 83", "90 9A", "95 B8", "8C 8E", "8C 8D", "8C 8F", "8C 95", "8C 96", "8C 97", "8C 98", "8C 91", "8C 92", "8C 93", "8C 94", "8C 9A", "8C 9D", "8C 9B", "8C 9C", "8C 9E", "8C 99", "E2 AD 90 EF B8 8F", "8C 9F", "92 AB", "E2 9C A8", "E2 98 84 EF B8 8F", "E2 98 80 EF B8 8F", "8C A4", "E2 9B 85 EF B8 8F", "8C A5", "8C A6", "E2 98 81 EF B8 8F", "8C A7", "E2 9B 88", "8C A9", "E2 9A A1 EF B8 8F", "94 A5", "92 A5", "E2 9D 84 EF B8 8F", "8C A8", "E2 98 83 EF B8 8F", "E2 9B 84 EF B8 8F", "8C AC", "92 A8", "8C AA", "8C AB", "E2 98 82 EF B8 8F", "E2 98 94 EF B8 8F", "92 A7", "92 A6", "8C 8A", "9B 91", "9B 91", "8D 8F", "8D 8E", "8D 90", "8D 8A", "8D 8B", "8D 8C", "8D 89", "8D 87", "8D 93", "8D 88", "8D 92", "8D 91", "8D 8D", "8D 85", "8D 86", "8C B6", "8C BD", "8D A0", "8D AF", "8D 9E", "A7 80", "8D 97", "8D 96", "8D A4", "8D B3", "8D 94", "8D 9F", "8C AD", "8D 95", "8D 9D", "8C AE", "8C AF", "8D 9C", "8D B2", "8D A5", "8D A3", "8D B1", "8D 9B", "8D 99", "8D 9A", "8D 98", "8D A2", "8D A1", "8D A7", "8D A8", "8D A6", "8D B0", "8E 82", "8D AE", "8D AC", "8D AD", "8D AB", "8D BF", "8D A9", "8D AA", "8D BA", "8D BB", "8D B7", "8D B8", "8D B9", "8D BE", "8D B6", "8D B5", "E2 98 95 EF B8 8F", "8D BC", "8D B4", "8D BD", "9B 91", "9B 91", "9B 91", "E2 9A BD EF B8 8F", "8F 80", "8F 88", "E2 9A BE EF B8 8F", "8E BE", "8F 90", "8F 89", "8E B1", "E2 9B B3 EF B8 8F", "8F 8C", "8F 93", "8F B8", "8F 92", "8F 91", "8F 8F", "8E BF", "E2 9B B7", "8F 82", "E2 9B B8", "8F B9", "8E A3", "9A A3", "8F 8A", "8F 84", "9B 80", "E2 9B B9", "8F 8B", "9A B4", "9A B5", "8F 87", "95 B4", "8F 86", "8E BD", "8F 85", "8E 96", "8E 97", "8F B5", "8E AB", "8E 9F", "8E AD", "8E A8", "8E AA", "8E A4", "8E A7", "8E BC", "8E B9", "8E B7", "8E BA", "8E B8", "8E BB", "8E AC", "8E AE", "91 BE", "8E AF", "8E B2", "8E B0", "8E B3", "9B 91", "9B 91", "9B 91", "9A 97", "9A 95", "9A 99", "9A 8C", "9A 8E", "8F 8E", "9A 93", "9A 91", "9A 92", "9A 90", "9A 9A", "9A 9B", "9A 9C", "8F 8D", "9A B2", "9A A8", "9A 94", "9A 8D", "9A 98", "9A 96", "9A A1", "9A A0", "9A AF", "9A 83", "9A 8B", "9A 9D", "9A 84", "9A 85", "9A 88", "9A 9E", "9A 82", "9A 86", "9A 87", "9A 8A", "9A 89", "9A 81", "9B A9", "E2 9C 88 EF B8 8F", "9B AB", "9B AC", "E2 9B B5 EF B8 8F", "9B A5", "9A A4", "E2 9B B4", "9B B3", "9A 80", "9B B0", "92 BA", "E2 9A 93 EF B8 8F", "9A A7", "E2 9B BD EF B8 8F", "9A 8F", "9A A6", "9A A5", "8F 81", "9A A2", "8E A1", "8E A2", "8E A0", "8F 97", "8C 81", "97 BC", "8F AD", "E2 9B B2 EF B8 8F", "8E 91", "E2 9B B0", "8F 94", "97 BB", "8C 8B", "97 BE", "8F 95", "E2 9B BA EF B8 8F", "8F 9E", "9B A3", "9B A4", "8C 85", "8C 84", "8F 9C", "8F 96", "8F 9D", "8C 87", "8C 86", "8F 99", "8C 83", "8C 89", "8C 8C", "8C A0", "8E 87", "8E 86", "8C 88", "8F 98", "8F B0", "8F AF", "8F 9F", "97 BD", "8F A0", "8F A1", "8F 9A", "8F A2", "8F AC", "8F A3", "8F A4", "8F A5", "8F A6", "8F A8", "8F AA", "8F AB", "8F A9", "92 92", "8F 9B", "E2 9B AA EF B8 8F", "95 8C", "95 8D", "95 8B", "E2 9B A9", "E2 8C 9A EF B8 8F", "93 B1", "93 B2", "92 BB", "E2 8C A8 EF B8 8F", "96 A5", "96 A8", "96 B1", "96 B2", "95 B9", "97 9C", "92 BD", "92 BE", "92 BF", "93 80", "93 BC", "93 B7", "93 B8", "93 B9", "8E A5", "93 BD", "8E 9E", "93 9E", "E2 98 8E EF B8 8F", "93 9F", "93 A0", "93 BA", "93 BB", "8E 99", "8E 9A", "8E 9B", "E2 8F B1", "E2 8F B2", "E2 8F B0", "95 B0", "E2 8F B3", "E2 8C 9B EF B8 8F", "93 A1", "94 8B", "94 8C", "92 A1", "94 A6", "95 AF", "97 91", "9B A2", "92 B8", "92 B5", "92 B4", "92 B6", "92 B7", "92 B0", "92 B3", "92 8E", "E2 9A 96", "94 A7", "94 A8", "E2 9A 92", "9B A0", "E2 9B 8F", "94 A9", "E2 9A 99", "E2 9B 93", "94 AB", "92 A3", "94 AA", "97 A1", "E2 9A 94", "9B A1", "9A AC", "E2 98 A0 EF B8 8F", "E2 9A B0", "E2 9A B1", "8F BA", "94 AE", "93 BF", "92 88", "E2 9A 97", "94 AD", "94 AC", "95 B3", "92 8A", "92 89", "8C A1", "8F B7", "94 96", "9A BD", "9A BF", "9B 81", "94 91", "97 9D", "9B 8B", "9B 8C", "9B 8F", "9A AA", "9B 8E", "96 BC", "97 BA", "E2 9B B1", "97 BF", "9B 8D", "8E 88", "8E 8F", "8E 80", "8E 81", "8E 8A", "8E 89", "8E 8E", "8E 90", "8E 8C", "8F AE", "E2 9C 89 EF B8 8F", "93 A9", "93 A8", "93 A7", "92 8C", "93 AE", "93 AA", "93 AB", "93 AC", "93 AD", "93 A6", "93 AF", "93 A5", "93 A4", "93 9C", "93 83", "93 91", "93 8A", "93 88", "93 89", "93 84", "93 85", "93 86", "97 93", "93 87", "97 83", "97 B3", "97 84", "93 8B", "97 92", "93 81", "93 82", "97 82", "97 9E", "93 B0", "93 93", "93 95", "93 97", "93 98", "93 99", "93 94", "93 92", "93 9A", "93 96", "94 97", "93 8E", "96 87", "E2 9C 82 EF B8 8F", "93 90", "93 8F", "93 8C", "93 8D", "9A A9", "8F B3", "8F B4", "94 90", "94 92", "94 93", "94 8F", "96 8A", "96 8B", "E2 9C 92 EF B8 8F", "93 9D", "E2 9C 8F EF B8 8F", "96 8D", "96 8C", "94 8D", "94 8E", "9B 91", "9B 91", "E2 9D A4 EF B8 8F", "92 9B", "92 9A", "92 99", "92 9C", "92 94", "E2 9D A3 EF B8 8F", "92 95", "92 9E", "92 93", "92 97", "92 96", "92 98", "92 9D", "92 9F", "E2 98 AE EF B8 8F", "E2 9C 9D EF B8 8F", "E2 98 AA EF B8 8F", "95 89", "E2 98 B8 EF B8 8F", "E2 9C A1 EF B8 8F", "94 AF", "95 8E", "E2 98 AF EF B8 8F", "E2 98 A6 EF B8 8F", "9B 90", "E2 9B 8E", "E2 99 88 EF B8 8F", "E2 99 89 EF B8 8F", "E2 99 8A EF B8 8F", "E2 99 8B EF B8 8F", "E2 99 8C EF B8 8F", "E2 99 8D EF B8 8F", "E2 99 8E EF B8 8F", "E2 99 8F EF B8 8F", "E2 99 90 EF B8 8F", "E2 99 91 EF B8 8F", "E2 99 92 EF B8 8F", "E2 99 93 EF B8 8F", "86 94", "E2 9A 9B", "88 B3", "88 B9", "E2 98 A2 EF B8 8F", "E2 98 A3 EF B8 8F", "93 B4", "93 B3", "88 B6", "88 9A EF B8 8F", "88 B8", "88 BA", "88 B7 EF B8 8F", "E2 9C B4 EF B8 8F", "86 9A", "89 91", "92 AE", "89 90", "E3 8A 99 EF B8 8F", "E3 8A 97 EF B8 8F", "88 B4", "88 B5", "88 B2", "85 B0 EF B8 8F", "85 B1 EF B8 8F", "86 8E", "86 91", "85 BE EF B8 8F", "86 98", "E2 9B 94 EF B8 8F", "93 9B", "9A AB", "E2 9D 8C", "E2 AD 95 EF B8 8F", "92 A2", "E2 99 A8 EF B8 8F", "9A B7", "9A AF", "9A B3", "9A B1", "94 9E", "93 B5", "E2 9D 97 EF B8 8F", "E2 9D 95", "E2 9D 93", "E2 9D 94", "E2 80 BC EF B8 8F", "E2 81 89 EF B8 8F", "92 AF", "94 85", "94 86", "94 B1", "E2 9A 9C", "E3 80 BD EF B8 8F", "E2 9A A0 EF B8 8F", "9A B8", "94 B0", "E2 99 BB EF B8 8F", "88 AF EF B8 8F", "92 B9", "E2 9D 87 EF B8 8F", "E2 9C B3 EF B8 8F", "E2 9D 8E", "E2 9C 85", "92 A0", "8C 80", "E2 9E BF", "8C 90", "E2 93 82 EF B8 8F", "8F A7", "88 82 EF B8 8F", "9B 82", "9B 83", "9B 84", "9B 85", "E2 99 BF EF B8 8F", "9A AD", "9A BE", "85 BF EF B8 8F", "9A B0", "9A B9", "9A BA", "9A BC", "9A BB", "9A AE", "8E A6", "93 B6", "88 81", "86 96", "86 97", "86 99", "86 92", "86 95", "86 93", "30 EF B8 8F E2 83 A3", "31 EF B8 8F E2 83 A3", "32 EF B8 8F E2 83 A3", "33 EF B8 8F E2 83 A3", "34 EF B8 8F E2 83 A3", "35 EF B8 8F E2 83 A3", "36 EF B8 8F E2 83 A3", "37 EF B8 8F E2 83 A3", "38 EF B8 8F E2 83 A3", "39 EF B8 8F E2 83 A3", "94 9F", "94 A2", "E2 96 B6 EF B8 8F", "E2 8F B8", "E2 8F AF", "E2 8F B9", "E2 8F BA", "E2 8F AD", "E2 8F AE", "E2 8F A9", "E2 8F AA", "94 80", "94 81", "94 82", "E2 97 80 EF B8 8F", "94 BC", "94 BD", "E2 8F AB", "E2 8F AC", "E2 9E A1 EF B8 8F", "E2 AC 85 EF B8 8F", "E2 AC 86 EF B8 8F", "E2 AC 87 EF B8 8F", "E2 86 97 EF B8 8F", "E2 86 98 EF B8 8F", "E2 86 99 EF B8 8F", "E2 86 96 EF B8 8F", "E2 86 95 EF B8 8F", "E2 86 94 EF B8 8F", "94 84", "E2 86 AA EF B8 8F", "E2 86 A9 EF B8 8F", "E2 A4 B4 EF B8 8F", "E2 A4 B5 EF B8 8F", "23 EF B8 8F E2 83 A3", "2A EF B8 8F E2 83 A3", "E2 84 B9 EF B8 8F", "94 A4", "94 A1", "94 A0", "94 A3", "8E B5", "8E B6", "E3 80 B0 EF B8 8F", "E2 9E B0", "E2 9C 94 EF B8 8F", "94 83", "E2 9E 95", "E2 9E 96", "E2 9E 97", "E2 9C 96 EF B8 8F", "92 B2", "92 B1", "C2 A9 EF B8 8F", "C2 AE EF B8 8F", "E2 84 A2 EF B8 8F", "94 9A", "94 99", "94 9B", "94 9D", "94 9C", "E2 98 91 EF B8 8F", "94 98", "E2 9A AA EF B8 8F", "E2 9A AB EF B8 8F", "94 B4", "94 B5", "94 B8", "94 B9", "94 B6", "94 B7", "94 BA", "E2 96 AA EF B8 8F", "E2 96 AB EF B8 8F", "E2 AC 9B EF B8 8F", "E2 AC 9C EF B8 8F", "94 BB", "E2 97 BC EF B8 8F", "E2 97 BB EF B8 8F", "E2 97 BE EF B8 8F", "E2 97 BD EF B8 8F", "94 B2", "94 B3", "94 88", "94 89", "94 8A", "94 87", "93 A3", "93 A2", "94 94", "94 95", "83 8F", "80 84 EF B8 8F", "E2 99 A0 EF B8 8F", "E2 99 A3 EF B8 8F", "E2 99 A5 EF B8 8F", "E2 99 A6 EF B8 8F", "8E B4", "91 81 E2 80 8D F0 9F 97 A8", "92 AD", "97 AF", "92 AC", "95 90", "95 91", "95 92", "95 93", "95 94", "95 95", "95 96", "95 97", "95 98", "95 99", "95 9A", "95 9B", "95 9C", "95 9D", "95 9E", "95 9F", "95 A0", "95 A1", "95 A2", "95 A3", "95 A4", "95 A5", "95 A6", "95 A7", "9B 91", "87 A6 F0 9F 87 AB", "87 A6 F0 9F 87 BD", "87 A6 F0 9F 87 B1", "87 A9 F0 9F 87 BF", "87 A6 F0 9F 87 B8", "87 A6 F0 9F 87 A9", "87 A6 F0 9F 87 B4", "87 A6 F0 9F 87 AE", "87 A6 F0 9F 87 B6", "87 A6 F0 9F 87 AC", "87 A6 F0 9F 87 B7", "87 A6 F0 9F 87 B2", "87 A6 F0 9F 87 BC", "87 A6 F0 9F 87 BA", "87 A6 F0 9F 87 B9", "87 A6 F0 9F 87 BF", "87 A7 F0 9F 87 B8", "87 A7 F0 9F 87 AD", "87 A7 F0 9F 87 A9", "87 A7 F0 9F 87 A7", "87 A7 F0 9F 87 BE", "87 A7 F0 9F 87 AA", "87 A7 F0 9F 87 BF", "87 A7 F0 9F 87 AF", "87 A7 F0 9F 87 B2", "87 A7 F0 9F 87 B9", "87 A7 F0 9F 87 B4", "87 A7 F0 9F 87 B6", "87 A7 F0 9F 87 A6", "87 A7 F0 9F 87 BC", "87 A7 F0 9F 87 B7", "87 AE F0 9F 87 B4", "87 BB F0 9F 87 AC", "87 A7 F0 9F 87 B3", "87 A7 F0 9F 87 AC", "87 A7 F0 9F 87 AB", "87 A7 F0 9F 87 AE", "87 A8 F0 9F 87 BB", "87 B0 F0 9F 87 AD", "87 A8 F0 9F 87 B2", "87 A8 F0 9F 87 A6", "87 AE F0 9F 87 A8", "87 B0 F0 9F 87 BE", "87 A8 F0 9F 87 AB", "87 B9 F0 9F 87 A9", "87 A8 F0 9F 87 B1", "87 A8 F0 9F 87 B3", "87 A8 F0 9F 87 BD", "87 A8 F0 9F 87 A8", "87 A8 F0 9F 87 B4", "87 B0 F0 9F 87 B2", "87 A8 F0 9F 87 AC", "87 A8 F0 9F 87 A9", "87 A8 F0 9F 87 B0", "87 A8 F0 9F 87 B7", "87 AD F0 9F 87 B7", "87 A8 F0 9F 87 BA", "87 A8 F0 9F 87 BC", "87 A8 F0 9F 87 BE", "87 A8 F0 9F 87 BF", "87 A9 F0 9F 87 B0", "87 A9 F0 9F 87 AF", "87 A9 F0 9F 87 B2", "87 A9 F0 9F 87 B4", "87 AA F0 9F 87 A8", "87 AA F0 9F 87 AC", "87 B8 F0 9F 87 BB", "87 AC F0 9F 87 B6", "87 AA F0 9F 87 B7", "87 AA F0 9F 87 AA", "87 AA F0 9F 87 B9", "87 AA F0 9F 87 BA", "87 AB F0 9F 87 B0", "87 AB F0 9F 87 B4", "87 AB F0 9F 87 AF", "87 AB F0 9F 87 AE", "87 AB F0 9F 87 B7", "87 AC F0 9F 87 AB", "87 B5 F0 9F 87 AB", "87 B9 F0 9F 87 AB", "87 AC F0 9F 87 A6", "87 AC F0 9F 87 B2", "87 AC F0 9F 87 AA", "87 A9 F0 9F 87 AA", "87 AC F0 9F 87 AD", "87 AC F0 9F 87 AE", "87 AC F0 9F 87 B7", "87 AC F0 9F 87 B1", "87 AC F0 9F 87 A9", "87 AC F0 9F 87 B5", "87 AC F0 9F 87 BA", "87 AC F0 9F 87 B9", "87 AC F0 9F 87 AC", "87 AC F0 9F 87 B3", "87 AC F0 9F 87 BC", "87 AC F0 9F 87 BE", "87 AD F0 9F 87 B9", "87 AD F0 9F 87 B3", "87 AD F0 9F 87 B0", "87 AD F0 9F 87 BA", "87 AE F0 9F 87 B8", "87 AE F0 9F 87 B3", "87 AE F0 9F 87 A9", "87 AE F0 9F 87 B7", "87 AE F0 9F 87 B6", "87 AE F0 9F 87 AA", "87 AE F0 9F 87 B2", "87 AE F0 9F 87 B1", "87 AE F0 9F 87 B9", "87 A8 F0 9F 87 AE", "87 AF F0 9F 87 B2", "87 AF F0 9F 87 B5", "87 AF F0 9F 87 AA", "87 AF F0 9F 87 B4", "87 B0 F0 9F 87 BF", "87 B0 F0 9F 87 AA", "87 B0 F0 9F 87 AE", "87 BD F0 9F 87 B0", "87 B0 F0 9F 87 BC", "87 B0 F0 9F 87 AC", "87 B1 F0 9F 87 A6", "87 B1 F0 9F 87 BB", "87 B1 F0 9F 87 A7", "87 B1 F0 9F 87 B8", "87 B1 F0 9F 87 B7", "87 B1 F0 9F 87 BE", "87 B1 F0 9F 87 AE", "87 B1 F0 9F 87 B9", "87 B1 F0 9F 87 BA", "87 B2 F0 9F 87 B4", "87 B2 F0 9F 87 B0", "87 B2 F0 9F 87 AC", "87 B2 F0 9F 87 BC", "87 B2 F0 9F 87 BE", "87 B2 F0 9F 87 BB", "87 B2 F0 9F 87 B1", "87 B2 F0 9F 87 B9", "87 B2 F0 9F 87 AD", "87 B2 F0 9F 87 B6", "87 B2 F0 9F 87 B7", "87 B2 F0 9F 87 BA", "87 BE F0 9F 87 B9", "87 B2 F0 9F 87 BD", "87 AB F0 9F 87 B2", "87 B2 F0 9F 87 A9", "87 B2 F0 9F 87 A8", "87 B2 F0 9F 87 B3", "87 B2 F0 9F 87 AA", "87 B2 F0 9F 87 B8", "87 B2 F0 9F 87 A6", "87 B2 F0 9F 87 BF", "87 B2 F0 9F 87 B2", "87 B3 F0 9F 87 A6", "87 B3 F0 9F 87 B7", "87 B3 F0 9F 87 B5", "87 B3 F0 9F 87 B1", "87 B3 F0 9F 87 A8", "87 B3 F0 9F 87 BF", "87 B3 F0 9F 87 AE", "87 B3 F0 9F 87 AA", "87 B3 F0 9F 87 AC", "87 B3 F0 9F 87 BA", "87 B3 F0 9F 87 AB", "87 B2 F0 9F 87 B5", "87 B0 F0 9F 87 B5", "87 B3 F0 9F 87 B4", "87 B4 F0 9F 87 B2", "87 B5 F0 9F 87 B0", "87 B5 F0 9F 87 BC", "87 B5 F0 9F 87 B8", "87 B5 F0 9F 87 A6", "87 B5 F0 9F 87 AC", "87 B5 F0 9F 87 BE", "87 B5 F0 9F 87 AA", "87 B5 F0 9F 87 AD", "87 B5 F0 9F 87 B3", "87 B5 F0 9F 87 B1", "87 B5 F0 9F 87 B9", "87 B5 F0 9F 87 B7", "87 B6 F0 9F 87 A6", "87 B7 F0 9F 87 AA", "87 B7 F0 9F 87 B4", "87 B7 F0 9F 87 BA", "87 B7 F0 9F 87 BC", "87 A7 F0 9F 87 B1", "87 B8 F0 9F 87 AD", "87 B0 F0 9F 87 B3", "87 B1 F0 9F 87 A8", "87 B5 F0 9F 87 B2", "87 BB F0 9F 87 A8", "87 BC F0 9F 87 B8", "87 B8 F0 9F 87 B2", "87 B8 F0 9F 87 B9", "87 B8 F0 9F 87 A6", "87 B8 F0 9F 87 B3", "87 B7 F0 9F 87 B8", "87 B8 F0 9F 87 A8", "87 B8 F0 9F 87 B1", "87 B8 F0 9F 87 AC", "87 B8 F0 9F 87 BD", "87 B8 F0 9F 87 B0", "87 B8 F0 9F 87 AE", "87 B8 F0 9F 87 A7", "87 B8 F0 9F 87 B4", "87 BF F0 9F 87 A6", "87 AC F0 9F 87 B8", "87 B0 F0 9F 87 B7", "87 B8 F0 9F 87 B8", "87 AA F0 9F 87 B8", "87 B1 F0 9F 87 B0", "87 B8 F0 9F 87 A9", "87 B8 F0 9F 87 B7", "87 B8 F0 9F 87 BF", "87 B8 F0 9F 87 AA", "87 A8 F0 9F 87 AD", "87 B8 F0 9F 87 BE", "87 B9 F0 9F 87 BC", "87 B9 F0 9F 87 AF", "87 B9 F0 9F 87 BF", "87 B9 F0 9F 87 AD", "87 B9 F0 9F 87 B1", "87 B9 F0 9F 87 AC", "87 B9 F0 9F 87 B0", "87 B9 F0 9F 87 B4", "87 B9 F0 9F 87 B9", "87 B9 F0 9F 87 B3", "87 B9 F0 9F 87 B7", "87 B9 F0 9F 87 B2", "87 B9 F0 9F 87 A8", "87 B9 F0 9F 87 BB", "87 BA F0 9F 87 AC", "87 BA F0 9F 87 A6", "87 A6 F0 9F 87 AA", "87 AC F0 9F 87 A7", "87 BA F0 9F 87 B8", "87 BB F0 9F 87 AE", "87 BA F0 9F 87 BE", "87 BA F0 9F 87 BF", "87 BB F0 9F 87 BA", "87 BB F0 9F 87 A6", "87 BB F0 9F 87 AA", "87 BB F0 9F 87 B3", "87 BC F0 9F 87 AB", "87 AA F0 9F 87 AD", "87 BE F0 9F 87 AA", "87 BF F0 9F 87 B2", "87 BF F0 9F 87 BC"],
  network: "<svg width='14px' height='10px' viewBox='87 5 14 10' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 3.7.2 (28276) - http://www.bohemiancoding.com/sketch --> <desc>Created with Sketch.</desc> <defs></defs> <path d='M96.1444208,12.4385043 C95.626374,11.8454456 94.8523616,11.4689119 93.987563,11.4689119 C93.1390073,11.4689119 92.3778594,11.8314341 91.8601652,12.4053177 L94.0225391,14.5 L96.1444208,12.4385043 Z M98.3234964,10.3214425 C97.2447794,9.19174563 95.7014387,8.48445596 93.987563,8.48445596 C92.2882723,8.48445596 90.7566264,9.17975893 89.6792698,10.2926936 L90.7692987,11.3486 C91.567205,10.5053708 92.713648,9.97668394 93.987563,9.97668394 C95.2768836,9.97668394 96.4356305,10.518235 97.2346215,11.3793293 L98.3234964,10.3214425 L98.3234964,10.3214425 Z M100.5,8.20687933 C98.8629578,6.53943672 96.5505699,5.5 93.987563,5.5 C91.4375103,5.5 89.1355496,6.52895605 87.5,8.18164431 L88.5895579,9.23709441 C89.9460798,7.85431655 91.8628921,6.99222798 93.987563,6.99222798 C96.1260026,6.99222798 98.0538809,7.86552609 99.4118698,9.26404272 L100.5,8.20687933 Z' id='Wi-Fi' stroke='none' fill='#030303' fill-rule='evenodd'></path> </svg>",
  activity: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='16px' height='16px' viewBox='0 0 16 16' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:sketch='http://www.bohemiancoding.com/sketch/ns'> <!-- Generator: Sketch 3.5.2 (25235) - http://www.bohemiancoding.com/sketch --> <title>Soccer Ball</title> <desc>Created with Sketch.</desc> <defs> <circle id='path-1' cx='8' cy='8' r='8'></circle> </defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' sketch:type='MSPage'> <g id='iPhone-6' sketch:type='MSArtboardGroup' transform='translate(-179.000000, -639.000000)'> <g id='Soccer-Ball' sketch:type='MSLayerGroup' transform='translate(179.000000, 639.000000)'> <mask id='mask-2' sketch:name='Mask' fill='white'> <use xlink:href='#path-1'></use> </mask> <use id='Mask' stroke='#4A5361' sketch:type='MSShapeGroup' xlink:href='#path-1'></use> <path d='M6,12.1203046 L12.8573384,8 L13.3723765,8.8571673 L6.51503807,12.9774719 L6,12.1203046 L6,12.1203046 Z' id='Rectangle-47' fill='#4A5361' sketch:type='MSShapeGroup' mask='url(#mask-2)'></path> <path d='M11.849648,8.7260551 L19.1001103,5.34510901 L19.5227285,6.2514168 L12.2722662,9.63236289 L11.849648,8.7260551 L11.849648,8.7260551 Z' id='Rectangle-47-Copy-3' fill='#4A5361' sketch:type='MSShapeGroup' mask='url(#mask-2)'></path> <path d='M6,3.1203046 L12.8573384,-1 L13.3723765,-0.142832699 L6.51503807,3.9774719 L6,3.1203046 L6,3.1203046 Z' id='Rectangle-47-Copy-2' fill='#4A5361' sketch:type='MSShapeGroup' mask='url(#mask-2)'></path> <path d='M-1,7.1203046 L5.85733841,3 L6.37237648,3.8571673 L-0.484961925,7.9774719 L-1,7.1203046 L-1,7.1203046 Z' id='Rectangle-47-Copy-4' fill='#4A5361' sketch:type='MSShapeGroup' mask='url(#mask-2)'></path> <rect id='Rectangle-50' fill='#4A5361' sketch:type='MSShapeGroup' mask='url(#mask-2)' x='4' y='6' width='1' height='5'></rect> <rect id='Rectangle-51' fill='#4A5361' sketch:type='MSShapeGroup' mask='url(#mask-2)' x='11.5' y='3' width='1' height='12'></rect> <path d='M5,4.8571673 L11.8573384,8.9774719 L12.3723765,8.1203046 L5.51503807,4 L5,4.8571673' id='Rectangle-47-Copy' fill='#4A5361' sketch:type='MSShapeGroup' mask='url(#mask-2)'></path> <path d='M5,12.8571673 L11.8573384,16.9774719 L12.3723765,16.1203046 L5.51503807,12 L5,12.8571673' id='Rectangle-47-Copy-5' fill='#4A5361' sketch:type='MSShapeGroup' mask='url(#mask-2)'></path> <path d='M11.9048972,6.14766064 L13.8714227,8.33170849 L12.4019596,10.8768933 L9.52725589,10.2658562 L9.22005445,7.34302965 L11.9048972,6.14766064' id='Polygon-1' fill='#D8D8D8' sketch:type='MSShapeGroup' mask='url(#mask-2)'></path> <path d='M11.9048972,6.14766064 L13.8714227,8.33170849 L12.4019596,10.8768933 L9.52725589,10.2658562 L9.22005445,7.34302965 L11.9048972,6.14766064' id='Polygon-1-Copy' fill='#4A5361' sketch:type='MSShapeGroup' mask='url(#mask-2)'></path> <path d='M7.45771189,3.19504739 L7.35514484,6.13218333 L4.5300676,6.9422612 L2.88664089,4.5057809 L4.69602457,2.18987541 L7.45771189,3.19504739' id='Polygon-1-Copy-2' fill='#4A5361' sketch:type='MSShapeGroup' mask='url(#mask-2)'></path> <path d='M7.45771189,11.1950474 L7.35514484,14.1321833 L4.5300676,14.9422612 L2.88664089,12.5057809 L4.69602457,10.1898754 L7.45771189,11.1950474' id='Polygon-1-Copy-3' fill='#4A5361' sketch:type='MSShapeGroup' mask='url(#mask-2)'></path> <path d='M14.5431701,0.0725939314 L14.4406031,3.00972988 L11.6155258,3.81980774 L9.97209912,1.38332745 L11.7814828,-0.93257805 L14.5431701,0.0725939314' id='Polygon-1-Copy-4' fill='#4A5361' sketch:type='MSShapeGroup' mask='url(#mask-2)'></path> </g> </g> </g> </svg>",
  animals: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='17px' height='16px' viewBox='0 0 17 17' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:sketch='http://www.bohemiancoding.com/sketch/ns'> <!-- Generator: Sketch 3.5.2 (25235) - http://www.bohemiancoding.com/sketch --> <title>Group</title> <desc>Created with Sketch.</desc> <defs></defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' sketch:type='MSPage'> <g id='iPhone-6' sketch:type='MSArtboardGroup' transform='translate(-117.000000, -639.000000)' stroke='#4A5361'> <g id='ic_Food' sketch:type='MSLayerGroup' transform='translate(118.000000, 640.000000)'> <g id='Group' sketch:type='MSShapeGroup'> <path d='M5.68377537,1.38156646 C6.23926066,1.13624 6.85372005,1 7.5,1 C8.14627995,1 8.76073934,1.13624 9.31622463,1.38156646 C9.80879275,0.562359019 10.8255888,0 12,0 C13.6568542,0 15,1.11928813 15,2.5 C15,3.5571398 14.2126246,4.46102843 13.0999226,4.82662514 C14.2496528,5.64185422 15,6.98330062 15,8.5 C15,10.7167144 13.3971873,12.5590719 11.2872671,12.9313673 C10.4867248,14.1757703 9.08961696,15 7.5,15 C5.91038304,15 4.51327524,14.1757703 3.71273291,12.9313673 C1.60281268,12.5590719 0,10.7167144 0,8.5 C0,6.98330062 0.750347244,5.64185422 1.90007741,4.82662514 C0.787375445,4.46102843 0,3.5571398 0,2.5 C0,1.11928813 1.34314575,0 3,0 C4.17441122,0 5.19120725,0.562359019 5.68377537,1.38156646 Z' id='Oval-8'></path> <path d='M5.73834228,12 C5.86290979,12 6.14642353,12 6.14642353,12 C6.14642353,12 6.43215696,12.4426123 6.5246582,12.4919739 C6.66455601,12.5666277 7,12.4919739 7,12.4919739 L7,12 L8,12 L8,12.4919739 L8.49799228,12.4919739 L8.84301769,12 L9.3918457,12 C9.3918457,12 8.99598457,12.9839478 8.49799228,12.9839478 L6.60702407,12.9839478 C6.21404813,12.9839478 5.45996094,12 5.73834228,12 Z' id='Rectangle-44-Copy-2'></path> <circle id='Oval-14' cx='10.5' cy='7.5' r='0.5'></circle> <circle id='Oval-14-Copy' cx='4.5' cy='7.5' r='0.5'></circle> <path d='M12.6999969,5 C12.6999969,3.06700338 11.1329936,1.5 9.19999695,1.5' id='Oval-16'></path> <path d='M5.5,5 C5.5,3.06700338 3.93299662,1.5 2,1.5' id='Oval-16-Copy' transform='translate(3.750000, 3.250000) scale(-1, 1) translate(-3.750000, -3.250000) '></path> <rect id='Rectangle-44-Copy' x='7' y='11' width='1' height='1'></rect> <path d='M6,10 L6.5,10 L6.49999999,9.5 L8.50000005,9.5 L8.50000005,10 L9,10 L9,10.5 L8.5,10.5 L8.5,11 L6.5,11 L6.5,10.5 L6,10.5 L6,10 Z' id='Path'></path> </g> </g> </g> </g> </svg>",
  chevron: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='13px' height='22px' viewBox='0 0 13 22' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 3.6.1 (26313) - http://www.bohemiancoding.com/sketch --> <title>Back Chevron</title> <desc>Created with Sketch.</desc> <defs></defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'> <g id='Navigation-Bar/Back' transform='translate(-8.000000, -31.000000)' fill='#0076FF'> <path d='M8.5,42 L19,31.5 L21,33.5 L12.5,42 L21,50.5 L19,52.5 L8.5,42 Z' id='Back-Chevron'></path> </g> </g> </svg>",
  emojis: ["😀", "😬", "😁", "😂", "😃", "😄", "😅", "😆", "😇", "😉", "😊", "🙂", "🙃", "☺️", "😋", "😌", "😍", "😘", "😗", "😙", "😚", "😜", "😝", "😛", "🤑", "🤓", "😎", "🤗", "😏", "😶", "😐", "😑", "😒", "🙄", "🤔", "😳", "😞", "😟", "😠", "😡", "😔", "😕", "🙁", "☹️", "😣", "😖", "😫", "😩", "😤", "😮", "😱", "😨", "😰", "😯", "😦", "😧", "😢", "😥", "😪", "😓", "😭", "😵", "😲", "🤐", "😷", "🤒", "🤕", "😴", "💤", "💩", "😈", "👿", "👹", "👺", "💀", "👻", "👽", "🤖", "😺", "😸", "😹", "😻", "😼", "😽", "🙀", "😿", "😾", "🙌", "👏", "👋", "👍", "👎", "👊", "✊", "✌️", "👌", "✋", "👐", "💪", "🙏", "☝️", "👆", "👇", "👈", "👉", "🖕", "🖐", "🤘", "🖖", "✍️", "💅", "👄", "👅", "👂", "👃", "👁", "👀", "👤", "👥", "🗣", "👶", "👦", "👧", "👨", "👩", "👱", "👴", "👵", "👲", "👳", "👮", "👷", "💂", "🕵", "🎅", "👼", "👸", "👰", "🚶", "🏃", "💃", "👯", "👫", "👬", "👭", "🙇", "💁", "🙅", "🙆", "🙋", "🙎", "🙍", "💇", "💆", "💑", "👩‍❤️‍👩", "👨‍❤️‍👨", "💏", "👩‍❤️‍💋‍👩", "👨‍❤️‍💋‍👨", "👪", "👨‍👩‍👧", "👨‍👩‍👧‍👦", "👨‍👩‍👦‍👦", "👨‍👩‍👧‍👧", "👩‍👩‍👦", "👩‍👩‍👧", "👩‍👩‍👧‍👦", "👩‍👩‍👦‍👦", "👩‍👩‍👧‍👧", "👨‍👨‍👦", "👨‍👨‍👧", "👨‍👨‍👧‍👦", "👨‍👨‍👦‍👦", "👨‍👨‍👧‍👧", "👚", "👕", "👖", "👔", "👗", "👙", "👘", "💄", "💋", "👣", "👠", "👡", "👢", "👞", "👟", "👒", "🎩", "⛑", "🎓", "👑", "🎒", "👝", "👛", "👜", "💼", "👓", "🕶", "💍", "🌂", "🛑", "🐶", "🐱", "🐭", "🐹", "🐰", "🐻", "🐼", "🐨", "🐯", "🦁", "🐮", "🐷", "🐽", "🐸", "🐙", "🐵", "🙈", "🙉", "🙊", "🐒", "🐔", "🐧", "🐦", "🐤", "🐣", "🐥", "🐺", "🐗", "🐴", "🦄", "🐝", "🐛", "🐌", "🐞", "🐜", "🕷", "🦂", "🦀", "🐍", "🐢", "🐠", "🐟", "🐡", "🐬", "🐳", "🐋", "🐊", "🐆", "🐅", "🐃", "🐂", "🐄", "🐪", "🐫", "🐘", "🐐", "🐏", "🐑", "🐎", "🐖", "🐀", "🐁", "🐓", "🦃", "🕊", "🐕", "🐩", "🐈", "🐇", "🐿", "🐾", "🐉", "🐲", "🌵", "🎄", "🌲", "🌳", "🌴", "🌱", "🌿", "☘", "🍀", "🎍", "🎋", "🍃", "🍂", "🍁", "🌾", "🌺", "🌺", "🌻", "🌹", "🌷", "🌼", "🌸", "💐", "🍄", "🌰", "🎃", "🐚", "🕸", "🌎", "🌍", "🌏", "🌕", "🌖", "🌗", "🌘", "🌑", "🌒", "🌓", "🌔", "🌚", "🌝", "🌛", "🌜", "🌞", "🌙", "⭐️", "🌟", "💫", "✨", "☄️", "☀️", "🌤", "⛅️", "🌥", "🌦", "☁️", "🌧", "⛈", "🌩", "⚡️", "🔥", "💥", "❄️", "🌨", "☃️", "⛄️", "🌬", "💨", "🌪", "🌫", "☂️", "☔️", "💧", "💦", "🌊", "🛑", "🛑", "🍏", "🍎", "🍐", "🍊", "🍋", "🍌", "🍉", "🍇", "🍓", "🍈", "🍒", "🍑", "🍍", "🍅", "🍆", "🌶", "🌽", "🍠", "🍯", "🍞", "🧀", "🍗", "🍖", "🍤", "🍳", "🍔", "🍟", "🌭", "🍕", "🍝", "🌮", "🌯", "🍜", "🍲", "🍥", "🍣", "🍱", "🍛", "🍙", "🍚", "🍘", "🍢", "🍡", "🍧", "🍨", "🍦", "🍰", "🎂", "🍮", "🍬", "🍭", "🍫", "🍿", "🍩", "🍪", "🍺", "🍻", "🍷", "🍸", "🍹", "🍾", "🍶", "🍵", "☕️", "🍼", "🍴", "🍽", "🛑", "🛑", "🛑", "⚽️", "🏀", "🏈", "⚾️", "🎾", "🏐", "🏉", "🎱", "⛳️", "🏌", "🏓", "🏸", "🏒", "🏑", "🏏", "🎿", "⛷", "🏂", "⛸", "🏹", "🎣", "🚣", "🏊", "🏄", "🛀", "⛹", "🏋", "🚴", "🚵", "🏇", "🕴", "🏆", "🎽", "🏅", "🎖", "🎗", "🏵", "🎫", "🎟", "🎭", "🎨", "🎪", "🎤", "🎧", "🎼", "🎹", "🎷", "🎺", "🎸", "🎻", "🎬", "🎮", "👾", "🎯", "🎲", "🎰", "🎳", "🛑", "🛑", "🛑", "🚗", "🚕", "🚙", "🚌", "🚎", "🏎", "🚓", "🚑", "🚒", "🚐", "🚚", "🚛", "🚜", "🏍", "🚲", "🚨", "🚔", "🚍", "🚘", "🚖", "🚡", "🚠", "🚯", "🚃", "🚋", "🚝", "🚄", "🚅", "🚈", "🚞", "🚂", "🚆", "🚇", "🚊", "🚉", "🚁", "🛩", "✈️", "🛫", "🛬", "⛵️", "🛥", "🚤", "⛴", "🛳", "🚀", "🛰", "💺", "⚓️", "🚧", "⛽️", "🚏", "🚦", "🚥", "🏁", "🚢", "🎡", "🎢", "🎠", "🏗", "🌁", "🗼", "🏭", "⛲️", "🎑", "⛰", "🏔", "🗻", "🌋", "🗾", "🏕", "⛺️", "🏞", "🛣", "🛤", "🌅", "🌄", "🏜", "🏖", "🏝", "🌇", "🌆", "🏙", "🌃", "🌉", "🌌", "🌠", "🎇", "🎆", "🌈", "🏘", "🏰", "🏯", "🏟", "🗽", "🏠", "🏡", "🏚", "🏢", "🏬", "🏣", "🏤", "🏥", "🏦", "🏨", "🏪", "🏫", "🏩", "💒", "🏛", "⛪️", "🕌", "🕍", "🕋", "⛩", "⌚️", "📱", "📲", "💻", "⌨️", "🖥", "🖨", "🖱", "🖲", "🕹", "🗜", "💽", "💾", "💿", "📀", "📼", "📷", "📸", "📹", "🎥", "📽", "🎞", "📞", "☎️", "📟", "📠", "📺", "📻", "🎙", "🎚", "🎛", "⏱", "⏲", "⏰", "🕰", "⏳", "⌛️", "📡", "🔋", "🔌", "💡", "🔦", "🕯", "🗑", "🛢", "💸", "💵", "💴", "💶", "💷", "💰", "💳", "💎", "⚖", "🔧", "🔨", "⚒", "🛠", "⛏", "🔩", "⚙", "⛓", "🔫", "💣", "🔪", "🗡", "⚔", "🛡", "🚬", "☠️", "⚰", "⚱", "🏺", "🔮", "📿", "💈", "⚗", "🔭", "🔬", "🕳", "💊", "💉", "🌡", "🏷", "🔖", "🚽", "🚿", "🛁", "🔑", "🗝", "🛋", "🛌", "🛏", "🚪", "🛎", "🖼", "🗺", "⛱", "🗿", "🛍", "🎈", "🎏", "🎀", "🎁", "🎊", "🎉", "🎎", "🎐", "🎌", "🏮", "✉️", "📩", "📨", "📧", "💌", "📮", "📪", "📫", "📬", "📭", "📦", "📯", "📥", "📤", "📜", "📃", "📑", "📊", "📈", "📉", "📄", "📅", "📆", "🗓", "📇", "🗃", "🗳", "🗄", "📋", "🗒", "📁", "📂", "🗂", "🗞", "📰", "📓", "📕", "📗", "📘", "📙", "📔", "📒", "📚", "📖", "🔗", "📎", "🖇", "✂️", "📐", "📏", "📌", "📍", "🚩", "🏳", "🏴", "🔐", "🔒", "🔓", "🔏", "🖊", "🖋", "✒️", "📝", "✏️", "🖍", "🖌", "🔍", "🔎", "🛑", "🛑", "❤️", "💛", "💚", "💙", "💜", "💔", "❣️", "💕", "💞", "💓", "💗", "💖", "💘", "💝", "💟", "☮️", "✝️", "☪️", "🕉", "☸️", "✡️", "🔯", "🕎", "☯️", "☦️", "🛐", "⛎", "♈️", "♉️", "♊️", "♋️", "♌️", "♍️", "♎️", "♏️", "♐️", "♑️", "♒️", "♓️", "🆔", "⚛", "🈳", "🈹", "☢️", "☣️", "📴", "📳", "🈶", "🈚️", "🈸", "🈺", "🈷️", "✴️", "🆚", "🉑", "💮", "🉐", "㊙️", "㊗️", "🈴", "🈵", "🈲", "🅰️", "🅱️", "🆎", "🆑", "🅾️", "🆘", "⛔️", "📛", "🚫", "❌", "⭕️", "💢", "♨️", "🚷", "🚯", "🚳", "🚱", "🔞", "📵", "❗️", "❕", "❓", "❔", "‼️", "⁉️", "💯", "🔅", "🔆", "🔱", "⚜", "〽️", "⚠️", "🚸", "🔰", "♻️", "🈯️", "💹", "❇️", "✳️", "❎", "✅", "💠", "🌀", "➿", "🌐", "Ⓜ️", "🏧", "🈂️", "🛂", "🛃", "🛄", "🛅", "♿️", "🚭", "🚾", "🅿️", "🚰", "🚹", "🚺", "🚼", "🚻", "🚮", "🎦", "📶", "🈁", "🆖", "🆗", "🆙", "🆒", "🆕", "🆓", "0️⃣", "1️⃣", "2️⃣", "3️⃣", "4️⃣", "5️⃣", "6️⃣", "7️⃣", "8️⃣", "9️⃣", "🔟", "🔢", "▶️", "⏸", "⏯", "⏹", "⏺", "⏭", "⏮", "⏩", "⏪", "🔀", "🔁", "🔂", "◀️", "🔼", "🔽", "⏫", "⏬", "➡️", "⬅️", "⬆️", "⬇️", "↗️", "↘️", "↙️", "↖️", "↕️", "↔️", "🔄", "↪️", "↩️", "⤴️", "⤵️", "#️⃣", "*️⃣", "ℹ️", "🔤", "🔡", "🔠", "🔣", "🎵", "🎶", "〰️", "➰", "✔️", "🔃", "➕", "➖", "➗", "✖️", "💲", "💱", "©️", "®️", "™️", "🔚", "🔙", "🔛", "🔝", "🔜", "☑️", "🔘", "⚪️", "⚫️", "🔴", "🔵", "🔸", "🔹", "🔶", "🔷", "🔺", "▪️", "▫️", "⬛️", "⬜️", "🔻", "◼️", "◻️", "◾️", "◽️", "🔲", "🔳", "🔈", "🔉", "🔊", "🔇", "📣", "📢", "🔔", "🔕", "🃏", "🀄️", "♠️", "♣️", "♥️", "♦️", "🎴", "👁‍🗨", "💭", "🗯", "💬", "🕐", "🕑", "🕒", "🕓", "🕔", "🕕", "🕖", "🕗", "🕘", "🕙", "🕚", "🕛", "🕜", "🕝", "🕞", "🕟", "🕠", "🕡", "🕢", "🕣", "🕤", "🕥", "🕦", "🕧", "🛑", "🇦🇫", "🇦🇽", "🇦🇱", "🇩🇿", "🇦🇸", "🇦🇩", "🇦🇴", "🇦🇮", "🇦🇶", "🇦🇬", "🇦🇷", "🇦🇲", "🇦🇼", "🇦🇺", "🇦🇹", "🇦🇿", "🇧🇸", "🇧🇭", "🇧🇩", "🇧🇧", "🇧🇾", "🇧🇪", "🇧🇿", "🇧🇯", "🇧🇲", "🇧🇹", "🇧🇴", "🇧🇶", "🇧🇦", "🇧🇼", "🇧🇷", "🇮🇴", "🇻🇬", "🇧🇳", "🇧🇬", "🇧🇫", "🇧🇮", "🇨🇻", "🇰🇭", "🇨🇲", "🇨🇦", "🇮🇨", "🇰🇾", "🇨🇫", "🇹🇩", "🇨🇱", "🇨🇳", "🇨🇽", "🇨🇨", "🇨🇴", "🇰🇲", "🇨🇬", "🇨🇩", "🇨🇰", "🇨🇷", "🇭🇷", "🇨🇺", "🇨🇼", "🇨🇾", "🇨🇿", "🇩🇰", "🇩🇯", "🇩🇲", "🇩🇴", "🇪🇨", "🇪🇬", "🇸🇻", "🇬🇶", "🇪🇷", "🇪🇪", "🇪🇹", "🇪🇺", "🇫🇰", "🇫🇴", "🇫🇯", "🇫🇮", "🇫🇷", "🇬🇫", "🇵🇫", "🇹🇫", "🇬🇦", "🇬🇲", "🇬🇪", "🇩🇪", "🇬🇭", "🇬🇮", "🇬🇷", "🇬🇱", "🇬🇩", "🇬🇵", "🇬🇺", "🇬🇹", "🇬🇬", "🇬🇳", "🇬🇼", "🇬🇾", "🇭🇹", "🇭🇳", "🇭🇰", "🇭🇺", "🇮🇸", "🇮🇳", "🇮🇩", "🇮🇷", "🇮🇶", "🇮🇪", "🇮🇲", "🇮🇱", "🇮🇹", "🇨🇮", "🇯🇲", "🇯🇵", "🇯🇪", "🇯🇴", "🇰🇿", "🇰🇪", "🇰🇮", "🇽🇰", "🇰🇼", "🇰🇬", "🇱🇦", "🇱🇻", "🇱🇧", "🇱🇸", "🇱🇷", "🇱🇾", "🇱🇮", "🇱🇹", "🇱🇺", "🇲🇴", "🇲🇰", "🇲🇬", "🇲🇼", "🇲🇾", "🇲🇻", "🇲🇱", "🇲🇹", "🇲🇭", "🇲🇶", "🇲🇷", "🇲🇺", "🇾🇹", "🇲🇽", "🇫🇲", "🇲🇩", "🇲🇨", "🇲🇳", "🇲🇪", "🇲🇸", "🇲🇦", "🇲🇿", "🇲🇲", "🇳🇦", "🇳🇷", "🇳🇵", "🇳🇱", "🇳🇨", "🇳🇿", "🇳🇮", "🇳🇪", "🇳🇬", "🇳🇺", "🇳🇫", "🇲🇵", "🇰🇵", "🇳🇴", "🇴🇲", "🇵🇰", "🇵🇼", "🇵🇸", "🇵🇦", "🇵🇬", "🇵🇾", "🇵🇪", "🇵🇭", "🇵🇳", "🇵🇱", "🇵🇹", "🇵🇷", "🇶🇦", "🇷🇪", "🇷🇴", "🇷🇺", "🇷🇼", "🇧🇱", "🇸🇭", "🇰🇳", "🇱🇨", "🇵🇲", "🇻🇨", "🇼🇸", "🇸🇲", "🇸🇹", "🇸🇦", "🇸🇳", "🇷🇸", "🇸🇨", "🇸🇱", "🇸🇬", "🇸🇽", "🇸🇰", "🇸🇮", "🇸🇧", "🇸🇴", "🇿🇦", "🇬🇸", "🇰🇷", "🇸🇸", "🇪🇸", "🇱🇰", "🇸🇩", "🇸🇷", "🇸🇿", "🇸🇪", "🇨🇭", "🇸🇾", "🇹🇼", "🇹🇯", "🇹🇿", "🇹🇭", "🇹🇱", "🇹🇬", "🇹🇰", "🇹🇴", "🇹🇹", "🇹🇳", "🇹🇷", "🇹🇲", "🇹🇨", "🇹🇻", "🇺🇬", "🇺🇦", "🇦🇪", "🇬🇧", "🇺🇸", "🇻🇮", "🇺🇾", "🇺🇿", "🇻🇺", "🇻🇦", "🇻🇪", "🇻🇳", "🇼🇫", "🇪🇭", "🇾🇪", "🇿🇲", "🇿🇼"],
  emoji: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='20px' height='20px' viewBox='0 0 20 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:sketch='http://www.bohemiancoding.com/sketch/ns'> <!-- Generator: Sketch 3.5.2 (25235) - http://www.bohemiancoding.com/sketch --> <title>Emoji</title> <desc>Created with Sketch.</desc> <defs></defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' sketch:type='MSPage'> <g id='Keyboard/Light/Lower' sketch:type='MSLayerGroup' transform='translate(-60.000000, -181.000000)' fill='#030303'> <g id='Bottom-Row' transform='translate(3.000000, 170.000000)' sketch:type='MSShapeGroup'> <path d='M66.75,30.5 C72.1347763,30.5 76.5,26.1347763 76.5,20.75 C76.5,15.3652237 72.1347763,11 66.75,11 C61.3652237,11 57,15.3652237 57,20.75 C57,26.1347763 61.3652237,30.5 66.75,30.5 Z M66.75,29.5 C71.5824916,29.5 75.5,25.5824916 75.5,20.75 C75.5,15.9175084 71.5824916,12 66.75,12 C61.9175084,12 58,15.9175084 58,20.75 C58,25.5824916 61.9175084,29.5 66.75,29.5 Z M63.75,19 C64.4403559,19 65,18.4403559 65,17.75 C65,17.0596441 64.4403559,16.5 63.75,16.5 C63.0596441,16.5 62.5,17.0596441 62.5,17.75 C62.5,18.4403559 63.0596441,19 63.75,19 Z M69.75,19 C70.4403559,19 71,18.4403559 71,17.75 C71,17.0596441 70.4403559,16.5 69.75,16.5 C69.0596441,16.5 68.5,17.0596441 68.5,17.75 C68.5,18.4403559 69.0596441,19 69.75,19 Z M59.8876334,22.1641444 C59.6390316,21.383134 60.065918,20.9785156 60.8530951,21.2329304 C60.8530951,21.2329304 63.0937503,22.2125 66.7500001,22.2125 C70.4062499,22.2125 72.6469047,21.2329304 72.6469047,21.2329304 C73.4287162,20.9662153 73.8812463,21.4044097 73.6058477,22.1807437 C73.6058477,22.1807437 72.6,27.575 66.75,27.575 C60.9,27.575 59.8876334,22.1641444 59.8876334,22.1641444 Z M66.75,23.1875 C64.06875,23.1875 61.8544055,22.4737821 61.8544055,22.4737821 C61.3273019,22.32948 61.1781233,22.5721615 61.5639555,22.957075 C61.5639555,22.957075 62.3625,24.65 66.75,24.65 C71.1375,24.65 71.9508503,22.9438304 71.9508503,22.9438304 C72.3093659,22.5399278 72.1690793,22.3359844 71.6354273,22.476349 C71.6354273,22.476349 69.43125,23.1875 66.75,23.1875 Z' id='Emoji'></path> </g> </g> </g> </svg>",
  "delete": {
    on: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='24px' height='18px' viewBox='0 0 24 18' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:sketch='http://www.bohemiancoding.com/sketch/ns'> <!-- Generator: Sketch 3.5.2 (25235) - http://www.bohemiancoding.com/sketch --> <title>Back</title> <desc>Created with Sketch.</desc> <defs></defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' sketch:type='MSPage'> <g id='Keyboard/Light/Upper' sketch:type='MSLayerGroup' transform='translate(-339.000000, -130.000000)' fill='#030303'> <g id='Third-Row' transform='translate(3.000000, 118.000000)' sketch:type='MSShapeGroup'> <path d='M351.642663,20.9776903 L354.466795,18.1535585 C354.760106,17.8602476 354.763983,17.3814962 354.47109,17.088603 C354.176155,16.7936677 353.7014,16.7976328 353.406135,17.0928983 L350.582003,19.9170301 L347.757871,17.0928983 C347.46456,16.7995874 346.985809,16.7957097 346.692916,17.088603 C346.39798,17.3835382 346.401945,17.858293 346.697211,18.1535585 L349.521343,20.9776903 L346.697211,23.801822 C346.4039,24.0951329 346.400022,24.5738843 346.692916,24.8667776 C346.987851,25.1617128 347.462606,25.1577477 347.757871,24.8624822 L350.582003,22.0383504 L353.406135,24.8624822 C353.699445,25.1557931 354.178197,25.1596708 354.47109,24.8667776 C354.766025,24.5718423 354.76206,24.0970875 354.466795,23.801822 L351.642663,20.9776903 Z M337.059345,22.0593445 C336.474285,21.4742847 336.481351,20.5186489 337.059345,19.9406555 L343.789915,13.2100853 C344.182084,12.817916 344.94892,12.5 345.507484,12.5 L356.002098,12.5 C357.933936,12.5 359.5,14.0688477 359.5,16.0017983 L359.5,25.9982017 C359.5,27.9321915 357.923088,29.5 356.002098,29.5 L345.507484,29.5 C344.951066,29.5 344.177169,29.1771693 343.789915,28.7899148 L337.059345,22.0593445 Z' id='Back'></path> </g> </g> </g> </svg>",
    off: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='24px' height='18px' viewBox='0 0 24 18' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:sketch='http://www.bohemiancoding.com/sketch/ns'> <!-- Generator: Sketch 3.5.2 (25235) - http://www.bohemiancoding.com/sketch --> <title>Back</title> <desc>Created with Sketch.</desc> <defs></defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' sketch:type='MSPage'> <g id='Keyboard/Light/Upper' sketch:type='MSLayerGroup' transform='translate(-339.000000, -130.000000)' fill='#030303'> <g id='Third-Row' transform='translate(3.000000, 118.000000)' sketch:type='MSShapeGroup'> <path d='M337.059345,22.0593445 C336.474285,21.4742847 336.481351,20.5186489 337.059345,19.9406555 L343.789915,13.2100853 C344.182084,12.817916 344.94892,12.5 345.507484,12.5 L356.002098,12.5 C357.933936,12.5 359.5,14.0688477 359.5,16.0017983 L359.5,25.9982017 C359.5,27.9321915 357.923088,29.5 356.002098,29.5 L345.507484,29.5 C344.951066,29.5 344.177169,29.1771693 343.789915,28.7899148 L337.059345,22.0593445 Z M351.642663,20.9776903 L354.466795,18.1535585 C354.760106,17.8602476 354.763983,17.3814962 354.47109,17.088603 C354.176155,16.7936677 353.7014,16.7976328 353.406135,17.0928983 L350.582003,19.9170301 L347.757871,17.0928983 C347.46456,16.7995874 346.985809,16.7957097 346.692916,17.088603 C346.39798,17.3835382 346.401945,17.858293 346.697211,18.1535585 L349.521343,20.9776903 L346.697211,23.801822 C346.4039,24.0951329 346.400022,24.5738843 346.692916,24.8667776 C346.987851,25.1617128 347.462606,25.1577477 347.757871,24.8624822 L350.582003,22.0383504 L353.406135,24.8624822 C353.699445,25.1557931 354.178197,25.1596708 354.47109,24.8667776 C354.766025,24.5718423 354.76206,24.0970875 354.466795,23.801822 L351.642663,20.9776903 Z M338.70972,21.7097195 C338.317752,21.3177522 338.318965,20.6810349 338.70972,20.2902805 L344.643245,14.3567547 C344.840276,14.1597245 345.225639,14 345.493741,14 L355.997239,14 C357.103333,14 357.999999,14.8970601 357.999999,16.0058586 L357.999999,25.9941412 C357.999999,27.1019464 357.106457,27.9999999 355.997239,27.9999999 L345.493741,28 C345.221056,28 344.840643,27.8406431 344.643246,27.6432453 L338.70972,21.7097195 Z' id='Back'></path> </g> </g> </g> </svg>"
  },
  food: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='17px' height='16px' viewBox='0 0 17 17' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:sketch='http://www.bohemiancoding.com/sketch/ns'> <!-- Generator: Sketch 3.5.2 (25235) - http://www.bohemiancoding.com/sketch --> <title>Food</title> <desc>Created with Sketch.</desc> <defs></defs> <g id='iOS-9-Keyboards' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' sketch:type='MSPage'> <g id='iPhone-6-Portrait-Light-Copy' sketch:type='MSArtboardGroup' transform='translate(-148.000000, -637.000000)'> <g id='Keyboards' sketch:type='MSLayerGroup' transform='translate(0.000000, 408.000000)'> <g id='Food' transform='translate(149.500000, 229.500000)' sketch:type='MSShapeGroup'> <path d='M5.5,15.5 L1,15.5 L0,5 L6.5,5 L6.26360933,7.48210202' id='Drink' stroke='#4A5461'></path> <path d='M6.01077545,1.96930098 L6.51571352,5.22270539 L5.71908184,5.67947812 L5.0389009,1.96930098 L4.85557247,1.96930098 L4.85557247,0.96930098 L8.85557247,0.96930098 L8.85557247,1.96930098 L6.01077545,1.96930098 Z' id='Straw' fill='#4A5461' transform='translate(6.855572, 3.324390) rotate(24.000000) translate(-6.855572, -3.324390) '></path> <rect id='Bottom-Bun' stroke='#4A5461' x='3' y='14' width='10.5' height='1.5' rx='1'></rect> <path d='M1.5,12.5024408 C1.5,11.948808 1.94916916,11.5 2.49268723,11.5 L14.0073128,11.5 C14.5555588,11.5 15,11.9469499 15,12.5024408 L15,12.9975592 C15,13.551192 14.5508308,14 14.0073128,14 L2.49268723,14 C1.94444121,14 1.5,13.5530501 1.5,12.9975592 L1.5,12.5024408 Z M3.93300003,11.8392727 C3.41771834,11.6518976 3.44483697,11.5 3.9955775,11.5 L13.0044225,11.5 C13.5542648,11.5 13.5866061,11.6503251 13.067,11.8392727 L8.5,13.5 L3.93300003,11.8392727 Z' id='&quot;Patty&quot;' fill='#4A5461'></path> <path d='M2.5,10.5 L13.5,10.5 L15,11.5 L1,11.5 L2.5,10.5 Z' id='Cheese' fill='#4A5461'></path> <path d='M8.25,10.5 C11.4256373,10.5 14,10.3284271 14,9.5 C14,8.67157288 11.4256373,8 8.25,8 C5.07436269,8 2.5,8.67157288 2.5,9.5 C2.5,10.3284271 5.07436269,10.5 8.25,10.5 Z' id='Top-Bun' stroke='#4A5461' stroke-width='0.75'></path> </g> </g> </g> </g> </svg>",
  flags: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='11px' height='15px' viewBox='0 0 11 15' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:sketch='http://www.bohemiancoding.com/sketch/ns'> <!-- Generator: Sketch 3.5.2 (25235) - http://www.bohemiancoding.com/sketch --> <title>Flag</title> <desc>Created with Sketch.</desc> <defs></defs> <g id='iOS-9-Keyboards' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' sketch:type='MSPage'> <g id='iPhone-6-Portrait-Light-Copy' sketch:type='MSArtboardGroup' transform='translate(-275.000000, -639.000000)'> <g id='Keyboards' sketch:type='MSLayerGroup' transform='translate(0.000000, 408.000000)'> <g id='Flag' transform='translate(275.000000, 231.500000)' sketch:type='MSShapeGroup'> <rect id='Pole' fill='#4A5461' x='0' y='0' width='1' height='14'></rect> <path d='M1,1 C1,1 1.25,2 3.5,2 C5.75,2 6,0.749999998 8,0.75 C10,0.749999998 10,1.5 10,1.5 L10,7.5 C10,7.5 10,6.5 8,6.5 C6,6.5 4.80623911,8 3.5,8 C2.19376089,8 1,7 1,7 L1,1 Z' stroke='#4A5461' stroke-linejoin='round'></path> </g> </g> </g> </g> </svg>",
  frequent: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='17px' height='16px' viewBox='0 0 17 16' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:sketch='http://www.bohemiancoding.com/sketch/ns'> <!-- Generator: Sketch 3.5.2 (25235) - http://www.bohemiancoding.com/sketch --> <title>Recent</title> <desc>Created with Sketch.</desc> <defs></defs> <g id='iOS-9-Keyboards' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' sketch:type='MSPage'> <g id='iPhone-6-Portrait-Light-Copy' sketch:type='MSArtboardGroup' transform='translate(-55.000000, -638.000000)'> <g id='Keyboards' sketch:type='MSLayerGroup' transform='translate(0.000000, 408.000000)'> <g id='Recent' transform='translate(55.500000, 230.000000)' sketch:type='MSShapeGroup'> <circle id='Body' stroke='#4A5461' cx='8' cy='8' r='8'></circle> <path d='M7.5,7.5 L7.5,8.5 L8.5,8.5 L8.5,2 L7.5,2 L7.5,7.5 L4,7.5 L4,8.5 L8.5,8.5 L8.5,7.5 L7.5,7.5 Z' id='Hands' fill='#4A5461'></path> </g> </g> </g> </g> </svg>",
  keyboard: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='32.5px' height='23.5px' viewBox='0 0 65 47' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 3.6.1 (26313) - http://www.bohemiancoding.com/sketch --> <title>Shape</title> <desc>Created with Sketch.</desc> <defs></defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'> <g id='iPad-Portrait' transform='translate(-1436.000000, -1956.000000)' fill='#000000'> <g id='Keyboard-Light' transform='translate(0.000000, 1422.000000)'> <g id='Keyboard-down' transform='translate(1412.000000, 500.000000)'> <path d='M87.001332,34 C88.1051659,34 89,34.8997127 89,35.9932874 L89,61.0067126 C89,62.1075748 88.1058759,63 87.001332,63 L25.998668,63 C24.8948341,63 24,62.1002873 24,61.0067126 L24,35.9932874 C24,34.8924252 24.8941241,34 25.998668,34 L87.001332,34 Z M26,36 L26,61 L87,61 L87,36 L26,36 Z M79,40 L83,40 L83,44 L79,44 L79,40 Z M72,40 L76,40 L76,44 L72,44 L72,40 Z M65,40 L69,40 L69,44 L65,44 L65,40 Z M58,40 L62,40 L62,44 L58,44 L58,40 Z M51,40 L55,40 L55,44 L51,44 L51,40 Z M44,40 L48,40 L48,44 L44,44 L44,40 Z M37,40 L41,40 L41,44 L37,44 L37,40 Z M30,40 L34,40 L34,44 L30,44 L30,40 Z M79,47 L83,47 L83,51 L79,51 L79,47 Z M72,47 L76,47 L76,51 L72,51 L72,47 Z M65,47 L69,47 L69,51 L65,51 L65,47 Z M58,47 L62,47 L62,51 L58,51 L58,47 Z M51,47 L55,47 L55,51 L51,51 L51,47 Z M44,47 L48,47 L48,51 L44,51 L44,47 Z M37,47 L41,47 L41,51 L37,51 L37,47 Z M30,47 L34,47 L34,51 L30,51 L30,47 Z M79,54 L83,54 L83,58 L79,58 L79,54 Z M72,54 L76,54 L76,58 L72,58 L72,54 Z M44,54 L69,54 L69,58 L44,58 L44,54 Z M37,54 L41,54 L41,58 L37,58 L37,54 Z M30,54 L34,54 L34,58 L30,58 L30,54 Z M44.3163498,69.9771047 C43.3684225,70.5420342 43.3338721,71.5096495 44.2378217,72.1373912 L55.3621539,79.8626088 C56.2667113,80.4907726 57.7338965,80.4903505 58.6378461,79.8626088 L69.7621783,72.1373912 C70.6667357,71.5092274 70.648012,70.5205204 69.7115187,69.9234166 L69.9825731,70.0962396 C69.5181333,69.800115 68.7782557,69.8126493 68.3261307,70.1269323 L57.8154999,77.4331263 C57.3651117,77.746202 56.628165,77.7381786 56.1762103,77.4199424 L45.8386137,70.1408977 C45.3836472,69.8205407 44.6375039,69.7857088 44.1566393,70.0722862 L44.3163498,69.9771047 Z' id='Shape'></path> </g> </g> </g> </g> </svg>",
  keyPopUp: {
    light: {
      "iphone-5": "<svg width='55px' height='92px' viewBox='53 316 55 92' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 3.7.2 (28276) - http://www.bohemiancoding.com/sketch --> <desc>Created with Sketch.</desc> <defs> <filter x='-50%' y='-50%' width='200%' height='200%' filterUnits='objectBoundingBox' id='filter-1'> <feOffset dx='0' dy='1' in='SourceAlpha' result='shadowOffsetOuter1'></feOffset> <feGaussianBlur stdDeviation='1.5' in='shadowOffsetOuter1' result='shadowBlurOuter1'></feGaussianBlur> <feColorMatrix values='0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.4 0' type='matrix' in='shadowBlurOuter1' result='shadowMatrixOuter1'></feColorMatrix> <feMerge> <feMergeNode in='shadowMatrixOuter1'></feMergeNode> <feMergeNode in='SourceGraphic'></feMergeNode> </feMerge> </filter> <path d='M1.34173231,40.9391701 C0.517466128,40.20589 0,39.1374251 0,37.9477635 L0,4.00345598 C0,1.78917136 1.79528248,0 4.00987566,0 L44.9901243,0 C47.2125608,0 49,1.7924083 49,4.00345598 L49,37.9477635 C49,38.9124051 48.6592798,39.7963659 48.0916041,40.4868665 C48.0414233,40.9032289 47.7111888,41.4074672 47.0825908,41.95225 C47.0825908,41.95225 38.5299145,49.0643362 38.5299145,51.1526424 C38.5299145,61.6497561 38.1770099,82.0025406 38.1770099,82.0025406 C38.1412304,84.2024354 36.3210284,86 34.1128495,86 L15.3059539,86 C13.10796,86 11.2781884,84.2100789 11.2417936,82.0020993 C11.2417936,82.0020993 10.8888889,61.6470852 10.8888889,51.1486361 C10.8888889,49.0616654 2.34143662,42.238655 2.34143662,42.238655 C1.77827311,41.7641365 1.44881354,41.3204237 1.34173231,40.9391701 Z' id='path-2'></path> <mask id='mask-3' maskContentUnits='userSpaceOnUse' maskUnits='objectBoundingBox' x='0' y='0' width='49' height='86' fill='white'> <use xlink:href='#path-2'></use> </mask> </defs> <g id='Popover' filter='url(#filter-1)' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' transform='translate(56.000000, 318.000000)'> <use id='Rectangle-14' stroke='#B2B4B9' mask='url(#mask-3)' fill='#FCFCFC' xlink:href='#path-2'></use> </g> </svg>",
      "iphone-6s": "<svg width='64px' height='107px' viewBox='24 387 64 107' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 3.7.2 (28276) - http://www.bohemiancoding.com/sketch --> <desc>Created with Sketch.</desc> <defs> <filter x='-50%' y='-50%' width='200%' height='200%' filterUnits='objectBoundingBox' id='filter-1'> <feOffset dx='0' dy='1' in='SourceAlpha' result='shadowOffsetOuter1'></feOffset> <feGaussianBlur stdDeviation='1.5' in='shadowOffsetOuter1' result='shadowBlurOuter1'></feGaussianBlur> <feColorMatrix values='0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.4 0' type='matrix' in='shadowBlurOuter1' result='shadowMatrixOuter1'></feColorMatrix> <feMerge> <feMergeNode in='shadowMatrixOuter1'></feMergeNode> <feMergeNode in='SourceGraphic'></feMergeNode> </feMerge> </filter> <path d='M1.48647646,48.3779947 C0.58026649,47.6464296 0,46.529587 0,45.2781948 L0,3.99009787 C0,1.7825912 1.79509577,0 4.00945862,0 L53.9905414,0 C56.2005746,0 58,1.78642767 58,3.99009787 L58,45.2781948 C58,46.1833004 57.6982258,47.0169733 57.1895097,47.6856325 C57.0396865,48.0212497 56.7360098,48.3972834 56.2718363,48.7950661 C56.2718363,48.7950661 45.6068376,57.6220693 45.6068376,60.0746149 C45.6068376,72.4026205 45.177967,96.9923164 45.177967,96.9923164 C45.1413748,99.2122214 43.3193065,101 41.1090035,101 L17.386723,101 C15.1812722,101 13.354683,99.2055009 13.3177595,96.9918741 C13.3177595,96.9918741 12.8888889,72.3994838 12.8888889,60.0699099 C12.8888889,57.6189326 2.22673437,49.1462936 2.22673437,49.1462936 C1.90524087,48.8788327 1.65911655,48.620733 1.48647646,48.3779947 Z' id='path-2'></path> <mask id='mask-3' maskContentUnits='userSpaceOnUse' maskUnits='objectBoundingBox' x='0' y='0' width='58' height='101' fill='white'> <use xlink:href='#path-2'></use> </mask> </defs> <g id='Popover' filter='url(#filter-1)' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' transform='translate(27.000000, 389.000000)'> <use id='Rectangle-14' stroke='#B2B4B9' mask='url(#mask-3)' fill='#FCFCFC' xlink:href='#path-2'></use> </g> </svg>",
      "iphone-6s-plus": "<svg width='70px' height='119px' viewBox='28 450 70 119' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 3.7.2 (28276) - http://www.bohemiancoding.com/sketch --> <desc>Created with Sketch.</desc> <defs> <filter x='-50%' y='-50%' width='200%' height='200%' filterUnits='objectBoundingBox' id='filter-1'> <feOffset dx='0' dy='1' in='SourceAlpha' result='shadowOffsetOuter1'></feOffset> <feGaussianBlur stdDeviation='1.5' in='shadowOffsetOuter1' result='shadowBlurOuter1'></feGaussianBlur> <feColorMatrix values='0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.4 0' type='matrix' in='shadowBlurOuter1' result='shadowMatrixOuter1'></feColorMatrix> <feMerge> <feMergeNode in='shadowMatrixOuter1'></feMergeNode> <feMergeNode in='SourceGraphic'></feMergeNode> </feMerge> </filter> <path d='M1.95729395,54.0728304 C0.785911132,53.3757699 0,52.098776 0,50.6389022 L0,3.99524419 C0,1.78671428 1.79242202,0 4.00348663,0 L59.9965134,0 C62.2046235,0 64,1.78873175 64,3.99524419 L64,50.6389022 C64,51.9233686 63.3937116,53.0651556 62.451391,53.795754 C62.4427752,53.8032433 62.4341019,53.8107404 62.4253709,53.8182454 C62.4253709,53.8182454 50.3247863,63.8977402 50.3247863,66.6173947 C50.3247863,80.2880544 49.8443049,108.002007 49.8443049,108.002007 C49.8079665,110.210234 47.9874232,112 45.7789089,112 L18.7680997,112 C16.5534397,112 14.7394456,110.20984 14.7027037,108.001566 C14.7027037,108.001566 14.2222222,80.2845761 14.2222222,66.6121773 C14.2222222,63.8942619 2.14081422,54.2321337 2.14081422,54.2321337 C2.07664913,54.1786298 2.01548111,54.1255134 1.95729395,54.0728304 Z' id='path-2'></path> <mask id='mask-3' maskContentUnits='userSpaceOnUse' maskUnits='objectBoundingBox' x='0' y='0' width='64' height='112' fill='white'> <use xlink:href='#path-2'></use> </mask> </defs> <g id='Popover' filter='url(#filter-1)' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' transform='translate(31.000000, 452.000000)'> <use id='Rectangle-14' stroke='#B2B4B9' mask='url(#mask-3)' fill='#FCFCFC' xlink:href='#path-2'></use> </g> </svg>"
    },
    dark: {
      "iphone-5": "<svg width='55px' height='92px' viewBox='53 316 55 92' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 3.7.2 (28276) - http://www.bohemiancoding.com/sketch --> <desc>Created with Sketch.</desc> <defs> <filter x='-50%' y='-50%' width='200%' height='200%' filterUnits='objectBoundingBox' id='filter-1'> <feOffset dx='0' dy='1' in='SourceAlpha' result='shadowOffsetOuter1'></feOffset> <feGaussianBlur stdDeviation='1.5' in='shadowOffsetOuter1' result='shadowBlurOuter1'></feGaussianBlur> <feColorMatrix values='0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.4 0' type='matrix' in='shadowBlurOuter1' result='shadowMatrixOuter1'></feColorMatrix> <feMerge> <feMergeNode in='shadowMatrixOuter1'></feMergeNode> <feMergeNode in='SourceGraphic'></feMergeNode> </feMerge> </filter> <path d='M1.34173231,40.9391701 C0.517466128,40.20589 0,39.1374251 0,37.9477635 L0,4.00345598 C0,1.78917136 1.79528248,0 4.00987566,0 L44.9901243,0 C47.2125608,0 49,1.7924083 49,4.00345598 L49,37.9477635 C49,38.9124051 48.6592798,39.7963659 48.0916041,40.4868665 C48.0414233,40.9032289 47.7111888,41.4074672 47.0825908,41.95225 C47.0825908,41.95225 38.5299145,49.0643362 38.5299145,51.1526424 C38.5299145,61.6497561 38.1770099,82.0025406 38.1770099,82.0025406 C38.1412304,84.2024354 36.3210284,86 34.1128495,86 L15.3059539,86 C13.10796,86 11.2781884,84.2100789 11.2417936,82.0020993 C11.2417936,82.0020993 10.8888889,61.6470852 10.8888889,51.1486361 C10.8888889,49.0616654 2.34143662,42.238655 2.34143662,42.238655 C1.77827311,41.7641365 1.44881354,41.3204237 1.34173231,40.9391701 Z' id='path-2'></path> <mask id='mask-3' maskContentUnits='userSpaceOnUse' maskUnits='objectBoundingBox' x='0' y='0' width='49' height='86' fill='white'> <use xlink:href='#path-2'></use> </mask> </defs> <g id='Popover' filter='url(#filter-1)' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' transform='translate(56.000000, 318.000000)'> <use id='Rectangle-14' stroke='#636363' mask='url(#mask-3)' fill='#636363' xlink:href='#path-2'></use> </g> </svg>",
      "iphone-6s": "<svg width='64px' height='107px' viewBox='24 387 64 107' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 3.7.2 (28276) - http://www.bohemiancoding.com/sketch --> <desc>Created with Sketch.</desc> <defs> <filter x='-50%' y='-50%' width='200%' height='200%' filterUnits='objectBoundingBox' id='filter-1'> <feOffset dx='0' dy='1' in='SourceAlpha' result='shadowOffsetOuter1'></feOffset> <feGaussianBlur stdDeviation='1.5' in='shadowOffsetOuter1' result='shadowBlurOuter1'></feGaussianBlur> <feColorMatrix values='0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.4 0' type='matrix' in='shadowBlurOuter1' result='shadowMatrixOuter1'></feColorMatrix> <feMerge> <feMergeNode in='shadowMatrixOuter1'></feMergeNode> <feMergeNode in='SourceGraphic'></feMergeNode> </feMerge> </filter> <path d='M1.48647646,48.3779947 C0.58026649,47.6464296 0,46.529587 0,45.2781948 L0,3.99009787 C0,1.7825912 1.79509577,0 4.00945862,0 L53.9905414,0 C56.2005746,0 58,1.78642767 58,3.99009787 L58,45.2781948 C58,46.1833004 57.6982258,47.0169733 57.1895097,47.6856325 C57.0396865,48.0212497 56.7360098,48.3972834 56.2718363,48.7950661 C56.2718363,48.7950661 45.6068376,57.6220693 45.6068376,60.0746149 C45.6068376,72.4026205 45.177967,96.9923164 45.177967,96.9923164 C45.1413748,99.2122214 43.3193065,101 41.1090035,101 L17.386723,101 C15.1812722,101 13.354683,99.2055009 13.3177595,96.9918741 C13.3177595,96.9918741 12.8888889,72.3994838 12.8888889,60.0699099 C12.8888889,57.6189326 2.22673437,49.1462936 2.22673437,49.1462936 C1.90524087,48.8788327 1.65911655,48.620733 1.48647646,48.3779947 Z' id='path-2'></path> <mask id='mask-3' maskContentUnits='userSpaceOnUse' maskUnits='objectBoundingBox' x='0' y='0' width='58' height='101' fill='white'> <use xlink:href='#path-2'></use> </mask> </defs> <g id='Popover' filter='url(#filter-1)' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' transform='translate(27.000000, 389.000000)'> <use id='Rectangle-14' stroke='##636363' mask='url(#mask-3)' fill='#636363' xlink:href='#path-2'></use> </g> </svg>",
      "iphone-6s-plus": "<svg width='70px' height='119px' viewBox='28 450 70 119' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 3.7.2 (28276) - http://www.bohemiancoding.com/sketch --> <desc>Created with Sketch.</desc> <defs> <filter x='-50%' y='-50%' width='200%' height='200%' filterUnits='objectBoundingBox' id='filter-1'> <feOffset dx='0' dy='1' in='SourceAlpha' result='shadowOffsetOuter1'></feOffset> <feGaussianBlur stdDeviation='1.5' in='shadowOffsetOuter1' result='shadowBlurOuter1'></feGaussianBlur> <feColorMatrix values='0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.4 0' type='matrix' in='shadowBlurOuter1' result='shadowMatrixOuter1'></feColorMatrix> <feMerge> <feMergeNode in='shadowMatrixOuter1'></feMergeNode> <feMergeNode in='SourceGraphic'></feMergeNode> </feMerge> </filter> <path d='M1.95729395,54.0728304 C0.785911132,53.3757699 0,52.098776 0,50.6389022 L0,3.99524419 C0,1.78671428 1.79242202,0 4.00348663,0 L59.9965134,0 C62.2046235,0 64,1.78873175 64,3.99524419 L64,50.6389022 C64,51.9233686 63.3937116,53.0651556 62.451391,53.795754 C62.4427752,53.8032433 62.4341019,53.8107404 62.4253709,53.8182454 C62.4253709,53.8182454 50.3247863,63.8977402 50.3247863,66.6173947 C50.3247863,80.2880544 49.8443049,108.002007 49.8443049,108.002007 C49.8079665,110.210234 47.9874232,112 45.7789089,112 L18.7680997,112 C16.5534397,112 14.7394456,110.20984 14.7027037,108.001566 C14.7027037,108.001566 14.2222222,80.2845761 14.2222222,66.6121773 C14.2222222,63.8942619 2.14081422,54.2321337 2.14081422,54.2321337 C2.07664913,54.1786298 2.01548111,54.1255134 1.95729395,54.0728304 Z' id='path-2'></path> <mask id='mask-3' maskContentUnits='userSpaceOnUse' maskUnits='objectBoundingBox' x='0' y='0' width='64' height='112' fill='white'> <use xlink:href='#path-2'></use> </mask> </defs> <g id='Popover' filter='url(#filter-1)' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' transform='translate(31.000000, 452.000000)'> <use id='Rectangle-14' stroke='#636363' mask='url(#mask-3)' fill='#636363' xlink:href='#path-2'></use> </g> </svg>"
    }
  },
  objects: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='11px' height='16px' viewBox='0 0 11 16' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:sketch='http://www.bohemiancoding.com/sketch/ns'> <!-- Generator: Sketch 3.5.2 (25235) - http://www.bohemiancoding.com/sketch --> <title>Lightbulb</title> <desc>Created with Sketch.</desc> <defs></defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' sketch:type='MSPage'> <g id='iPhone-6' sketch:type='MSArtboardGroup' transform='translate(-244.000000, -639.000000)' stroke='#4A5361'> <g id='Lightbulb' sketch:type='MSLayerGroup' transform='translate(244.000000, 639.000000)'> <path d='M8,10.4002904 C9.78083795,9.48993491 11,7.63734273 11,5.5 C11,2.46243388 8.53756612,0 5.5,0 C2.46243388,0 0,2.46243388 0,5.5 C0,7.63734273 1.21916205,9.48993491 3,10.4002904 L3,14.0020869 C3,15.1017394 3.89761602,16 5.0048815,16 L5.9951185,16 C7.1061002,16 8,15.1055038 8,14.0020869 L8,10.4002904 Z' id='Oval-17' sketch:type='MSShapeGroup'></path> <rect id='Rectangle-50' sketch:type='MSShapeGroup' x='3' y='12' width='5' height='1'></rect> <rect id='Rectangle-51' sketch:type='MSShapeGroup' x='4' y='13.5' width='1.5' height='1'></rect> <path d='M5,8.5 C5,8.5 3.49999999,7.50000001 4,7 C4.50000001,6.49999999 5,7.66666667 5.5,8 C5.5,8 6.5,6.50000001 7,7 C7.5,7.49999999 6,8.5 6,8.5 L6,11 L5,11 L5,8.5 Z' id='Rectangle-52' sketch:type='MSShapeGroup'></path> </g> </g> </g> </svg>",
  shift: {
    on: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='20px' height='18px' viewBox='0 0 20 17' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:sketch='http://www.bohemiancoding.com/sketch/ns'> <!-- Generator: Sketch 3.5.2 (25235) - http://www.bohemiancoding.com/sketch --> <title>Shift</title> <desc>Created with Sketch.</desc> <defs></defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' sketch:type='MSPage'> <g id='Keyboard/Light/Upper' sketch:type='MSLayerGroup' transform='translate(-14.000000, -130.000000)' fill='#030303'> <g id='Third-Row' transform='translate(3.000000, 118.000000)' sketch:type='MSShapeGroup'> <path d='M21.7052388,13.2052388 C21.3157462,12.8157462 20.6857559,12.8142441 20.2947612,13.2052388 L11.9160767,21.5839233 C11.1339991,22.3660009 11.3982606,23 12.4979131,23 L16.5,23 L16.5,28.009222 C16.5,28.5564136 16.9463114,29 17.4975446,29 L24.5024554,29 C25.053384,29 25.5,28.5490248 25.5,28.009222 L25.5,23 L29.5020869,23 C30.6055038,23 30.866824,22.366824 30.0839233,21.5839233 L21.7052388,13.2052388 Z' id='Shift'></path> </g> </g> </g> </svg>",
    off: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='20px' height='18px' viewBox='0 0 20 19' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:sketch='http://www.bohemiancoding.com/sketch/ns'> <!-- Generator: Sketch 3.5.2 (25235) - http://www.bohemiancoding.com/sketch --> <title>Shift</title> <desc>Created with Sketch.</desc> <defs></defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' sketch:type='MSPage'> <g id='Keyboard/Light/Lower' sketch:type='MSLayerGroup' transform='translate(-14.000000, -129.000000)' fill='#030303'> <g id='Third-Row' transform='translate(3.000000, 118.000000)' sketch:type='MSShapeGroup'> <path d='M21.6719008,12.2325898 C21.301032,11.8279916 20.6946892,11.8334731 20.3288195,12.2325898 L11.6947023,21.6512983 C10.7587441,22.672308 11.1285541,23.5 12.5097751,23.5 L15.9999999,23.5000002 L15.9999999,28.0014241 C15.9999999,28.8290648 16.6716559,29.5000001 17.497101,29.5000001 L24.5028992,29.5000001 C25.3297253,29.5000001 26.0000003,28.8349703 26.0000003,28.0014241 L26.0000003,23.5000001 L29.4902251,23.5000002 C30.8763357,23.5000002 31.2439521,22.6751916 30.3054161,21.6512985 L21.6719008,12.2325898 Z M21.341748,14.3645316 C21.1530056,14.1632064 20.8433515,14.1670914 20.6582514,14.3645316 L13.5,21.9999998 L17.5000001,21.9999999 L17.5000002,27.5089956 C17.5000002,27.7801703 17.7329027,28.0000008 18.0034229,28.0000008 L23.996577,28.0000008 C24.2746097,28.0000008 24.4999997,27.7721203 24.4999997,27.5089956 L24.4999997,21.9999999 L28.5,21.9999999 L21.341748,14.3645316 Z' id='Shift'></path> </g> </g> </g> </svg>"
  },
  messages_app: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='60px' height='60px' viewBox='0 0 60 60' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 39.1 (31720) - http://www.bohemiancoding.com/sketch --> <title>Messages Copy</title> <desc>Created with Sketch.</desc> <defs> <linearGradient x1='50%' y1='0%' x2='50%' y2='100%' id='linearGradient-1'> <stop stop-color='#66FD7F' offset='0%'></stop> <stop stop-color='#09B826' offset='100%'></stop> </linearGradient> </defs> <g id='iOS-Kit' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'> <g id='Home-Screen' transform='translate(-1452.000000, -853.000000)'> <g id='Home-Screen-•-iPhone-6s-Plus' transform='translate(1417.000000, 812.000000)'> <g id='Messages-Copy' transform='translate(35.000000, 41.000000)'> <rect id='BG' fill='url(#linearGradient-1)' x='0' y='0' width='60' height='60' rx='14'></rect> <path d='M19.4223976,44.3088006 C13.1664228,41.1348949 9,35.4655421 9,29 C9,19.0588745 18.8497355,11 31,11 C43.1502645,11 53,19.0588745 53,29 C53,38.9411255 43.1502645,47 31,47 C28.6994588,47 26.4813914,46.7110897 24.3970409,46.1751953 C23.9442653,46.8838143 21.9065377,49.5 16.5,49.5 C15.6150187,49.5 17.1834749,48.5915921 18,47.5 C18.7894286,46.4446326 19.2505625,44.9480362 19.4223976,44.3088006 Z' id='Bubble' fill='#FFFFFF'></path> </g> </g> </g> </g> </svg>",
  calendar_app: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='60px' height='60px' viewBox='0 0 60 60' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 39.1 (31720) - http://www.bohemiancoding.com/sketch --> <title>Calendar</title> <desc>Created with Sketch.</desc> <defs></defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'> <g id='Home-Screen-•-iPhone-SE' transform='translate(-92.000000, -27.000000)'> <g id='Home-Screen-•-iPhone-6s-Copy' transform='translate(0.000000, 27.000000)'> <g id='Calendar' transform='translate(92.000000, 0.000000)'> <rect id='BG' fill='#FFFFFF' x='0' y='0' width='60' height='60' rx='14'></rect> <text id='25' font-family='SFUIDisplay-Ultralight, SF UI Display' font-size='40' font-weight='200' letter-spacing='0.379999995' fill='#000000'> <tspan x='7.10828125' y='49'>25</tspan> </text> <text id='Monday' font-family='SFUIDisplay-Medium, SF UI Display' font-size='11' font-weight='400' letter-spacing='0.379999995' fill='#FF3B30'> <tspan x='9.02992189' y='15'>Monday</tspan> </text> </g> </g> </g> </g> </svg>",
  photos_app: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='60px' height='60px' viewBox='0 0 60 60' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 39.1 (31720) - http://www.bohemiancoding.com/sketch --> <title>Photos</title> <desc>Created with Sketch.</desc> <defs></defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'> <g id='Home-Screen-•-iPhone-SE' transform='translate(-168.000000, -27.000000)'> <g id='Home-Screen-•-iPhone-6s-Copy' transform='translate(0.000000, 27.000000)'> <g id='Photos' transform='translate(168.000000, 0.000000)'> <rect id='BG' fill='#FFFFFF' x='0' y='0' width='60' height='60' rx='14'></rect> <rect id='Pedal' fill='#F26E64' style='mix-blend-mode: multiply;' transform='translate(20.142136, 20.142136) rotate(45.000000) translate(-20.142136, -20.142136) ' x='8.14213562' y='12.1421356' width='24' height='16' rx='8'></rect> <rect id='Pedal' fill='#F0E22A' style='mix-blend-mode: multiply;' transform='translate(39.142136, 19.142136) rotate(135.000000) translate(-39.142136, -19.142136) ' x='27.1421356' y='11.1421356' width='24' height='16' rx='8'></rect> <rect id='Pedal' fill='#D288B1' style='mix-blend-mode: multiply;' x='4' y='22' width='24' height='16' rx='8'></rect> <rect id='Pedal' fill='#FBAD31' style='mix-blend-mode: multiply;' transform='translate(30.000000, 16.000000) rotate(90.000000) translate(-30.000000, -16.000000) ' x='18' y='8' width='24' height='16' rx='8'></rect> <rect id='Pedal' fill='#A58EC2' style='mix-blend-mode: multiply;' transform='translate(20.142136, 40.142136) scale(1, -1) rotate(45.000000) translate(-20.142136, -40.142136) ' x='8.14213562' y='32.1421356' width='24' height='16' rx='8'></rect> <rect id='Pedal' fill='#6CC199' style='mix-blend-mode: multiply;' transform='translate(40.142136, 40.142136) scale(1, -1) rotate(135.000000) translate(-40.142136, -40.142136) ' x='28.1421356' y='32.1421356' width='24' height='16' rx='8'></rect> <rect id='Pedal' fill='#77AEDD' style='mix-blend-mode: multiply;' transform='translate(30.000000, 44.000000) scale(1, -1) rotate(90.000000) translate(-30.000000, -44.000000) ' x='18' y='36' width='24' height='16' rx='8'></rect> <rect id='Pedal' fill='#B5D655' style='mix-blend-mode: multiply;' transform='translate(44.000000, 30.000000) rotate(180.000000) translate(-44.000000, -30.000000) ' x='32' y='22' width='24' height='16' rx='8'></rect> </g> </g> </g> </g> </svg>",
  camera_app: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='60px' height='60px' viewBox='0 0 60 60' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 39.1 (31720) - http://www.bohemiancoding.com/sketch --> <title>Camera</title> <desc>Created with Sketch.</desc> <defs> <linearGradient x1='50%' y1='0%' x2='50%' y2='100%' id='linearGradient-1'> <stop stop-color='#DBDDDE' offset='0%'></stop> <stop stop-color='#898B91' offset='100%'></stop> </linearGradient> <linearGradient x1='50%' y1='0%' x2='50%' y2='100%' id='linearGradient-2'> <stop stop-color='#474747' offset='0%'></stop> <stop stop-color='#2B2B2B' offset='100%'></stop> </linearGradient> <path d='M9,20 L51,20 L51,42 L9,42 L9,20 Z M9,42.9975722 C9,44.3795877 10.1199653,45.5 11.5015125,45.5 L48.4984875,45.5 C49.8766015,45.5 51,44.3796249 51,42.9975722 L51,42.5 L9,42.5 L9,42.9975722 Z M9,19.5 L9,19.0024278 C9,17.6203751 10.1233985,16.5 11.5015125,16.5 L17.5304496,16.5 C18.4572011,16.4180186 19.3218208,16.2416313 19.9205322,15.8902588 C21.8326425,14.7680772 21.9641113,11.5 24.996205,11.5 L30.026083,11.5 L35.0559611,11.5 C38.0880548,11.5 38.2195236,14.7680772 40.1316339,15.8902588 C40.7303453,16.2416313 41.594965,16.4180186 42.5217165,16.5 L48.4984875,16.5 C49.8800347,16.5 51,17.6204123 51,19.0024278 L51,19.5 L9,19.5 L9,19.5 Z M39.25,31 C39.25,25.8913661 35.1086339,21.75 30,21.75 C24.8913661,21.75 20.75,25.8913661 20.75,31 C20.75,36.1086339 24.8913661,40.25 30,40.25 C35.1086339,40.25 39.25,36.1086339 39.25,31 L39.25,31 Z M22.25,31 C22.25,26.7197932 25.7197932,23.25 30,23.25 C34.2802068,23.25 37.75,26.7197932 37.75,31 C37.75,35.2802068 34.2802068,38.75 30,38.75 C25.7197932,38.75 22.25,35.2802068 22.25,31 L22.25,31 Z' id='path-3'></path> <filter x='-50%' y='-50%' width='200%' height='200%' filterUnits='objectBoundingBox' id='filter-4'> <feOffset dx='0' dy='1' in='SourceAlpha' result='shadowOffsetOuter1'></feOffset> <feColorMatrix values='0 0 0 0 1   0 0 0 0 1   0 0 0 0 1  0 0 0 0.5 0' type='matrix' in='shadowOffsetOuter1'></feColorMatrix> </filter> <filter x='-50%' y='-50%' width='200%' height='200%' filterUnits='objectBoundingBox' id='filter-5'> <feGaussianBlur stdDeviation='1' in='SourceAlpha' result='shadowBlurInner1'></feGaussianBlur> <feOffset dx='0' dy='1' in='shadowBlurInner1' result='shadowOffsetInner1'></feOffset> <feComposite in='shadowOffsetInner1' in2='SourceAlpha' operator='arithmetic' k2='-1' k3='1' result='shadowInnerInner1'></feComposite> <feColorMatrix values='0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.3 0' type='matrix' in='shadowInnerInner1' result='shadowMatrixInner1'></feColorMatrix> <feGaussianBlur stdDeviation='0.5' in='SourceAlpha' result='shadowBlurInner2'></feGaussianBlur> <feOffset dx='0' dy='1' in='shadowBlurInner2' result='shadowOffsetInner2'></feOffset> <feComposite in='shadowOffsetInner2' in2='SourceAlpha' operator='arithmetic' k2='-1' k3='1' result='shadowInnerInner2'></feComposite> <feColorMatrix values='0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.3 0' type='matrix' in='shadowInnerInner2' result='shadowMatrixInner2'></feColorMatrix> <feGaussianBlur stdDeviation='0.5' in='SourceAlpha' result='shadowBlurInner3'></feGaussianBlur> <feOffset dx='0' dy='0' in='shadowBlurInner3' result='shadowOffsetInner3'></feOffset> <feComposite in='shadowOffsetInner3' in2='SourceAlpha' operator='arithmetic' k2='-1' k3='1' result='shadowInnerInner3'></feComposite> <feColorMatrix values='0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.3 0' type='matrix' in='shadowInnerInner3' result='shadowMatrixInner3'></feColorMatrix> <feGaussianBlur stdDeviation='0.5' in='SourceAlpha' result='shadowBlurInner4'></feGaussianBlur> <feOffset dx='-0' dy='0' in='shadowBlurInner4' result='shadowOffsetInner4'></feOffset> <feComposite in='shadowOffsetInner4' in2='SourceAlpha' operator='arithmetic' k2='-1' k3='1' result='shadowInnerInner4'></feComposite> <feColorMatrix values='0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.3 0' type='matrix' in='shadowInnerInner4' result='shadowMatrixInner4'></feColorMatrix> <feMerge> <feMergeNode in='shadowMatrixInner1'></feMergeNode> <feMergeNode in='shadowMatrixInner2'></feMergeNode> <feMergeNode in='shadowMatrixInner3'></feMergeNode> <feMergeNode in='shadowMatrixInner4'></feMergeNode> </feMerge> </filter> <path d='M13,15.25 C13,14.8357864 13.3355947,14.5 13.7508378,14.5 L15.7491622,14.5 C16.1638385,14.5 16.5,14.8328986 16.5,15.25 L16.5,16 L13,16 L13,15.25 L13,15.25 Z' id='path-6'></path> <filter x='-50%' y='-50%' width='200%' height='200%' filterUnits='objectBoundingBox' id='filter-7'> <feOffset dx='0' dy='0' in='SourceAlpha' result='shadowOffsetOuter1'></feOffset> <feColorMatrix values='0 0 0 0 1   0 0 0 0 1   0 0 0 0 1  0 0 0 0.5 0' type='matrix' in='shadowOffsetOuter1'></feColorMatrix> </filter> <filter x='-50%' y='-50%' width='200%' height='200%' filterUnits='objectBoundingBox' id='filter-8'> <feOffset dx='0' dy='1' in='SourceAlpha' result='shadowOffsetInner1'></feOffset> <feComposite in='shadowOffsetInner1' in2='SourceAlpha' operator='arithmetic' k2='-1' k3='1' result='shadowInnerInner1'></feComposite> <feColorMatrix values='0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.5 0' type='matrix' in='shadowInnerInner1'></feColorMatrix> </filter> <circle id='path-9' cx='39.5' cy='23' r='1'></circle> <filter x='-50%' y='-50%' width='200%' height='200%' filterUnits='objectBoundingBox' id='filter-10'> <feOffset dx='0' dy='0' in='SourceAlpha' result='shadowOffsetOuter1'></feOffset> <feColorMatrix values='0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.5 0' type='matrix' in='shadowOffsetOuter1'></feColorMatrix> </filter> <filter x='-50%' y='-50%' width='200%' height='200%' filterUnits='objectBoundingBox' id='filter-11'> <feGaussianBlur stdDeviation='0.5' in='SourceAlpha' result='shadowBlurInner1'></feGaussianBlur> <feOffset dx='0' dy='0' in='shadowBlurInner1' result='shadowOffsetInner1'></feOffset> <feComposite in='shadowOffsetInner1' in2='SourceAlpha' operator='arithmetic' k2='-1' k3='1' result='shadowInnerInner1'></feComposite> <feColorMatrix values='0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.3 0' type='matrix' in='shadowInnerInner1'></feColorMatrix> </filter> </defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'> <g id='Home-Screen-•-iPhone-SE' transform='translate(-244.000000, -27.000000)'> <g id='Home-Screen-•-iPhone-6s-Copy' transform='translate(0.000000, 27.000000)'> <g id='Camera' transform='translate(244.000000, 0.000000)'> <g id='icon'> <path d='M39.0815,0 C45.105,0 48.116,0 51.3585,1.025 C54.8985,2.3135 57.6865,5.1015 58.975,8.6415 C60,11.8835 60,14.8955 60,20.9185 L60,39.0815 C60,45.105 60,48.116 58.975,51.3585 C57.6865,54.8985 54.8985,57.6865 51.3585,58.9745 C48.116,60 45.105,60 39.0815,60 L20.9185,60 C14.895,60 11.8835,60 8.6415,58.9745 C5.1015,57.6865 2.3135,54.8985 1.025,51.3585 C0,48.116 0,45.105 0,39.0815 L0,20.9185 C0,14.8955 0,11.8835 1.025,8.6415 C2.3135,5.1015 5.1015,2.3135 8.6415,1.025 C11.8835,0 14.895,0 20.9185,0 L39.0815,0 Z' id='Icon' fill='url(#linearGradient-1)'></path> <g id='Camera'> <use fill='black' fill-opacity='1' filter='url(#filter-4)' xlink:href='#path-3'></use> <use fill='url(#linearGradient-2)' fill-rule='evenodd' xlink:href='#path-3'></use> <use fill='black' fill-opacity='1' filter='url(#filter-5)' xlink:href='#path-3'></use> </g> <g id='Path'> <use fill='black' fill-opacity='1' filter='url(#filter-7)' xlink:href='#path-6'></use> <use fill='url(#linearGradient-2)' fill-rule='evenodd' xlink:href='#path-6'></use> <use fill='black' fill-opacity='1' filter='url(#filter-8)' xlink:href='#path-6'></use> </g> <g id='Oval-16'> <use fill='black' fill-opacity='1' filter='url(#filter-10)' xlink:href='#path-9'></use> <use fill='#FFC209' fill-rule='evenodd' xlink:href='#path-9'></use> <use fill='black' fill-opacity='1' filter='url(#filter-11)' xlink:href='#path-9'></use> </g> </g> </g> </g> </g> </g> </svg>",
  weather_app: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='60px' height='60px' viewBox='0 0 60 60' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 39.1 (31720) - http://www.bohemiancoding.com/sketch --> <title>Wealther</title> <desc>Created with Sketch.</desc> <defs> <linearGradient x1='50%' y1='0%' x2='50%' y2='100%' id='linearGradient-1'> <stop stop-color='#1D62F0' offset='0%'></stop> <stop stop-color='#19D5FD' offset='100%'></stop> </linearGradient> </defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'> <g id='Home-Screen-•-iPhone-SE' transform='translate(-16.000000, -115.000000)'> <g id='Home-Screen-•-iPhone-6s-Copy' transform='translate(0.000000, 27.000000)'> <g id='Wealther' transform='translate(16.000000, 88.000000)'> <path d='M39.0815,0 C45.105,0 48.116,0 51.3585,1.025 C54.8985,2.3135 57.6865,5.1015 58.975,8.6415 C60,11.8835 60,14.8955 60,20.9185 L60,39.0815 C60,45.105 60,48.116 58.975,51.3585 C57.6865,54.8985 54.8985,57.6865 51.3585,58.9745 C48.116,60 45.105,60 39.0815,60 L20.9185,60 C14.895,60 11.8835,60 8.6415,58.9745 C5.1015,57.6865 2.3135,54.8985 1.025,51.3585 C0,48.116 0,45.105 0,39.0815 L0,20.9185 C0,14.8955 0,11.8835 1.025,8.6415 C2.3135,5.1015 5.1015,2.3135 8.6415,1.025 C11.8835,0 14.895,0 20.9185,0 L39.0815,0 Z' id='BG' fill='url(#linearGradient-1)'></path> <circle id='Sun' fill='#FFD800' cx='19.75' cy='24.25' r='11.25'></circle> <path d='M41.5,43.996687 C46.4930625,43.8642035 50.5,39.775037 50.5,34.75 C50.5,29.6413661 46.3586339,25.5 41.25,25.5 C41.0574549,25.5 40.8662838,25.505883 40.6766567,25.5174791 C39.0043353,21.4018889 34.9660539,18.5 30.25,18.5 C24.0367966,18.5 19,23.5367966 19,29.75 C19,30.0391915 19.0109117,30.3258344 19.032346,30.6095395 C15.8856244,31.1828157 13.5,33.9378116 13.5,37.25 C13.5,40.8942242 16.3879002,43.8639431 20,43.9954562 L20,44 L41.5,44 L41.5,43.996687 L41.5,43.996687 Z' id='Cloud' fill='#FFFFFF' opacity='0.900536381'></path> </g> </g> </g> </g> </svg>",
  clock_app: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='60px' height='60px' viewBox='0 0 60 60' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 39.1 (31720) - http://www.bohemiancoding.com/sketch --> <title>Clock</title> <desc>Created with Sketch.</desc> <defs> <linearGradient x1='50%' y1='0%' x2='50%' y2='100%' id='linearGradient-1'> <stop stop-color='#F1F1F1' offset='0%'></stop> <stop stop-color='#EEEEEE' offset='100%'></stop> </linearGradient> </defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'> <g id='Home-Screen-•-iPhone-SE' transform='translate(-92.000000, -115.000000)'> <g id='Home-Screen-•-iPhone-6s-Copy' transform='translate(0.000000, 27.000000)'> <g id='Clock' transform='translate(92.000000, 88.000000)'> <path d='M39.0815,0 C45.105,0 48.116,0 51.3585,1.025 C54.8985,2.3135 57.6865,5.1015 58.975,8.6415 C60,11.8835 60,14.8955 60,20.9185 L60,39.0815 C60,45.105 60,48.116 58.975,51.3585 C57.6865,54.8985 54.8985,57.6865 51.3585,58.9745 C48.116,60 45.105,60 39.0815,60 L20.9185,60 C14.895,60 11.8835,60 8.6415,58.9745 C5.1015,57.6865 2.3135,54.8985 1.025,51.3585 C0,48.116 0,45.105 0,39.0815 L0,20.9185 C0,14.8955 0,11.8835 1.025,8.6415 C2.3135,5.1015 5.1015,2.3135 8.6415,1.025 C11.8835,0 14.895,0 20.9185,0 L39.0815,0 Z' id='Icon' fill='#1E1E1F'></path> <circle id='Oval-12' fill='url(#linearGradient-1)' cx='30' cy='30' r='26'></circle> <g id='Digits' transform='translate(8.000000, 7.000000)' fill='#616161'> <path d='M32.468,8 L32.468,3.746 L32.078,3.746 C32.0499999,3.9060008 31.9980004,4.03799948 31.922,4.142 C31.8459996,4.24600052 31.7530005,4.3279997 31.643,4.388 C31.5329994,4.4480003 31.4100007,4.48899989 31.274,4.511 C31.1379993,4.53300011 30.9980007,4.544 30.854,4.544 L30.854,4.952 L31.958,4.952 L31.958,8 L32.468,8 Z' id='1'></path> <path d='M38.096,12.752 L38.606,12.752 C38.602,12.6239994 38.6149999,12.4970006 38.645,12.371 C38.6750002,12.2449994 38.7239997,12.1320005 38.792,12.032 C38.8600003,11.9319995 38.9469995,11.8510003 39.053,11.789 C39.1590005,11.7269997 39.2859993,11.696 39.434,11.696 C39.5460006,11.696 39.6519995,11.7139998 39.752,11.75 C39.8520005,11.7860002 39.9389996,11.8379997 40.013,11.906 C40.0870004,11.9740003 40.1459998,12.0549995 40.19,12.149 C40.2340002,12.2430005 40.256,12.3479994 40.256,12.464 C40.256,12.6120007 40.2330002,12.7419994 40.187,12.854 C40.1409998,12.9660006 40.0730005,13.0699995 39.983,13.166 C39.8929996,13.2620005 39.7800007,13.3569995 39.644,13.451 C39.5079993,13.5450005 39.3500009,13.6479994 39.17,13.76 C39.0219993,13.8480004 38.8800007,13.9419995 38.744,14.042 C38.6079993,14.1420005 38.4860005,14.2579993 38.378,14.39 C38.2699995,14.5220007 38.1810004,14.6769991 38.111,14.855 C38.0409997,15.0330009 37.9960001,15.2479987 37.976,15.5 L40.754,15.5 L40.754,15.05 L38.57,15.05 C38.5940001,14.9179993 38.6449996,14.8010005 38.723,14.699 C38.8010004,14.5969995 38.8949995,14.5020004 39.005,14.414 C39.1150006,14.3259996 39.2359993,14.2430004 39.368,14.165 C39.5000007,14.0869996 39.6319993,14.0080004 39.764,13.928 C39.8960007,13.8439996 40.0239994,13.7560005 40.148,13.664 C40.2720006,13.5719995 40.3819995,13.4690006 40.478,13.355 C40.5740005,13.2409994 40.6509997,13.1120007 40.709,12.968 C40.7670003,12.8239993 40.796,12.6580009 40.796,12.47 C40.796,12.269999 40.7610004,12.0940008 40.691,11.942 C40.6209997,11.7899992 40.5260006,11.6630005 40.406,11.561 C40.2859994,11.4589995 40.1450008,11.3810003 39.983,11.327 C39.8209992,11.2729997 39.6480009,11.246 39.464,11.246 C39.2399989,11.246 39.0400009,11.2839996 38.864,11.36 C38.6879991,11.4360004 38.5410006,11.5409993 38.423,11.675 C38.3049994,11.8090007 38.2180003,11.9679991 38.162,12.152 C38.1059997,12.3360009 38.0839999,12.5359989 38.096,12.752 L38.096,12.752 Z' id='2'></path> <path d='M42.14,22.57 L42.14,23.002 C42.2360005,22.9899999 42.3379995,22.984 42.446,22.984 C42.5740006,22.984 42.6929995,23.0009998 42.803,23.035 C42.9130006,23.0690002 43.0079996,23.1209997 43.088,23.191 C43.1680004,23.2610004 43.2319998,23.3469995 43.28,23.449 C43.3280002,23.5510005 43.352,23.6679993 43.352,23.8 C43.352,23.9280006 43.3270003,24.0429995 43.277,24.145 C43.2269998,24.2470005 43.1600004,24.3329997 43.076,24.403 C42.9919996,24.4730004 42.8940006,24.5269998 42.782,24.565 C42.6699994,24.6030002 42.5520006,24.622 42.428,24.622 C42.1359985,24.622 41.9140008,24.5350009 41.762,24.361 C41.6099992,24.1869991 41.53,23.9620014 41.522,23.686 L41.012,23.686 C41.008,23.9060011 41.0389997,24.1019991 41.105,24.274 C41.1710003,24.4460009 41.2659994,24.5909994 41.39,24.709 C41.5140006,24.8270006 41.6639991,24.9159997 41.84,24.976 C42.0160009,25.0360003 42.2119989,25.066 42.428,25.066 C42.628001,25.066 42.8169991,25.0390003 42.995,24.985 C43.1730009,24.9309997 43.3279993,24.8500005 43.46,24.742 C43.5920007,24.6339995 43.6969996,24.4990008 43.775,24.337 C43.8530004,24.1749992 43.892,23.9880011 43.892,23.776 C43.892,23.5199987 43.8290006,23.2980009 43.703,23.11 C43.5769994,22.9219991 43.3840013,22.8000003 43.124,22.744 L43.124,22.732 C43.2920008,22.6559996 43.4319994,22.5440007 43.544,22.396 C43.6560006,22.2479993 43.712,22.078001 43.712,21.886 C43.712,21.689999 43.6790003,21.5200007 43.613,21.376 C43.5469997,21.2319993 43.4560006,21.1140005 43.34,21.022 C43.2239994,20.9299995 43.0870008,20.8610002 42.929,20.815 C42.7709992,20.7689998 42.6000009,20.746 42.416,20.746 C42.2039989,20.746 42.0170008,20.7799997 41.855,20.848 C41.6929992,20.9160003 41.5580005,21.0099994 41.45,21.13 C41.3419995,21.2500006 41.2590003,21.3939992 41.201,21.562 C41.1429997,21.7300008 41.11,21.915999 41.102,22.12 L41.612,22.12 C41.612,21.9959994 41.6279998,21.8780006 41.66,21.766 C41.6920002,21.6539994 41.7409997,21.5560004 41.807,21.472 C41.8730003,21.3879996 41.9569995,21.3210003 42.059,21.271 C42.1610005,21.2209998 42.2799993,21.196 42.416,21.196 C42.6320011,21.196 42.8119993,21.2529994 42.956,21.367 C43.1000007,21.4810006 43.172,21.6519989 43.172,21.88 C43.172,21.9920006 43.1500002,22.0919996 43.106,22.18 C43.0619998,22.2680004 43.0030004,22.3409997 42.929,22.399 C42.8549996,22.4570003 42.7690005,22.5009999 42.671,22.531 C42.5729995,22.5610002 42.4700005,22.576 42.362,22.576 L42.254,22.576 L42.194,22.576 C42.1779999,22.576 42.1600001,22.574 42.14,22.57 L42.14,22.57 Z' id='3'></path> <path d='M40.366,34.054 L38.938,34.054 L40.354,31.972 L40.366,31.972 L40.366,34.054 Z M40.846,34.054 L40.846,31.246 L40.438,31.246 L38.5,34.012 L38.5,34.504 L40.366,34.504 L40.366,35.5 L40.846,35.5 L40.846,34.504 L41.422,34.504 L41.422,34.054 L40.846,34.054 Z' id='4'></path> <path d='M33.652,38.768 L33.652,38.318 L31.552,38.318 L31.156,40.526 L31.594,40.55 C31.6940005,40.4299994 31.8089993,40.3330004 31.939,40.259 C32.0690006,40.1849996 32.2179992,40.148 32.386,40.148 C32.5300007,40.148 32.6609994,40.1719998 32.779,40.22 C32.8970006,40.2680002 32.9979996,40.3349996 33.082,40.421 C33.1660004,40.5070004 33.2309998,40.6089994 33.277,40.727 C33.3230002,40.8450006 33.346,40.9739993 33.346,41.114 C33.346,41.2820008 33.3220002,41.4289994 33.274,41.555 C33.2259998,41.6810006 33.1610004,41.7859996 33.079,41.87 C32.9969996,41.9540004 32.9010005,42.0169998 32.791,42.059 C32.6809994,42.1010002 32.5660006,42.122 32.446,42.122 C32.3179994,42.122 32.2010005,42.1030002 32.095,42.065 C31.9889995,42.0269998 31.8970004,41.9730004 31.819,41.903 C31.7409996,41.8329997 31.6790002,41.7510005 31.633,41.657 C31.5869998,41.5629995 31.56,41.4620005 31.552,41.354 L31.042,41.354 C31.046,41.546001 31.0839996,41.7179992 31.156,41.87 C31.2280004,42.0220008 31.3259994,42.1489995 31.45,42.251 C31.5740006,42.3530005 31.7169992,42.4309997 31.879,42.485 C32.0410008,42.5390003 32.2139991,42.566 32.398,42.566 C32.6460012,42.566 32.8629991,42.5270004 33.049,42.449 C33.2350009,42.3709996 33.3899994,42.2660007 33.514,42.134 C33.6380006,42.0019993 33.7309997,41.8510009 33.793,41.681 C33.8550003,41.5109992 33.886,41.3360009 33.886,41.156 C33.886,40.9119988 33.8500004,40.6990009 33.778,40.517 C33.7059996,40.3349991 33.6080006,40.1830006 33.484,40.061 C33.3599994,39.9389994 33.2140008,39.8480003 33.046,39.788 C32.8779992,39.7279997 32.7000009,39.698 32.512,39.698 C32.3679993,39.698 32.2230007,39.7229998 32.077,39.773 C31.9309993,39.8230003 31.8120005,39.8999995 31.72,40.004 L31.708,39.992 L31.936,38.768 L33.652,38.768 Z' id='5'></path> <path d='M22.816,42.332 L23.326,42.332 C23.2939998,41.9799982 23.174001,41.7110009 22.966,41.525 C22.757999,41.3389991 22.4780018,41.246 22.126,41.246 C21.8219985,41.246 21.570001,41.3099994 21.37,41.438 C21.169999,41.5660006 21.0100006,41.7359989 20.89,41.948 C20.7699994,42.1600011 20.6850002,42.4029986 20.635,42.677 C20.5849997,42.9510014 20.56,43.2339985 20.56,43.526 C20.56,43.7500011 20.5769998,43.9819988 20.611,44.222 C20.6450002,44.4620012 20.7139995,44.681999 20.818,44.882 C20.9220005,45.082001 21.069999,45.2459994 21.262,45.374 C21.454001,45.5020006 21.7079984,45.566 22.024,45.566 C22.2920013,45.566 22.5169991,45.5210005 22.699,45.431 C22.8810009,45.3409996 23.0269994,45.2270007 23.137,45.089 C23.2470005,44.9509993 23.3259998,44.7980008 23.374,44.63 C23.4220002,44.4619992 23.446,44.3000008 23.446,44.144 C23.446,43.947999 23.4160003,43.7660008 23.356,43.598 C23.2959997,43.4299992 23.2110005,43.2840006 23.101,43.16 C22.9909994,43.0359994 22.8550008,42.9390004 22.693,42.869 C22.5309992,42.7989997 22.348001,42.764 22.144,42.764 C21.9119988,42.764 21.7070009,42.8079996 21.529,42.896 C21.3509991,42.9840004 21.2020006,43.125999 21.082,43.322 L21.07,43.31 C21.074,43.1459992 21.0899999,42.9700009 21.118,42.782 C21.1460001,42.5939991 21.1969996,42.4190008 21.271,42.257 C21.3450004,42.0949992 21.4479993,41.9610005 21.58,41.855 C21.7120007,41.7489995 21.8859989,41.696 22.102,41.696 C22.306001,41.696 22.4699994,41.7539994 22.594,41.87 C22.7180006,41.9860006 22.7919999,42.139999 22.816,42.332 L22.816,42.332 Z M22.048,43.214 C22.1920007,43.214 22.3179995,43.2399997 22.426,43.292 C22.5340005,43.3440003 22.6239996,43.4129996 22.696,43.499 C22.7680004,43.5850004 22.8209998,43.6869994 22.855,43.805 C22.8890002,43.9230006 22.906,44.0479993 22.906,44.18 C22.906,44.3040006 22.8870002,44.4229994 22.849,44.537 C22.8109998,44.6510006 22.7560004,44.7519996 22.684,44.84 C22.6119996,44.9280004 22.5230005,44.9969998 22.417,45.047 C22.3109995,45.0970003 22.1880007,45.122 22.048,45.122 C21.9079993,45.122 21.7830005,45.0970003 21.673,45.047 C21.5629994,44.9969998 21.4710004,44.9300004 21.397,44.846 C21.3229996,44.7619996 21.2660002,44.6620006 21.226,44.546 C21.1859998,44.4299994 21.166,44.3060007 21.166,44.174 C21.166,44.0419993 21.1849998,43.9170006 21.223,43.799 C21.2610002,43.6809994 21.3179996,43.5790004 21.394,43.493 C21.4700004,43.4069996 21.5619995,43.3390003 21.67,43.289 C21.7780005,43.2389998 21.9039993,43.214 22.048,43.214 L22.048,43.214 Z' id='6'></path> <path d='M12.886,38.756 L12.886,38.318 L10.132,38.318 L10.132,38.798 L12.364,38.798 C12.1399989,39.0340012 11.931001,39.2919986 11.737,39.572 C11.542999,39.8520014 11.3720007,40.1489984 11.224,40.463 C11.0759993,40.7770016 10.9550005,41.1049983 10.861,41.447 C10.7669995,41.7890017 10.7080001,42.1399982 10.684,42.5 L11.254,42.5 C11.2740001,42.1679983 11.3299995,41.8260018 11.422,41.474 C11.5140005,41.1219982 11.6329993,40.7800017 11.779,40.448 C11.9250007,40.1159983 12.0919991,39.8040015 12.28,39.512 C12.4680009,39.2199985 12.6699989,38.9680011 12.886,38.756 L12.886,38.756 Z' id='7'></path> <path d='M3.262,32.35 C3.262,32.2419995 3.2819998,32.1480004 3.322,32.068 C3.3620002,31.9879996 3.41499967,31.9200003 3.481,31.864 C3.54700033,31.8079997 3.62599954,31.7660001 3.718,31.738 C3.81000046,31.7099999 3.9059995,31.696 4.006,31.696 C4.21400104,31.696 4.38499933,31.7509995 4.519,31.861 C4.65300067,31.9710006 4.72,32.1339989 4.72,32.35 C4.72,32.5660011 4.65400066,32.7339994 4.522,32.854 C4.38999934,32.9740006 4.22200102,33.034 4.018,33.034 C3.91399948,33.034 3.81600046,33.0200001 3.724,32.992 C3.63199954,32.9639999 3.55200034,32.9220003 3.484,32.866 C3.41599966,32.8099997 3.3620002,32.7390004 3.322,32.653 C3.2819998,32.5669996 3.262,32.4660006 3.262,32.35 L3.262,32.35 Z M2.722,32.332 C2.722,32.524001 2.77599946,32.7009992 2.884,32.863 C2.99200054,33.0250008 3.1359991,33.1419996 3.316,33.214 C3.0759988,33.2980004 2.89200064,33.4329991 2.764,33.619 C2.63599936,33.8050009 2.572,34.0239987 2.572,34.276 C2.572,34.4920011 2.60899963,34.6809992 2.683,34.843 C2.75700037,35.0050008 2.85899935,35.1399995 2.989,35.248 C3.11900065,35.3560005 3.27199912,35.4359997 3.448,35.488 C3.62400088,35.5400003 3.81399898,35.566 4.018,35.566 C4.21400098,35.566 4.39799914,35.5380003 4.57,35.482 C4.74200086,35.4259997 4.89099937,35.3430006 5.017,35.233 C5.14300063,35.1229995 5.24299963,34.9880008 5.317,34.828 C5.39100037,34.6679992 5.428,34.484001 5.428,34.276 C5.428,34.0119987 5.36600062,33.7890009 5.242,33.607 C5.11799938,33.4249991 4.92800128,33.2940004 4.672,33.214 C4.8520009,33.1339996 4.99499947,33.0150008 5.101,32.857 C5.20700053,32.6989992 5.26,32.524001 5.26,32.332 C5.26,32.1959993 5.23600024,32.0630007 5.188,31.933 C5.13999976,31.8029994 5.06500051,31.6870005 4.963,31.585 C4.86099949,31.4829995 4.72800082,31.4010003 4.564,31.339 C4.39999918,31.2769997 4.20200116,31.246 3.97,31.246 C3.80599918,31.246 3.64900075,31.2699998 3.499,31.318 C3.34899925,31.3660002 3.21600058,31.4359995 3.1,31.528 C2.98399942,31.6200005 2.89200034,31.7329993 2.824,31.867 C2.75599966,32.0010007 2.722,32.1559991 2.722,32.332 L2.722,32.332 Z M3.112,34.3 C3.112,34.1759994 3.13499977,34.0640005 3.181,33.964 C3.22700023,33.8639995 3.29099959,33.7780004 3.373,33.706 C3.45500041,33.6339996 3.55099945,33.5790002 3.661,33.541 C3.77100055,33.5029998 3.88799938,33.484 4.012,33.484 C4.1320006,33.484 4.24499947,33.5049998 4.351,33.547 C4.45700053,33.5890002 4.5499996,33.6459996 4.63,33.718 C4.7100004,33.7900004 4.77299977,33.8749995 4.819,33.973 C4.86500023,34.0710005 4.888,34.1779994 4.888,34.294 C4.888,34.4140006 4.86700021,34.5239995 4.825,34.624 C4.78299979,34.7240005 4.72300039,34.8109996 4.645,34.885 C4.56699961,34.9590004 4.47500053,35.0169998 4.369,35.059 C4.26299947,35.1010002 4.14600064,35.122 4.018,35.122 C3.75399868,35.122 3.53700085,35.0490007 3.367,34.903 C3.19699915,34.7569993 3.112,34.5560013 3.112,34.3 L3.112,34.3 Z' id='8'></path> <path d='M1.136,23.974 L0.626,23.974 C0.65800016,24.3420018 0.79199882,24.6159991 1.028,24.796 C1.26400118,24.9760009 1.55999822,25.066 1.916,25.066 C2.43200258,25.066 2.80699883,24.869002 3.041,24.475 C3.27500117,24.080998 3.392,23.5160037 3.392,22.78 C3.392,22.375998 3.35300039,22.0430013 3.275,21.781 C3.19699961,21.5189987 3.09200066,21.3120008 2.96,21.16 C2.82799934,21.0079992 2.67400088,20.9010003 2.498,20.839 C2.32199912,20.7769997 2.134001,20.746 1.934,20.746 C1.72999898,20.746 1.54200086,20.7799997 1.37,20.848 C1.19799914,20.9160003 1.05000062,21.0109994 0.926,21.133 C0.80199938,21.2550006 0.70600034,21.4009992 0.638,21.571 C0.56999966,21.7410009 0.536,21.927999 0.536,22.132 C0.536,22.340001 0.56499971,22.5319991 0.623,22.708 C0.68100029,22.8840009 0.76699943,23.0339994 0.881,23.158 C0.99500057,23.2820006 1.13599916,23.3789997 1.304,23.449 C1.47200084,23.5190004 1.66399892,23.554 1.88,23.554 C2.08800104,23.554 2.27999912,23.5010005 2.456,23.395 C2.63200088,23.2889995 2.76799952,23.1460009 2.864,22.966 L2.876,22.978 C2.85999992,23.5340028 2.77400078,23.9469987 2.618,24.217 C2.46199922,24.4870014 2.22800156,24.622 1.916,24.622 C1.71199898,24.622 1.53600074,24.5660006 1.388,24.454 C1.23999926,24.3419994 1.1560001,24.182001 1.136,23.974 L1.136,23.974 Z M2.786,22.168 C2.786,22.2920006 2.7660002,22.4109994 2.726,22.525 C2.6859998,22.6390006 2.62800038,22.7389996 2.552,22.825 C2.47599962,22.9110004 2.38400054,22.9789998 2.276,23.029 C2.16799946,23.0790003 2.04800066,23.104 1.916,23.104 C1.79199938,23.104 1.67900051,23.0790003 1.577,23.029 C1.47499949,22.9789998 1.38700037,22.9120004 1.313,22.828 C1.23899963,22.7439996 1.18100021,22.6480005 1.139,22.54 C1.09699979,22.4319995 1.076,22.3200006 1.076,22.204 C1.076,22.0719993 1.09099985,21.9460006 1.121,21.826 C1.15100015,21.7059994 1.19899967,21.5990005 1.265,21.505 C1.33100033,21.4109995 1.41699947,21.3360003 1.523,21.28 C1.62900053,21.2239997 1.75799924,21.196 1.91,21.196 C2.05400072,21.196 2.17999946,21.2219997 2.288,21.274 C2.39600054,21.3260003 2.48699963,21.3969996 2.561,21.487 C2.63500037,21.5770005 2.69099981,21.6799994 2.729,21.796 C2.76700019,21.9120006 2.786,22.0359993 2.786,22.168 L2.786,22.168 Z' id='9'></path> <path d='M2.8,15.5 L2.8,11.246 L2.41,11.246 C2.38199986,11.4060008 2.33000038,11.5379995 2.254,11.642 C2.17799962,11.7460005 2.08500055,11.8279997 1.975,11.888 C1.86499945,11.9480003 1.74200068,11.9889999 1.606,12.011 C1.46999932,12.0330001 1.33000072,12.044 1.186,12.044 L1.186,12.452 L2.29,12.452 L2.29,15.5 L2.8,15.5 Z M4.792,13.406 C4.792,13.3019995 4.79299999,13.1870006 4.795,13.061 C4.79700001,12.9349994 4.80699991,12.8090006 4.825,12.683 C4.84300009,12.5569994 4.86899983,12.4340006 4.903,12.314 C4.93700017,12.1939994 4.98699967,12.0890005 5.053,11.999 C5.11900033,11.9089996 5.2019995,11.8360003 5.302,11.78 C5.4020005,11.7239997 5.52399928,11.696 5.668,11.696 C5.81200072,11.696 5.9339995,11.7239997 6.034,11.78 C6.1340005,11.8360003 6.21699967,11.9089996 6.283,11.999 C6.34900033,12.0890005 6.39899983,12.1939994 6.433,12.314 C6.46700017,12.4340006 6.49299991,12.5569994 6.511,12.683 C6.52900009,12.8090006 6.53899999,12.9349994 6.541,13.061 C6.54300001,13.1870006 6.544,13.3019995 6.544,13.406 C6.544,13.5660008 6.53900005,13.744999 6.529,13.943 C6.51899995,14.141001 6.48700027,14.3269991 6.433,14.501 C6.37899973,14.6750009 6.2920006,14.8219994 6.172,14.942 C6.0519994,15.0620006 5.88400108,15.122 5.668,15.122 C5.45199892,15.122 5.2840006,15.0620006 5.164,14.942 C5.0439994,14.8219994 4.95700027,14.6750009 4.903,14.501 C4.84899973,14.3269991 4.81700005,14.141001 4.807,13.943 C4.79699995,13.744999 4.792,13.5660008 4.792,13.406 L4.792,13.406 Z M4.252,13.412 C4.252,13.5680008 4.25599996,13.7299992 4.264,13.898 C4.27200004,14.0660008 4.29199984,14.2299992 4.324,14.39 C4.35600016,14.5500008 4.4019997,14.7009993 4.462,14.843 C4.5220003,14.9850007 4.60399948,15.1099995 4.708,15.218 C4.81200052,15.3260005 4.94299921,15.4109997 5.101,15.473 C5.25900079,15.5350003 5.4479989,15.566 5.668,15.566 C5.89200112,15.566 6.08199922,15.5350003 6.238,15.473 C6.39400078,15.4109997 6.52399948,15.3260005 6.628,15.218 C6.73200052,15.1099995 6.8139997,14.9850007 6.874,14.843 C6.9340003,14.7009993 6.97999984,14.5500008 7.012,14.39 C7.04400016,14.2299992 7.06399996,14.0660008 7.072,13.898 C7.08000004,13.7299992 7.084,13.5680008 7.084,13.412 C7.084,13.2559992 7.08000004,13.0940008 7.072,12.926 C7.06399996,12.7579992 7.04400016,12.5940008 7.012,12.434 C6.97999984,12.2739992 6.9340003,12.1220007 6.874,11.978 C6.8139997,11.8339993 6.73200052,11.7080005 6.628,11.6 C6.52399948,11.4919995 6.39300079,11.4060003 6.235,11.342 C6.07699921,11.2779997 5.8880011,11.246 5.668,11.246 C5.4479989,11.246 5.25900079,11.2779997 5.101,11.342 C4.94299921,11.4060003 4.81200052,11.4919995 4.708,11.6 C4.60399948,11.7080005 4.5220003,11.8339993 4.462,11.978 C4.4019997,12.1220007 4.35600016,12.2739992 4.324,12.434 C4.29199984,12.5940008 4.27200004,12.7579992 4.264,12.926 C4.25599996,13.0940008 4.252,13.2559992 4.252,13.412 L4.252,13.412 Z' id='10'></path> <path d='M10.8,8 L10.8,3.746 L10.41,3.746 C10.3819999,3.9060008 10.3300004,4.03799948 10.254,4.142 C10.1779996,4.24600052 10.0850005,4.3279997 9.975,4.388 C9.86499945,4.4480003 9.74200068,4.48899989 9.606,4.511 C9.46999932,4.53300011 9.33000072,4.544 9.186,4.544 L9.186,4.952 L10.29,4.952 L10.29,8 L10.8,8 Z M14.136,8 L14.136,3.746 L13.746,3.746 C13.7179999,3.9060008 13.6660004,4.03799948 13.59,4.142 C13.5139996,4.24600052 13.4210005,4.3279997 13.311,4.388 C13.2009994,4.4480003 13.0780007,4.48899989 12.942,4.511 C12.8059993,4.53300011 12.6660007,4.544 12.522,4.544 L12.522,4.952 L13.626,4.952 L13.626,8 L14.136,8 Z' id='11'></path> <path d='M20.8,5 L20.8,0.746 L20.41,0.746 C20.3819999,0.9060008 20.3300004,1.03799948 20.254,1.142 C20.1779996,1.24600052 20.0850005,1.3279997 19.975,1.388 C19.8649994,1.4480003 19.7420007,1.48899989 19.606,1.511 C19.4699993,1.53300011 19.3300007,1.544 19.186,1.544 L19.186,1.952 L20.29,1.952 L20.29,5 L20.8,5 Z M22.264,2.252 L22.774,2.252 C22.77,2.12399936 22.7829998,1.99700063 22.813,1.871 C22.8430001,1.74499937 22.8919997,1.6320005 22.96,1.532 C23.0280003,1.4319995 23.1149995,1.35100031 23.221,1.289 C23.3270005,1.22699969 23.4539993,1.196 23.602,1.196 C23.7140006,1.196 23.8199995,1.21399982 23.92,1.25 C24.0200005,1.28600018 24.1069996,1.33799966 24.181,1.406 C24.2550004,1.47400034 24.3139998,1.55499953 24.358,1.649 C24.4020002,1.74300047 24.424,1.84799942 24.424,1.964 C24.424,2.11200074 24.4010002,2.24199944 24.355,2.354 C24.3089998,2.46600056 24.2410004,2.56999952 24.151,2.666 C24.0609995,2.76200048 23.9480007,2.85699953 23.812,2.951 C23.6759993,3.04500047 23.5180009,3.14799944 23.338,3.26 C23.1899993,3.34800044 23.0480007,3.4419995 22.912,3.542 C22.7759993,3.6420005 22.6540005,3.75799934 22.546,3.89 C22.4379995,4.02200066 22.3490003,4.17699911 22.279,4.355 C22.2089996,4.53300089 22.1640001,4.74799874 22.144,5 L24.922,5 L24.922,4.55 L22.738,4.55 C22.7620001,4.41799934 22.8129996,4.30100051 22.891,4.199 C22.9690004,4.09699949 23.0629994,4.00200044 23.173,3.914 C23.2830005,3.82599956 23.4039993,3.74300039 23.536,3.665 C23.6680007,3.58699961 23.7999993,3.5080004 23.932,3.428 C24.0640007,3.34399958 24.1919994,3.25600046 24.316,3.164 C24.4400006,3.07199954 24.5499995,2.96900057 24.646,2.855 C24.7420005,2.74099943 24.8189997,2.61200072 24.877,2.468 C24.9350003,2.32399928 24.964,2.15800094 24.964,1.97 C24.964,1.769999 24.9290003,1.59400076 24.859,1.442 C24.7889996,1.28999924 24.6940006,1.16300051 24.574,1.061 C24.4539994,0.95899949 24.3130008,0.88100027 24.151,0.827 C23.9889992,0.77299973 23.8160009,0.746 23.632,0.746 C23.4079989,0.746 23.2080009,0.78399962 23.032,0.86 C22.8559991,0.93600038 22.7090006,1.04099933 22.591,1.175 C22.4729994,1.30900067 22.3860003,1.46799908 22.33,1.652 C22.2739997,1.83600092 22.2519999,2.03599892 22.264,2.252 L22.264,2.252 Z' id='12'></path> </g> <polygon id='Hour' fill='#2A2929' transform='translate(25.319297, 23.611917) rotate(-38.000000) translate(-25.319297, -23.611917) ' points='24.8192972 15.6119168 25.8192972 15.6119168 25.8192972 31.6119168 24.8192972 31.6119168'></polygon> <polygon id='Minute' fill='#2A2929' transform='translate(19.329949, 35.730028) rotate(62.000000) translate(-19.329949, -35.730028) ' points='19.0494321 24.2986991 19.9184363 24.2986991 19.7874404 47.2986991 18.9184363 47.2986991'></polygon> <polygon id='Second' fill='#DD4524' transform='translate(39.644621, 32.129480) rotate(-76.000000) translate(-39.644621, -32.129480) ' points='38.9523565 18.2482315 39.9221138 18.2482315 39.9523565 46.2482315 38.9825992 46.2482315'></polygon> <circle id='Oval-13' fill='#2A2929' cx='30' cy='30' r='1.25'></circle> <circle id='Oval-14' fill='#DD4524' cx='30' cy='30' r='0.75'></circle> </g> </g> </g> </g> </svg>",
  maps_app: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='60px' height='60px' viewBox='0 0 60 60' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 39.1 (31720) - http://www.bohemiancoding.com/sketch --> <title>Maps</title> <desc>Created with Sketch.</desc> <defs> <path d='M39.0815,0 C45.105,0 48.116,0 51.3585,1.025 C54.8985,2.3135 57.6865,5.1015 58.975,8.6415 C60,11.8835 60,14.8955 60,20.9185 L60,39.0815 C60,45.105 60,48.116 58.975,51.3585 C57.6865,54.8985 54.8985,57.6865 51.3585,58.9745 C48.116,60 45.105,60 39.0815,60 L20.9185,60 C14.895,60 11.8835,60 8.6415,58.9745 C5.1015,57.6865 2.3135,54.8985 1.025,51.3585 C0,48.116 0,45.105 0,39.0815 L0,20.9185 C0,14.8955 0,11.8835 1.025,8.6415 C2.3135,5.1015 5.1015,2.3135 8.6415,1.025 C11.8835,0 14.895,0 20.9185,0 L39.0815,0 Z' id='path-1'></path> <path d='M-4.5,30 C-4.5,30 -4.47462625,30.4967807 -4.42511695,30.4912401 C-3.44229055,30.3812506 9.10445696,28.4946923 17.5075684,34.5092773 C23.2683105,38.6325684 26.42078,43.7490087 31,48.1848145 C36.7919922,53.7954102 44.3314042,55.6680664 50.4058144,56.250293 C56.4802246,56.8325195 65,56 65,56 L65,66 C65,66 53.5489633,65.3769385 47.8234863,64.6784668 C42.0980093,63.9799951 33.2470703,62.026123 27.392334,57.927002 C17.9909668,50.1728516 19.277874,47.8193763 12.291748,43.2246094 C5.24072266,38.5871582 -4.5,40.5 -4.5,40.5 L-4.5,30 Z' id='path-3'></path> <mask id='mask-4' maskContentUnits='userSpaceOnUse' maskUnits='objectBoundingBox' x='-0.5' y='-0.5' width='70.5' height='37'> <rect x='-5' y='29.5' width='70.5' height='37' fill='white'></rect> <use xlink:href='#path-3' fill='black'></use> </mask> <polygon id='path-5' points='50.5 60 41.5 60 41.5 18.8429752 0 18.8429752 0 9.91735537 41.5 9.91735537 41.5 0 50.5 0 50.5 9.91735537 60 9.91735537 60 18.8429752 50.5 18.8429752 50.5 36.6942149 60 36.6942149 60 45.6198347 50.5 45.6198347'></polygon> <mask id='mask-6' maskContentUnits='userSpaceOnUse' maskUnits='objectBoundingBox' x='-0.5' y='-0.5' width='61' height='61'> <rect x='-0.5' y='-0.5' width='61' height='61' fill='white'></rect> <use xlink:href='#path-5' fill='black'></use> </mask> <path d='M0.5,7.5 C0.814961548,13.8459051 5.03679656,19.5 12.75,19.5 C20.4632034,19.5 24.6314755,13.8439381 25,7.5 C25.1235352,5.37341309 24.3674316,2.56555176 23.5068131,1.2710142 C22.4549565,2.02599285 20.4373562,2.5 18.75,2.5 C16.1596631,2.5 13.4693848,1.88292106 12.75,0.347133799 C12.0306152,1.88292106 9.34033689,2.5 6.75,2.5 C5.06264383,2.5 3.04504346,2.02599285 1.99318686,1.2710142 C1.13293457,2.76416016 0.392089844,5.32580566 0.5,7.5 Z' id='path-7'></path> <mask id='mask-8' maskContentUnits='userSpaceOnUse' maskUnits='objectBoundingBox' x='0' y='0' width='24.5237787' height='19.1528662' fill='white'> <use xlink:href='#path-7'></use> </mask> <mask id='mask-10' maskContentUnits='userSpaceOnUse' maskUnits='objectBoundingBox' x='0' y='0' width='24.5237787' height='19.1528662' fill='white'> <use xlink:href='#path-7'></use> </mask> <rect id='path-11' x='0' y='0.5' width='25' height='5'></rect> <filter x='-50%' y='-50%' width='200%' height='200%' filterUnits='objectBoundingBox' id='filter-12'> <feOffset dx='0' dy='1' in='SourceAlpha' result='shadowOffsetOuter1'></feOffset> <feColorMatrix values='0 0 0 0 1   0 0 0 0 1   0 0 0 0 1  0 0 0 1 0' type='matrix' in='shadowOffsetOuter1'></feColorMatrix> </filter> <path d='M0.5,7.5 C0.814961548,13.8459051 5.03679656,19.5 12.75,19.5 C20.4632034,19.5 24.6314755,13.8439381 25,7.5 C25.1235352,5.37341309 24.3674316,2.56555176 23.5068131,1.2710142 C22.4549565,2.02599285 20.4373562,2.5 18.75,2.5 C16.1596631,2.5 13.4693848,1.88292106 12.75,0.347133799 C12.0306152,1.88292106 9.34033689,2.5 6.75,2.5 C5.06264383,2.5 3.04504346,2.02599285 1.99318686,1.2710142 C1.13293457,2.76416016 0.392089844,5.32580566 0.5,7.5 Z' id='path-13'></path> <mask id='mask-14' maskContentUnits='userSpaceOnUse' maskUnits='objectBoundingBox' x='0' y='0' width='24.5237787' height='19.1528662' fill='white'> <use xlink:href='#path-13'></use> </mask> </defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'> <g id='Home-Screen-•-iPhone-SE' transform='translate(-168.000000, -115.000000)'> <g id='Home-Screen-•-iPhone-6s-Copy' transform='translate(0.000000, 27.000000)'> <g id='Maps' transform='translate(168.000000, 88.000000)'> <mask id='mask-2' fill='white'> <use xlink:href='#path-1'></use> </mask> <use id='BG' fill='#E4DDC9' xlink:href='#path-1'></use> <rect id='Block' fill='#76C63B' mask='url(#mask-2)' x='0' y='0' width='42' height='10'></rect> <rect id='Block' fill='#FBC6D1' mask='url(#mask-2)' x='45' y='0.5' width='15' height='10'></rect> <g id='Highway' mask='url(#mask-2)'> <use fill='#FFDE02' fill-rule='evenodd' xlink:href='#path-3'></use> <use stroke='#FEB312' mask='url(#mask-4)' stroke-width='1' xlink:href='#path-3'></use> </g> <g id='Map' mask='url(#mask-2)'> <use fill='#FFFFFF' fill-rule='evenodd' xlink:href='#path-5'></use> <use stroke-opacity='0.1' stroke='#000000' mask='url(#mask-6)' stroke-width='1' xlink:href='#path-5'></use> </g> <path d='M43.6565914,35.5 L43.4489796,35.5 L43.4489796,17 L-1,17 L-1,12 L48.5,12 L48.5,14.5 L48.5,14.5 L48.5,35.5 L48.2923882,35.5 C47.586899,35.178996 46.801811,35 45.9744898,35 C45.1471685,35 44.3620806,35.178996 43.6565914,35.5 L43.6565914,35.5 Z' id='Route' fill='#409BFF' mask='url(#mask-2)'></path> <g id='Indicator' mask='url(#mask-2)'> <g transform='translate(40.500000, 35.500000)'> <circle id='Circle' fill='#007AFF' cx='5.5' cy='5.5' r='5.5'></circle> <polygon id='Arrow' fill='#FFFFFF' points='7.75 8.75 5.5 1.65380592 3.25 8.75 5.5 6.65380592'></polygon> </g> </g> <g id='280' mask='url(#mask-2)'> <g transform='translate(8.000000, 22.500000)'> <mask id='mask-9' fill='white'> <use xlink:href='#path-7'></use> </mask> <g id='Oval-20' stroke='#FFFFFF' mask='url(#mask-8)' stroke-width='1' fill='#007AFF' fill-rule='evenodd'> <use mask='url(#mask-10)' xlink:href='#path-7'></use> </g> <g id='Top' stroke='none' fill='none' mask='url(#mask-9)'> <use fill='black' fill-opacity='1' filter='url(#filter-12)' xlink:href='#path-11'></use> <use fill='#DE1D26' fill-rule='evenodd' xlink:href='#path-11'></use> </g> <g id='Shield' stroke='none' fill='none' mask='url(#mask-9)' stroke-width='1.5'> <use stroke='#FFFFFF' mask='url(#mask-14)' xlink:href='#path-13'></use> </g> <path d='M5.64,9.378 L6.405,9.378 C6.39899997,9.18599904 6.41849978,8.99550095 6.4635,8.8065 C6.50850023,8.61749906 6.58199949,8.44800075 6.684,8.298 C6.78600051,8.14799925 6.91649921,8.02650047 7.0755,7.9335 C7.2345008,7.84049954 7.42499889,7.794 7.647,7.794 C7.81500084,7.794 7.97399925,7.82099973 8.124,7.875 C8.27400075,7.92900027 8.40449945,8.00699949 8.5155,8.109 C8.62650056,8.21100051 8.71499967,8.3324993 8.781,8.4735 C8.84700033,8.61450071 8.88,8.77199913 8.88,8.946 C8.88,9.16800111 8.84550035,9.36299916 8.7765,9.531 C8.70749966,9.69900084 8.60550068,9.85499928 8.4705,9.999 C8.33549933,10.1430007 8.16600102,10.2854993 7.962,10.4265 C7.75799898,10.5675007 7.52100135,10.7219992 7.251,10.89 C7.02899889,11.0220007 6.81600102,11.1629993 6.612,11.313 C6.40799898,11.4630008 6.22500081,11.636999 6.063,11.835 C5.90099919,12.033001 5.76750053,12.2654987 5.6625,12.5325 C5.55749948,12.7995013 5.49000015,13.1219981 5.46,13.5 L9.627,13.5 L9.627,12.825 L6.351,12.825 C6.38700018,12.626999 6.46349942,12.4515008 6.5805,12.2985 C6.69750059,12.1454992 6.83849918,12.0030007 7.0035,11.871 C7.16850083,11.7389993 7.34999901,11.6145006 7.548,11.4975 C7.74600099,11.3804994 7.94399901,11.2620006 8.142,11.142 C8.34000099,11.0159994 8.53199907,10.8840007 8.718,10.746 C8.90400093,10.6079993 9.06899928,10.4535009 9.213,10.2825 C9.35700072,10.1114991 9.47249957,9.91800108 9.5595,9.702 C9.64650044,9.48599892 9.69,9.23700141 9.69,8.955 C9.69,8.6549985 9.63750053,8.39100114 9.5325,8.163 C9.42749948,7.93499886 9.2850009,7.74450077 9.105,7.5915 C8.9249991,7.43849924 8.71350122,7.32150041 8.4705,7.2405 C8.22749879,7.1594996 7.96800138,7.119 7.692,7.119 C7.35599832,7.119 7.05600132,7.17599943 6.792,7.29 C6.52799868,7.40400057 6.30750089,7.561499 6.1305,7.7625 C5.95349912,7.96350101 5.82300042,8.20199862 5.739,8.478 C5.65499958,8.75400138 5.62199991,9.05399838 5.64,9.378 L5.64,9.378 Z M11.643,8.775 C11.643,8.61299919 11.6729997,8.4720006 11.733,8.352 C11.7930003,8.2319994 11.8724995,8.13000042 11.9715,8.046 C12.0705005,7.96199958 12.1889993,7.89900021 12.327,7.857 C12.4650007,7.81499979 12.6089993,7.794 12.759,7.794 C13.0710016,7.794 13.327499,7.87649918 13.5285,8.0415 C13.729501,8.20650083 13.83,8.45099838 13.83,8.775 C13.83,9.09900162 13.731001,9.3509991 13.533,9.531 C13.334999,9.7110009 13.0830015,9.801 12.777,9.801 C12.6209992,9.801 12.4740007,9.78000021 12.336,9.738 C12.1979993,9.69599979 12.0780005,9.63300042 11.976,9.549 C11.8739995,9.46499958 11.7930003,9.35850065 11.733,9.2295 C11.6729997,9.10049936 11.643,8.94900087 11.643,8.775 L11.643,8.775 Z M10.833,8.748 C10.833,9.03600144 10.9139992,9.30149879 11.076,9.5445 C11.2380008,9.78750122 11.4539987,9.96299946 11.724,10.071 C11.3639982,10.1970006 11.088001,10.3994986 10.896,10.6785 C10.703999,10.9575014 10.608,11.2859981 10.608,11.664 C10.608,11.9880016 10.6634994,12.2714988 10.7745,12.5145 C10.8855006,12.7575012 11.038499,12.9599992 11.2335,13.122 C11.428501,13.2840008 11.6579987,13.4039996 11.922,13.482 C12.1860013,13.5600004 12.4709985,13.599 12.777,13.599 C13.0710015,13.599 13.3469987,13.5570004 13.605,13.473 C13.8630013,13.3889996 14.0864991,13.2645008 14.2755,13.0995 C14.4645009,12.9344992 14.6144994,12.7320012 14.7255,12.492 C14.8365006,12.2519988 14.892,11.9760016 14.892,11.664 C14.892,11.267998 14.7990009,10.9335014 14.613,10.6605 C14.4269991,10.3874986 14.1420019,10.1910006 13.758,10.071 C14.0280014,9.9509994 14.2424992,9.77250119 14.4015,9.5355 C14.5605008,9.29849882 14.64,9.03600144 14.64,8.748 C14.64,8.54399898 14.6040004,8.34450098 14.532,8.1495 C14.4599996,7.95449903 14.3475008,7.78050077 14.1945,7.6275 C14.0414992,7.47449924 13.8420012,7.35150047 13.596,7.2585 C13.3499988,7.16549954 13.0530017,7.119 12.705,7.119 C12.4589988,7.119 12.2235011,7.15499964 11.9985,7.227 C11.7734989,7.29900036 11.5740009,7.40399931 11.4,7.542 C11.2259991,7.68000069 11.0880005,7.849499 10.986,8.0505 C10.8839995,8.25150101 10.833,8.48399868 10.833,8.748 L10.833,8.748 Z M11.418,11.7 C11.418,11.5139991 11.4524997,11.3460008 11.5215,11.196 C11.5905003,11.0459993 11.6864994,10.9170005 11.8095,10.809 C11.9325006,10.7009995 12.0764992,10.6185003 12.2415,10.5615 C12.4065008,10.5044997 12.5819991,10.476 12.768,10.476 C12.9480009,10.476 13.1174992,10.5074997 13.2765,10.5705 C13.4355008,10.6335003 13.5749994,10.7189995 13.695,10.827 C13.8150006,10.9350005 13.9094997,11.0624993 13.9785,11.2095 C14.0475003,11.3565007 14.082,11.5169991 14.082,11.691 C14.082,11.8710009 14.0505003,12.0359993 13.9875,12.186 C13.9244997,12.3360008 13.8345006,12.4664994 13.7175,12.5775 C13.6004994,12.6885006 13.4625008,12.7754997 13.3035,12.8385 C13.1444992,12.9015003 12.969001,12.933 12.777,12.933 C12.380998,12.933 12.0555013,12.8235011 11.8005,12.6045 C11.5454987,12.3854989 11.418,12.0840019 11.418,11.7 L11.418,11.7 Z M16.44,10.359 C16.44,10.2029992 16.4415,10.0305009 16.4445,9.8415 C16.4475,9.65249906 16.4624999,9.46350095 16.4895,9.2745 C16.5165001,9.08549906 16.5554997,8.9010009 16.6065,8.721 C16.6575003,8.5409991 16.7324995,8.38350068 16.8315,8.2485 C16.9305005,8.11349933 17.0549993,8.00400042 17.205,7.92 C17.3550008,7.83599958 17.5379989,7.794 17.754,7.794 C17.9700011,7.794 18.1529993,7.83599958 18.303,7.92 C18.4530008,8.00400042 18.5774995,8.11349933 18.6765,8.2485 C18.7755005,8.38350068 18.8504997,8.5409991 18.9015,8.721 C18.9525003,8.9010009 18.9914999,9.08549906 19.0185,9.2745 C19.0455001,9.46350095 19.0605,9.65249906 19.0635,9.8415 C19.0665,10.0305009 19.068,10.2029992 19.068,10.359 C19.068,10.5990012 19.0605001,10.8674985 19.0455,11.1645 C19.0304999,11.4615015 18.9825004,11.7404987 18.9015,12.0015 C18.8204996,12.2625013 18.6900009,12.4829991 18.51,12.663 C18.3299991,12.8430009 18.0780016,12.933 17.754,12.933 C17.4299984,12.933 17.1780009,12.8430009 16.998,12.663 C16.8179991,12.4829991 16.6875004,12.2625013 16.6065,12.0015 C16.5254996,11.7404987 16.4775001,11.4615015 16.4625,11.1645 C16.4474999,10.8674985 16.44,10.5990012 16.44,10.359 L16.44,10.359 Z M15.63,10.368 C15.63,10.6020012 15.6359999,10.8449987 15.648,11.097 C15.6600001,11.3490013 15.6899998,11.5949988 15.738,11.835 C15.7860002,12.0750012 15.8549996,12.3014989 15.945,12.5145 C16.0350005,12.7275011 16.1579992,12.9149992 16.314,13.077 C16.4700008,13.2390008 16.6664988,13.3664995 16.9035,13.4595 C17.1405012,13.5525005 17.4239984,13.599 17.754,13.599 C18.0900017,13.599 18.3749988,13.5525005 18.609,13.4595 C18.8430012,13.3664995 19.0379992,13.2390008 19.194,13.077 C19.3500008,12.9149992 19.4729996,12.7275011 19.563,12.5145 C19.6530005,12.3014989 19.7219998,12.0750012 19.77,11.835 C19.8180002,11.5949988 19.8479999,11.3490013 19.86,11.097 C19.8720001,10.8449987 19.878,10.6020012 19.878,10.368 C19.878,10.1339988 19.8720001,9.89100126 19.86,9.639 C19.8479999,9.38699874 19.8180002,9.1410012 19.77,8.901 C19.7219998,8.6609988 19.6530005,8.43300108 19.563,8.217 C19.4729996,8.00099892 19.3500008,7.81200081 19.194,7.65 C19.0379992,7.48799919 18.8415012,7.35900048 18.6045,7.263 C18.3674988,7.16699952 18.0840017,7.119 17.754,7.119 C17.4239984,7.119 17.1405012,7.16699952 16.9035,7.263 C16.6664988,7.35900048 16.4700008,7.48799919 16.314,7.65 C16.1579992,7.81200081 16.0350005,8.00099892 15.945,8.217 C15.8549996,8.43300108 15.7860002,8.6609988 15.738,8.901 C15.6899998,9.1410012 15.6600001,9.38699874 15.648,9.639 C15.6359999,9.89100126 15.63,10.1339988 15.63,10.368 L15.63,10.368 Z' id='280' stroke='none' fill='#FFFFFF' fill-rule='evenodd' mask='url(#mask-9)'></path> </g> </g> </g> </g> </g> </g> </svg>",
  news_app: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='60px' height='60px' viewBox='0 0 60 60' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 39.1 (31720) - http://www.bohemiancoding.com/sketch --> <title>News</title> <desc>Created with Sketch.</desc> <defs> <linearGradient x1='50%' y1='0%' x2='50%' y2='100%' id='linearGradient-1'> <stop stop-color='#FC5363' offset='0%'></stop> <stop stop-color='#FC3359' offset='100%'></stop> </linearGradient> <path d='M10.136624,47.3823853 C11,47.3823853 11,46.5 11,46.5 L11,12.0052617 C11,11.450071 11.4532303,11 11.9968754,11 L48.0031246,11 C48.5536837,11 49,11.4413032 49,12.0088498 L49,46.9911502 C49,47.5483226 48.543925,48.0029034 47.9964076,48.0062782 C47.9964076,48.0062782 18.6084831,48.1997544 11.0000001,48 C10.1174113,47.9768284 9.41662598,47.668457 9.05755615,47.3823853 C8.69848633,47.0963135 8.36309815,46.7116462 8.36309814,46.6607056 C8.36309814,46.457472 9.27324796,47.3823853 10.136624,47.3823853 Z' id='path-2'></path> <filter x='-50%' y='-50%' width='200%' height='200%' filterUnits='objectBoundingBox' id='filter-4'> <feOffset dx='-1' dy='0' in='SourceAlpha' result='shadowOffsetOuter1'></feOffset> <feGaussianBlur stdDeviation='1' in='shadowOffsetOuter1' result='shadowBlurOuter1'></feGaussianBlur> <feColorMatrix values='0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.25 0' type='matrix' in='shadowBlurOuter1'></feColorMatrix> </filter> </defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'> <g id='Home-Screen-•-iPhone-SE' transform='translate(-244.000000, -115.000000)'> <g id='Home-Screen-•-iPhone-6s-Copy' transform='translate(0.000000, 27.000000)'> <g id='News' transform='translate(244.000000, 88.000000)'> <rect id='BG' fill='url(#linearGradient-1)' x='0' y='0' width='60' height='60' rx='14'></rect> <path d='M8,45.9165262 L8,16.9953764 C8,16.4456452 8.45526288,16 8.99545703,16 L32.004543,16 C32.5543187,16 33,16.4523621 33,16.9927864 L33,47.0072136 C33,47.5555144 32.5447371,48 32.004543,48 L10.9907522,48 C9.33900538,48 8,46.6569475 8,45.9165262 L8,45.9165262 Z' id='Fold' fill='#FFFFFF'></path> <mask id='mask-3' fill='white'> <use xlink:href='#path-2'></use> </mask> <g id='Mask'> <use fill='black' fill-opacity='1' filter='url(#filter-4)' xlink:href='#path-2'></use> <use fill='#FFFFFF' fill-rule='evenodd' xlink:href='#path-2'></use> </g> <rect id='lines' fill='#BDBDBD' mask='url(#mask-3)' x='17' y='35' width='33' height='2' rx='1'></rect> <rect id='lines' fill='#BDBDBD' mask='url(#mask-3)' x='17' y='39' width='33' height='2' rx='1'></rect> <rect id='lines' fill='#BDBDBD' mask='url(#mask-3)' x='17' y='43' width='33' height='2' rx='1'></rect> <path d='M16,20.1213203 L16,16.9976567 C16,16.4466661 16.4410535,16 16.9976567,16 L20.1213203,16 L20,16.1213203 L31,27.1213203 L31,30.0011436 C31,30.5527968 30.5550661,31 30.0011436,31 L27.1213203,31 L16.1213203,20 L16,20.1213203 L16,20.1213203 Z M16,29.9997809 C16,30.5521867 16.4513294,31 17.0002191,31 L21.8784606,31 C22.4308663,31 22.5652427,30.6865631 22.1684484,30.2897688 L16.7102312,24.8315516 C16.3179814,24.4393017 16,24.5726497 16,25.1215394 L16,29.9997809 Z M29.9997809,16 C30.5521867,16 31,16.4513294 31,17.0002191 L31,21.8784606 C31,22.4308663 30.6873855,22.5660652 30.2956989,22.1743785 L29.5913977,21.4700774 L24.825239,16.7039186 C24.4364754,16.3151551 24.5726497,16 25.1215394,16 L29.9997809,16 Z' id='Logo' fill='#FD4C61' mask='url(#mask-3)'></path> </g> </g> </g> </g> </svg>",
  wallet_app: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='60px' height='60px' viewBox='0 0 60 60' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 39.1 (31720) - http://www.bohemiancoding.com/sketch --> <title>Wallet</title> <desc>Created with Sketch.</desc> <defs> <linearGradient x1='50%' y1='0%' x2='50%' y2='100%' id='linearGradient-1'> <stop stop-color='#1E1E1F' offset='0%'></stop> <stop stop-color='#1E1E1F' offset='100%'></stop> </linearGradient> <rect id='path-2' x='9' y='15' width='42' height='13' rx='2'></rect> <filter x='-50%' y='-50%' width='200%' height='200%' filterUnits='objectBoundingBox' id='filter-3'> <feOffset dx='0' dy='0' in='SourceAlpha' result='shadowOffsetOuter1'></feOffset> <feGaussianBlur stdDeviation='0.5' in='shadowOffsetOuter1' result='shadowBlurOuter1'></feGaussianBlur> <feColorMatrix values='0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.1 0' type='matrix' in='shadowBlurOuter1'></feColorMatrix> </filter> <rect id='path-4' x='9' y='18' width='42' height='13' rx='2'></rect> <filter x='-50%' y='-50%' width='200%' height='200%' filterUnits='objectBoundingBox' id='filter-5'> <feOffset dx='0' dy='0' in='SourceAlpha' result='shadowOffsetOuter1'></feOffset> <feGaussianBlur stdDeviation='0.5' in='shadowOffsetOuter1' result='shadowBlurOuter1'></feGaussianBlur> <feColorMatrix values='0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.1 0' type='matrix' in='shadowBlurOuter1'></feColorMatrix> </filter> <rect id='path-6' x='9' y='21' width='42' height='13' rx='2'></rect> <filter x='-50%' y='-50%' width='200%' height='200%' filterUnits='objectBoundingBox' id='filter-7'> <feOffset dx='0' dy='0' in='SourceAlpha' result='shadowOffsetOuter1'></feOffset> <feGaussianBlur stdDeviation='0.5' in='shadowOffsetOuter1' result='shadowBlurOuter1'></feGaussianBlur> <feColorMatrix values='0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.1 0' type='matrix' in='shadowBlurOuter1'></feColorMatrix> </filter> <rect id='path-8' x='9' y='25' width='42' height='13' rx='2'></rect> <filter x='-50%' y='-50%' width='200%' height='200%' filterUnits='objectBoundingBox' id='filter-9'> <feOffset dx='0' dy='0' in='SourceAlpha' result='shadowOffsetOuter1'></feOffset> <feGaussianBlur stdDeviation='0.5' in='shadowOffsetOuter1' result='shadowBlurOuter1'></feGaussianBlur> <feColorMatrix values='0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.1 0' type='matrix' in='shadowBlurOuter1'></feColorMatrix> </filter> <path d='M7,28 L7,42 L53,42 L53,28 L38.9065073,28 C37.7983339,28 36.3057558,28.6722229 35.5501237,29.4784882 C35.5501237,29.4784882 32.4189579,33.3076923 30,33.3076923 C27.5810421,33.3076923 24.4498763,29.4784882 24.4498763,29.4784882 C23.7043702,28.6619417 22.2114781,28 21.0934927,28 L7,28 Z' id='path-10'></path> <filter x='-50%' y='-50%' width='200%' height='200%' filterUnits='objectBoundingBox' id='filter-11'> <feOffset dx='0' dy='-1' in='SourceAlpha' result='shadowOffsetOuter1'></feOffset> <feGaussianBlur stdDeviation='1' in='shadowOffsetOuter1' result='shadowBlurOuter1'></feGaussianBlur> <feColorMatrix values='0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.1 0' type='matrix' in='shadowBlurOuter1'></feColorMatrix> </filter> </defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'> <g id='Home-Screen-•-iPhone-SE' transform='translate(-16.000000, -203.000000)'> <g id='Home-Screen-•-iPhone-6s-Copy' transform='translate(0.000000, 27.000000)'> <g id='Wallet' transform='translate(16.000000, 176.000000)'> <rect id='BG' fill='url(#linearGradient-1)' x='0' y='0' width='60' height='60' rx='14'></rect> <rect id='wallet' fill='#D9D6CC' x='7' y='12' width='46' height='34' rx='4'></rect> <g id='cards'> <use fill='black' fill-opacity='1' filter='url(#filter-3)' xlink:href='#path-2'></use> <use fill='#3B99C9' fill-rule='evenodd' xlink:href='#path-2'></use> </g> <g id='cards'> <use fill='black' fill-opacity='1' filter='url(#filter-5)' xlink:href='#path-4'></use> <use fill='#FFB003' fill-rule='evenodd' xlink:href='#path-4'></use> </g> <g id='cards'> <use fill='black' fill-opacity='1' filter='url(#filter-7)' xlink:href='#path-6'></use> <use fill='#50BE3D' fill-rule='evenodd' xlink:href='#path-6'></use> </g> <g id='cards'> <use fill='black' fill-opacity='1' filter='url(#filter-9)' xlink:href='#path-8'></use> <use fill='#F16C5E' fill-rule='evenodd' xlink:href='#path-8'></use> </g> <g id='Combined-Shape'> <use fill='black' fill-opacity='1' filter='url(#filter-11)' xlink:href='#path-10'></use> <use fill='#D9D6CC' fill-rule='evenodd' xlink:href='#path-10'></use> </g> </g> </g> </g> </g> </svg>",
  notes_app: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='60px' height='60px' viewBox='0 0 60 60' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 39.1 (31720) - http://www.bohemiancoding.com/sketch --> <title>Notes</title> <desc>Created with Sketch.</desc> <defs> <linearGradient x1='50%' y1='0%' x2='50%' y2='100%' id='linearGradient-1'> <stop stop-color='#F8F8F8' offset='0%'></stop> <stop stop-color='#EDEDED' offset='100%'></stop> </linearGradient> <path d='M39.0815,0 C45.105,0 48.116,0 51.3585,1.025 C54.8985,2.3135 57.6865,5.1015 58.975,8.6415 C60,11.8835 60,14.8955 60,20.9185 L60,39.0815 C60,45.105 60,48.116 58.975,51.3585 C57.6865,54.8985 54.8985,57.6865 51.3585,58.9745 C48.116,60 45.105,60 39.0815,60 L20.9185,60 C14.895,60 11.8835,60 8.6415,58.9745 C5.1015,57.6865 2.3135,54.8985 1.025,51.3585 C0,48.116 0,45.105 0,39.0815 L0,20.9185 C0,14.8955 0,11.8835 1.025,8.6415 C2.3135,5.1015 5.1015,2.3135 8.6415,1.025 C11.8835,0 14.895,0 20.9185,0 L39.0815,0 Z' id='path-2'></path> <linearGradient x1='50%' y1='0%' x2='50%' y2='100%' id='linearGradient-4'> <stop stop-color='#FFDF63' offset='0%'></stop> <stop stop-color='#FFCD02' offset='100%'></stop> </linearGradient> <rect id='path-5' x='0' y='-1' width='60' height='20'></rect> <filter x='-50%' y='-50%' width='200%' height='200%' filterUnits='objectBoundingBox' id='filter-6'> <feOffset dx='0' dy='0.5' in='SourceAlpha' result='shadowOffsetOuter1'></feOffset> <feGaussianBlur stdDeviation='0.5' in='shadowOffsetOuter1' result='shadowBlurOuter1'></feGaussianBlur> <feColorMatrix values='0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.3 0' type='matrix' in='shadowBlurOuter1'></feColorMatrix> </filter> <filter x='-50%' y='-50%' width='200%' height='200%' filterUnits='objectBoundingBox' id='filter-7'> <feOffset dx='0' dy='-0.5' in='SourceAlpha' result='shadowOffsetInner1'></feOffset> <feComposite in='shadowOffsetInner1' in2='SourceAlpha' operator='arithmetic' k2='-1' k3='1' result='shadowInnerInner1'></feComposite> <feColorMatrix values='0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.2 0' type='matrix' in='shadowInnerInner1'></feColorMatrix> </filter> </defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'> <g id='Home-Screen-•-iPhone-SE' transform='translate(-92.000000, -203.000000)'> <g id='Home-Screen-•-iPhone-6s-Copy' transform='translate(0.000000, 27.000000)'> <g id='Notes' transform='translate(92.000000, 176.000000)'> <mask id='mask-3' fill='white'> <use xlink:href='#path-2'></use> </mask> <use id='BG' fill='url(#linearGradient-1)' xlink:href='#path-2'></use> <g id='header' mask='url(#mask-3)'> <use fill='black' fill-opacity='1' filter='url(#filter-6)' xlink:href='#path-5'></use> <use fill='url(#linearGradient-4)' fill-rule='evenodd' xlink:href='#path-5'></use> <use fill='black' fill-opacity='1' filter='url(#filter-7)' xlink:href='#path-5'></use> </g> <polygon id='line' fill='#B7B7B7' mask='url(#mask-3)' points='59.75 30.5 60 30.5 60 30 59.75 30 -0.25 30 -0.5 30 -0.5 30.5 -0.25 30.5'></polygon> <polygon id='line' fill='#B7B7B7' mask='url(#mask-3)' points='59.75 41.5 60 41.5 60 41 59.75 41 -0.25 41 -0.5 41 -0.5 41.5 -0.25 41.5'></polygon> <polygon id='line' fill='#B7B7B7' mask='url(#mask-3)' points='59.75 53 60 53 60 52.5 59.75 52.5 -0.25 52.5 -0.5 52.5 -0.5 53 -0.25 53'></polygon> <path d='M58.5,22 L59.5,22 L59.5,23 L58.5,23 L58.5,22 L58.5,22 Z M56.5,22 L57.5,22 L57.5,23 L56.5,23 L56.5,22 L56.5,22 Z M54.5,22 L55.5,22 L55.5,23 L54.5,23 L54.5,22 L54.5,22 Z M52.5,22 L53.5,22 L53.5,23 L52.5,23 L52.5,22 L52.5,22 Z M50.5,22 L51.5,22 L51.5,23 L50.5,23 L50.5,22 L50.5,22 Z M48.5,22 L49.5,22 L49.5,23 L48.5,23 L48.5,22 L48.5,22 Z M46.5,22 L47.5,22 L47.5,23 L46.5,23 L46.5,22 L46.5,22 Z M44.5,22 L45.5,22 L45.5,23 L44.5,23 L44.5,22 L44.5,22 Z M42.5,22 L43.5,22 L43.5,23 L42.5,23 L42.5,22 L42.5,22 Z M40.5,22 L41.5,22 L41.5,23 L40.5,23 L40.5,22 L40.5,22 Z M38.5,22 L39.5,22 L39.5,23 L38.5,23 L38.5,22 L38.5,22 Z M36.5,22 L37.5,22 L37.5,23 L36.5,23 L36.5,22 L36.5,22 Z M34.5,22 L35.5,22 L35.5,23 L34.5,23 L34.5,22 L34.5,22 Z M32.5,22 L33.5,22 L33.5,23 L32.5,23 L32.5,22 L32.5,22 Z M30.5,22 L31.5,22 L31.5,23 L30.5,23 L30.5,22 L30.5,22 Z M28.5,22 L29.5,22 L29.5,23 L28.5,23 L28.5,22 L28.5,22 Z M26.5,22 L27.5,22 L27.5,23 L26.5,23 L26.5,22 L26.5,22 Z M24.5,22 L25.5,22 L25.5,23 L24.5,23 L24.5,22 L24.5,22 Z M22.5,22 L23.5,22 L23.5,23 L22.5,23 L22.5,22 L22.5,22 Z M20.5,22 L21.5,22 L21.5,23 L20.5,23 L20.5,22 L20.5,22 Z M18.5,22 L19.5,22 L19.5,23 L18.5,23 L18.5,22 L18.5,22 Z M16.5,22 L17.5,22 L17.5,23 L16.5,23 L16.5,22 L16.5,22 Z M14.5,22 L15.5,22 L15.5,23 L14.5,23 L14.5,22 L14.5,22 Z M12.5,22 L13.5,22 L13.5,23 L12.5,23 L12.5,22 L12.5,22 Z M10.5,22 L11.5,22 L11.5,23 L10.5,23 L10.5,22 L10.5,22 Z M8.5,22 L9.5,22 L9.5,23 L8.5,23 L8.5,22 L8.5,22 Z M6.5,22 L7.5,22 L7.5,23 L6.5,23 L6.5,22 L6.5,22 Z M4.5,22 L5.5,22 L5.5,23 L4.5,23 L4.5,22 L4.5,22 Z M2.5,22 L3.5,22 L3.5,23 L2.5,23 L2.5,22 L2.5,22 Z M0.5,22 L1.5,22 L1.5,23 L0.5,23 L0.5,22 L0.5,22 Z' id='Rectangle-37' fill='#AAAAAA' mask='url(#mask-3)'></path> </g> </g> </g> </g> </svg>",
  reminders_app: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='60px' height='60px' viewBox='0 0 60 60' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 39.1 (31720) - http://www.bohemiancoding.com/sketch --> <title>min</title> <desc>Created with Sketch.</desc> <defs> <rect id='path-1' x='0' y='0' width='60' height='60' rx='14'></rect> <circle id='path-3' cx='10' cy='12' r='4'></circle> <mask id='mask-4' maskContentUnits='userSpaceOnUse' maskUnits='objectBoundingBox' x='0' y='0' width='8' height='8' fill='white'> <use xlink:href='#path-3'></use> </mask> <mask id='mask-5' maskContentUnits='userSpaceOnUse' maskUnits='objectBoundingBox' x='-0.5' y='-0.5' width='9' height='9'> <rect x='5.5' y='7.5' width='9' height='9' fill='white'></rect> <use xlink:href='#path-3' fill='black'></use> </mask> <circle id='path-6' cx='10' cy='23' r='4'></circle> <mask id='mask-7' maskContentUnits='userSpaceOnUse' maskUnits='objectBoundingBox' x='0' y='0' width='8' height='8' fill='white'> <use xlink:href='#path-6'></use> </mask> <mask id='mask-8' maskContentUnits='userSpaceOnUse' maskUnits='objectBoundingBox' x='-0.5' y='-0.5' width='9' height='9'> <rect x='5.5' y='18.5' width='9' height='9' fill='white'></rect> <use xlink:href='#path-6' fill='black'></use> </mask> <circle id='path-9' cx='10' cy='35' r='4'></circle> <mask id='mask-10' maskContentUnits='userSpaceOnUse' maskUnits='objectBoundingBox' x='0' y='0' width='8' height='8' fill='white'> <use xlink:href='#path-9'></use> </mask> <mask id='mask-11' maskContentUnits='userSpaceOnUse' maskUnits='objectBoundingBox' x='-0.5' y='-0.5' width='9' height='9'> <rect x='5.5' y='30.5' width='9' height='9' fill='white'></rect> <use xlink:href='#path-9' fill='black'></use> </mask> <circle id='path-12' cx='10' cy='46' r='4'></circle> <mask id='mask-13' maskContentUnits='userSpaceOnUse' maskUnits='objectBoundingBox' x='0' y='0' width='8' height='8' fill='white'> <use xlink:href='#path-12'></use> </mask> <mask id='mask-14' maskContentUnits='userSpaceOnUse' maskUnits='objectBoundingBox' x='-0.5' y='-0.5' width='9' height='9'> <rect x='5.5' y='41.5' width='9' height='9' fill='white'></rect> <use xlink:href='#path-12' fill='black'></use> </mask> </defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'> <g id='Home-Screen-•-iPhone-SE' transform='translate(-168.000000, -203.000000)'> <g id='Home-Screen-•-iPhone-6s-Copy' transform='translate(0.000000, 27.000000)'> <g id='min' transform='translate(168.000000, 176.000000)'> <mask id='mask-2' fill='white'> <use xlink:href='#path-1'></use> </mask> <use id='BG' fill='#FFFFFF' xlink:href='#path-1'></use> <g id='circle' mask='url(#mask-2)'> <use stroke='#FFFFFF' mask='url(#mask-4)' fill='#FF9500' fill-rule='evenodd' xlink:href='#path-3'></use> <use stroke='#FF9500' mask='url(#mask-5)' xlink:href='#path-3'></use> </g> <g id='circle' mask='url(#mask-2)'> <use stroke='#FFFFFF' mask='url(#mask-7)' fill='#1BADF8' fill-rule='evenodd' xlink:href='#path-6'></use> <use stroke='#1BADF8' mask='url(#mask-8)' xlink:href='#path-6'></use> </g> <g id='circle' mask='url(#mask-2)'> <use stroke='#FFFFFF' mask='url(#mask-10)' fill='#63DA38' fill-rule='evenodd' xlink:href='#path-9'></use> <use stroke='#63DA38' mask='url(#mask-11)' xlink:href='#path-9'></use> </g> <g id='circle' mask='url(#mask-2)'> <use stroke='#FFFFFF' mask='url(#mask-13)' fill='#CC73E1' fill-rule='evenodd' xlink:href='#path-12'></use> <use stroke='#CC73E1' mask='url(#mask-14)' xlink:href='#path-12'></use> </g> <rect id='line' fill='#AEAEAE' mask='url(#mask-2)' x='19' y='17.5' width='41' height='0.5'></rect> <rect id='line' fill='#AEAEAE' mask='url(#mask-2)' x='19' y='6' width='41' height='0.5'></rect> <rect id='line' fill='#AEAEAE' mask='url(#mask-2)' x='19' y='29' width='41' height='0.5'></rect> <rect id='line' fill='#AEAEAE' mask='url(#mask-2)' x='19' y='40' width='41' height='0.5'></rect> <rect id='line' fill='#AEAEAE' mask='url(#mask-2)' x='19' y='51.5' width='41' height='0.5'></rect> </g> </g> </g> </g> </svg>",
  stocks_app: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='60px' height='60px' viewBox='0 0 60 60' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 39.1 (31720) - http://www.bohemiancoding.com/sketch --> <title>Stocks</title> <desc>Created with Sketch.</desc> <defs> <path d='M39.0815,0 C45.105,0 48.116,0 51.3585,1.025 C54.8985,2.3135 57.6865,5.1015 58.975,8.6415 C60,11.8835 60,14.8955 60,20.9185 L60,39.0815 C60,45.105 60,48.116 58.975,51.3585 C57.6865,54.8985 54.8985,57.6865 51.3585,58.9745 C48.116,60 45.105,60 39.0815,60 L20.9185,60 C14.895,60 11.8835,60 8.6415,58.9745 C5.1015,57.6865 2.3135,54.8985 1.025,51.3585 C0,48.116 0,45.105 0,39.0815 L0,20.9185 C0,14.8955 0,11.8835 1.025,8.6415 C2.3135,5.1015 5.1015,2.3135 8.6415,1.025 C11.8835,0 14.895,0 20.9185,0 L39.0815,0 Z' id='path-1'></path> <linearGradient x1='50%' y1='0%' x2='50%' y2='100%' id='linearGradient-3'> <stop stop-color='#454545' offset='0%'></stop> <stop stop-color='#111112' offset='100%'></stop> </linearGradient> <path d='M41.5,16.0112108 L41.5,-1.5 L41,-1.5 L41,16.0112108 C41.0823405,16.0037907 41.1657276,16 41.25,16 C41.3342724,16 41.4176595,16.0037907 41.5,16.0112108 Z M41.5,21.4887892 L41.5,63 L41,63 L41,21.4887892 C41.0823405,21.4962093 41.1657276,21.5 41.25,21.5 C41.3342724,21.5 41.4176595,21.4962093 41.5,21.4887892 Z M41.25,21 C42.4926407,21 43.5,19.9926407 43.5,18.75 C43.5,17.5073593 42.4926407,16.5 41.25,16.5 C40.0073593,16.5 39,17.5073593 39,18.75 C39,19.9926407 40.0073593,21 41.25,21 Z' id='path-4'></path> <filter x='-50%' y='-50%' width='200%' height='200%' filterUnits='objectBoundingBox' id='filter-5'> <feOffset dx='0' dy='1' in='SourceAlpha' result='shadowOffsetOuter1'></feOffset> <feColorMatrix values='0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.5 0' type='matrix' in='shadowOffsetOuter1'></feColorMatrix> </filter> </defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'> <g id='Home-Screen-•-iPhone-SE' transform='translate(-244.000000, -203.000000)'> <g id='Home-Screen-•-iPhone-6s-Copy' transform='translate(0.000000, 27.000000)'> <g id='Stocks' transform='translate(244.000000, 176.000000)'> <mask id='mask-2' fill='white'> <use xlink:href='#path-1'></use> </mask> <use id='BG' fill='#141416' xlink:href='#path-1'></use> <path d='M-0.484863281,34.0537109 C-0.484863281,34.0537109 1.27239211,34.0644686 3.11938477,34.6320801 C4.70794495,35.120271 6.30098176,36.2523786 7.23388672,36.1945801 C9.25146484,36.0695801 11.3344727,35.3759766 11.3344727,35.3759766 L15.1208496,30.4450684 L18.7275391,33.5263672 L22.4941406,24.6245117 L26.1196289,34.3369141 L30.25,36.8659668 L33.9467773,30.2084961 L37.5385742,29.276123 L41.4316406,18.1323242 L45.1474609,27.2033691 L48.9438477,24.6655273 L52.7734375,31.9936523 L56.3422852,23.8173828 L60.3457031,19.65625 L60.3457031,60.4791166 L-0.304989325,60.4791166 L-0.484863281,34.0537109 Z' id='graph' stroke='#FFFFFF' stroke-width='0.75' fill='url(#linearGradient-3)' mask='url(#mask-2)'></path> <g id='mark' mask='url(#mask-2)'> <use fill='black' fill-opacity='1' filter='url(#filter-5)' xlink:href='#path-4'></use> <use fill='#01A6F1' fill-rule='evenodd' xlink:href='#path-4'></use> </g> <g id='Spark-line' mask='url(#mask-2)' fill='#777778'> <g transform='translate(7.000000, -1.500000)' id='mark'> <rect x='0' y='0' width='0.5' height='64.5'></rect> <rect x='11.5' y='0' width='0.5' height='64.5'></rect> <rect x='23' y='0' width='0.5' height='64.5'></rect> <rect x='45.5' y='0' width='0.5' height='64.5'></rect> </g> </g> </g> </g> </g> </g> </svg>"
};

exports.frames = {
  "fullscreen": {
    height: window.innerHeight,
    width: window.innerWidth,
    scale: 1,
    mobile: false,
    platform: "web"
  },
  "apple-iphone-5s-space-gray": {
    height: 1136,
    width: 640,
    scale: 2,
    mobile: true,
    platform: "iOS"
  },
  "apple-iphone-5s-silver": {
    height: 1136,
    width: 640,
    scale: 2,
    mobile: true,
    platform: "iOS"
  },
  "apple-iphone-5s-gold": {
    height: 1136,
    width: 640,
    scale: 2,
    mobile: true,
    platform: "iOS"
  },
  "apple-iphone-5c-green": {
    height: 1136,
    width: 640,
    scale: 2,
    mobile: true,
    platform: "iOS"
  },
  "apple-iphone-5c-blue": {
    height: 1136,
    width: 640,
    scale: 2,
    mobile: true,
    platform: "iOS"
  },
  "apple-iphone-5c-red": {
    height: 1136,
    width: 640,
    scale: 2,
    mobile: true,
    platform: "iOS"
  },
  "apple-iphone-5c-white": {
    height: 1136,
    width: 640,
    scale: 2,
    mobile: true,
    platform: "iOS"
  },
  "apple-iphone-5c-yellow": {
    height: 1136,
    width: 640,
    scale: 2,
    mobile: true,
    platform: "iOS"
  },
  "apple-iphone-5c-pink": {
    height: 1136,
    width: 640,
    scale: 2,
    mobile: true,
    platform: "iOS"
  },
  "apple-iphone-6s-space-gray": {
    height: 1334,
    width: 750,
    scale: 2,
    mobile: true,
    platform: "iOS"
  },
  "apple-iphone-6s-silver": {
    height: 1334,
    width: 750,
    scale: 2,
    mobile: true,
    platform: "iOS"
  },
  "apple-iphone-6s-gold": {
    height: 1334,
    width: 750,
    scale: 2,
    mobile: true,
    platform: "iOS"
  },
  "apple-iphone-6s-rose-gold": {
    height: 1334,
    width: 750,
    scale: 2,
    mobile: true,
    platform: "iOS"
  },
  "apple-iphone-6s-plus-gold": {
    height: 2208,
    width: 1242,
    scale: 3,
    mobile: true,
    platform: "iOS"
  },
  "apple-iphone-6s-plus-silver": {
    height: 2208,
    width: 1242,
    scale: 3,
    mobile: true,
    platform: "iOS"
  },
  "apple-iphone-6s-plus-space-gray": {
    height: 2208,
    width: 1242,
    scale: 3,
    mobile: true,
    platform: "iOS"
  },
  "apple-iphone-6s-plus": {
    height: 2208,
    width: 1242,
    scale: 3,
    mobile: true,
    platform: "iOS"
  },
  "apple-iphone-6s-plus-rose-gold": {
    height: 2208,
    width: 1242,
    scale: 3,
    mobile: true,
    platform: "iOS"
  },
  "apple-ipad-air-2-gold": {
    height: 2048,
    width: 1536,
    scale: 2,
    mobile: true,
    platform: "iOS"
  },
  "apple-ipad-air-2-silver": {
    height: 2048,
    width: 1536,
    scale: 2,
    mobile: true,
    platform: "iOS"
  },
  "apple-ipad-air-2-space-gray": {
    height: 2048,
    width: 1536,
    scale: 2,
    mobile: true,
    platform: "iOS"
  },
  "apple-ipad-mini-4-gold": {
    height: 2048,
    width: 1536,
    scale: 2,
    mobile: true,
    platform: "iOS"
  },
  "apple-ipad-mini-4-space-gray": {
    height: 2048,
    width: 1536,
    scale: 2,
    mobile: true,
    platform: "iOS"
  },
  "apple-ipad-mini-4-silver": {
    height: 2048,
    width: 1536,
    scale: 2,
    mobile: true,
    platform: "iOS"
  },
  "apple-ipad-pro-gold": {
    height: 2732,
    width: 2048,
    scale: 2,
    mobile: true,
    platform: "iOS"
  },
  "apple-ipad-pro-silver": {
    height: 2732,
    width: 2048,
    scale: 2,
    mobile: true,
    platform: "iOS"
  },
  "apple-ipad-pro-space-gray": {
    height: 2732,
    width: 2048,
    scale: 2,
    mobile: true,
    platform: "iOS"
  }
};

exports.framerFrames = {
  640: 2,
  750: 2,
  768: 2,
  1080: 3,
  1242: 3,
  1440: 4,
  1536: 2
};

exports.realDevices = {
  320: {
    480: {
      name: "iphone",
      display_name: "iPhone",
      width: 320,
      height: 480,
      scale: 1
    }
  },
  480: {
    854: {
      name: "Android One",
      width: 480,
      height: 854,
      scale: 1.5
    }
  },
  640: {
    960: {
      name: "iphone-5",
      display_name: "iPhone 4",
      width: 640,
      height: 960,
      scale: 2
    },
    1136: {
      name: "iphone-5",
      display_name: "iPhone 5",
      width: 640,
      height: 1136,
      scale: 2
    }
  },
  720: {
    1280: {
      name: "XHDPI",
      width: 720,
      height: 1280,
      scale: 2
    }
  },
  750: {
    1118: {
      name: "iphone-6s",
      display_name: "iPhone 6s",
      width: 750,
      height: 1118,
      scale: 2
    },
    1334: {
      name: "iphone-6s",
      display_name: "iPhone 6s",
      width: 750,
      height: 1334,
      scale: 2
    }
  },
  768: {
    1024: {
      name: "ipad",
      display_name: "iPad",
      width: 768,
      height: 1024,
      scale: 1
    },
    1280: {
      name: "Nexus 4",
      width: 768,
      height: 1280,
      scale: 2
    }
  },
  800: {
    1280: {
      name: "Nexus 7",
      width: 800,
      height: 1280,
      scale: 1
    }
  },
  1080: {
    1920: {
      name: "XXHDPI",
      width: 1080,
      height: 1920,
      scale: 3
    }
  },
  1200: {
    1920: {
      name: "Nexus 7",
      width: 1200,
      height: 1920,
      scale: 2
    }
  },
  1242: {
    2208: {
      name: "iphone-6s-plus",
      display_name: "iPhone 6 Plus",
      width: 1242,
      height: 2208,
      scale: 3
    }
  },
  1334: {
    750: {
      name: "iphone-6s",
      display_name: "iPhone 6s",
      width: 750,
      height: 1334,
      scale: 2
    }
  },
  1440: {
    2560: {
      name: "XXXHDPI",
      width: 1440,
      height: 2560,
      scale: 4
    }
  },
  1441: {
    2561: {
      name: "Nexus 6",
      width: 1440,
      height: 2560,
      scale: 4
    }
  },
  1536: {
    2048: {
      name: "ipad",
      display_name: "iPad",
      width: 1536,
      height: 2048,
      scale: 2
    }
  },
  1600: {
    2056: {
      name: "Nexus 10",
      width: 1600,
      height: 2056,
      scale: 2
    }
  },
  2208: {
    1242: {
      name: "iphone-6s-plus",
      display_name: "iPhone 6 Plus",
      width: 1242,
      height: 2208,
      scale: 3
    }
  },
  2048: {
    1536: {
      name: "Nexus 9",
      width: 2048,
      height: 1536,
      scale: 2
    },
    2732: {
      name: "ipad-pro",
      display_name: "iPad Pro",
      width: 2048,
      height: 2732,
      scale: 2
    }
  },
  2560: {
    1600: {
      name: "Nexus 10",
      width: 2560,
      height: 1600,
      scale: 2
    }
  },
  2732: {
    2048: {
      name: "ipad-pro",
      display_name: "iPad Pro",
      width: 2732,
      height: 2048,
      scale: 2
    }
  }
};


},{"ios-kit":"ios-kit"}],"ios-kit-nav-bar":[function(require,module,exports){
var ios;

ios = require('ios-kit');

exports.defaults = {
  title: "Title",
  left: void 0,
  right: "Edit",
  blur: true,
  superLayer: void 0,
  type: "navBar",
  color: 'blue',
  titleColor: 'black',
  backgroundColor: "rgba(255, 255, 255, .8)",
  dividerBackgroundColor: "#B2B2B2"
};

exports.defaults.props = Object.keys(exports.defaults);

exports.create = function(array) {
  var bar, i, layer, len, ref, setLeading, setup, svg;
  setup = ios.utils.setupComponent(array, exports.defaults);
  bar = new ios.View({
    name: "navBar",
    backgroundColor: setup.backgroundColor,
    constraints: {
      leading: 0,
      trailing: 0,
      top: 0,
      height: 64
    }
  });
  bar.bg = new ios.View({
    superLayer: bar,
    backgroundColor: 'transparent',
    name: ".bg",
    constraints: {
      leading: 0,
      trailing: 0,
      height: 44,
      bottom: 0
    }
  });
  bar.divider = new ios.View({
    backgroundColor: setup.dividerBackgroundColor,
    name: ".divider",
    superLayer: bar.bg,
    constraints: {
      height: .5,
      bottom: 0,
      leading: 0,
      trailing: 0
    }
  });
  if (setup.superLayer) {
    setup.superLayer.addSubLayer(bar);
  }
  if (setup.blur) {
    ios.utils.bgBlur(bar);
  }
  if (setup.blur === false && setup.backgroundColor === "rgba(255, 255, 255, .8)") {
    bar.backgroundColor = 'white';
  }
  bar.type = setup.type;
  ref = Framer.CurrentContext.layers;
  for (i = 0, len = ref.length; i < len; i++) {
    layer = ref[i];
    if (layer.type === "statusBar") {
      this.statusBar = layer;
      bar.placeBehind(this.statusBar);
    }
  }
  if (typeof setup.title === "object") {
    setup.title = setup.title.label.html;
  }
  bar.title = new ios.Text({
    fontWeight: "semibold",
    superLayer: bar.bg,
    text: setup.title,
    name: ".title",
    color: setup.titleColor,
    constraints: {
      align: "horizontal",
      bottom: 12
    }
  });
  ios.utils.specialChar(bar.title);
  if (typeof setup.right === "string" && typeof setup.right !== "boolean") {
    bar.right = new ios.Button({
      name: ".right",
      superLayer: bar.bg,
      text: setup.right,
      color: setup.color,
      fontWeight: 500,
      constraints: {
        bottom: 12,
        trailing: 8
      }
    });
    bar.right.type = "button";
    ios.utils.specialChar(bar.right);
  }
  if (typeof setup.right === "object") {
    bar.right = setup.right;
    bar.right.name = ".right";
    bar.right.superLayer = bar.bg;
    bar.right.constraints = {
      trailing: 8,
      bottom: 12
    };
    ios.layout.set(bar.right);
  }
  if (typeof setup.left === "string" && typeof setup.left !== "boolean") {
    setLeading = 8;
    if (setup.left.indexOf("<") !== -1) {
      svg = ios.utils.svg(ios.assets.chevron);
      bar.chevron = new ios.View({
        name: ".chevron",
        width: svg.width,
        height: svg.height,
        backgroundColor: "transparent",
        superLayer: bar.bg
      });
      bar.chevron.html = svg.svg;
      bar.chevron.constraints = {
        bottom: 9,
        leading: 8
      };
      setup.left = setup.left.replace("<", "");
      ios.utils.changeFill(bar.chevron, setup.color);
      setLeading = [bar.chevron, 4];
      ios.layout.set(bar.chevron);
    }
    bar.left = new ios.Button({
      name: ".left",
      superLayer: bar.bg,
      text: setup.left,
      color: setup.color,
      fontWeight: 500,
      constraints: {
        bottom: 12,
        leading: setLeading
      }
    });
    bar.left.type = "button";
    ios.utils.specialChar(bar.left);
    bar.left.on(Events.TouchStart, function() {
      if (bar.chevron) {
        return bar.chevron.animate({
          properties: {
            opacity: .25
          },
          time: .5
        });
      }
    });
    bar.left.on(Events.TouchEnd, function() {
      if (bar.chevron) {
        return bar.chevron.animate({
          properties: {
            opacity: 1
          },
          time: .5
        });
      }
    });
  }
  if (typeof setup.left === "object") {
    bar.left = setup.left;
    bar.left.name = ".left";
    bar.left.superLayer = bar.bg;
    bar.left.constraints = {
      leading: 8,
      bottom: 12
    };
  }
  ios.layout.set(bar.left);
  return bar;
};


},{"ios-kit":"ios-kit"}],"ios-kit-sheet":[function(require,module,exports){
var ios;

ios = require('ios-kit');

exports.defaults = {
  actions: ["Reply", "Reply All", "Forward", "Print"],
  exit: "Cancel",
  animated: true,
  description: void 0,
  target: void 0
};

exports.defaults.props = Object.keys(exports.defaults);

exports.create = function(array) {
  var a, action, i, j, k, l, len, len1, place, ref, ref1, setup, sheet, sheetTip;
  setup = ios.utils.setupComponent(array, exports.defaults);
  ref = Framer.CurrentContext.layers;
  for (j = 0, len = ref.length; j < len; j++) {
    l = ref[j];
    if (l.type === 'sheet') {
      l.dismiss();
    }
  }
  sheet = new ios.View({
    name: "sheet",
    backgroundColor: "transparent",
    constraints: {
      top: 0,
      leading: 0,
      trailing: 0,
      bottom: 0
    }
  });
  sheet.type = 'sheet';
  sheet.menu = new Layer({
    name: "menu",
    superLayer: sheet,
    backgroundColor: "transparent",
    borderRadius: ios.px(12),
    clip: true
  }, ios.isPad() ? (sheetTip = ios.utils.svg(ios.assets.sheetTip), sheet.tip = new ios.View({
    name: '.tip',
    color: 'black',
    superLayer: sheet,
    html: sheetTip.svg,
    height: sheetTip.height - 4,
    width: sheetTip.width,
    backgroundColor: 'transparent',
    constraints: {
      horizontalCenter: setup.target
    }
  }), sheet.linked = setup.target, sheet.linked.ignoreEvents = true) : void 0);
  place = function(t, l) {
    var centerX, h, w;
    w = ios.device.width;
    h = ios.device.height;
    centerX = w / 2;
    if (w - t.x > centerX) {
      if (t.x - ios.px(150) < 0) {
        l.constraints.leading = 10;
      } else {
        l.constraints.horizontalCenter = t;
      }
    } else {
      if (t.x + ios.px(150) > w) {
        l.constraints.trailing = 10;
      } else {
        l.constraints.horizontalCenter = t;
      }
    }
    if (t.y + l.height < h) {
      l.constraints.top = [t, 40];
      if (ios.isPad()) {
        sheet.tip.constraints.bottom = [l, 1];
      }
    } else {
      l.constraints.bottom = [t, 40];
      if (ios.isPad()) {
        sheet.tip.constraints.top = [l, 1];
        sheet.tip.rotation = 180;
      }
    }
    if (ios.isPad()) {
      return ios.layout.set(sheet.tip);
    }
  };
  sheet.dismiss = function() {
    if (ios.isPhone()) {
      sheet.menu.animate({
        properties: {
          y: ios.device.height
        },
        time: .25
      });
      sheet.cancel.animate({
        properties: {
          y: ios.device.height + ios.px(75)
        },
        time: .25
      });
      sheet.overlay.animate({
        properties: {
          opacity: 0
        },
        time: .25
      });
      return Utils.delay(.25, function() {
        return sheet.destroy();
      });
    } else {
      sheet.linked.ignoreEvents = false;
      return Utils.delay(.15, function() {
        return sheet.destroy();
      });
    }
  };
  sheet.call = function() {
    if (ios.isPhone()) {
      sheet.menu.y = ios.device.height;
      sheet.cancel.y = ios.device.height + ios.px(75);
      sheet.overlay.opacity = 0;
      sheet.overlay.animate({
        properties: {
          opacity: .5
        },
        time: .25
      });
      return ios.layout.animate({
        target: [sheet.menu, sheet.cancel],
        time: .25
      });
    } else {
      place(setup.target, sheet.menu);
      return ios.layout.set(sheet.menu);
    }
  };
  if (ios.device.name.indexOf("ipad") === -1) {
    sheet.overlay = new ios.View({
      name: ".overlay",
      backgroundColor: "black",
      opacity: .5,
      superLayer: sheet,
      constraints: {
        top: 0,
        leading: 0,
        trailing: 0,
        bottom: 0
      }
    });
    sheet.overlay.sendToBack();
    sheet.menu.constraints = {
      leading: 10,
      trailing: 10,
      bottom: 57 + 8 + 10,
      height: setup.actions.length * 57
    };
    sheet.cancel = new ios.Button({
      name: ".cancel",
      type: "big",
      text: setup.exit,
      superLayer: sheet,
      constraints: {
        bottom: 10,
        leading: 0,
        trailing: 0
      }
    });
    sheet.cancel.on(Events.TouchEnd, function() {
      return sheet.dismiss();
    });
  } else {
    sheet.menu.constraints = {
      width: 300,
      height: setup.actions.length * 57
    };
    sheet.menu.props = {
      shadowY: 2,
      shadowBlur: ios.px(100),
      shadowColor: "rgba(0,0,0,0.1)"
    };
  }
  ios.layout.set(sheet);
  sheet.actionsArray = [];
  sheet.actions = {};
  ref1 = setup.actions;
  for (i = k = 0, len1 = ref1.length; k < len1; i = ++k) {
    a = ref1[i];
    action = new ios.View({
      name: ".actions.[\"" + a.toLowerCase() + "\"]",
      backgroundColor: "rgba(255,255,255,1)",
      superLayer: sheet.menu,
      constraints: {
        leading: 0,
        trailing: 0,
        height: 57
      }
    });
    action.style["-webkit-box-shadow"] = "inset 0 0 " + ios.px(.5) + "px rgba(0,0,0,.25)";
    action.label = new ios.Text({
      text: a,
      color: ios.color("blue"),
      fontSize: 20,
      superLayer: action,
      constraints: {
        align: "center"
      }
    });
    ios.utils.specialChar(action.label);
    if (i === 0) {
      action.constraints.top = 0;
    } else {
      action.constraints.top = sheet.actionsArray[i - 1];
    }
    action.on(Events.TouchStart, function() {
      return this.animate({
        properties: {
          backgroundColor: this.backgroundColor.darken(10),
          time: .2
        }
      });
    });
    action.on(Events.TouchEnd, function() {
      this.animate({
        properties: {
          backgroundColor: "rgba(255,255,255, .8)"
        },
        time: .2
      });
      return sheet.dismiss();
    });
    ios.layout.set(action);
    sheet.actionsArray.push(action);
    sheet.actions[a.toLowerCase()] = action;
  }
  if (setup.animated) {
    sheet.call();
  }
  if (ios.isPad()) {
    sheet.tip.bringToFront();
  }
  return sheet;
};


},{"ios-kit":"ios-kit"}],"ios-kit-status-bar":[function(require,module,exports){
var ios;

ios = require('ios-kit');

exports.defaults = {
  carrier: "VodafoneRO",
  network: "4G",
  battery: 80,
  signal: 5,
  style: "dark",
  clock24: false,
  type: "statusBar",
  superLayer: void 0
};

exports.defaults.props = Object.keys(exports.defaults);

exports.create = function(array) {
  var batteryIcon, batteryPercent, bluetooth, bluetoothSVG, carrier, dot, gripper, highBattery, i, j, k, l, layer, len, lowBattery, midBattery, network, networkIcon, noNetwork, nonDot, nonDots, ref, ref1, ref2, setup, signal, statusBar, time;
  setup = ios.utils.setupComponent(array, exports.defaults);
  statusBar = new Layer({
    backgroundColor: "transparent",
    name: "statusBar.all",
    superLayer: setup.superLayer
  });
  statusBar.type = setup.type;
  statusBar.constraints = {
    leading: 0,
    trailing: 0,
    height: 20
  };
  switch (ios.device.name) {
    case "iphone-6s-plus":
      this.topConstraint = 5;
      this.batteryIcon = 5;
      this.bluetooth = 5;
      break;
    case "fullscreen":
      this.topConstraint = 5;
      this.batteryIcon = -12;
      this.bluetooth = -10;
      break;
    default:
      this.topConstraint = 3;
      this.batteryIcon = -5;
      this.bluetooth = -5;
  }
  if (setup.style === "light") {
    this.color = "white";
  } else {
    this.color = "black";
  }
  ref = Framer.CurrentContext.layers;
  for (j = 0, len = ref.length; j < len; j++) {
    layer = ref[j];
    if (layer.type === "lockScreen") {
      this.isLockScreenPutilsent = true;
    }
  }
  if (this.isLockScreenPutilsent) {
    gripper = new Layer({
      superLayer: statusBar,
      width: utils.px(37),
      height: utils.px(5),
      name: "gripper",
      backgroundColor: "transparent",
      opacity: .5,
      name: "gripper"
    });
    gripper.html = "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='" + (utils.px(37)) + "px' height='" + (utils.px(5)) + "px' viewBox='0 0 37 5' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 3.6.1 (26313) - http://www.bohemiancoding.com/sketch --> <title>Gripper</title> <desc>Created with Sketch.</desc> <defs></defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'> <g id='Keyboard/Auto-Complete-Bar-Closed' transform='translate(-169.000000, -2.000000)' fill='#FFFFFF'> <rect id='Gripper' x='169.5' y='2.5' width='36' height='4' rx='2.5'></rect> </g> </g> </svg>";
    gripper.constraints = {
      align: "horizontal",
      top: 2
    };
  } else {
    this.time = ios.utils.getTime();
    if (setup.clock24 === false) {
      if (this.time.hours > 11) {
        this.time.stamp = "PM";
      } else {
        this.time.stamp = "AM";
      }
    } else {
      this.time.stamp = "";
    }
    time = new ios.Text({
      style: "statusBarTime",
      text: ios.utils.timeFormatter(this.time, setup.clock24) + " " + this.time.stamp,
      fontSize: 12,
      fontWeight: "semibold",
      superLayer: statusBar,
      color: this.color,
      name: "time"
    });
    time.constraints = {
      align: "horizontal",
      top: this.topConstraint
    };
  }
  signal = [];
  if (setup.signal < 1) {
    noNetwork = new ios.Text({
      superLayer: statusBar,
      fontSize: 12,
      text: "No Network"
    });
    noNetwork.constraints = {
      leading: 7,
      verticalCenter: time
    };
  } else {
    for (i = k = 0, ref1 = setup.signal; 0 <= ref1 ? k < ref1 : k > ref1; i = 0 <= ref1 ? ++k : --k) {
      dot = new Layer({
        height: ios.utils.px(5.5),
        width: ios.utils.px(5.5),
        backgroundColor: "black",
        superLayer: statusBar,
        borderRadius: ios.utils.px(5.5) / 2,
        backgroundColor: this.color,
        name: "signal[" + i + "]"
      });
      if (i === 0) {
        dot.constraints = {
          leading: 7,
          verticalCenter: time
        };
      } else {
        dot.constraints = {
          leading: [signal[i - 1], 1],
          verticalCenter: time
        };
      }
      signal.push(dot);
      ios.layout.set();
    }
    if (setup.signal < 5) {
      nonDots = 5 - setup.signal;
      for (i = l = 0, ref2 = nonDots; 0 <= ref2 ? l < ref2 : l > ref2; i = 0 <= ref2 ? ++l : --l) {
        nonDot = new Layer({
          height: ios.utils.px(5.5),
          width: ios.utils.px(5.5),
          superLayer: statusBar,
          borderRadius: ios.utils.px(5.5) / 2,
          backgroundColor: "transparent",
          name: "signal[" + signal.length + "]"
        });
        nonDot.style.border = (ios.utils.px(1)) + "px solid " + this.color;
        nonDot.constraints = {
          leading: [signal[signal.length - 1], 1],
          verticalCenter: time
        };
        signal.push(nonDot);
        ios.layout.set();
      }
    }
    carrier = new ios.Text({
      style: "statusBarCarrier",
      text: setup.carrier,
      superLayer: statusBar,
      fontSize: 12,
      color: this.color,
      name: "carrier",
      textTransform: "capitalize"
    });
    carrier.constraints = {
      leading: [signal[signal.length - 1], 7],
      verticalCenter: time
    };
    ios.layout.set();
    if (setup.carrier) {
      network = new ios.Text({
        style: "statusBarNetwork",
        text: setup.network,
        superLayer: statusBar,
        fontSize: 12,
        color: this.color,
        name: "network",
        textTransform: "uppercase"
      });
      network.constraints = {
        leading: [carrier, 5],
        verticalCenter: time
      };
    }
    if (setup.carrier === "" || setup.carrier === "wifi") {
      networkIcon = ios.utils.svg(ios.assets.network, this.color);
      network = new Layer({
        width: networkIcon.width,
        height: networkIcon.height,
        superLayer: statusBar,
        backgroundColor: "transparent",
        name: "network"
      });
      network.html = networkIcon.svg;
      ios.utils.changeFill(network, this.color);
      network.constraints = {
        leading: [signal[signal.length - 1], 5],
        verticalCenter: time
      };
    }
  }
  batteryIcon = new Layer({
    width: ios.utils.px(25),
    height: ios.utils.px(10),
    superLayer: statusBar,
    backgroundColor: "transparent",
    name: "batteryIcon"
  });
  if (setup.battery > 70) {
    highBattery = ios.utils.svg(ios.assets.batteryHigh);
    batteryIcon.html = highBattery.svg;
    ios.utils.changeFill(batteryIcon, this.color);
  }
  if (setup.battery <= 70 && setup.battery > 20) {
    midBattery = ios.utils.svg(ios.assets.batteryMid);
    batteryIcon.html = midBattery.svg;
    ios.utils.changeFill(batteryIcon, this.color);
  }
  if (setup.battery <= 20) {
    lowBattery = ios.utils.svg(ios.assets.batteryLow);
    batteryIcon.html = lowBattery.svg;
    ios.utils.changeFill(batteryIcon, this.color);
  }
  batteryIcon.constraints = {
    trailing: 7,
    top: this.batteryIcon
  };
  batteryPercent = new ios.Text({
    style: "statusBarBatteryPercent",
    text: setup.battery + "%",
    superLayer: statusBar,
    fontSize: 12,
    color: this.color,
    name: "batteryPercent"
  });
  batteryPercent.constraints = {
    trailing: [batteryIcon, 3],
    verticalCenter: time
  };
  bluetoothSVG = ios.utils.svg(ios.assets.bluetooth);
  bluetooth = new Layer({
    width: bluetoothSVG.width,
    height: bluetoothSVG.height,
    superLayer: statusBar,
    opacity: .5,
    backgroundColor: "transparent",
    name: "bluetooth"
  });
  bluetooth.html = bluetoothSVG.svg;
  ios.utils.changeFill(bluetooth, this.color);
  bluetooth.constraints = {
    top: this.bluetooth,
    trailing: [batteryPercent, 7]
  };
  ios.layout.set();
  statusBar.battery = {};
  statusBar.battery.percent = batteryPercent;
  statusBar.battery.icon = batteryIcon;
  statusBar.bluetooth = bluetooth;
  statusBar.time = time;
  statusBar.network = network;
  statusBar.carrier = carrier;
  statusBar.signal = signal;
  return statusBar;
};


},{"ios-kit":"ios-kit"}],"ios-kit-status-bar":[function(require,module,exports){
var ios;

ios = require('ios-kit');

exports.defaults = {
  carrier: "VodafoneRO",
  network: "4G",
  battery: 80,
  signal: 5,
  style: "dark",
  clock24: false,
  type: "statusBar",
  superLayer: void 0
};

exports.defaults.props = Object.keys(exports.defaults);

exports.create = function(array) {
  var batteryIcon, batteryPercent, bluetooth, bluetoothSVG, carrier, dot, gripper, highBattery, i, j, k, l, layer, len, lowBattery, midBattery, network, networkIcon, noNetwork, nonDot, nonDots, ref, ref1, ref2, setup, signal, statusBar, time;
  setup = ios.utils.setupComponent(array, exports.defaults);
  statusBar = new Layer({
    backgroundColor: "transparent",
    name: "statusBar.all",
    superLayer: setup.superLayer
  });
  statusBar.type = setup.type;
  statusBar.constraints = {
    leading: 0,
    trailing: 0,
    height: 20
  };
  switch (ios.device.name) {
    case "iphone-6s-plus":
      this.topConstraint = 5;
      this.batteryIcon = 5;
      this.bluetooth = 5;
      break;
    case "fullscreen":
      this.topConstraint = 5;
      this.batteryIcon = -12;
      this.bluetooth = -10;
      break;
    default:
      this.topConstraint = 3;
      this.batteryIcon = -5;
      this.bluetooth = -5;
  }
  if (setup.style === "light") {
    this.color = "white";
  } else {
    this.color = "black";
  }
  ref = Framer.CurrentContext.layers;
  for (j = 0, len = ref.length; j < len; j++) {
    layer = ref[j];
    if (layer.type === "lockScreen") {
      this.isLockScreenPutilsent = true;
    }
  }
  if (this.isLockScreenPutilsent) {
    gripper = new Layer({
      superLayer: statusBar,
      width: utils.px(37),
      height: utils.px(5),
      name: "gripper",
      backgroundColor: "transparent",
      opacity: .5,
      name: "gripper"
    });
    gripper.html = "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='" + (utils.px(37)) + "px' height='" + (utils.px(5)) + "px' viewBox='0 0 37 5' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 3.6.1 (26313) - http://www.bohemiancoding.com/sketch --> <title>Gripper</title> <desc>Created with Sketch.</desc> <defs></defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'> <g id='Keyboard/Auto-Complete-Bar-Closed' transform='translate(-169.000000, -2.000000)' fill='#FFFFFF'> <rect id='Gripper' x='169.5' y='2.5' width='36' height='4' rx='2.5'></rect> </g> </g> </svg>";
    gripper.constraints = {
      align: "horizontal",
      top: 2
    };
  } else {
    this.time = ios.utils.getTime();
    if (setup.clock24 === false) {
      if (this.time.hours > 11) {
        this.time.stamp = "PM";
      } else {
        this.time.stamp = "AM";
      }
    } else {
      this.time.stamp = "";
    }
    time = new ios.Text({
      style: "statusBarTime",
      text: ios.utils.timeFormatter(this.time, setup.clock24) + " " + this.time.stamp,
      fontSize: 12,
      fontWeight: "semibold",
      superLayer: statusBar,
      color: this.color,
      name: "time"
    });
    time.constraints = {
      align: "horizontal",
      top: this.topConstraint
    };
  }
  signal = [];
  if (setup.signal < 1) {
    noNetwork = new ios.Text({
      superLayer: statusBar,
      fontSize: 12,
      text: "No Network"
    });
    noNetwork.constraints = {
      leading: 7,
      verticalCenter: time
    };
  } else {
    for (i = k = 0, ref1 = setup.signal; 0 <= ref1 ? k < ref1 : k > ref1; i = 0 <= ref1 ? ++k : --k) {
      dot = new Layer({
        height: ios.utils.px(5.5),
        width: ios.utils.px(5.5),
        backgroundColor: "black",
        superLayer: statusBar,
        borderRadius: ios.utils.px(5.5) / 2,
        backgroundColor: this.color,
        name: "signal[" + i + "]"
      });
      if (i === 0) {
        dot.constraints = {
          leading: 7,
          verticalCenter: time
        };
      } else {
        dot.constraints = {
          leading: [signal[i - 1], 1],
          verticalCenter: time
        };
      }
      signal.push(dot);
      ios.layout.set();
    }
    if (setup.signal < 5) {
      nonDots = 5 - setup.signal;
      for (i = l = 0, ref2 = nonDots; 0 <= ref2 ? l < ref2 : l > ref2; i = 0 <= ref2 ? ++l : --l) {
        nonDot = new Layer({
          height: ios.utils.px(5.5),
          width: ios.utils.px(5.5),
          superLayer: statusBar,
          borderRadius: ios.utils.px(5.5) / 2,
          backgroundColor: "transparent",
          name: "signal[" + signal.length + "]"
        });
        nonDot.style.border = (ios.utils.px(1)) + "px solid " + this.color;
        nonDot.constraints = {
          leading: [signal[signal.length - 1], 1],
          verticalCenter: time
        };
        signal.push(nonDot);
        ios.layout.set();
      }
    }
    carrier = new ios.Text({
      style: "statusBarCarrier",
      text: setup.carrier,
      superLayer: statusBar,
      fontSize: 12,
      color: this.color,
      name: "carrier",
      textTransform: "capitalize"
    });
    carrier.constraints = {
      leading: [signal[signal.length - 1], 7],
      verticalCenter: time
    };
    ios.layout.set();
    if (setup.carrier) {
      network = new ios.Text({
        style: "statusBarNetwork",
        text: setup.network,
        superLayer: statusBar,
        fontSize: 12,
        color: this.color,
        name: "network",
        textTransform: "uppercase"
      });
      network.constraints = {
        leading: [carrier, 5],
        verticalCenter: time
      };
    }
    if (setup.carrier === "" || setup.carrier === "wifi") {
      networkIcon = ios.utils.svg(ios.assets.network, this.color);
      network = new Layer({
        width: networkIcon.width,
        height: networkIcon.height,
        superLayer: statusBar,
        backgroundColor: "transparent",
        name: "network"
      });
      network.html = networkIcon.svg;
      ios.utils.changeFill(network, this.color);
      network.constraints = {
        leading: [signal[signal.length - 1], 5],
        verticalCenter: time
      };
    }
  }
  batteryIcon = new Layer({
    width: ios.utils.px(25),
    height: ios.utils.px(10),
    superLayer: statusBar,
    backgroundColor: "transparent",
    name: "batteryIcon"
  });
  if (setup.battery > 70) {
    highBattery = ios.utils.svg(ios.assets.batteryHigh);
    batteryIcon.html = highBattery.svg;
    ios.utils.changeFill(batteryIcon, this.color);
  }
  if (setup.battery <= 70 && setup.battery > 20) {
    midBattery = ios.utils.svg(ios.assets.batteryMid);
    batteryIcon.html = midBattery.svg;
    ios.utils.changeFill(batteryIcon, this.color);
  }
  if (setup.battery <= 20) {
    lowBattery = ios.utils.svg(ios.assets.batteryLow);
    batteryIcon.html = lowBattery.svg;
    ios.utils.changeFill(batteryIcon, this.color);
  }
  batteryIcon.constraints = {
    trailing: 7,
    top: this.batteryIcon
  };
  batteryPercent = new ios.Text({
    style: "statusBarBatteryPercent",
    text: setup.battery + "%",
    superLayer: statusBar,
    fontSize: 12,
    color: this.color,
    name: "batteryPercent"
  });
  batteryPercent.constraints = {
    trailing: [batteryIcon, 3],
    verticalCenter: time
  };
  bluetoothSVG = ios.utils.svg(ios.assets.bluetooth);
  bluetooth = new Layer({
    width: bluetoothSVG.width,
    height: bluetoothSVG.height,
    superLayer: statusBar,
    opacity: .5,
    backgroundColor: "transparent",
    name: "bluetooth"
  });
  bluetooth.html = bluetoothSVG.svg;
  ios.utils.changeFill(bluetooth, this.color);
  bluetooth.constraints = {
    top: this.bluetooth,
    trailing: [batteryPercent, 7]
  };
  ios.layout.set();
  statusBar.battery = {};
  statusBar.battery.percent = batteryPercent;
  statusBar.battery.icon = batteryIcon;
  statusBar.bluetooth = bluetooth;
  statusBar.time = time;
  statusBar.network = network;
  statusBar.carrier = carrier;
  statusBar.signal = signal;
  return statusBar;
};

},{"ios-kit":"ios-kit"}],"ios-kit-tab-bar":[function(require,module,exports){
var ios;

ios = require('ios-kit');

exports.defaults = {
  tab: {
    label: "label",
    icon: "<?xml version='1.0' encoding='UTF-8' standalone='no'?> <svg width='25px' height='25px' viewBox='0 0 25 25' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <!-- Generator: Sketch 3.6.1 (26313) - http://www.bohemiancoding.com/sketch --> <title>1</title> <desc>Created with Sketch.</desc> <defs></defs> <g id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='1'> <g id='Bottom-Bar/Tab-Bar' transform='translate(-25.000000, -7.000000)' fill='#0076FF'> <g id='Placeholders' transform='translate(25.000000, 7.000000)'> <rect id='1' x='0' y='0' width='25' height='25' rx='3'></rect> </g> </g> </g> </svg>",
    active: void 0,
    inactive: void 0,
    tabBar: void 0,
    type: "tab"
  },
  bar: {
    tabs: [],
    start: 0,
    type: "tabBar",
    backgroundColor: "white",
    activeColor: "blue",
    inactiveColor: "gray",
    blur: true
  }
};

exports.defaults.tab.props = Object.keys(exports.defaults.tab);

exports.defaults.bar.props = Object.keys(exports.defaults.bar);

exports.tab = function(array) {
  var setup, specs, svgFrame, tab;
  setup = ios.utils.setupComponent(array, exports.defaults.tab);
  specs = {
    width: 75
  };
  switch (ios.device.name) {
    case "iphone-5":
      specs.width = 55;
  }
  tab = new ios.View({
    backgroundColor: "transparent",
    name: setup.label,
    constraints: {
      width: specs.width,
      height: 49
    }
  });
  tab.view = new ios.View({
    name: setup.label + ".view",
    backgroundColor: "transparent",
    constraints: {
      top: 0,
      bottom: 0,
      leading: 0,
      trailing: 0
    }
  });
  tab.active = new ios.View({
    name: ".active",
    backgroundColor: "transparent",
    constraints: {
      top: 0,
      bottom: 0,
      leading: 0,
      trailing: 0
    },
    superLayer: tab
  });
  tab.active.icon = new ios.View({
    name: ".active.icon",
    constraints: {
      width: 25,
      height: 25,
      align: "horizontal",
      top: 7
    },
    backgroundColor: "transparent",
    superLayer: tab.active
  });
  if (setup.active === void 0) {
    svgFrame = ios.utils.svg(setup.icon);
    tab.active.icon.html = svgFrame.svg;
    tab.active.icon.width = svgFrame.width;
    tab.active.icon.height = svgFrame.height;
  } else {
    setup.active.superLayer = tab.active.icon;
    setup.active.props = {
      width: tab.active.icon.width,
      height: tab.active.icon.height
    };
  }
  tab.inactive = new ios.View({
    backgroundColor: "transparent",
    name: ".inactive",
    constraints: {
      top: 0,
      bottom: 0,
      leading: 0,
      trailing: 0
    },
    superLayer: tab
  });
  tab.inactive.icon = new ios.View({
    constraints: {
      width: 25,
      height: 25,
      align: "horizontal",
      top: 7
    },
    backgroundColor: "transparent",
    name: ".inactive.icon",
    superLayer: tab.inactive
  });
  tab.label = new ios.Text({
    text: setup.label,
    superLayer: tab,
    color: "#929292",
    fontSize: 10,
    name: ".label",
    textTransform: "capitalize"
  });
  tab.label.constraints = {
    bottom: 2,
    horizontalCenter: tab.active.icon
  };
  if (setup.inactive === void 0) {
    svgFrame = ios.utils.svg(setup.icon);
    tab.inactive.icon.html = svgFrame.svg;
    tab.inactive.icon.width = svgFrame.width;
    tab.inactive.icon.height = svgFrame.height;
  } else {
    setup.inactive.superLayer = tab.inactive.icon;
    setup.inactive.props = {
      width: tab.inactive.icon.width,
      height: tab.inactive.icon.height
    };
  }
  return tab;
};

exports.bar = function(array) {
  var bar, dummyTab, dummyTab2, i, index, len, ref, setActive, setup, specs, tab;
  setup = ios.utils.setupComponent(array, exports.defaults.bar);
  if (setup.tabs.length === 0) {
    dummyTab = new exports.tab;
    dummyTab2 = new exports.tab;
    setup.tabs.push(dummyTab);
    setup.tabs.push(dummyTab2);
  }
  specs = {
    width: 75
  };
  switch (ios.device.name) {
    case "iphone-5":
      specs.width = 55;
  }
  bar = new ios.View({
    backgroundColor: "transparent",
    name: "tabBar",
    constraints: {
      leading: 0,
      trailing: 0,
      bottom: 0,
      height: 49
    }
  });
  bar.bg = new ios.View({
    superLayer: bar,
    name: ".bg",
    constraints: {
      leading: 0,
      trailing: 0,
      bottom: 0,
      height: 49
    }
  });
  bar.divider = new ios.View({
    backgroundColor: "#B2B2B2",
    name: ".divider",
    superLayer: bar,
    constraints: {
      top: 0,
      leading: 0,
      trailing: 0,
      height: .5
    }
  });
  bar.box = new ios.View({
    superLayer: bar,
    backgroundColor: "transparent",
    name: ".box",
    constraints: {
      height: 49,
      width: setup.tabs.length * specs.width
    }
  });
  setActive = function(tabIndex) {
    var i, index, len, ref, results, tab;
    ref = setup.tabs;
    results = [];
    for (index = i = 0, len = ref.length; i < len; index = ++i) {
      tab = ref[index];
      if (index === tabIndex) {
        tab.label.color = ios.utils.color(setup.activeColor);
        tab.active.visible = true;
        tab.inactive.visible = false;
        results.push(tab.view.visible = true);
      } else {
        tab.label.color = ios.utils.color(setup.inactiveColor);
        tab.active.visible = false;
        tab.inactive.visible = true;
        results.push(tab.view.visible = false);
      }
    }
    return results;
  };
  ref = setup.tabs;
  for (index = i = 0, len = ref.length; i < len; index = ++i) {
    tab = ref[index];
    bar.box.addSubLayer(tab);
    ios.utils.changeFill(tab.active.icon, ios.utils.color(setup.activeColor));
    ios.utils.changeFill(tab.inactive.icon, ios.utils.color(setup.inactiveColor));
    tab.label.color = ios.utils.color(setup.inactiveColor);
    bar.bg.backgroundColor = setup.backgroundColor;
    if (setup.blur) {
      bar.bg.backgroundColor = "rgba(255,255,255, .9)";
      ios.utils.bgBlur(bar.bg);
    }
    if (index === 0) {
      tab.constraints.leading = 0;
    } else {
      tab.constraints.leading = setup.tabs[index - 1];
    }
    ios.layout.set(tab);
    tab.on(Events.TouchStart, function() {
      var tabIndex;
      tabIndex = this.x / ios.utils.px(specs.width);
      return setActive(tabIndex);
    });
  }
  bar.box.constraints = {
    align: "horizontal"
  };
  ios.layout.set(bar.box);
  setActive(setup.start);
  bar.tabs = setup.tabs;
  return bar;
};


},{"ios-kit":"ios-kit"}],"ios-kit-temp":[function(require,module,exports){
var ios;

ios = require('ios-kit');

exports.defaults = {
  key: "value"
};

exports.defaults.props = Object.keys(exports.defaults);

exports.create = function(array) {
  var setup;
  setup = ios.utils.setupComponent(array, exports.defaults);
};


},{"ios-kit":"ios-kit"}],"ios-kit-text":[function(require,module,exports){
var ios;

ios = require('ios-kit');

exports.defaults = {
  editable: true,
  constraints: void 0,
  text: "iOS Text Layer",
  type: "text",
  x: 0,
  y: 0,
  width: -1,
  height: -1,
  superLayer: void 0,
  style: "default",
  lines: 1,
  textAlign: "left",
  backgroundColor: "transparent",
  color: "black",
  fontSize: 17,
  fontFamily: "-apple-system, Helvetica, Arial, sans-serif",
  fontWeight: "regular",
  lineHeight: "auto",
  name: "text layer",
  opacity: 1,
  textTransform: "none",
  letterSpacing: 0,
  name: "text layer",
  selectable: true,
  selectColor: "rgba(0, 118, 255, .2)",
  selectControls: "#0076FF"
};

exports.defaults.props = Object.keys(exports.defaults);

exports.create = function(array) {
  var exceptions, i, j, len, len1, prop, ref, ref1, setup, textFrame, textLayer;
  setup = ios.utils.setupComponent(array, exports.defaults);
  exceptions = Object.keys(setup);
  textLayer = new ios.View({
    backgroundColor: "transparent",
    name: setup.name,
    superLayer: setup.superLayer,
    constraints: setup.constraints
  });
  textLayer.type = "text";
  textLayer.html = setup.text;
  ref = ios.lib.layerProps;
  for (i = 0, len = ref.length; i < len; i++) {
    prop = ref[i];
    if (setup[prop]) {
      if (prop === "color") {
        setup[prop] = ios.utils.color(setup[prop]);
      }
      textLayer[prop] = setup[prop];
    }
  }
  ref1 = ios.lib.layerStyles;
  for (j = 0, len1 = ref1.length; j < len1; j++) {
    prop = ref1[j];
    if (setup[prop]) {
      if (prop === "lineHeight" && setup[prop] === "auto") {
        textLayer.style.lineHeight = setup.fontSize;
      }
      if (prop === "fontWeight") {
        switch (setup[prop]) {
          case "ultrathin":
            setup[prop] = 100;
            break;
          case "thin":
            setup[prop] = 200;
            break;
          case "light":
            setup[prop] = 300;
            break;
          case "regular":
            setup[prop] = 400;
            break;
          case "medium":
            setup[prop] = 500;
            break;
          case "semibold":
            setup[prop] = 600;
            break;
          case "bold":
            setup[prop] = 700;
            break;
          case "black":
            setup[prop] = 800;
        }
      }
      if (prop === "fontSize" || prop === "lineHeight" || prop === "letterSpacing") {
        setup[prop] = ios.utils.px(setup[prop]) + "px";
      }
      textLayer.style[prop] = setup[prop];
    }
  }
  textFrame = ios.utils.textAutoSize(textLayer);
  textLayer.props = {
    height: textFrame.height,
    width: textFrame.width
  };
  if (setup.editable) {
    textLayer.on("change:html", function() {
      textFrame = ios.utils.textAutoSize(textLayer);
      return textLayer.props = {
        height: textFrame.height,
        width: textFrame.width
      };
    });
  }
  ios.layout.set({
    target: textLayer
  });
  return textLayer;
};


},{"ios-kit":"ios-kit"}],"ios-kit-utils":[function(require,module,exports){
var ios;

ios = require('ios-kit');

exports.pt = function(px) {
  var pt;
  pt = px / ios.device.scale;
  pt = Math.round(pt);
  return pt;
};

exports.px = function(pt) {
  var px;
  px = pt * ios.device.scale;
  px = Math.round(px);
  return px;
};

exports.color = function(colorString) {
  var color;
  color = "";
  if (typeof colorString === "string") {
    colorString = colorString.toLowerCase();
    if (colorString.slice(0, 4) === "rgba") {
      return colorString;
    }
  }
  switch (colorString) {
    case "red":
      color = new Color("#FE3824");
      break;
    case "blue":
      color = new Color("#0076FF");
      break;
    case "pink":
      color = new Color("#FE2851");
      break;
    case "grey":
      color = new Color("#929292");
      break;
    case "gray":
      color = new Color("#929292");
      break;
    case "black":
      color = new Color("#030303");
      break;
    case "white":
      color = new Color("#EFEFF4");
      break;
    case "orange":
      color = new Color("#FF9600");
      break;
    case "green":
      color = new Color("#44DB5E");
      break;
    case "light blue":
      color = new Color("#54C7FC");
      break;
    case "light-blue":
      color = new Color("#54C7FC");
      break;
    case "yellow":
      color = new Color("#FFCD00");
      break;
    case "light key":
      color = new Color("#9DA7B3");
      break;
    case "light-key":
      color = new Color("#9DA7B3");
      break;
    default:
      if (colorString[0] === "#" || colorString.toHexString()[0] === "#") {
        color = new Color(colorString);
      } else {
        color = new Color("#929292");
      }
  }
  return color;
};

exports.clean = function(string) {
  string = string.replace(/[&]nbsp[;]/gi, " ").replace(/[<]br[>]/gi, "");
  return string;
};

exports.svg = function(svg) {
  var endIndex, hEndIndex, hStartIndex, height, heightString, newHeight, newString, newWidth, startIndex, string, wEndIndex, wStartIndex, width;
  startIndex = svg.search("<svg width=");
  endIndex = svg.search(" viewBox");
  string = svg.slice(startIndex, endIndex);
  wStartIndex = string.search("=") + 2;
  wEndIndex = string.search("px");
  width = string.slice(wStartIndex, wEndIndex);
  newWidth = exports.px(width);
  heightString = string.slice(wEndIndex + 4, string.length);
  hStartIndex = heightString.search("=") + 2;
  hEndIndex = heightString.search("px");
  height = heightString.slice(hStartIndex, hEndIndex);
  newHeight = exports.px(height);
  newString = string.replace(width, newWidth);
  newString = newString.replace(height, newHeight);
  svg = svg.replace(string, newString);
  return {
    svg: svg,
    width: newWidth,
    height: newHeight
  };
};

exports.changeFill = function(layer, color) {
  var endIndex, fillString, newString, startIndex, string;
  startIndex = layer.html.search("fill=\"#");
  fillString = layer.html.slice(startIndex, layer.html.length);
  endIndex = fillString.search("\">");
  string = fillString.slice(0, endIndex);
  newString = "fill=\"" + exports.color(color);
  return layer.html = layer.html.replace(string, newString);
};

exports.capitalize = function(string) {
  return string.charAt(0).toUpperCase() + string.slice(1);
};

exports.getTime = function() {
  var date, dateObj, day, daysOfTheWeek, hours, mins, month, monthsOfTheYear, secs;
  daysOfTheWeek = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
  monthsOfTheYear = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
  dateObj = new Date();
  month = monthsOfTheYear[dateObj.getMonth()];
  date = dateObj.getDate();
  day = daysOfTheWeek[dateObj.getDay()];
  hours = dateObj.getHours();
  mins = dateObj.getMinutes();
  secs = dateObj.getSeconds();
  return {
    month: month,
    date: date,
    day: day,
    hours: hours,
    mins: mins,
    secs: secs
  };
};

exports.bgBlur = function(layer) {
  layer.style["-webkit-backdrop-filter"] = "blur(" + (exports.px(5)) + "px)";
  return layer;
};

exports.textAutoSize = function(textLayer) {
  var constraints, styles, textFrame;
  constraints = {};
  if (textLayer.constraints) {
    if (textLayer.constraints.height) {
      constraints.height = exports.px(textLayer.constraints.height);
    }
    if (textLayer.constraints.width) {
      constraints.width = exports.px(textLayer.constraints.width);
    }
  }
  styles = {
    fontSize: textLayer.style.fontSize,
    fontFamily: textLayer.style.fontFamily,
    fontWeight: textLayer.style.fontWeight,
    lineHeight: textLayer.style.lineHeight,
    letterSpacing: textLayer.style.letterSpacing,
    textTransform: textLayer.style.textTransform
  };
  textFrame = Utils.textSize(textLayer.html, styles, constraints);
  return {
    width: textFrame.width,
    height: textFrame.height
  };
};

exports.getDevice = function() {
  var device, frame, nameFormatter;
  nameFormatter = function(name) {
    var j, len, removeTerms, term;
    removeTerms = ["apple-", "-gold", "-silver", "-rose", "-space-gray", "-yellow", "-green", "-red", "-white", "-blue", "-mini", "-air", "-2", "-4"];
    for (j = 0, len = removeTerms.length; j < len; j++) {
      term = removeTerms[j];
      name = name.replace(term, "");
    }
    if (name.indexOf("-5s") !== -1) {
      name = name.replace("-5s", "-5");
    }
    if (name.indexOf("-5c") !== -1) {
      name = name.replace("-5c", "-5");
    }
    return name;
  };
  device = "";
  frame = true;
  if (ios.lib.realDevices[innerWidth] && ios.lib.realDevices[innerWidth][innerHeight]) {
    device = ios.lib.realDevices[innerWidth][innerHeight];
    frame = false;
    Framer.Device.deviceType = "fullscreen";
  }
  if (frame) {
    device = {
      name: nameFormatter(Framer.Device.deviceType),
      display_name: Framer.DeviceView.Devices[Framer.Device.deviceType].display_name,
      width: Framer.DeviceView.Devices[Framer.Device.deviceType].screenWidth,
      height: Framer.DeviceView.Devices[Framer.Device.deviceType].screenHeight,
      scale: ios.lib.framerFrames[Framer.DeviceView.Devices[Framer.Device.deviceType].screenWidth]
    };
  }
  if (device.scale === void 0) {
    device.scale = 2;
  }
  if (device.width === void 0) {
    device.width = innerWidth;
  }
  if (device.height === void 0) {
    device.height = innerHeight;
  }
  return device;
  exports.scale = ios.lib.frames[device].scale;
  if (device === "fullscreen") {
    exports.width = window.innerWidth;
    exports.height = window.innerHeight;
  } else {
    exports.width = ios.lib.frames[device].width;
    exports.height = ios.lib.frames[device].height;
    if (window.innerWidth === 1242 || window.innerWidth === 2208) {
      exports.width = window.innerWidth;
      exports.height = window.innerHeight;
      exports.scale = 3;
    }
  }
  exports.mobile = ios.lib.frames[device].mobile;
  exports.platform = ios.lib.frames[device].platform;
  exports.orientation = Framer.Device.orientation;
  device = device.replace("apple-", "");
  device = device.replace("-gold", "");
  device = device.replace("-green", "");
  device = device.replace("-blue", "");
  device = device.replace("-red", "");
  device = device.replace("-white", "");
  device = device.replace("-yellow", "");
  device = device.replace("-pink", "");
  device = device.replace("-space-grey", "");
  device = device.replace("-rose", "");
  device = device.replace("5s", "5");
  device = device.replace("5c", "5");
  device = device.replace("-mini", "");
  device = device.replace("-air", "");
  device = device.replace("-2", "");
  device = device.replace("-4", "");
  device = device.replace("-silver", "");
  capturedDevice.name = device;
  return capturedDevice;
};

exports.specialChar = function(layer) {
  var chosenColor, newText, text;
  text = layer;
  if (layer.type === "button") {
    text = layer.label;
  }
  if (text.html.indexOf("-b") !== -1) {
    newText = text.html.replace("-b ", "");
    exports.update(text, [
      {
        text: newText
      }, {
        fontWeight: 600
      }
    ]);
  }
  if (text.html.indexOf("-r") !== -1) {
    newText = text.html.replace("-r ", "");
    exports.update(text, [
      {
        text: newText
      }, {
        color: "red"
      }
    ]);
  }
  if (text.html.indexOf("-rb") !== -1) {
    newText = text.html.replace("-rb ", "");
    exports.update(text, [
      {
        text: newText
      }, {
        color: "blue"
      }
    ]);
  }
  if (text.html.indexOf("-lb") !== -1) {
    newText = text.html.replace("-lb ", "");
    exports.update(text, [
      {
        text: newText
      }, {
        color: "light-blue"
      }
    ]);
  }
  if (text.html.indexOf("-g") !== -1) {
    newText = text.html.replace("-g ", "");
    exports.update(text, [
      {
        text: newText
      }, {
        color: "green"
      }
    ]);
  }
  if (text.html.indexOf("-o") !== -1) {
    newText = text.html.replace("-o ", "");
    exports.update(text, [
      {
        text: newText
      }, {
        color: "orange"
      }
    ]);
  }
  if (text.html.indexOf("-p") !== -1) {
    newText = text.html.replace("-p ", "");
    exports.update(text, [
      {
        text: newText
      }, {
        color: "orange"
      }
    ]);
  }
  if (text.html.indexOf("-y") !== -1) {
    newText = text.html.replace("-y ", "");
    exports.update(text, [
      {
        text: newText
      }, {
        color: "yellow"
      }
    ]);
  }
  if (text.html.indexOf("-#") !== -1) {
    chosenColor = text.html.slice(1, 8);
    newText = text.html.slice(9, text.html.length);
    exports.update(text, [
      {
        text: newText
      }, {
        color: chosenColor
      }
    ]);
  }
  if (text.html.indexOf("-") !== -1) {
    newText = text.html.replace("- ", "");
    exports.update(text, [
      {
        text: newText
      }
    ]);
  }
  if (layer.buttonType === "text") {
    layer.width = text.width;
  }
  ios.layout.set(layer);
  if (layer.type === "button") {
    layer.width = text.width;
  }
  return text.color;
};

exports.update = function(layer, array) {
  var change, j, key, len, textFrame, value;
  if (array === void 0) {
    array = [];
  }
  if (layer.type === "text") {
    for (j = 0, len = array.length; j < len; j++) {
      change = array[j];
      key = Object.keys(change)[0];
      value = change[key];
      if (key === "text") {
        layer.html = value;
      }
      if (key === "fontWeight") {
        layer.style[key] = value;
      }
      if (key === "color") {
        layer.color = exports.color(value);
      }
    }
    textFrame = exports.textAutoSize(layer);
    layer.width = textFrame.width;
    layer.height = textFrame.height;
  }
  return ios.layout.set();
};

exports.autoColor = function(colorObject) {
  var blue, color, green, red, rgb;
  rgb = colorObject.toRgbString();
  rgb = rgb.substring(4, rgb.length - 1);
  rgb = rgb.replace(/ /g, '');
  rgb = rgb.replace(/ /g, '');
  rgb = rgb.split(',');
  red = rgb[0];
  green = rgb[1];
  blue = rgb[2];
  color = "";
  if ((red * 0.299 + green * 0.587 + blue * 0.114) > 186) {
    color = "#000";
  } else {
    color = "#FFF";
  }
  return color;
};

exports.sameParent = function(layer1, layer2) {
  var parentOne, parentTwo;
  parentOne = layer1.superLayer;
  parentTwo = layer2.superLayer;
  if (parentOne === parentTwo) {
    return true;
  } else {
    return false;
  }
};

exports.timeDelegate = function(layer, clockType) {
  this.time = exports.getTime();
  return Utils.delay(60 - this.time.secs, function() {
    this.time = exports.getTime();
    exports.update(layer, [
      {
        text: exports.timeFormatter(this.time, clockType)
      }
    ]);
    return Utils.interval(60, function() {
      this.time = exports.getTime();
      return exports.update(layer, [
        {
          text: exports.timeFormatter(this.time, clockType)
        }
      ]);
    });
  });
};

exports.timeFormatter = function(timeObj, clockType) {
  if (clockType === false) {
    if (timeObj.hours > 12) {
      timeObj.hours = timeObj.hours - 12;
    }
    if (timeObj.hours === 0) {
      timeObj.hours = 12;
    }
  }
  if (timeObj.mins < 10) {
    timeObj.mins = "0" + timeObj.mins;
  }
  return timeObj.hours + ":" + timeObj.mins;
};

exports.setupComponent = function(array, defaults) {
  var i, j, len, obj, ref;
  if (array === void 0) {
    array = [];
  }
  obj = {};
  ref = defaults.props;
  for (j = 0, len = ref.length; j < len; j++) {
    i = ref[j];
    if (array[i] !== void 0) {
      obj[i] = array[i];
    } else {
      obj[i] = defaults[i];
    }
  }
  return obj;
};

exports.emojiFormatter = function(string) {
  var arrayOfCodes, code, decoded, j, k, len, len1, unicodeFormat;
  unicodeFormat = "";
  if (string[0] === "E" || string[0] === "3" || string[0] === "2" || string[0] === "C") {
    arrayOfCodes = string.split(" ");
    for (j = 0, len = arrayOfCodes.length; j < len; j++) {
      code = arrayOfCodes[j];
      unicodeFormat = unicodeFormat + "%" + code;
    }
  } else {
    arrayOfCodes = string.split(" ");
    unicodeFormat = "%F0%9F";
    for (k = 0, len1 = arrayOfCodes.length; k < len1; k++) {
      code = arrayOfCodes[k];
      unicodeFormat = unicodeFormat + "%" + code;
    }
  }
  decoded = decodeURIComponent(unicodeFormat);
  return decoded;
};

exports.buildEmojisObject = function() {
  var code, emoji, emojis, index, j, len, ref, results;
  emojis = [];
  ref = ios.assets.emojiCodes;
  results = [];
  for (index = j = 0, len = ref.length; j < len; index = ++j) {
    code = ref[index];
    emoji = exports.emojiFormatter(code);
    results.push(emojis.push(emoji));
  }
  return results;
};

exports.write = function(obj, text) {
  if (obj.type === 'field') {
    return obj.text.html = obj.text.html + text;
  } else {
    return obj.html = obj.html + text;
  }
};


},{"ios-kit":"ios-kit"}],"ios-kit-view":[function(require,module,exports){
var ios;

ios = require('ios-kit');

exports.create = function(obj) {
  var i, len, prop, ref, view;
  if (obj === void 0) {
    obj = {};
  }
  view = new Layer;
  view.constraints = {};
  ref = ios.lib.layerProps;
  for (i = 0, len = ref.length; i < len; i++) {
    prop = ref[i];
    if (obj[prop]) {
      view[prop] = obj[prop];
    }
  }
  if (obj["constraints"]) {
    view.constraints = obj["constraints"];
    ios.layout.set(view);
  }
  return view;
};


},{"ios-kit":"ios-kit"}],"ios-kit":[function(require,module,exports){
var conv, layout, library, utils;

exports.layout = layout = require('ios-kit-layout');

exports.lib = library = require('ios-kit-library');

exports.utils = utils = require('ios-kit-utils');

exports.converter = conv = require('ios-kit-converter');

exports.device = utils.getDevice();

exports.assets = library.assets;

exports.isPad = function() {
  if (exports.device.name.indexOf('ipad') !== -1) {
    return true;
  } else {
    return false;
  }
};

exports.isPhone = function() {
  if (exports.device.name.indexOf('iphone') !== -1) {
    return true;
  } else {
    return false;
  }
};

exports.convert = function(sketchObj) {
  return conv.convert(sketchObj);
};

exports.color = function(string) {
  return utils.color(string);
};

exports.px = function(num) {
  return utils.px(num);
};

exports.pt = function(num) {
  return utils.pt(num);
};

exports.alert = require('ios-kit-alert');

exports.banner = require('ios-kit-banner');

exports.button = require('ios-kit-button');

exports.field = require('ios-kit-field');

exports.keyboard = require('ios-kit-keyboard');

exports.nav = require('ios-kit-nav-bar');

exports.sheet = require('ios-kit-sheet');

exports.status = require('ios-kit-status-bar');

exports.tab = require('ios-kit-tab-bar');

exports.text = require('ios-kit-text');

exports.view = require('ios-kit-view');

exports.Alert = exports.alert.create;

exports.Banner = exports.banner.create;

exports.Button = exports.button.create;

exports.Field = exports.field.create;

exports.Keyboard = exports.keyboard.create;

exports.NavBar = exports.nav.create;

exports.Sheet = exports.sheet.create;

exports.StatusBar = exports.status.create;

exports.Tab = exports.tab.tab;

exports.TabBar = exports.tab.bar;

exports.Text = exports.text.create;

exports.View = exports.view.create;

exports.l = {};


},{"ios-kit-alert":"ios-kit-alert","ios-kit-banner":"ios-kit-banner","ios-kit-button":"ios-kit-button","ios-kit-converter":"ios-kit-converter","ios-kit-field":"ios-kit-field","ios-kit-keyboard":"ios-kit-keyboard","ios-kit-layout":"ios-kit-layout","ios-kit-library":"ios-kit-library","ios-kit-nav-bar":"ios-kit-nav-bar","ios-kit-sheet":"ios-kit-sheet","ios-kit-status-bar":"ios-kit-status-bar","ios-kit-tab-bar":"ios-kit-tab-bar","ios-kit-text":"ios-kit-text","ios-kit-utils":"ios-kit-utils","ios-kit-view":"ios-kit-view"}],"ipz-chatbot":[function(require,module,exports){
var IpzChatBot, IpzMessenger, ios,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ios = require("ios-kit");

IpzMessenger = require("ipz-messenger");

IpzChatBot = (function(superClass) {
  extend(IpzChatBot, superClass);

  IpzChatBot.flow = void 0;

  IpzChatBot.view = void 0;

  IpzChatBot.statusBar = void 0;

  function IpzChatBot(options) {
    if (options == null) {
      options = {};
    }
    if (options.name == null) {
      options.name = "ChatBot";
    }
    if (options.width == null) {
      options.width = Screen.width;
    }
    if (options.height == null) {
      options.height = Screen.height;
    }
    if (options.backgroundColor == null) {
      options.backgroundColor = Screen.backgroundColor;
    }
    IpzChatBot.__super__.constructor.call(this, options);
    this.statusBar = new ios.StatusBar({
      carrier: "VodafoneRO"
    });
    this.flow = new FlowComponent({
      superLayer: this
    });
    this.flow.header = this.statusBar;
  }

  IpzChatBot.prototype.showNext = function(viewName) {
    this.view = (function() {
      switch (viewName) {
        case "Main":
          return new IpzMessenger({
            superLayer: this,
            y: this.statusBar.maxY
          });
      }
    }).call(this);
    return this.flow.showNext(this.view);
  };

  IpzChatBot.prototype.setUser = function(user) {
    this.view.setUser(user);
    return this.statusBar.carrier = user.Carrier;
  };

  return IpzChatBot;

})(Layer);

module.exports = IpzChatBot;


},{"ios-kit":"ios-kit","ipz-messenger":"ipz-messenger"}],"ipz-dal-usersDAL":[function(require,module,exports){
var BaseDAL, CallsDAL, UsersDAL,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

BaseDAL = (function() {
  var apikey, url;

  function BaseDAL() {}

  url = "https://fbusers-4494.restdb.io/rest";

  apikey = "5956382dafce09e87211e986";

  BaseDAL.prototype.getDbData = function(table, query, max, filter, sort, sortDir, callback) {
    var queryString;
    queryString = (url + "/" + table + "?apikey=" + apikey + "&max=" + max + "&sort=" + sort + "&dir=" + sortDir + "&filter=" + filter + "&idtolink=true&q=") + JSON.stringify(query);
    return Utils.domLoadData(queryString, callback);
  };

  return BaseDAL;

})();

UsersDAL = (function(superClass) {
  var users;

  extend(UsersDAL, superClass);

  function UsersDAL() {
    return UsersDAL.__super__.constructor.apply(this, arguments);
  }

  users = [];

  UsersDAL.prototype.getUsers = function(query, max, filter, sort, sortDir, callback) {
    users = this.getDbData("fbusers", query, max, filter, sort, sortDir, callback);
    return users;
  };

  UsersDAL.prototype.getActiveUsers = function(users) {
    var activeUsers, i, len, user;
    activeUsers = [];
    for (i = 0, len = users.length; i < len; i++) {
      user = users[i];
      if (user.status === "active") {
        activeUsers.push(user);
      }
    }
    return activeUsers;
  };

  UsersDAL.prototype.getBirthdayUsers = function(users) {
    var birthdayUsers, i, len, user;
    birthdayUsers = [];
    for (i = 0, len = users.length; i < len; i++) {
      user = users[i];
      if (user.birthday === true) {
        birthdayUsers.push(user);
      }
    }
    return birthdayUsers;
  };

  UsersDAL.prototype.getFavoriteUsers = function(users) {
    var favoriteUsers, i, len, user;
    favoriteUsers = [];
    for (i = 0, len = users.length; i < len; i++) {
      user = users[i];
      if (user.favorite === true) {
        favoriteUsers.push(user);
      }
    }
    return favoriteUsers;
  };

  UsersDAL.prototype.getMyDays = function(users) {
    var i, len, myDays, user;
    myDays = [];
    for (i = 0, len = users.length; i < len; i++) {
      user = users[i];
      if (user.myDay === true) {
        myDays.push(user);
      }
    }
    return myDays;
  };

  module.exports = UsersDAL;

  return UsersDAL;

})(BaseDAL);

CallsDAL = (function() {
  var apikey, calls, url;

  function CallsDAL() {}

  url = "https://fbusers-4494.restdb.io/rest/calls";

  apikey = "8be0d27776dab9483acffbe9715ee02512be3";

  calls = [];

  CallsDAL.prototype.getCalls = function(query, max, filter, sort, sortDir) {
    var GETdata, users;
    GETdata = (url + "?apikey=" + apikey + "&max=" + max + "&sort=" + sort + "&dir={sortDir}&filter=" + filter + "&idtolink=true&q=") + JSON.stringify(query);
    users = JSON.parse(Utils.domLoadDataSync(GETdata));
    return calls;
  };

  module.exports(CallsDAL);

  return CallsDAL;

})();


},{}],"ipz-master-layout":[function(require,module,exports){
var IpzMessenger, MasterLayout, ios;

ios = require("ios-kit");

IpzMessenger = require("ipz-messenger");

MasterLayout = (function() {
  MasterLayout.contentView = void 0;

  function MasterLayout() {
    var mainView, statusBar;
    mainView = new ios.View({
      name: "mainView",
      width: Screen.width,
      backgroundColor: Screen.backgroundColor
    });
    statusBar = new ios.StatusBar({
      superLayer: mainView,
      carrier: "VodafoneRO"
    });
    this.contentView = new ios.View({
      name: "mainContent",
      backgroundColor: Screen.backgroundColor,
      constraints: {
        top: statusBar.height,
        leading: 0,
        trailing: Screen.width
      }
    });
  }

  MasterLayout.prototype.openApp = function(appName) {
    var app;
    switch (appName) {
      case "Messenger":
        app = new IpzMessenger(this.contentView);
        return app;
    }
  };

  return MasterLayout;

})();

module.exports = MasterLayout;


},{"ios-kit":"ios-kit","ipz-messenger":"ipz-messenger"}],"ipz-messenger-calls":[function(require,module,exports){
var IpzMessengerCalls, IpzMessengerSearchBox, ios, ipz;

ios = require('ios-kit');

ipz = require('ipz-messenger-kit');

IpzMessengerSearchBox = require("ipz-messenger-searchBox");

IpzMessengerCalls = (function() {
  IpzMessengerCalls.header = void 0;

  IpzMessengerCalls.flow = void 0;

  function IpzMessengerCalls(parentView) {
    var searchBox;
    this.header = new ios.View({
      superLayer: parentView,
      width: parentView.width,
      height: 64,
      backgroundColor: "white"
    });
    searchBox = new IpzMessengerSearchBox(this.header);
  }

  return IpzMessengerCalls;

})();

module.exports = IpzMessengerCalls;


},{"ios-kit":"ios-kit","ipz-messenger-kit":"ipz-messenger-kit","ipz-messenger-searchBox":"ipz-messenger-searchBox"}],"ipz-messenger-home":[function(require,module,exports){
var IpzMessengerHome, ios, ipz,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ios = require('ios-kit');

ipz = require('ipz-messenger-kit');

IpzMessengerHome = (function(superClass) {
  extend(IpzMessengerHome, superClass);

  IpzMessengerHome.avatar = void 0;

  IpzMessengerHome.messagesTab = void 0;

  function IpzMessengerHome(options) {
    var activeTab, compose, groupsTab, navBar, searchBox;
    if (options == null) {
      options = {};
    }
    if (options.name == null) {
      options.name = "Messenger.Home";
    }
    if (options.width == null) {
      options.width = options.superLayer.width;
    }
    if (options.height == null) {
      options.height = options.superLayer.height;
    }
    if (options.backgroundColor == null) {
      options.backgroundColor = Screen.backgroundColor;
    }
    if (options.navBarLabelsFontSize == null) {
      options.navBarLabelsFontSize = 17;
    }
    IpzMessengerHome.__super__.constructor.call(this, options);
    searchBox = new ipz.IpzMessengerSearchBox({
      superLayer: this
    });
    this.avatar = new ipz.IpzAvatar({
      scale: 0.7,
      superLayer: this,
      x: Align.left(10),
      y: Align.top(-3),
      name: "Avatar"
    });
    compose = new Layer({
      superLayer: this,
      name: "compose",
      image: "images/CreateIcon.png",
      x: Align.right(-10),
      width: 24,
      height: 24
    });
    activeTab = new ipz.IpzMessengerTab({
      label: "Active",
      fontsize: options.navBarLabelsFontSize,
      superLayer: this,
      view: new ios.View({
        name: "Active.view",
        superLayer: this,
        width: this.width,
        height: this.height,
        backgroundColor: Screen.backgroundColor
      })
    });
    groupsTab = new ipz.IpzMessengerTab({
      label: "Groups",
      fontsize: options.navBarLabelsFontSize,
      superLayer: this,
      view: new ios.View({
        name: "Groups.view",
        superLayer: this,
        width: this.width,
        height: this.height,
        backgroundColor: Screen.backgroundColor
      })
    });
    this.messagesTab = new ipz.IpzMessengerTab({
      label: "Messages",
      fontsize: options.navBarLabelsFontSize,
      superLayer: this,
      view: new ScrollComponent({
        name: "MessagesScroll",
        superLayer: this,
        scrollHorizontal: false,
        directionLock: true
      })
    });
    this.messagesTab.view.content.backgroundColor = this.backgroundColor;
    navBar = new ipz.IpzMessengerTabBar({
      superLayer: this,
      tabs: [this.messagesTab, activeTab, groupsTab],
      activeColor: "blue",
      inactiveColor: "grey",
      type: "navBar",
      height: 22,
      barTop: searchBox.maxY + 5
    });
  }

  IpzMessengerHome.prototype.setUser = function(user) {
    var lastMessages, myDays;
    this.avatar.setUser(user);
    myDays = new ipz.IpzMyDay({
      parent: this.messagesTab.view.content
    }, user.MyDays);
    return lastMessages = new ipz.IpzMessageList({
      parent: this.messagesTab.view.content,
      y: myDays.maxY
    }, user.Friends);
  };

  return IpzMessengerHome;

})(Layer);

module.exports = IpzMessengerHome;


},{"ios-kit":"ios-kit","ipz-messenger-kit":"ipz-messenger-kit"}],"ipz-messenger-kit":[function(require,module,exports){
var kit, nav, tab;

nav = require('ipz-messenger-nav-bar');

tab = require('ipz-messenger-tab-bar');

kit = require('messenger-kit');

exports.IpzMessengerHome = require("ipz-messenger-home");

exports.IpzMessengerCalls = require("ipz-messenger-calls");

exports.IpzMessengerSearchBox = require("ipz-messenger-searchBox");

exports.IpzMessengerNavBar = nav.create;

exports.IpzMessengerTab = tab.tab;

exports.IpzMessengerTabBar = tab.bar;

exports.IpzAvatar = kit.Avatar;

exports.IpzMessageList = kit.MessageList;

exports.IpzMessageListItem = kit.MessageListItem;

exports.IpzActiveFriendsScrollList = kit.ActiveFriendsScrollList;

exports.IpzActiveFriends = kit.ActiveFriends;

exports.IpzMyDay = kit.MyDays;

exports.style = kit.style;


},{"ipz-messenger-calls":"ipz-messenger-calls","ipz-messenger-home":"ipz-messenger-home","ipz-messenger-nav-bar":"ipz-messenger-nav-bar","ipz-messenger-searchBox":"ipz-messenger-searchBox","ipz-messenger-tab-bar":"ipz-messenger-tab-bar","messenger-kit":"messenger-kit"}],"ipz-messenger-nav-bar":[function(require,module,exports){
var ios;

ios = require('ios-kit');

exports.defaults = {
  left: void 0,
  center: void 0,
  right: "Edit",
  blur: true,
  superLayer: void 0,
  type: "navBar",
  activeColor: 'blue',
  inactiveColor: 'grey',
  backgroundColor: "rgba(255, 255, 255, .8)",
  dividerBackgroundColor: "#B2B2B2"
};

exports.defaults.props = Object.keys(exports.defaults);

exports.create = function(array) {
  var bar, i, layer, len, ref, setup;
  setup = ios.utils.setupComponent(array, exports.defaults);
  bar = new ios.View({
    name: "navBar",
    backgroundColor: setup.backgroundColor,
    constraints: {
      leading: 0,
      trailing: 0,
      top: 0,
      height: 64
    }
  });
  bar.bg = new ios.View({
    superLayer: bar,
    backgroundColor: 'transparent',
    name: ".bg",
    constraints: {
      leading: 0,
      trailing: 0,
      height: 44,
      bottom: 0
    }
  });
  bar.divider = new ios.View({
    backgroundColor: setup.dividerBackgroundColor,
    name: ".divider",
    superLayer: bar.bg,
    constraints: {
      height: .5,
      bottom: 0,
      leading: 0,
      trailing: 0
    }
  });
  if (setup.superLayer) {
    setup.superLayer.addSubLayer(bar);
  }
  if (setup.blur) {
    ios.utils.bgBlur(bar);
  }
  if (setup.blur === false && setup.backgroundColor === "rgba(255, 255, 255, .8)") {
    bar.backgroundColor = 'white';
  }
  bar.type = setup.type;
  ref = Framer.CurrentContext.layers;
  for (i = 0, len = ref.length; i < len; i++) {
    layer = ref[i];
    if (layer.type === "statusBar") {
      this.statusBar = layer;
      bar.placeBehind(this.statusBar);
    }
  }
  if (typeof setup.left === "string" && typeof setup.left !== "boolean") {
    bar.left = new ios.Button({
      name: ".left",
      superLayer: bar.bg,
      text: setup.left,
      color: setup.activeColor,
      fontWeight: 500,
      constraints: {
        bottom: 12,
        leading: 8
      }
    });
    bar.left.type = "button";
    ios.utils.specialChar(bar.left);
  }
  if (typeof setup.left === "object") {
    bar.left = setup.left;
    bar.left.name = ".left";
    bar.left.superLayer = bar.bg;
    bar.left.constraints = {
      leading: 8,
      bottom: 12
    };
    ios.layout.set(bar.left);
  }
  if (typeof setup.center === "string" && typeof setup.center !== "boolean") {
    bar.center = new ios.Button({
      name: ".center",
      superLayer: bar.bg,
      text: setup.center,
      color: setup.inactiveColor,
      fontWeight: 500,
      constraints: {
        bottom: 12,
        align: "horizontal"
      }
    });
    bar.center.type = "button";
    ios.utils.specialChar(bar.center);
  }
  if (typeof setup.center === "object") {
    bar.center = setup.center;
    bar.center.name = ".right";
    bar.center.superLayer = bar.bg;
    bar.center.constraints = {
      align: "horizontal",
      bottom: 12
    };
    ios.layout.set(bar.center);
  }
  if (typeof setup.right === "string" && typeof setup.right !== "boolean") {
    bar.right = new ios.Button({
      name: ".right",
      superLayer: bar.bg,
      text: setup.right,
      color: setup.inactiveColor,
      fontWeight: 500,
      constraints: {
        bottom: 12,
        trailing: 8
      }
    });
    bar.right.type = "button";
    ios.utils.specialChar(bar.right);
  }
  if (typeof setup.right === "object") {
    bar.right = setup.right;
    bar.right.name = ".right";
    bar.right.superLayer = bar.bg;
    bar.right.constraints = {
      trailing: 8,
      bottom: 12
    };
    ios.layout.set(bar.right);
  }
  bar.left.on(Events.TouchStart, function() {
    bar.left.color = setup.activeColor;
    bar.center.color = setup.inactiveColor;
    return bar.right.color = setup.inactiveColor;
  });
  bar.center.on(Events.TouchStart, function() {
    bar.left.color = setup.inactiveColor;
    bar.center.color = setup.activeColor;
    return bar.right.color = setup.inactiveColor;
  });
  bar.right.on(Events.TouchStart, function() {
    bar.left.color = setup.inactiveColor;
    bar.center.color = setup.inactiveColor;
    return bar.right.color = setup.activeColor;
  });
  return bar;
};


},{"ios-kit":"ios-kit"}],"ipz-messenger-searchBox":[function(require,module,exports){
var IpzMessengerSearchBox,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

IpzMessengerSearchBox = (function(superClass) {
  extend(IpzMessengerSearchBox, superClass);

  function IpzMessengerSearchBox(options) {
    var search, searchBar, searchIcon, searchPlaceholder;
    if (options == null) {
      options = {};
    }
    if (options.name == null) {
      options.name = "Messenger.SearchBox";
    }
    if (options.width == null) {
      options.width = options.superLayer.width;
    }
    options.height = 32;
    if (options.backgroundColor == null) {
      options.backgroundColor = Screen.backgroundColor;
    }
    IpzMessengerSearchBox.__super__.constructor.call(this, options);
    searchBar = new Layer({
      superLayer: this,
      width: this.width,
      height: 32,
      backgroundColor: "transparent"
    });
    search = new Layer({
      width: searchBar.width - 100,
      x: Align.center,
      superLayer: searchBar,
      height: 28,
      borderRadius: 5,
      backgroundColor: "#DEDEDE"
    });
    searchPlaceholder = new TextLayer({
      superLayer: search,
      text: "Search",
      fontSize: 14,
      fontFamily: ".SF NS Display",
      letterSpacing: 0.0,
      x: Align.center,
      y: Align.center
    });
    searchIcon = new Layer({
      superLayer: search,
      image: "images/SearchIcon.png",
      height: 12,
      width: 12,
      y: Align.center
    });
    searchIcon.x = searchPlaceholder.x - (searchIcon.width + 5);
  }

  return IpzMessengerSearchBox;

})(Layer);

module.exports = IpzMessengerSearchBox;


},{}],"ipz-messenger-tab-bar":[function(require,module,exports){
var ios, utils;

ios = require('ios-kit');

utils = require('ipz-utils');

exports.defaults = {
  tab: {
    superLayer: void 0,
    view: void 0,
    label: "label",
    fontsize: 10,
    activeIcon: void 0,
    iconsize: 25,
    padding: 5,
    alwaysActive: false,
    canHaveBadge: true,
    badgeSize: 12,
    badgeColor: "#FF3B30",
    badgeTextStyle: {
      fontSize: 10,
      color: "#fff",
      textAlign: "center"
    }
  },
  bar: {
    superLayer: void 0,
    type: "tabBar",
    tabs: [],
    start: 0,
    barTop: 0,
    height: 52,
    backgroundColor: "white",
    blur: false,
    activeColor: "blue",
    inactiveColor: "gray",
    viewTop: 0
  }
};

exports.defaults.tab.props = Object.keys(exports.defaults.tab);

exports.defaults.bar.props = Object.keys(exports.defaults.bar);

exports.tab = function(array) {
  var setup, tab;
  setup = ios.utils.setupComponent(array, exports.defaults.tab);
  tab = new ios.View({
    superLayer: setup.superLayer,
    backgroundColor: "transparent",
    name: setup.label
  });
  if (setup.view !== void 0) {
    tab.view = setup.view;
    tab.view.constraints = {
      leading: 0,
      trailing: 0,
      bottom: 0
    };
  } else {
    tab.view = new ios.View({
      superLayer: setup.superLayer,
      name: setup.label + ".view",
      backgroundColor: "transparent",
      constraints: {
        leading: 0,
        trailing: 0,
        top: 0,
        bottom: 0
      }
    });
  }
  tab.container = new ios.View({
    name: setup.label + ".container",
    superLayer: tab,
    backgroundColor: "transparent",
    constraints: {
      top: setup.padding,
      bottom: setup.padding,
      leading: setup.padding,
      trailing: setup.padding
    }
  });
  if (setup.activeIcon !== void 0) {
    tab.icon = new ios.View({
      name: setup.label + ".icon",
      superLayer: tab.container,
      backgroundColor: "transparent",
      constraints: {
        width: setup.iconsize,
        height: setup.iconsize,
        align: "horizontal"
      }
    });
    tab.imageLayer = new ios.View({
      name: setup.label + ".image",
      superLayer: tab.icon,
      image: setup.activeIcon,
      backgroundColor: "transparent",
      constraints: {
        width: setup.iconsize,
        height: setup.iconsize
      }
    });
    if (setup.canHaveBadge) {
      tab.badge = new TextLayer({
        name: setup.label + ".badge",
        superLayer: tab.icon,
        x: Align.right(7),
        y: Align.top,
        width: setup.badgeSize,
        height: setup.badgeSize,
        borderRadius: 18,
        backgroundColor: setup.badgeColor,
        fontSize: setup.badgeTextStyle.fontSize,
        color: setup.badgeTextStyle.color,
        textAlign: setup.badgeTextStyle.textAlign
      });
      tab.badge.visible = false;
    }
  }
  if (setup.label !== "") {
    tab.label = new ios.Text({
      name: setup.label + ".label",
      superLayer: tab.container,
      text: setup.label,
      color: "#929292",
      fontSize: setup.fontsize,
      constraints: {
        align: "horizontal",
        bottom: 0
      }
    });
  }
  tab.setActive = function(value) {
    if (value === true) {
      tab.label.color = ios.utils.color("blue");
      if (tab.imageLayer !== void 0) {
        tab.imageLayer.saturate = 100;
        tab.imageLayer.brightness = 100;
      }
    } else {
      if (!setup.alwaysActive) {
        tab.label.color = ios.utils.color("grey");
        if (tab.imageLayer !== void 0) {
          tab.imageLayer.saturate = 0;
          tab.imageLayer.brightness = 150;
        }
      }
    }
    return utils.setVisible(tab.view, value);
  };
  return tab;
};

exports.bar = function(array) {
  var bar, dummyTab, dummyTab2, i, index, len, ref, setActive, setup, specs, tab;
  setup = ios.utils.setupComponent(array, exports.defaults.bar);
  if (setup.tabs.length === 0) {
    dummyTab = new exports.tab;
    dummyTab2 = new exports.tab;
    setup.tabs.push(dummyTab);
    setup.tabs.push(dummyTab2);
  }
  specs = {
    width: setup.superLayer.width / setup.tabs.length
  };
  bar = new ios.View({
    superLayer: setup.superLayer,
    backgroundColor: "transparent",
    name: "tabBar",
    constraints: {
      leading: 0,
      trailing: 0,
      height: setup.height
    }
  });
  bar.bg = new ios.View({
    superLayer: bar,
    name: ".bg",
    constraints: {
      leading: 0,
      trailing: 0,
      top: 0,
      bottom: 0
    }
  });
  bar.divider = new ios.View({
    backgroundColor: "#B2B2B2",
    name: ".divider",
    superLayer: bar,
    constraints: {
      leading: 0,
      trailing: 0,
      height: .5
    }
  });
  bar.box = new ios.View({
    superLayer: bar,
    backgroundColor: "transparent",
    name: ".box",
    constraints: {
      leading: 0,
      trailing: 0,
      top: 0,
      bottom: 0
    }
  });
  if (setup.type === "navBar") {
    bar.constraints.top = setup.barTop;
    bar.bg.constraints.top = 0;
    bar.divider.y = setup.height;
  } else {
    bar.constraints.bottom = 0;
    bar.bg.constraints.bottom = 0;
  }
  setActive = function(tabIndex) {
    var i, index, len, ref, results, tab;
    ref = setup.tabs;
    results = [];
    for (index = i = 0, len = ref.length; i < len; index = ++i) {
      tab = ref[index];
      if (index === tabIndex) {
        results.push(tab.setActive(true));
      } else {
        results.push(tab.setActive(false));
      }
    }
    return results;
  };
  bar.setBadgeValue = (function(_this) {
    return function(tabIndex, value) {
      var i, index, len, ref, results, tab;
      ref = setup.tabs;
      results = [];
      for (index = i = 0, len = ref.length; i < len; index = ++i) {
        tab = ref[index];
        if (index === tabIndex) {
          if (value) {
            tab.badge.text = value;
            results.push(tab.badge.visible = true);
          } else {
            results.push(tab.badge.visible = false);
          }
        } else {
          results.push(void 0);
        }
      }
      return results;
    };
  })(this);
  ref = setup.tabs;
  for (index = i = 0, len = ref.length; i < len; index = ++i) {
    tab = ref[index];
    bar.box.addSubLayer(tab);
    tab.label.color = ios.utils.color(setup.inactiveColor);
    bar.bg.backgroundColor = setup.backgroundColor;
    if (setup.blur) {
      bar.bg.backgroundColor = "rgba(255,255,255, .9)";
      ios.utils.bgBlur(bar.bg);
    }
    if (setup.type === "navBar") {
      tab.view.constraints.top = setup.barTop + setup.height;
    } else {
      tab.view.constraints.top = setup.viewTop;
      tab.view.constraints.bottom = setup.height;
    }
    tab.constraints.width = specs.width;
    tab.constraints.height = setup.height;
    if (index === 0) {
      tab.constraints.leading = 0;
    } else {
      tab.constraints.leading = setup.tabs[index - 1];
    }
    ios.layout.set(tab);
    tab.on(Events.TouchStart, function() {
      var tabIndex;
      tabIndex = this.x / ios.utils.px(specs.width);
      return setActive(tabIndex);
    });
  }
  bar.box.constraints = {
    align: "horizontal"
  };
  ios.layout.set(bar.box);
  setActive(setup.start);
  bar.tabs = setup.tabs;
  return bar;
};


},{"ios-kit":"ios-kit","ipz-utils":"ipz-utils"}],"ipz-messenger":[function(require,module,exports){
var IpzMessenger, ios, ipz,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ios = require("ios-kit");

ipz = require("ipz-messenger-kit");

IpzMessenger = (function(superClass) {
  extend(IpzMessenger, superClass);

  IpzMessenger.homeTab = void 0;

  IpzMessenger.tabBar = void 0;

  function IpzMessenger(options) {
    var callsTab, camView, cameraTab, gamesTab, peopleTab;
    if (options == null) {
      options = {};
    }
    if (options.name == null) {
      options.name = "Messenger.Main";
    }
    if (options.width == null) {
      options.width = Screen.width;
    }
    if (options.height == null) {
      options.height = Screen.height;
    }
    if (options.backgroundColor == null) {
      options.backgroundColor = Screen.backgroundColor;
    }
    IpzMessenger.__super__.constructor.call(this, options);
    this.homeTab = new ipz.IpzMessengerTab({
      superLayer: this,
      label: "Home",
      activeIcon: "images/HomeIconActive.png",
      view: new ipz.IpzMessengerHome({
        superLayer: this
      })
    });
    callsTab = new ipz.IpzMessengerTab({
      superLayer: this,
      label: "Calls",
      activeIcon: "images/CallsIconActive.png",
      view: new ios.View({
        name: "Calls.view",
        superLayer: this,
        backgroundColor: "red",
        constraints: {
          leading: 0,
          trailing: 0,
          top: 0,
          bottom: 0
        }
      })
    });
    cameraTab = new ipz.IpzMessengerTab({
      superLayer: this,
      label: "",
      activeIcon: "images/CameraIconActive.png",
      iconsize: 45,
      alwaysActive: true,
      canHaveBadge: false
    });
    peopleTab = new ipz.IpzMessengerTab({
      superLayer: this,
      label: "People",
      activeIcon: "images/PeopleIconActive.png",
      view: new ios.View({
        name: "People.view",
        superLayer: this,
        backgroundColor: "orange",
        constraints: {
          leading: 0,
          trailing: 0,
          top: 0,
          bottom: 0
        }
      })
    });
    gamesTab = new ipz.IpzMessengerTab({
      superLayer: this,
      label: "Games",
      activeIcon: "images/GamesIconActive.png",
      view: new ios.View({
        name: "Games.view",
        superLayer: this,
        backgroundColor: "green",
        constraints: {
          leading: 0,
          trailing: 0,
          top: 0,
          bottom: 0
        }
      })
    });
    this.tabBar = new ipz.IpzMessengerTabBar({
      superLayer: this,
      tabs: [this.homeTab, callsTab, cameraTab, peopleTab, gamesTab],
      start: 0,
      activeColor: "blue",
      inactiveColor: "grey",
      viewTop: options.y
    });
    camView = new ios.View({
      name: "Camera.view",
      superLayer: cameraTab.view,
      backgroundColor: "black",
      constraints: {
        leading: 0,
        trailing: 0,
        top: 0,
        bottom: 0
      }
    });
  }

  IpzMessenger.prototype.setUser = function(user) {
    this.homeTab.view.setUser(user);
    this.tabBar.setBadgeValue(0, user.HomeBadge);
    this.tabBar.setBadgeValue(1, user.CallsBadge);
    this.tabBar.setBadgeValue(3, user.PeopleBadge);
    return this.tabBar.setBadgeValue(4, user.GamesBadge);
  };

  return IpzMessenger;

})(Layer);

module.exports = IpzMessenger;


},{"ios-kit":"ios-kit","ipz-messenger-kit":"ipz-messenger-kit"}],"ipz-utils":[function(require,module,exports){
var IpzUtils;

IpzUtils = (function() {
  function IpzUtils() {}

  IpzUtils.setVisible = function(component, visible) {
    var child, i, index, len, ref;
    component.visible = visible;
    if (component.children.length > 0) {
      ref = component.children;
      for (index = i = 0, len = ref.length; i < len; index = ++i) {
        child = ref[index];
        this.setVisible(child, visible);
      }
    }
    return true;
  };

  return IpzUtils;

})();

module.exports = IpzUtils;


},{}],"messenger-kit":[function(require,module,exports){
var ActiveFriends, ActiveFriendsScrollList, Avatar, MessageList, MessageListItem, MyDays, style, users,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

users = require("ipz-dal-usersDAL");

style = {
  margin: 11,
  margins: 22,
  fontSizes: {
    name: 17,
    messageText: 16,
    messageTime: 15
  },
  fontWeights: []
};

exports.style = style;

Avatar = (function(superClass) {
  extend(Avatar, superClass);

  function Avatar(options) {
    var sign;
    if (options == null) {
      options = {};
    }
    this.changeStatus = bind(this.changeStatus, this);
    if (options.scale == null) {
      options.scale = 1;
    }
    options.width = options.height = 50 * options.scale;
    options.backgroundColor = "#EEEEEE";
    options.borderRadius = 100;
    if (options.image == null) {
      options.image = "images/meIconActive.png";
    }
    if (options.status == null) {
      options.status = "inactive";
    }
    Avatar.__super__.constructor.call(this, options);
    sign = new Layer({
      parent: this,
      x: Align.right,
      y: Align.bottom,
      width: 28 / 100 * this.width,
      height: 28 / 100 * this.height,
      borderRadius: 100,
      backgroundColor: "transparent",
      borderWidth: 2 * options.scale
    });
    sign.states = {
      inactive: {
        borderWidth: 0,
        backgroundColor: "transparent",
        image: null
      },
      active: {
        image: null,
        backgroundColor: "#60CA11",
        borderColor: "#FFFFFF"
      },
      messenger: {
        borderColor: "#FFFFFF",
        image: "images/messengerIcon.png"
      },
      myDay: {
        borderColor: "#FFFFFF",
        borderWidth: options.scale * 2,
        image: null,
        backgroundColor: "#0076FF"
      }
    };
    this.subLayers[0].animate(options.status);
  }

  Avatar.prototype.changeStatus = function(type) {
    return this.subLayers[0].animate(type);
  };

  Avatar.prototype.setUser = function(user) {
    this.image = user.image_0;
    return this.status = user.status;
  };

  return Avatar;

})(Layer);

exports.Avatar = Avatar;

MyDays = (function(superClass) {
  extend(MyDays, superClass);

  function MyDays(options, users) {
    var i, index, len, myDay, user;
    if (options == null) {
      options = {};
    }
    if (options.scale == null) {
      options.scale = 1;
    }
    options.x = Align.center;
    options.width = Screen.width - style.margins;
    options.height = options.scale * (125 + style.margins);
    options.scrollVertical = false;
    options.directionLock = true;
    MyDays.__super__.constructor.call(this, options);
    for (index = i = 0, len = users.length; i < len; index = ++i) {
      user = users[index];
      myDay = new Avatar({});
      myDay.parent = this.content;
      myDay.width = 90;
      myDay.height = 125;
      myDay.x = index * (myDay.width + style.margin / 2);
      myDay.y = Align.center;
      myDay.borderRadius = 5;
      myDay.subLayers[0].width = myDay.subLayers[0].height = 14;
      myDay.subLayers[0].y = Align.top(-4);
      myDay.subLayers[0].x = Align.right(4);
      myDay.changeStatus("myDay");
      myDay.setUser(user);
    }
  }

  return MyDays;

})(ScrollComponent);

exports.MyDays = MyDays;

MessageListItem = (function(superClass) {
  extend(MessageListItem, superClass);

  function MessageListItem(options, user) {
    var avatar, lastMessage, lastMessageTime, name;
    if (options == null) {
      options = {};
    }
    this.changeName = bind(this.changeName, this);
    if (options.scale == null) {
      options.scale = 1;
    }
    options.x = Align.center;
    options.width = Screen.width - style.margins;
    options.height = 74 * options.scale;
    options.backgroundColor = "transparent";
    options.clip = true;
    MessageListItem.__super__.constructor.call(this, options);
    options.name = user.firstname + " " + user.lastname;
    options.lastMessage = user.messageText;
    options.lastMessageTime = user.messageTime;
    avatar = new Avatar({
      parent: this,
      y: style.margin * options.scale
    });
    avatar.setUser(user);
    name = new TextLayer({
      name: "name",
      parent: this,
      x: avatar.maxX + options.scale * 20,
      y: avatar.y,
      lineHeight: 1.5,
      text: options.name,
      fontSize: 17 * options.scale
    });
    lastMessage = new TextLayer({
      name: "lastMessage",
      parent: this,
      x: name.x,
      y: name.maxY,
      lineHeight: 1.5,
      width: this.width - avatar.width - 8,
      height: 19,
      text: options.lastMessage,
      fontSize: 16 * options.scale,
      textOverflow: "elipsis"
    });
    lastMessageTime = new TextLayer({
      name: "lastMessageTime",
      parent: this,
      x: Align.right,
      y: name.y,
      fontSize: 15 * options.scale,
      text: options.lastMessageTime
    });
  }

  MessageListItem.prototype.changeName = function(name) {
    return this.name = name;
  };

  return MessageListItem;

})(Layer);

exports.MessageListItem = MessageListItem;

MessageList = (function(superClass) {
  extend(MessageList, superClass);

  function MessageList(options, users) {
    var i, index, len, message, user;
    if (options == null) {
      options = {};
    }
    if (options.scale == null) {
      options.scale = 1;
    }
    options.width = Screen.width - style.margins;
    options.x = Align.center;
    options.backgroundColor = "transparent";
    options.height = users.length * 74 * options.scale;
    MessageList.__super__.constructor.call(this, options);
    for (index = i = 0, len = users.length; i < len; index = ++i) {
      user = users[index];
      message = new MessageListItem({
        parent: this,
        y: options.scale * index * 74
      }, user);
    }
  }

  return MessageList;

})(Layer);

exports.MessageList = MessageList;

ActiveFriendsScrollList = (function(superClass) {
  extend(ActiveFriendsScrollList, superClass);

  function ActiveFriendsScrollList(options, users) {
    var avatar, container, i, index, len, name, user;
    if (options == null) {
      options = {};
    }
    if (options.scale == null) {
      options.scale = 1;
    }
    options.width = Screen.width - style.margins;
    options.height = options.scale * 100;
    options.scrollVertical = false;
    ActiveFriendsScrollList.__super__.constructor.call(this, options);
    this.content.height = null;
    for (index = i = 0, len = users.length; i < len; index = ++i) {
      user = users[index];
      container = new Layer({
        parent: this.content,
        x: index * (50 + style.margin),
        width: 50,
        backgroundColor: "transparent"
      });
      avatar = new Avatar({
        parent: container
      });
      name = new TextLayer({
        parent: container,
        text: user.firstname,
        fontSize: 14 * options.scale,
        y: avatar.maxY + 5
      });
      container.width = avatar.width;
      avatar.x = name.x = Align.center;
      this.content.height = container.height = avatar.height + name.height + 5;
      this.content.y = Align.center;
      avatar.setUser(user);
    }
  }

  return ActiveFriendsScrollList;

})(ScrollComponent);

exports.ActiveFriendsScrollList = ActiveFriendsScrollList;

ActiveFriends = (function(superClass) {
  extend(ActiveFriends, superClass);

  function ActiveFriends(options, users) {
    var activeFriendsIcon, activeFriendsLabel, activeNow, activeNowSettings, scroll;
    if (options == null) {
      options = {};
    }
    if (options.scale == null) {
      options.scale = 1;
    }
    options.height = 150;
    options.width = Screen.width - style.margins;
    options.backgroundColor = "transparent";
    options.x = Align.center;
    options.directionLock = true;
    ActiveFriends.__super__.constructor.call(this, options);
    activeFriendsLabel = new Layer({
      parent: this,
      width: this.width,
      height: 50 * options.scale,
      backgroundColor: "transparent"
    });
    activeFriendsIcon = new Layer({
      parent: activeFriendsLabel,
      x: Align.left,
      y: Align.center,
      image: "images/activeNowIcon.png",
      width: 20,
      height: 20
    });
    activeNow = new TextLayer({
      parent: activeFriendsLabel,
      x: activeFriendsIcon.maxX + 12,
      fontSize: 16,
      fontWeight: "bold",
      fontColor: "black",
      y: Align.center,
      text: "Active now (" + users.length + ") >"
    });
    activeNowSettings = new Layer({
      parent: activeFriendsLabel,
      x: Align.right,
      y: Align.center,
      image: "images/activeNowSettings.png",
      width: 35,
      height: 35
    });
    scroll = new ActiveFriendsScrollList({
      parent: this,
      y: Align.bottom
    }, users);
  }

  return ActiveFriends;

})(Layer);

exports.ActiveFriends = ActiveFriends;

},{"ipz-dal-usersDAL":"ipz-dal-usersDAL"}],"messenger-kit":[function(require,module,exports){
var ActiveFriends, ActiveFriendsScrollList, Avatar, MessageList, MessageListItem, MyDays, style, users,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

users = require("ipz-dal-usersDAL");

style = {
  margin: 11,
  margins: 22,
  fontSizes: {
    name: 17,
    messageText: 16,
    messageTime: 15
  },
  fontWeights: []
};

exports.style = style;

Avatar = (function(superClass) {
  extend(Avatar, superClass);

  function Avatar(options) {
    var sign;
    if (options == null) {
      options = {};
    }
    this.changeStatus = bind(this.changeStatus, this);
    if (options.scale == null) {
      options.scale = 1;
    }
    options.width = options.height = 50 * options.scale;
    options.backgroundColor = "#EEEEEE";
    options.borderRadius = 100;
    if (options.image == null) {
      options.image = "images/meIconActive.png";
    }
    if (options.status == null) {
      options.status = "inactive";
    }
    Avatar.__super__.constructor.call(this, options);
    sign = new Layer({
      parent: this,
      x: Align.right,
      y: Align.bottom,
      width: 28 / 100 * this.width,
      height: 28 / 100 * this.height,
      borderRadius: 100,
      backgroundColor: "transparent",
      borderWidth: 2 * options.scale
    });
    sign.states = {
      inactive: {
        borderWidth: 0,
        backgroundColor: "transparent",
        image: null
      },
      active: {
        image: null,
        backgroundColor: "#60CA11",
        borderColor: "#FFFFFF"
      },
      messenger: {
        borderColor: "#FFFFFF",
        image: "images/messengerIcon.png"
      },
      myDay: {
        borderColor: "#FFFFFF",
        borderWidth: options.scale * 2,
        image: null,
        backgroundColor: "#0076FF"
      }
    };
    this.subLayers[0].animate(options.status);
  }

  Avatar.prototype.changeStatus = function(type) {
    return this.subLayers[0].animate(type);
  };

  Avatar.prototype.setUser = function(user) {
    this.image = user.image_0;
    return this.status = user.status;
  };

  return Avatar;

})(Layer);

exports.Avatar = Avatar;

MyDays = (function(superClass) {
  extend(MyDays, superClass);

  function MyDays(options, users) {
    var i, index, len, myDay, user;
    if (options == null) {
      options = {};
    }
    if (options.scale == null) {
      options.scale = 1;
    }
    options.x = Align.center;
    options.width = Screen.width - style.margins;
    options.height = options.scale * (125 + style.margins);
    options.scrollVertical = false;
    options.directionLock = true;
    MyDays.__super__.constructor.call(this, options);
    for (index = i = 0, len = users.length; i < len; index = ++i) {
      user = users[index];
      myDay = new Avatar({});
      myDay.parent = this.content;
      myDay.width = 90;
      myDay.height = 125;
      myDay.x = index * (myDay.width + style.margin / 2);
      myDay.y = Align.center;
      myDay.borderRadius = 5;
      myDay.subLayers[0].width = myDay.subLayers[0].height = 14;
      myDay.subLayers[0].y = Align.top(-4);
      myDay.subLayers[0].x = Align.right(4);
      myDay.changeStatus("myDay");
      myDay.setUser(user);
    }
  }

  return MyDays;

})(ScrollComponent);

exports.MyDays = MyDays;

MessageListItem = (function(superClass) {
  extend(MessageListItem, superClass);

  function MessageListItem(options, user) {
    var avatar, lastMessage, lastMessageTime, name;
    if (options == null) {
      options = {};
    }
    this.changeName = bind(this.changeName, this);
    if (options.scale == null) {
      options.scale = 1;
    }
    options.x = Align.center;
    options.width = Screen.width - style.margins;
    options.height = 74 * options.scale;
    options.backgroundColor = "transparent";
    options.clip = true;
    MessageListItem.__super__.constructor.call(this, options);
    options.name = user.firstname + " " + user.lastname;
    options.lastMessage = user.messageText;
    options.lastMessageTime = user.messageTime;
    avatar = new Avatar({
      parent: this,
      y: style.margin * options.scale
    });
    avatar.setUser(user);
    name = new TextLayer({
      name: "name",
      parent: this,
      x: avatar.maxX + options.scale * 20,
      y: avatar.y,
      lineHeight: 1.5,
      text: options.name,
      fontSize: 17 * options.scale
    });
    lastMessage = new TextLayer({
      name: "lastMessage",
      parent: this,
      x: name.x,
      y: name.maxY,
      lineHeight: 1.5,
      width: this.width - avatar.width - 8,
      height: 19,
      text: options.lastMessage,
      fontSize: 16 * options.scale,
      textOverflow: "elipsis"
    });
    lastMessageTime = new TextLayer({
      name: "lastMessageTime",
      parent: this,
      x: Align.right,
      y: name.y,
      fontSize: 15 * options.scale,
      text: options.lastMessageTime
    });
  }

  MessageListItem.prototype.changeName = function(name) {
    return this.name = name;
  };

  return MessageListItem;

})(Layer);

exports.MessageListItem = MessageListItem;

MessageList = (function(superClass) {
  extend(MessageList, superClass);

  function MessageList(options, users) {
    var i, index, len, message, user;
    if (options == null) {
      options = {};
    }
    if (options.scale == null) {
      options.scale = 1;
    }
    options.width = Screen.width - style.margins;
    options.x = Align.center;
    options.backgroundColor = "transparent";
    options.height = users.length * 74 * options.scale;
    MessageList.__super__.constructor.call(this, options);
    for (index = i = 0, len = users.length; i < len; index = ++i) {
      user = users[index];
      message = new MessageListItem({
        parent: this,
        y: options.scale * index * 74
      }, user);
    }
  }

  return MessageList;

})(Layer);

exports.MessageList = MessageList;

ActiveFriendsScrollList = (function(superClass) {
  extend(ActiveFriendsScrollList, superClass);

  function ActiveFriendsScrollList(options, users) {
    var avatar, container, i, index, len, name, user;
    if (options == null) {
      options = {};
    }
    if (options.scale == null) {
      options.scale = 1;
    }
    options.width = Screen.width - style.margins;
    options.height = options.scale * 100;
    options.scrollVertical = false;
    ActiveFriendsScrollList.__super__.constructor.call(this, options);
    this.content.height = null;
    for (index = i = 0, len = users.length; i < len; index = ++i) {
      user = users[index];
      container = new Layer({
        parent: this.content,
        x: index * (50 + style.margin),
        width: 50,
        backgroundColor: "transparent"
      });
      avatar = new Avatar({
        parent: container
      });
      name = new TextLayer({
        parent: container,
        text: user.firstname,
        fontSize: 14 * options.scale,
        y: avatar.maxY + 5
      });
      container.width = avatar.width;
      avatar.x = name.x = Align.center;
      this.content.height = container.height = avatar.height + name.height + 5;
      this.content.y = Align.center;
      avatar.setUser(user);
    }
  }

  return ActiveFriendsScrollList;

})(ScrollComponent);

exports.ActiveFriendsScrollList = ActiveFriendsScrollList;

ActiveFriends = (function(superClass) {
  extend(ActiveFriends, superClass);

  function ActiveFriends(options, users) {
    var activeFriendsIcon, activeFriendsLabel, activeNow, activeNowSettings, scroll;
    if (options == null) {
      options = {};
    }
    if (options.scale == null) {
      options.scale = 1;
    }
    options.height = 150;
    options.width = Screen.width - style.margins;
    options.backgroundColor = "transparent";
    options.x = Align.center;
    options.directionLock = true;
    ActiveFriends.__super__.constructor.call(this, options);
    activeFriendsLabel = new Layer({
      parent: this,
      width: this.width,
      height: 50 * options.scale,
      backgroundColor: "transparent"
    });
    activeFriendsIcon = new Layer({
      parent: activeFriendsLabel,
      x: Align.left,
      y: Align.center,
      image: "images/activeNowIcon.png",
      width: 20,
      height: 20
    });
    activeNow = new TextLayer({
      parent: activeFriendsLabel,
      x: activeFriendsIcon.maxX + 12,
      fontSize: 16,
      fontWeight: "bold",
      fontColor: "black",
      y: Align.center,
      text: "Active now (" + users.length + ") >"
    });
    activeNowSettings = new Layer({
      parent: activeFriendsLabel,
      x: Align.right,
      y: Align.center,
      image: "images/activeNowSettings.png",
      width: 35,
      height: 35
    });
    scroll = new ActiveFriendsScrollList({
      parent: this,
      y: Align.bottom
    }, users);
  }

  return ActiveFriends;

})(Layer);

exports.ActiveFriends = ActiveFriends;


},{"ipz-dal-usersDAL":"ipz-dal-usersDAL"}],"myModule":[function(require,module,exports){
exports.myVar = "myVariable";

exports.myFunction = function() {
  return print("myFunction is running");
};

exports.myArray = [1, 2, 3];


},{}],"tabBarModule":[function(require,module,exports){

/*
	tabBarModule
	–
	Created by Petter Nilsson
	http://petter.pro
 */
var defaults, getItemFromName, setBadgeValue, setSelected, updateViews;

defaults = {
  screenWidth: Screen.width,
  screenHeight: Screen.height,
  barHeight: 98,
  labelOffset: -28,
  iconOffset: -12,
  tintColor: "#007aff",
  tintColorUnselected: "#929292",
  blur: 40,
  opacity: 0.75,
  borderShadow: "0px -1px 0px 0px rgba(0,0,0,0.32)",
  backgroundColor: "#f8f8f8",
  showLabels: true,
  badgeSize: 36,
  badgeColor: "#FF3B30"
};

defaults.labelTextStyle = {
  fontSize: "20px",
  textAlign: "center",
  fontFamily: "Helvetica Neue', sans-serif"
};

defaults.badgeTextStyle = {
  fontSize: "26px",
  lineHeight: "36px",
  color: "#fff",
  textAlign: "center",
  fontFamily: "Helvetica Neue', sans-serif"
};

exports.defaults = defaults;

getItemFromName = function(name) {
  var item, j, len, ref;
  ref = this.items;
  for (j = 0, len = ref.length; j < len; j++) {
    item = ref[j];
    if (item.name === name) {
      return item;
    }
  }
};

updateViews = function(selectedItem) {
  var item, j, len, ref, results;
  ref = this.items;
  results = [];
  for (j = 0, len = ref.length; j < len; j++) {
    item = ref[j];
    if (item.view != null) {
      if (item.view === selectedItem.view) {
        item.view.visible = true;
      } else {
        item.view.visible = false;
      }
      if (item.blurView === selectedItem.blurView) {
        results.push(item.blurView.visible = true);
      } else {
        results.push(item.blurView.visible = false);
      }
    } else {
      results.push(void 0);
    }
  }
  return results;
};

setSelected = function(name) {
  var item, j, len, ref, results;
  if (name !== this.selected) {
    ref = this.items;
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      item = ref[j];
      if (item.name === name) {
        item.iconLayer.backgroundColor = defaults.tintColor;
        if (item.labelLayer) {
          item.labelLayer.style = {
            "color": defaults.tintColor
          };
        }
        if (item.iconLayer.selectedIcon) {
          item.iconLayer.style = {
            "-webkit-mask-image": "url(" + item.iconLayer.selectedIcon + ")"
          };
        }
        this.selected = item.name;
        this.updateViews(item);
        results.push(this.emit("tabBarDidSwitch", item.name));
      } else {
        item.iconLayer.backgroundColor = defaults.tintColorUnselected;
        if (item.labelLayer) {
          item.labelLayer.style = {
            "color": defaults.tintColorUnselected
          };
        }
        if (item.iconLayer.selectedIcon) {
          results.push(item.iconLayer.style = {
            "-webkit-mask-image": "url(" + item.iconLayer.icon + ")"
          });
        } else {
          results.push(void 0);
        }
      }
    }
    return results;
  }
};

setBadgeValue = function(name, value) {
  var item, j, len, ref, results;
  ref = this.items;
  results = [];
  for (j = 0, len = ref.length; j < len; j++) {
    item = ref[j];
    if (item.name === name) {
      if (value) {
        item.badgeLayer.html = value;
        results.push(item.badgeLayer.visible = true);
      } else {
        results.push(item.badgeLayer.visible = false);
      }
    } else {
      results.push(void 0);
    }
  }
  return results;
};

exports.tabBar = function(barItems) {
  var background, badgeLayer, blurView, i, iconLayer, itemCount, itemLayer, labelLayer, name, params, tabBar;
  tabBar = new Layer({
    x: 0,
    y: defaults.screenHeight - defaults.barHeight,
    width: defaults.screenWidth,
    height: defaults.barHeight,
    backgroundColor: defaults.backgroundColor
  });
  tabBar.style = {
    "box-shadow": defaults.borderShadow
  };
  tabBar.getItemFromName = getItemFromName;
  tabBar.updateViews = updateViews;
  tabBar.setSelected = setSelected;
  tabBar.setBadgeValue = setBadgeValue;
  tabBar.selected = null;
  tabBar.items = [];
  background = new Layer({
    x: 0,
    y: 0,
    width: defaults.screenWidth,
    height: defaults.barHeight,
    backgroundColor: defaults.backgroundColor,
    opacity: defaults.opacity,
    superLayer: tabBar
  });
  itemCount = Object.keys(barItems).length;
  i = 0;
  for (name in barItems) {
    params = barItems[name];
    itemLayer = new Layer({
      backgroundColor: "none",
      width: defaults.screenWidth / itemCount,
      height: defaults.barHeight,
      x: i * (defaults.screenWidth / itemCount),
      y: 0,
      superLayer: tabBar,
      name: name
    });
    if (params.view != null) {
      blurView = params.view.copy();
      if (ScrollComponent.prototype.isPrototypeOf(blurView)) {
        blurView.content.blur = defaults.blur;
      } else {
        blurView.blur = defaults.blur;
      }
      blurView.superLayer = tabBar;
      blurView.index = 0;
      blurView.y = blurView.y - (defaults.screenHeight - defaults.barHeight);
      itemLayer.view = params.view;
      itemLayer.blurView = blurView;
    }
    iconLayer = new Layer({
      width: 60,
      height: 60,
      superLayer: itemLayer
    });
    iconLayer.icon = params.icon;
    if (params.selectedIcon != null) {
      iconLayer.selectedIcon = params.selectedIcon;
    }
    iconLayer.style = {
      "-webkit-mask-image": "url(" + iconLayer.icon + ")",
      "-webkit-mask-repeat": "no-repeat",
      "-webkit-mask-position": "center center"
    };
    iconLayer.centerX();
    iconLayer.centerY(defaults.iconOffset);
    itemLayer.iconLayer = iconLayer;
    if (defaults.showLabels) {
      labelLayer = new Layer({
        width: itemLayer.width,
        x: 0,
        y: defaults.barHeight + defaults.labelOffset,
        superLayer: itemLayer,
        backgroundColor: "none"
      });
      labelLayer.html = name;
      labelLayer.style = defaults.labelTextStyle;
      itemLayer.labelLayer = labelLayer;
    }
    badgeLayer = new Layer({
      width: defaults.badgeSize,
      height: defaults.badgeSize,
      x: 0,
      y: 6,
      borderRadius: 18,
      superLayer: itemLayer,
      backgroundColor: defaults.badgeColor
    });
    badgeLayer.style = defaults.badgeTextStyle;
    badgeLayer.centerX(26);
    itemLayer.badgeLayer = badgeLayer;
    itemLayer.badgeLayer.visible = false;
    tabBar.items.push(itemLayer);
    itemLayer.on(Events.Click, function() {
      return tabBar.setSelected(this.name);
    });
    i++;
  }
  tabBar.setSelected(tabBar.items[0].name);
  return tabBar;
};


},{}]},{},[])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJhbWVyLm1vZHVsZXMuanMiLCJzb3VyY2VzIjpbIi4uL21vZHVsZXMvdGFiQmFyTW9kdWxlLmNvZmZlZSIsIi4uL21vZHVsZXMvbXlNb2R1bGUuY29mZmVlIiwiLi4vbW9kdWxlcy9tZXNzZW5nZXIta2l0LmNvZmZlZSIsIi4uL21vZHVsZXMvbWVzc2VuZ2VyLWtpdC5qcyIsIi4uL21vZHVsZXMvaXB6LXV0aWxzLmNvZmZlZSIsIi4uL21vZHVsZXMvaXB6LW1lc3Nlbmdlci5jb2ZmZWUiLCIuLi9tb2R1bGVzL2lwei1tZXNzZW5nZXItdGFiLWJhci5jb2ZmZWUiLCIuLi9tb2R1bGVzL2lwei1tZXNzZW5nZXItc2VhcmNoQm94LmNvZmZlZSIsIi4uL21vZHVsZXMvaXB6LW1lc3Nlbmdlci1uYXYtYmFyLmNvZmZlZSIsIi4uL21vZHVsZXMvaXB6LW1lc3Nlbmdlci1raXQuY29mZmVlIiwiLi4vbW9kdWxlcy9pcHotbWVzc2VuZ2VyLWhvbWUuY29mZmVlIiwiLi4vbW9kdWxlcy9pcHotbWVzc2VuZ2VyLWNhbGxzLmNvZmZlZSIsIi4uL21vZHVsZXMvaXB6LW1hc3Rlci1sYXlvdXQuY29mZmVlIiwiLi4vbW9kdWxlcy9pcHotZGFsLXVzZXJzREFMLmNvZmZlZSIsIi4uL21vZHVsZXMvaXB6LWNoYXRib3QuY29mZmVlIiwiLi4vbW9kdWxlcy9pb3Mta2l0LmNvZmZlZSIsIi4uL21vZHVsZXMvaW9zLWtpdC12aWV3LmNvZmZlZSIsIi4uL21vZHVsZXMvaW9zLWtpdC11dGlscy5jb2ZmZWUiLCIuLi9tb2R1bGVzL2lvcy1raXQtdGV4dC5jb2ZmZWUiLCIuLi9tb2R1bGVzL2lvcy1raXQtdGVtcC5jb2ZmZWUiLCIuLi9tb2R1bGVzL2lvcy1raXQtdGFiLWJhci5jb2ZmZWUiLCIuLi9tb2R1bGVzL2lvcy1raXQtc3RhdHVzLWJhci5qcyIsIi4uL21vZHVsZXMvaW9zLWtpdC1zdGF0dXMtYmFyLmNvZmZlZSIsIi4uL21vZHVsZXMvaW9zLWtpdC1zaGVldC5jb2ZmZWUiLCIuLi9tb2R1bGVzL2lvcy1raXQtbmF2LWJhci5jb2ZmZWUiLCIuLi9tb2R1bGVzL2lvcy1raXQtbGlicmFyeS5jb2ZmZWUiLCIuLi9tb2R1bGVzL2lvcy1raXQtbGF5b3V0LmNvZmZlZSIsIi4uL21vZHVsZXMvaW9zLWtpdC1rZXlib2FyZC5jb2ZmZWUiLCIuLi9tb2R1bGVzL2lvcy1raXQtZmllbGQuY29mZmVlIiwiLi4vbW9kdWxlcy9pb3Mta2l0LWNvbnZlcnRlci5jb2ZmZWUiLCIuLi9tb2R1bGVzL2lvcy1raXQtYnV0dG9uLmNvZmZlZSIsIi4uL21vZHVsZXMvaW9zLWtpdC1iYW5uZXIuY29mZmVlIiwiLi4vbW9kdWxlcy9pb3Mta2l0LWFsZXJ0LmNvZmZlZSIsIi4uL21vZHVsZXMvYWxleC1tZXNzZW5nZXIta2l0LXRhYi1iYXIuY29mZmVlIiwiLi4vbW9kdWxlcy9TdGF0dXNCYXJMYXllci5jb2ZmZWUiLCJub2RlX21vZHVsZXMvYnJvd3Nlci1wYWNrL19wcmVsdWRlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIiMjI1xuXHR0YWJCYXJNb2R1bGVcblx04oCTXG5cdENyZWF0ZWQgYnkgUGV0dGVyIE5pbHNzb25cblx0aHR0cDovL3BldHRlci5wcm9cbiMjI1xuXG4jIERlZmF1bHQgc3R5bGVzXG5kZWZhdWx0cyA9IHtcblx0c2NyZWVuV2lkdGg6IFNjcmVlbi53aWR0aFxuXHRzY3JlZW5IZWlnaHQ6IFNjcmVlbi5oZWlnaHRcblx0YmFySGVpZ2h0OiA5OFxuXHRsYWJlbE9mZnNldDogLTI4XG5cdGljb25PZmZzZXQ6IC0xMlxuXHR0aW50Q29sb3I6IFwiIzAwN2FmZlwiXG5cdHRpbnRDb2xvclVuc2VsZWN0ZWQ6IFwiIzkyOTI5MlwiXG5cdGJsdXI6IDQwXG5cdG9wYWNpdHk6IDAuNzVcblx0Ym9yZGVyU2hhZG93OiBcIjBweCAtMXB4IDBweCAwcHggcmdiYSgwLDAsMCwwLjMyKVwiXG5cdGJhY2tncm91bmRDb2xvcjogXCIjZjhmOGY4XCJcblx0c2hvd0xhYmVsczogdHJ1ZVxuXHRiYWRnZVNpemU6IDM2XG5cdGJhZGdlQ29sb3I6IFwiI0ZGM0IzMFwiXG59XG5kZWZhdWx0cy5sYWJlbFRleHRTdHlsZSA9IHtcblx0Zm9udFNpemU6IFwiMjBweFwiXG5cdHRleHRBbGlnbjogXCJjZW50ZXJcIlxuXHRmb250RmFtaWx5OiBcIkhlbHZldGljYSBOZXVlJywgc2Fucy1zZXJpZlwiXG59XG5kZWZhdWx0cy5iYWRnZVRleHRTdHlsZSA9IHtcblx0Zm9udFNpemU6IFwiMjZweFwiXG5cdGxpbmVIZWlnaHQ6IFwiMzZweFwiXG5cdGNvbG9yOiBcIiNmZmZcIlxuXHR0ZXh0QWxpZ246IFwiY2VudGVyXCJcblx0Zm9udEZhbWlseTogXCJIZWx2ZXRpY2EgTmV1ZScsIHNhbnMtc2VyaWZcIlxufVxuZXhwb3J0cy5kZWZhdWx0cyA9IGRlZmF1bHRzXG5cblxuZ2V0SXRlbUZyb21OYW1lID0gKG5hbWUpIC0+XG5cdCMgUmV0dXJucyBhIHRhYiBiYXIgaXRlbSBpZiBuYW1lcyBtYXRjaGVzXG5cblx0Zm9yIGl0ZW0gaW4gQGl0ZW1zXG5cdFx0cmV0dXJuIGl0ZW0gaWYgaXRlbS5uYW1lIGlzIG5hbWVcblxuXG51cGRhdGVWaWV3cyA9IChzZWxlY3RlZEl0ZW0pIC0+XG5cdCMgU2hvd3MvaGlkZXMgdmlld3MgYmFzZWQgb24gc2VsZWN0ZWQgdGFiIGJhciBpdGVtXG5cblx0Zm9yIGl0ZW0gaW4gQGl0ZW1zXG5cdFx0aWYgaXRlbS52aWV3P1xuXHRcdFx0aWYgaXRlbS52aWV3IGlzIHNlbGVjdGVkSXRlbS52aWV3IHRoZW4gaXRlbS52aWV3LnZpc2libGUgPSB0cnVlIGVsc2UgaXRlbS52aWV3LnZpc2libGUgPSBmYWxzZVxuXHRcdFx0aWYgaXRlbS5ibHVyVmlldyBpcyBzZWxlY3RlZEl0ZW0uYmx1clZpZXcgdGhlbiBpdGVtLmJsdXJWaWV3LnZpc2libGUgPSB0cnVlIGVsc2UgaXRlbS5ibHVyVmlldy52aXNpYmxlID0gZmFsc2VcblxuXG5zZXRTZWxlY3RlZCA9IChuYW1lKSAtPlxuXHQjIFNldHMgc2VsZWN0ZWQgdGFiIGl0ZW0gZnJvbSB0aGUga2V5IChuYW1lKSB1c2VkIHdoZW4gY3JlYXRpbmcgaXRcblxuXHRpZiBuYW1lICE9IEBzZWxlY3RlZFxuXHRcdGZvciBpdGVtIGluIEBpdGVtc1xuXHRcdFx0aWYgaXRlbS5uYW1lIGlzIG5hbWVcblx0XHRcdFx0aXRlbS5pY29uTGF5ZXIuYmFja2dyb3VuZENvbG9yID0gZGVmYXVsdHMudGludENvbG9yXG5cdFx0XHRcdGl0ZW0ubGFiZWxMYXllci5zdHlsZSA9IFwiY29sb3JcIjogZGVmYXVsdHMudGludENvbG9yIGlmIGl0ZW0ubGFiZWxMYXllclxuXHRcdFx0XHRpdGVtLmljb25MYXllci5zdHlsZSA9IFwiLXdlYmtpdC1tYXNrLWltYWdlXCI6IFwidXJsKFwiICsgaXRlbS5pY29uTGF5ZXIuc2VsZWN0ZWRJY29uICsgXCIpXCIgaWYgaXRlbS5pY29uTGF5ZXIuc2VsZWN0ZWRJY29uXG5cdFx0XHRcdEBzZWxlY3RlZCA9IGl0ZW0ubmFtZVxuXHRcdFx0XHRAdXBkYXRlVmlld3MoaXRlbSlcblx0XHRcdFx0QC5lbWl0KFwidGFiQmFyRGlkU3dpdGNoXCIsIGl0ZW0ubmFtZSlcblx0XHRcdGVsc2Vcblx0XHRcdFx0aXRlbS5pY29uTGF5ZXIuYmFja2dyb3VuZENvbG9yID0gZGVmYXVsdHMudGludENvbG9yVW5zZWxlY3RlZFxuXHRcdFx0XHRpdGVtLmxhYmVsTGF5ZXIuc3R5bGUgPSBcImNvbG9yXCI6IGRlZmF1bHRzLnRpbnRDb2xvclVuc2VsZWN0ZWQgaWYgaXRlbS5sYWJlbExheWVyXG5cdFx0XHRcdGl0ZW0uaWNvbkxheWVyLnN0eWxlID0gXCItd2Via2l0LW1hc2staW1hZ2VcIjogXCJ1cmwoXCIgKyBpdGVtLmljb25MYXllci5pY29uICsgXCIpXCIgaWYgaXRlbS5pY29uTGF5ZXIuc2VsZWN0ZWRJY29uXG5cblxuc2V0QmFkZ2VWYWx1ZSA9IChuYW1lLCB2YWx1ZSkgLT5cblx0IyBBZGRzIGEgYmFkZ2UgdG8gdGhlIHRhYiBpdGVtIGlmIHZhbHVlIGlzIGEgbnVtYmVyID4gMCBhbmQgcmVtb3ZlcyB0aGUgYmFkZ2UgaWYgbnVsbFxuXG5cdGZvciBpdGVtIGluIEBpdGVtc1xuXHRcdGlmIGl0ZW0ubmFtZSBpcyBuYW1lXG5cdFx0XHRpZiB2YWx1ZVxuXHRcdFx0XHRpdGVtLmJhZGdlTGF5ZXIuaHRtbCA9IHZhbHVlXG5cdFx0XHRcdGl0ZW0uYmFkZ2VMYXllci52aXNpYmxlID0gdHJ1ZVxuXHRcdFx0ZWxzZVxuXHRcdFx0XHRpdGVtLmJhZGdlTGF5ZXIudmlzaWJsZSA9IGZhbHNlXG5cblxuZXhwb3J0cy50YWJCYXIgPSAoYmFySXRlbXMpIC0+XG5cdCMgQ3JlYXRlcyBhbmQgc2V0LXVwcyB0aGUgdGFiIGJhclxuXG5cdHRhYkJhciA9IG5ldyBMYXllclxuXHRcdHg6IDBcblx0XHR5OiBkZWZhdWx0cy5zY3JlZW5IZWlnaHQgLSBkZWZhdWx0cy5iYXJIZWlnaHRcblx0XHR3aWR0aDogZGVmYXVsdHMuc2NyZWVuV2lkdGhcblx0XHRoZWlnaHQ6IGRlZmF1bHRzLmJhckhlaWdodFxuXHRcdGJhY2tncm91bmRDb2xvcjogZGVmYXVsdHMuYmFja2dyb3VuZENvbG9yXG5cblx0dGFiQmFyLnN0eWxlID0gXCJib3gtc2hhZG93XCI6IGRlZmF1bHRzLmJvcmRlclNoYWRvd1xuXHR0YWJCYXIuZ2V0SXRlbUZyb21OYW1lID0gZ2V0SXRlbUZyb21OYW1lXG5cdHRhYkJhci51cGRhdGVWaWV3cyA9IHVwZGF0ZVZpZXdzXG5cdHRhYkJhci5zZXRTZWxlY3RlZCA9IHNldFNlbGVjdGVkXG5cdHRhYkJhci5zZXRCYWRnZVZhbHVlID0gc2V0QmFkZ2VWYWx1ZVxuXHR0YWJCYXIuc2VsZWN0ZWQgPSBudWxsXG5cdHRhYkJhci5pdGVtcyA9IFtdXG5cblx0YmFja2dyb3VuZCA9IG5ldyBMYXllclxuXHRcdHg6IDBcblx0XHR5OiAwXG5cdFx0d2lkdGg6IGRlZmF1bHRzLnNjcmVlbldpZHRoXG5cdFx0aGVpZ2h0OiBkZWZhdWx0cy5iYXJIZWlnaHRcblx0XHRiYWNrZ3JvdW5kQ29sb3I6IGRlZmF1bHRzLmJhY2tncm91bmRDb2xvclxuXHRcdG9wYWNpdHk6IGRlZmF1bHRzLm9wYWNpdHlcblx0XHRzdXBlckxheWVyOiB0YWJCYXJcblxuXHRpdGVtQ291bnQgPSBPYmplY3Qua2V5cyhiYXJJdGVtcykubGVuZ3RoXG5cdGkgPSAwXG5cblx0Zm9yIG5hbWUscGFyYW1zIG9mIGJhckl0ZW1zXG5cdFx0aXRlbUxheWVyID0gbmV3IExheWVyXG5cdFx0XHRiYWNrZ3JvdW5kQ29sb3I6IFwibm9uZVwiXG5cdFx0XHR3aWR0aDogZGVmYXVsdHMuc2NyZWVuV2lkdGggLyBpdGVtQ291bnRcblx0XHRcdGhlaWdodDogZGVmYXVsdHMuYmFySGVpZ2h0XG5cdFx0XHR4OiBpICogKGRlZmF1bHRzLnNjcmVlbldpZHRoIC8gaXRlbUNvdW50KVxuXHRcdFx0eTogMFxuXHRcdFx0c3VwZXJMYXllcjogdGFiQmFyXG5cdFx0XHRuYW1lOiBuYW1lXG5cblx0XHRpZiBwYXJhbXMudmlldz9cblx0XHRcdCMgQ3JlYXRlIGEgY29weSBvZiB0aGUgdmlldywgYmx1ciBpdCBhbmQgdXNlIGl0IGFzIGEgYmFja2dyb3VuZFxuXHRcdFx0Ymx1clZpZXcgPSBwYXJhbXMudmlldy5jb3B5KClcblx0XHRcdGlmIFNjcm9sbENvbXBvbmVudC5wcm90b3R5cGUuaXNQcm90b3R5cGVPZihibHVyVmlldylcblx0XHRcdFx0Ymx1clZpZXcuY29udGVudC5ibHVyID0gZGVmYXVsdHMuYmx1clxuXHRcdFx0ZWxzZVxuXHRcdFx0XHRibHVyVmlldy5ibHVyID0gZGVmYXVsdHMuYmx1clxuXHRcdFx0Ymx1clZpZXcuc3VwZXJMYXllciA9IHRhYkJhclxuXHRcdFx0Ymx1clZpZXcuaW5kZXggPSAwXG5cdFx0XHRibHVyVmlldy55ID0gYmx1clZpZXcueSAtIChkZWZhdWx0cy5zY3JlZW5IZWlnaHQgLSBkZWZhdWx0cy5iYXJIZWlnaHQpXG5cblx0XHRcdGl0ZW1MYXllci52aWV3ID0gcGFyYW1zLnZpZXdcblx0XHRcdGl0ZW1MYXllci5ibHVyVmlldyA9IGJsdXJWaWV3XG5cblx0XHRpY29uTGF5ZXIgPSBuZXcgTGF5ZXJcblx0XHRcdHdpZHRoOiA2MFxuXHRcdFx0aGVpZ2h0OiA2MFxuXHRcdFx0c3VwZXJMYXllcjogaXRlbUxheWVyXG5cdFx0aWNvbkxheWVyLmljb24gPSBwYXJhbXMuaWNvblxuXHRcdGljb25MYXllci5zZWxlY3RlZEljb24gPSBwYXJhbXMuc2VsZWN0ZWRJY29uIGlmIHBhcmFtcy5zZWxlY3RlZEljb24/XG5cblx0XHQjIFRoaXMgYmxhY2sgbWFnaWMgaXMgdXNlZCB0byB0aW50IHRoZSBQTkcgaW1hZ2VzLiBPbmx5IHdvcmtzIG9uIHdlYmtpdCBicm93c2VycyA6L1xuXHRcdGljb25MYXllci5zdHlsZSA9XG5cdFx0XHRcIi13ZWJraXQtbWFzay1pbWFnZVwiOiBcInVybChcIiArIGljb25MYXllci5pY29uICsgXCIpXCJcblx0XHRcdFwiLXdlYmtpdC1tYXNrLXJlcGVhdFwiOiBcIm5vLXJlcGVhdFwiXG5cdFx0XHRcIi13ZWJraXQtbWFzay1wb3NpdGlvblwiOiBcImNlbnRlciBjZW50ZXJcIlxuXHRcdGljb25MYXllci5jZW50ZXJYKClcblx0XHRpY29uTGF5ZXIuY2VudGVyWShkZWZhdWx0cy5pY29uT2Zmc2V0KVxuXHRcdGl0ZW1MYXllci5pY29uTGF5ZXIgPSBpY29uTGF5ZXJcblxuXHRcdGlmIGRlZmF1bHRzLnNob3dMYWJlbHNcblx0XHRcdGxhYmVsTGF5ZXIgPSBuZXcgTGF5ZXJcblx0XHRcdFx0d2lkdGg6IGl0ZW1MYXllci53aWR0aFxuXHRcdFx0XHR4OiAwXG5cdFx0XHRcdHk6IGRlZmF1bHRzLmJhckhlaWdodCArIGRlZmF1bHRzLmxhYmVsT2Zmc2V0XG5cdFx0XHRcdHN1cGVyTGF5ZXI6IGl0ZW1MYXllclxuXHRcdFx0XHRiYWNrZ3JvdW5kQ29sb3I6IFwibm9uZVwiXG5cdFx0XHRsYWJlbExheWVyLmh0bWwgPSBuYW1lXG5cdFx0XHRsYWJlbExheWVyLnN0eWxlID0gZGVmYXVsdHMubGFiZWxUZXh0U3R5bGVcblx0XHRcdGl0ZW1MYXllci5sYWJlbExheWVyID0gbGFiZWxMYXllclxuXG5cdFx0YmFkZ2VMYXllciA9IG5ldyBMYXllclxuXHRcdFx0d2lkdGg6IGRlZmF1bHRzLmJhZGdlU2l6ZVxuXHRcdFx0aGVpZ2h0OiBkZWZhdWx0cy5iYWRnZVNpemVcblx0XHRcdHg6IDBcblx0XHRcdHk6IDZcblx0XHRcdGJvcmRlclJhZGl1czogMThcblx0XHRcdHN1cGVyTGF5ZXI6IGl0ZW1MYXllclxuXHRcdFx0YmFja2dyb3VuZENvbG9yOiBkZWZhdWx0cy5iYWRnZUNvbG9yXG5cdFx0YmFkZ2VMYXllci5zdHlsZSA9IGRlZmF1bHRzLmJhZGdlVGV4dFN0eWxlXG5cdFx0YmFkZ2VMYXllci5jZW50ZXJYKDI2KVxuXG5cdFx0aXRlbUxheWVyLmJhZGdlTGF5ZXIgPSBiYWRnZUxheWVyXG5cdFx0aXRlbUxheWVyLmJhZGdlTGF5ZXIudmlzaWJsZSA9IGZhbHNlXG5cblx0XHR0YWJCYXIuaXRlbXMucHVzaChpdGVtTGF5ZXIpXG5cblx0XHRpdGVtTGF5ZXIub24gRXZlbnRzLkNsaWNrLCAtPlxuXHRcdFx0dGFiQmFyLnNldFNlbGVjdGVkKEBuYW1lKVxuXG5cdFx0aSsrXG5cblx0IyBTZWxlY3QgdGhlIGZpcnN0IGl0ZW0gaW4gdGhlIHRhYiBiYXJcblx0dGFiQmFyLnNldFNlbGVjdGVkKHRhYkJhci5pdGVtc1swXS5uYW1lKVxuXG5cdHJldHVybiB0YWJCYXJcbiIsIiMgQWRkIHRoZSBmb2xsb3dpbmcgbGluZSB0byB5b3VyIHByb2plY3QgaW4gRnJhbWVyIFN0dWRpby4gXG4jIG15TW9kdWxlID0gcmVxdWlyZSBcIm15TW9kdWxlXCJcbiMgUmVmZXJlbmNlIHRoZSBjb250ZW50cyBieSBuYW1lLCBsaWtlIG15TW9kdWxlLm15RnVuY3Rpb24oKSBvciBteU1vZHVsZS5teVZhclxuXG5leHBvcnRzLm15VmFyID0gXCJteVZhcmlhYmxlXCJcblxuZXhwb3J0cy5teUZ1bmN0aW9uID0gLT5cblx0cHJpbnQgXCJteUZ1bmN0aW9uIGlzIHJ1bm5pbmdcIlxuXG5leHBvcnRzLm15QXJyYXkgPSBbMSwgMiwgM10iLCJ1c2VycyA9IHJlcXVpcmUgXCJpcHotZGFsLXVzZXJzREFMXCJcblxuIyBHbG9iYWwgc2V0dGluZ3Ncblxuc3R5bGUgPVxuXHRtYXJnaW46IDExXG5cdG1hcmdpbnM6IDIyXG5cdGZvbnRTaXplczpcblx0XHRuYW1lOiAxN1xuXHRcdG1lc3NhZ2VUZXh0OiAxNlxuXHRcdG1lc3NhZ2VUaW1lOiAxNVxuXHRmb250V2VpZ2h0czogW11cblxuZXhwb3J0cy5zdHlsZSA9IHN0eWxlXG5cbiMgQXZhdGFyXG5cbmNsYXNzIEF2YXRhciBleHRlbmRzIExheWVyXG5cblx0Y29uc3RydWN0b3I6IChvcHRpb25zID0ge30pIC0+XG5cdFx0b3B0aW9ucy5zY2FsZSA/PSAxXG5cdFx0b3B0aW9ucy53aWR0aCA9IG9wdGlvbnMuaGVpZ2h0ID0gNTAgKiBvcHRpb25zLnNjYWxlXG5cdFx0b3B0aW9ucy5iYWNrZ3JvdW5kQ29sb3IgPSBcIiNFRUVFRUVcIlxuXHRcdG9wdGlvbnMuYm9yZGVyUmFkaXVzID0gMTAwXG5cblx0XHRvcHRpb25zLmltYWdlID89IFwiaW1hZ2VzL21lSWNvbkFjdGl2ZS5wbmdcIlx0I3VzZXIuaW1hZ2VfMFxuXHRcdG9wdGlvbnMuc3RhdHVzID89IFwiaW5hY3RpdmVcIiBcdFx0XHRcdCN1c2VyLnN0YXR1c1xuXG5cdFx0c3VwZXIgb3B0aW9uc1xuXG5cblx0XHRzaWduID0gbmV3IExheWVyXG5cdFx0XHRwYXJlbnQ6IEBcblx0XHRcdHg6IEFsaWduLnJpZ2h0XG5cdFx0XHR5OiBBbGlnbi5ib3R0b21cblx0XHRcdHdpZHRoOiAyOC8xMDAgKiBALndpZHRoXG5cdFx0XHRoZWlnaHQ6IDI4LzEwMCAqIEAuaGVpZ2h0XG5cdFx0XHRib3JkZXJSYWRpdXM6IDEwMFxuXHRcdFx0YmFja2dyb3VuZENvbG9yOiBcInRyYW5zcGFyZW50XCJcblx0XHRcdGJvcmRlcldpZHRoOiAyICogb3B0aW9ucy5zY2FsZVxuXG5cdFx0c2lnbi5zdGF0ZXMgPVxuXHRcdFx0aW5hY3RpdmU6XG5cdFx0XHRcdGJvcmRlcldpZHRoOiAwXG5cdFx0XHRcdGJhY2tncm91bmRDb2xvcjogXCJ0cmFuc3BhcmVudFwiXG5cdFx0XHRcdGltYWdlOiBudWxsXG5cdFx0XHRhY3RpdmU6XG5cdFx0XHRcdGltYWdlOiBudWxsXG5cdFx0XHRcdGJhY2tncm91bmRDb2xvcjogXCIjNjBDQTExXCJcblx0XHRcdFx0Ym9yZGVyQ29sb3I6IFwiI0ZGRkZGRlwiXG5cdFx0XHRtZXNzZW5nZXI6XG5cdFx0XHRcdGJvcmRlckNvbG9yOiBcIiNGRkZGRkZcIlxuXHRcdFx0XHRpbWFnZTogXCJpbWFnZXMvbWVzc2VuZ2VySWNvbi5wbmdcIlxuXHRcdFx0bXlEYXk6XG5cdFx0XHRcdGJvcmRlckNvbG9yOiBcIiNGRkZGRkZcIlxuXHRcdFx0XHRib3JkZXJXaWR0aDogb3B0aW9ucy5zY2FsZSAqIDJcblx0XHRcdFx0aW1hZ2U6IG51bGxcblx0XHRcdFx0YmFja2dyb3VuZENvbG9yOiBcIiMwMDc2RkZcIlxuXG5cdFx0QC5zdWJMYXllcnNbMF0uYW5pbWF0ZShvcHRpb25zLnN0YXR1cylcblxuXHRjaGFuZ2VTdGF0dXM6ICh0eXBlKSA9PlxuXHRcdEAuc3ViTGF5ZXJzWzBdLmFuaW1hdGUodHlwZSlcblxuXHRzZXRVc2VyOiAodXNlcikgLT5cblx0XHRALmltYWdlID0gdXNlci5pbWFnZV8wXG5cdFx0QC5zdGF0dXMgPSB1c2VyLnN0YXR1c1xuXG5leHBvcnRzLkF2YXRhciA9IEF2YXRhclxuXG5cbiMgTXlEYXlcblxuIyBNeURheXNcblxuY2xhc3MgTXlEYXlzIGV4dGVuZHMgU2Nyb2xsQ29tcG9uZW50XG5cblx0Y29uc3RydWN0b3I6IChvcHRpb25zID0ge30sIHVzZXJzKSAtPlxuXHRcdG9wdGlvbnMuc2NhbGUgPz0gMVxuXHRcdG9wdGlvbnMueCA9IEFsaWduLmNlbnRlclxuXHRcdG9wdGlvbnMud2lkdGggPSBTY3JlZW4ud2lkdGggLSBzdHlsZS5tYXJnaW5zXG5cdFx0b3B0aW9ucy5oZWlnaHQgPSBvcHRpb25zLnNjYWxlICogKDEyNSArIHN0eWxlLm1hcmdpbnMpXG5cdFx0b3B0aW9ucy5zY3JvbGxWZXJ0aWNhbCA9IGZhbHNlXG5cdFx0b3B0aW9ucy5kaXJlY3Rpb25Mb2NrID0gdHJ1ZVxuXG5cdFx0c3VwZXIgb3B0aW9uc1xuXG5cdFx0Zm9yIHVzZXIsIGluZGV4IGluIHVzZXJzXG5cdFx0XHRteURheSA9IG5ldyBBdmF0YXIoe30pXG5cdFx0XHRteURheS5wYXJlbnQgPSBALmNvbnRlbnRcblx0XHRcdG15RGF5LndpZHRoID0gOTBcblx0XHRcdG15RGF5LmhlaWdodCA9IDEyNVxuXHRcdFx0bXlEYXkueCA9IGluZGV4ICogKG15RGF5LndpZHRoICsgc3R5bGUubWFyZ2luLzIpXG5cdFx0XHRteURheS55ID0gQWxpZ24uY2VudGVyXG5cdFx0XHRteURheS5ib3JkZXJSYWRpdXMgPSA1XG5cdFx0XHRteURheS5zdWJMYXllcnNbMF0ud2lkdGggPSBteURheS5zdWJMYXllcnNbMF0uaGVpZ2h0ID0gMTRcblx0XHRcdG15RGF5LnN1YkxheWVyc1swXS55ID0gQWxpZ24udG9wKC00KVxuXHRcdFx0bXlEYXkuc3ViTGF5ZXJzWzBdLnggPSBBbGlnbi5yaWdodCg0KVxuXG5cdFx0XHRteURheS5jaGFuZ2VTdGF0dXMoXCJteURheVwiKVxuXHRcdFx0bXlEYXkuc2V0VXNlcih1c2VyKVxuXG5leHBvcnRzLk15RGF5cyA9IE15RGF5c1xuXG5cbiMgTWVzc2FnZSBMaXN0IEl0ZW1cblxuY2xhc3MgTWVzc2FnZUxpc3RJdGVtIGV4dGVuZHMgTGF5ZXJcblxuXHRjb25zdHJ1Y3RvcjogKG9wdGlvbnMgPSB7fSwgdXNlcikgLT5cblx0XHRvcHRpb25zLnNjYWxlID89IDFcblx0XHRvcHRpb25zLnggPSBBbGlnbi5jZW50ZXJcblx0XHRvcHRpb25zLndpZHRoID0gU2NyZWVuLndpZHRoIC0gc3R5bGUubWFyZ2luc1xuXHRcdG9wdGlvbnMuaGVpZ2h0ID0gNzQgKiBvcHRpb25zLnNjYWxlXG5cdFx0b3B0aW9ucy5iYWNrZ3JvdW5kQ29sb3IgPSBcInRyYW5zcGFyZW50XCJcblxuXG5cdFx0b3B0aW9ucy5jbGlwID0gdHJ1ZVxuXG5cdFx0c3VwZXIgb3B0aW9uc1xuXG5cdFx0b3B0aW9ucy5uYW1lID0gdXNlci5maXJzdG5hbWUgKyBcIiBcIiArIHVzZXIubGFzdG5hbWVcblx0XHRvcHRpb25zLmxhc3RNZXNzYWdlID0gdXNlci5tZXNzYWdlVGV4dFxuXHRcdG9wdGlvbnMubGFzdE1lc3NhZ2VUaW1lID0gdXNlci5tZXNzYWdlVGltZVxuXG5cdFx0YXZhdGFyID0gbmV3IEF2YXRhcih7cGFyZW50OiBALCB5OiBzdHlsZS5tYXJnaW4gKiBvcHRpb25zLnNjYWxlIH0pXG5cdFx0YXZhdGFyLnNldFVzZXIodXNlcilcblxuXHRcdG5hbWUgPSBuZXcgVGV4dExheWVyXG5cdFx0XHRuYW1lOiBcIm5hbWVcIlxuXHRcdFx0cGFyZW50OiBAXG5cdFx0XHR4OiBhdmF0YXIubWF4WCArIG9wdGlvbnMuc2NhbGUgKiAyMFxuXHRcdFx0eTogYXZhdGFyLnlcblx0XHRcdGxpbmVIZWlnaHQ6IDEuNVxuXHRcdFx0dGV4dDogb3B0aW9ucy5uYW1lXG5cdFx0XHRmb250U2l6ZTogMTcgKiBvcHRpb25zLnNjYWxlXG5cblxuXHRcdGxhc3RNZXNzYWdlID0gbmV3IFRleHRMYXllclxuXHRcdFx0bmFtZTogXCJsYXN0TWVzc2FnZVwiXG5cdFx0XHRwYXJlbnQ6IEBcblx0XHRcdHg6IG5hbWUueFxuXHRcdFx0eTogbmFtZS5tYXhZXG5cdFx0XHRsaW5lSGVpZ2h0OiAxLjVcblx0XHRcdHdpZHRoOiBALndpZHRoIC0gYXZhdGFyLndpZHRoIC0gOFxuXHRcdFx0aGVpZ2h0OiAxOVxuXHRcdFx0dGV4dDogb3B0aW9ucy5sYXN0TWVzc2FnZVxuXHRcdFx0Zm9udFNpemU6IDE2ICogb3B0aW9ucy5zY2FsZVxuXHRcdFx0dGV4dE92ZXJmbG93OiBcImVsaXBzaXNcIlxuXG5cblx0XHRsYXN0TWVzc2FnZVRpbWUgPSBuZXcgVGV4dExheWVyXG5cdFx0XHRuYW1lOiBcImxhc3RNZXNzYWdlVGltZVwiXG5cdFx0XHRwYXJlbnQ6IEBcblx0XHRcdHg6IEFsaWduLnJpZ2h0XG5cdFx0XHR5OiBuYW1lLnlcblx0XHRcdGZvbnRTaXplOiAxNSAqIG9wdGlvbnMuc2NhbGVcblx0XHRcdHRleHQ6IG9wdGlvbnMubGFzdE1lc3NhZ2VUaW1lXG5cblx0Y2hhbmdlTmFtZTogKG5hbWUpID0+XG5cdFx0QC5uYW1lID0gbmFtZVxuXG5leHBvcnRzLk1lc3NhZ2VMaXN0SXRlbSA9IE1lc3NhZ2VMaXN0SXRlbVxuXG5cbiMgTWVzc2FnZSBMaXN0XG5cbmNsYXNzIE1lc3NhZ2VMaXN0IGV4dGVuZHMgTGF5ZXJcblx0Y29uc3RydWN0b3I6IChvcHRpb25zID0ge30sIHVzZXJzKSAtPlxuXHRcdG9wdGlvbnMuc2NhbGUgPz0gMVxuXHRcdG9wdGlvbnMud2lkdGggPSBTY3JlZW4ud2lkdGggLSBzdHlsZS5tYXJnaW5zXG5cdFx0b3B0aW9ucy54ID0gQWxpZ24uY2VudGVyXG5cdFx0b3B0aW9ucy5iYWNrZ3JvdW5kQ29sb3IgPSBcInRyYW5zcGFyZW50XCJcblx0XHRvcHRpb25zLmhlaWdodCA9IHVzZXJzLmxlbmd0aCAqIDc0ICogb3B0aW9ucy5zY2FsZVxuXHRcdHN1cGVyIG9wdGlvbnNcblxuXG5cdFx0Zm9yIHVzZXIsIGluZGV4IGluIHVzZXJzXG5cdFx0XHRtZXNzYWdlID0gbmV3IE1lc3NhZ2VMaXN0SXRlbSh7cGFyZW50OiBALCB5OiBvcHRpb25zLnNjYWxlICogaW5kZXggKiA3NH0sIHVzZXIpXG5cbmV4cG9ydHMuTWVzc2FnZUxpc3QgPSBNZXNzYWdlTGlzdFxuXG4jIEFjdGl2ZSB1c2Vyc1xuXG5jbGFzcyBBY3RpdmVGcmllbmRzU2Nyb2xsTGlzdCBleHRlbmRzIFNjcm9sbENvbXBvbmVudFxuXHRjb25zdHJ1Y3RvcjogKG9wdGlvbnMgPSB7fSwgdXNlcnMpIC0+XG5cdFx0b3B0aW9ucy5zY2FsZSA/PSAxXG5cdFx0b3B0aW9ucy53aWR0aCA9IFNjcmVlbi53aWR0aCAtIHN0eWxlLm1hcmdpbnNcblx0XHRvcHRpb25zLmhlaWdodCA9IG9wdGlvbnMuc2NhbGUgKiAxMDBcblx0XHRvcHRpb25zLnNjcm9sbFZlcnRpY2FsID0gZmFsc2VcblxuXHRcdHN1cGVyIG9wdGlvbnNcblxuXG5cdFx0QC5jb250ZW50LmhlaWdodCA9IG51bGxcblxuXHRcdGZvciB1c2VyLCBpbmRleCBpbiB1c2Vyc1xuXHRcdFx0Y29udGFpbmVyID0gbmV3IExheWVyXG5cdFx0XHRcdHBhcmVudDogQC5jb250ZW50XG5cdFx0XHRcdHg6IGluZGV4ICogKDUwICsgc3R5bGUubWFyZ2luKVxuXHRcdFx0XHR3aWR0aDogNTBcblx0XHRcdFx0YmFja2dyb3VuZENvbG9yOiBcInRyYW5zcGFyZW50XCJcblx0XHRcdGF2YXRhciA9IG5ldyBBdmF0YXIoe3BhcmVudDogY29udGFpbmVyfSlcblx0XHRcdG5hbWUgPSBuZXcgVGV4dExheWVyXG5cdFx0XHRcdHBhcmVudDogY29udGFpbmVyXG5cdFx0XHRcdHRleHQ6IHVzZXIuZmlyc3RuYW1lXG5cdFx0XHRcdGZvbnRTaXplOiAxNCAqIG9wdGlvbnMuc2NhbGVcblx0XHRcdFx0eTogYXZhdGFyLm1heFkgKyA1XG5cdFx0XHRjb250YWluZXIud2lkdGggPSBhdmF0YXIud2lkdGhcblx0XHRcdGF2YXRhci54ID0gbmFtZS54ID0gQWxpZ24uY2VudGVyXG5cdFx0XHRALmNvbnRlbnQuaGVpZ2h0ID0gY29udGFpbmVyLmhlaWdodCA9IGF2YXRhci5oZWlnaHQgKyBuYW1lLmhlaWdodCArIDVcblx0XHRcdEAuY29udGVudC55ID0gQWxpZ24uY2VudGVyXG5cdFx0XHRhdmF0YXIuc2V0VXNlcih1c2VyKVxuXG5leHBvcnRzLkFjdGl2ZUZyaWVuZHNTY3JvbGxMaXN0ID0gQWN0aXZlRnJpZW5kc1Njcm9sbExpc3RcblxuY2xhc3MgQWN0aXZlRnJpZW5kcyBleHRlbmRzIExheWVyXG5cdGNvbnN0cnVjdG9yOiAob3B0aW9ucyA9IHt9LCB1c2VycykgLT5cblx0XHRvcHRpb25zLnNjYWxlID89IDFcblx0XHRvcHRpb25zLmhlaWdodCA9IDE1MFxuXHRcdG9wdGlvbnMud2lkdGggPSBTY3JlZW4ud2lkdGggLSBzdHlsZS5tYXJnaW5zXG5cdFx0b3B0aW9ucy5iYWNrZ3JvdW5kQ29sb3IgPSBcInRyYW5zcGFyZW50XCJcblx0XHRvcHRpb25zLnggPSAgQWxpZ24uY2VudGVyXG5cdFx0b3B0aW9ucy5kaXJlY3Rpb25Mb2NrID0gdHJ1ZVxuXHRcdHN1cGVyIG9wdGlvbnNcblxuXHRcdGFjdGl2ZUZyaWVuZHNMYWJlbCA9IG5ldyBMYXllclxuXHRcdFx0cGFyZW50OiBAXG5cdFx0XHR3aWR0aDogQC53aWR0aFxuXHRcdFx0aGVpZ2h0OiA1MCAqIG9wdGlvbnMuc2NhbGVcblx0XHRcdGJhY2tncm91bmRDb2xvcjogXCJ0cmFuc3BhcmVudFwiXG5cdFx0YWN0aXZlRnJpZW5kc0ljb24gPSBuZXcgTGF5ZXJcblx0XHRcdHBhcmVudDogYWN0aXZlRnJpZW5kc0xhYmVsXG5cdFx0XHR4OiBBbGlnbi5sZWZ0XG5cdFx0XHR5OiBBbGlnbi5jZW50ZXJcblx0XHRcdGltYWdlOiBcImltYWdlcy9hY3RpdmVOb3dJY29uLnBuZ1wiXG5cdFx0XHR3aWR0aDogMjBcblx0XHRcdGhlaWdodDogMjBcblx0XHRhY3RpdmVOb3cgPSBuZXcgVGV4dExheWVyXG5cdFx0XHRwYXJlbnQ6IGFjdGl2ZUZyaWVuZHNMYWJlbFxuXHRcdFx0eDogYWN0aXZlRnJpZW5kc0ljb24ubWF4WCArIDEyXG5cdFx0XHRmb250U2l6ZTogMTZcblx0XHRcdGZvbnRXZWlnaHQ6IFwiYm9sZFwiXG5cdFx0XHRmb250Q29sb3I6IFwiYmxhY2tcIlxuXHRcdFx0eTogQWxpZ24uY2VudGVyXG5cdFx0XHR0ZXh0OiBcIkFjdGl2ZSBub3cgKCN7dXNlcnMubGVuZ3RofSkgPlwiXG5cdFx0YWN0aXZlTm93U2V0dGluZ3MgPSBuZXcgTGF5ZXJcblx0XHRcdHBhcmVudDogYWN0aXZlRnJpZW5kc0xhYmVsXG5cdFx0XHR4OiBBbGlnbi5yaWdodFxuXHRcdFx0eTogQWxpZ24uY2VudGVyXG5cdFx0XHRpbWFnZTogXCJpbWFnZXMvYWN0aXZlTm93U2V0dGluZ3MucG5nXCJcblx0XHRcdHdpZHRoOiAzNVxuXHRcdFx0aGVpZ2h0OiAzNVxuXG5cdFx0c2Nyb2xsID0gbmV3IEFjdGl2ZUZyaWVuZHNTY3JvbGxMaXN0KHtwYXJlbnQ6IEAsIHk6IEFsaWduLmJvdHRvbX0sIHVzZXJzKVxuXG5cbmV4cG9ydHMuQWN0aXZlRnJpZW5kcyA9IEFjdGl2ZUZyaWVuZHNcbiIsInZhciBBY3RpdmVGcmllbmRzLCBBY3RpdmVGcmllbmRzU2Nyb2xsTGlzdCwgQXZhdGFyLCBNZXNzYWdlTGlzdCwgTWVzc2FnZUxpc3RJdGVtLCBNeURheXMsIHN0eWxlLCB1c2VycyxcbiAgYmluZCA9IGZ1bmN0aW9uKGZuLCBtZSl7IHJldHVybiBmdW5jdGlvbigpeyByZXR1cm4gZm4uYXBwbHkobWUsIGFyZ3VtZW50cyk7IH07IH0sXG4gIGV4dGVuZCA9IGZ1bmN0aW9uKGNoaWxkLCBwYXJlbnQpIHsgZm9yICh2YXIga2V5IGluIHBhcmVudCkgeyBpZiAoaGFzUHJvcC5jYWxsKHBhcmVudCwga2V5KSkgY2hpbGRba2V5XSA9IHBhcmVudFtrZXldOyB9IGZ1bmN0aW9uIGN0b3IoKSB7IHRoaXMuY29uc3RydWN0b3IgPSBjaGlsZDsgfSBjdG9yLnByb3RvdHlwZSA9IHBhcmVudC5wcm90b3R5cGU7IGNoaWxkLnByb3RvdHlwZSA9IG5ldyBjdG9yKCk7IGNoaWxkLl9fc3VwZXJfXyA9IHBhcmVudC5wcm90b3R5cGU7IHJldHVybiBjaGlsZDsgfSxcbiAgaGFzUHJvcCA9IHt9Lmhhc093blByb3BlcnR5O1xuXG51c2VycyA9IHJlcXVpcmUoXCJpcHotZGFsLXVzZXJzREFMXCIpO1xuXG5zdHlsZSA9IHtcbiAgbWFyZ2luOiAxMSxcbiAgbWFyZ2luczogMjIsXG4gIGZvbnRTaXplczoge1xuICAgIG5hbWU6IDE3LFxuICAgIG1lc3NhZ2VUZXh0OiAxNixcbiAgICBtZXNzYWdlVGltZTogMTVcbiAgfSxcbiAgZm9udFdlaWdodHM6IFtdXG59O1xuXG5leHBvcnRzLnN0eWxlID0gc3R5bGU7XG5cbkF2YXRhciA9IChmdW5jdGlvbihzdXBlckNsYXNzKSB7XG4gIGV4dGVuZChBdmF0YXIsIHN1cGVyQ2xhc3MpO1xuXG4gIGZ1bmN0aW9uIEF2YXRhcihvcHRpb25zKSB7XG4gICAgdmFyIHNpZ247XG4gICAgaWYgKG9wdGlvbnMgPT0gbnVsbCkge1xuICAgICAgb3B0aW9ucyA9IHt9O1xuICAgIH1cbiAgICB0aGlzLmNoYW5nZVN0YXR1cyA9IGJpbmQodGhpcy5jaGFuZ2VTdGF0dXMsIHRoaXMpO1xuICAgIGlmIChvcHRpb25zLnNjYWxlID09IG51bGwpIHtcbiAgICAgIG9wdGlvbnMuc2NhbGUgPSAxO1xuICAgIH1cbiAgICBvcHRpb25zLndpZHRoID0gb3B0aW9ucy5oZWlnaHQgPSA1MCAqIG9wdGlvbnMuc2NhbGU7XG4gICAgb3B0aW9ucy5iYWNrZ3JvdW5kQ29sb3IgPSBcIiNFRUVFRUVcIjtcbiAgICBvcHRpb25zLmJvcmRlclJhZGl1cyA9IDEwMDtcbiAgICBpZiAob3B0aW9ucy5pbWFnZSA9PSBudWxsKSB7XG4gICAgICBvcHRpb25zLmltYWdlID0gXCJpbWFnZXMvbWVJY29uQWN0aXZlLnBuZ1wiO1xuICAgIH1cbiAgICBpZiAob3B0aW9ucy5zdGF0dXMgPT0gbnVsbCkge1xuICAgICAgb3B0aW9ucy5zdGF0dXMgPSBcImluYWN0aXZlXCI7XG4gICAgfVxuICAgIEF2YXRhci5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLCBvcHRpb25zKTtcbiAgICBzaWduID0gbmV3IExheWVyKHtcbiAgICAgIHBhcmVudDogdGhpcyxcbiAgICAgIHg6IEFsaWduLnJpZ2h0LFxuICAgICAgeTogQWxpZ24uYm90dG9tLFxuICAgICAgd2lkdGg6IDI4IC8gMTAwICogdGhpcy53aWR0aCxcbiAgICAgIGhlaWdodDogMjggLyAxMDAgKiB0aGlzLmhlaWdodCxcbiAgICAgIGJvcmRlclJhZGl1czogMTAwLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiBcInRyYW5zcGFyZW50XCIsXG4gICAgICBib3JkZXJXaWR0aDogMiAqIG9wdGlvbnMuc2NhbGVcbiAgICB9KTtcbiAgICBzaWduLnN0YXRlcyA9IHtcbiAgICAgIGluYWN0aXZlOiB7XG4gICAgICAgIGJvcmRlcldpZHRoOiAwLFxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwidHJhbnNwYXJlbnRcIixcbiAgICAgICAgaW1hZ2U6IG51bGxcbiAgICAgIH0sXG4gICAgICBhY3RpdmU6IHtcbiAgICAgICAgaW1hZ2U6IG51bGwsXG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogXCIjNjBDQTExXCIsXG4gICAgICAgIGJvcmRlckNvbG9yOiBcIiNGRkZGRkZcIlxuICAgICAgfSxcbiAgICAgIG1lc3Nlbmdlcjoge1xuICAgICAgICBib3JkZXJDb2xvcjogXCIjRkZGRkZGXCIsXG4gICAgICAgIGltYWdlOiBcImltYWdlcy9tZXNzZW5nZXJJY29uLnBuZ1wiXG4gICAgICB9LFxuICAgICAgbXlEYXk6IHtcbiAgICAgICAgYm9yZGVyQ29sb3I6IFwiI0ZGRkZGRlwiLFxuICAgICAgICBib3JkZXJXaWR0aDogb3B0aW9ucy5zY2FsZSAqIDIsXG4gICAgICAgIGltYWdlOiBudWxsLFxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwiIzAwNzZGRlwiXG4gICAgICB9XG4gICAgfTtcbiAgICB0aGlzLnN1YkxheWVyc1swXS5hbmltYXRlKG9wdGlvbnMuc3RhdHVzKTtcbiAgfVxuXG4gIEF2YXRhci5wcm90b3R5cGUuY2hhbmdlU3RhdHVzID0gZnVuY3Rpb24odHlwZSkge1xuICAgIHJldHVybiB0aGlzLnN1YkxheWVyc1swXS5hbmltYXRlKHR5cGUpO1xuICB9O1xuXG4gIEF2YXRhci5wcm90b3R5cGUuc2V0VXNlciA9IGZ1bmN0aW9uKHVzZXIpIHtcbiAgICB0aGlzLmltYWdlID0gdXNlci5pbWFnZV8wO1xuICAgIHJldHVybiB0aGlzLnN0YXR1cyA9IHVzZXIuc3RhdHVzO1xuICB9O1xuXG4gIHJldHVybiBBdmF0YXI7XG5cbn0pKExheWVyKTtcblxuZXhwb3J0cy5BdmF0YXIgPSBBdmF0YXI7XG5cbk15RGF5cyA9IChmdW5jdGlvbihzdXBlckNsYXNzKSB7XG4gIGV4dGVuZChNeURheXMsIHN1cGVyQ2xhc3MpO1xuXG4gIGZ1bmN0aW9uIE15RGF5cyhvcHRpb25zLCB1c2Vycykge1xuICAgIHZhciBpLCBpbmRleCwgbGVuLCBteURheSwgdXNlcjtcbiAgICBpZiAob3B0aW9ucyA9PSBudWxsKSB7XG4gICAgICBvcHRpb25zID0ge307XG4gICAgfVxuICAgIGlmIChvcHRpb25zLnNjYWxlID09IG51bGwpIHtcbiAgICAgIG9wdGlvbnMuc2NhbGUgPSAxO1xuICAgIH1cbiAgICBvcHRpb25zLnggPSBBbGlnbi5jZW50ZXI7XG4gICAgb3B0aW9ucy53aWR0aCA9IFNjcmVlbi53aWR0aCAtIHN0eWxlLm1hcmdpbnM7XG4gICAgb3B0aW9ucy5oZWlnaHQgPSBvcHRpb25zLnNjYWxlICogKDEyNSArIHN0eWxlLm1hcmdpbnMpO1xuICAgIG9wdGlvbnMuc2Nyb2xsVmVydGljYWwgPSBmYWxzZTtcbiAgICBvcHRpb25zLmRpcmVjdGlvbkxvY2sgPSB0cnVlO1xuICAgIE15RGF5cy5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLCBvcHRpb25zKTtcbiAgICBmb3IgKGluZGV4ID0gaSA9IDAsIGxlbiA9IHVzZXJzLmxlbmd0aDsgaSA8IGxlbjsgaW5kZXggPSArK2kpIHtcbiAgICAgIHVzZXIgPSB1c2Vyc1tpbmRleF07XG4gICAgICBteURheSA9IG5ldyBBdmF0YXIoe30pO1xuICAgICAgbXlEYXkucGFyZW50ID0gdGhpcy5jb250ZW50O1xuICAgICAgbXlEYXkud2lkdGggPSA5MDtcbiAgICAgIG15RGF5LmhlaWdodCA9IDEyNTtcbiAgICAgIG15RGF5LnggPSBpbmRleCAqIChteURheS53aWR0aCArIHN0eWxlLm1hcmdpbiAvIDIpO1xuICAgICAgbXlEYXkueSA9IEFsaWduLmNlbnRlcjtcbiAgICAgIG15RGF5LmJvcmRlclJhZGl1cyA9IDU7XG4gICAgICBteURheS5zdWJMYXllcnNbMF0ud2lkdGggPSBteURheS5zdWJMYXllcnNbMF0uaGVpZ2h0ID0gMTQ7XG4gICAgICBteURheS5zdWJMYXllcnNbMF0ueSA9IEFsaWduLnRvcCgtNCk7XG4gICAgICBteURheS5zdWJMYXllcnNbMF0ueCA9IEFsaWduLnJpZ2h0KDQpO1xuICAgICAgbXlEYXkuY2hhbmdlU3RhdHVzKFwibXlEYXlcIik7XG4gICAgICBteURheS5zZXRVc2VyKHVzZXIpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBNeURheXM7XG5cbn0pKFNjcm9sbENvbXBvbmVudCk7XG5cbmV4cG9ydHMuTXlEYXlzID0gTXlEYXlzO1xuXG5NZXNzYWdlTGlzdEl0ZW0gPSAoZnVuY3Rpb24oc3VwZXJDbGFzcykge1xuICBleHRlbmQoTWVzc2FnZUxpc3RJdGVtLCBzdXBlckNsYXNzKTtcblxuICBmdW5jdGlvbiBNZXNzYWdlTGlzdEl0ZW0ob3B0aW9ucywgdXNlcikge1xuICAgIHZhciBhdmF0YXIsIGxhc3RNZXNzYWdlLCBsYXN0TWVzc2FnZVRpbWUsIG5hbWU7XG4gICAgaWYgKG9wdGlvbnMgPT0gbnVsbCkge1xuICAgICAgb3B0aW9ucyA9IHt9O1xuICAgIH1cbiAgICB0aGlzLmNoYW5nZU5hbWUgPSBiaW5kKHRoaXMuY2hhbmdlTmFtZSwgdGhpcyk7XG4gICAgaWYgKG9wdGlvbnMuc2NhbGUgPT0gbnVsbCkge1xuICAgICAgb3B0aW9ucy5zY2FsZSA9IDE7XG4gICAgfVxuICAgIG9wdGlvbnMueCA9IEFsaWduLmNlbnRlcjtcbiAgICBvcHRpb25zLndpZHRoID0gU2NyZWVuLndpZHRoIC0gc3R5bGUubWFyZ2lucztcbiAgICBvcHRpb25zLmhlaWdodCA9IDc0ICogb3B0aW9ucy5zY2FsZTtcbiAgICBvcHRpb25zLmJhY2tncm91bmRDb2xvciA9IFwidHJhbnNwYXJlbnRcIjtcbiAgICBvcHRpb25zLmNsaXAgPSB0cnVlO1xuICAgIE1lc3NhZ2VMaXN0SXRlbS5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLCBvcHRpb25zKTtcbiAgICBvcHRpb25zLm5hbWUgPSB1c2VyLmZpcnN0bmFtZSArIFwiIFwiICsgdXNlci5sYXN0bmFtZTtcbiAgICBvcHRpb25zLmxhc3RNZXNzYWdlID0gdXNlci5tZXNzYWdlVGV4dDtcbiAgICBvcHRpb25zLmxhc3RNZXNzYWdlVGltZSA9IHVzZXIubWVzc2FnZVRpbWU7XG4gICAgYXZhdGFyID0gbmV3IEF2YXRhcih7XG4gICAgICBwYXJlbnQ6IHRoaXMsXG4gICAgICB5OiBzdHlsZS5tYXJnaW4gKiBvcHRpb25zLnNjYWxlXG4gICAgfSk7XG4gICAgYXZhdGFyLnNldFVzZXIodXNlcik7XG4gICAgbmFtZSA9IG5ldyBUZXh0TGF5ZXIoe1xuICAgICAgbmFtZTogXCJuYW1lXCIsXG4gICAgICBwYXJlbnQ6IHRoaXMsXG4gICAgICB4OiBhdmF0YXIubWF4WCArIG9wdGlvbnMuc2NhbGUgKiAyMCxcbiAgICAgIHk6IGF2YXRhci55LFxuICAgICAgbGluZUhlaWdodDogMS41LFxuICAgICAgdGV4dDogb3B0aW9ucy5uYW1lLFxuICAgICAgZm9udFNpemU6IDE3ICogb3B0aW9ucy5zY2FsZVxuICAgIH0pO1xuICAgIGxhc3RNZXNzYWdlID0gbmV3IFRleHRMYXllcih7XG4gICAgICBuYW1lOiBcImxhc3RNZXNzYWdlXCIsXG4gICAgICBwYXJlbnQ6IHRoaXMsXG4gICAgICB4OiBuYW1lLngsXG4gICAgICB5OiBuYW1lLm1heFksXG4gICAgICBsaW5lSGVpZ2h0OiAxLjUsXG4gICAgICB3aWR0aDogdGhpcy53aWR0aCAtIGF2YXRhci53aWR0aCAtIDgsXG4gICAgICBoZWlnaHQ6IDE5LFxuICAgICAgdGV4dDogb3B0aW9ucy5sYXN0TWVzc2FnZSxcbiAgICAgIGZvbnRTaXplOiAxNiAqIG9wdGlvbnMuc2NhbGUsXG4gICAgICB0ZXh0T3ZlcmZsb3c6IFwiZWxpcHNpc1wiXG4gICAgfSk7XG4gICAgbGFzdE1lc3NhZ2VUaW1lID0gbmV3IFRleHRMYXllcih7XG4gICAgICBuYW1lOiBcImxhc3RNZXNzYWdlVGltZVwiLFxuICAgICAgcGFyZW50OiB0aGlzLFxuICAgICAgeDogQWxpZ24ucmlnaHQsXG4gICAgICB5OiBuYW1lLnksXG4gICAgICBmb250U2l6ZTogMTUgKiBvcHRpb25zLnNjYWxlLFxuICAgICAgdGV4dDogb3B0aW9ucy5sYXN0TWVzc2FnZVRpbWVcbiAgICB9KTtcbiAgfVxuXG4gIE1lc3NhZ2VMaXN0SXRlbS5wcm90b3R5cGUuY2hhbmdlTmFtZSA9IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICByZXR1cm4gdGhpcy5uYW1lID0gbmFtZTtcbiAgfTtcblxuICByZXR1cm4gTWVzc2FnZUxpc3RJdGVtO1xuXG59KShMYXllcik7XG5cbmV4cG9ydHMuTWVzc2FnZUxpc3RJdGVtID0gTWVzc2FnZUxpc3RJdGVtO1xuXG5NZXNzYWdlTGlzdCA9IChmdW5jdGlvbihzdXBlckNsYXNzKSB7XG4gIGV4dGVuZChNZXNzYWdlTGlzdCwgc3VwZXJDbGFzcyk7XG5cbiAgZnVuY3Rpb24gTWVzc2FnZUxpc3Qob3B0aW9ucywgdXNlcnMpIHtcbiAgICB2YXIgaSwgaW5kZXgsIGxlbiwgbWVzc2FnZSwgdXNlcjtcbiAgICBpZiAob3B0aW9ucyA9PSBudWxsKSB7XG4gICAgICBvcHRpb25zID0ge307XG4gICAgfVxuICAgIGlmIChvcHRpb25zLnNjYWxlID09IG51bGwpIHtcbiAgICAgIG9wdGlvbnMuc2NhbGUgPSAxO1xuICAgIH1cbiAgICBvcHRpb25zLndpZHRoID0gU2NyZWVuLndpZHRoIC0gc3R5bGUubWFyZ2lucztcbiAgICBvcHRpb25zLnggPSBBbGlnbi5jZW50ZXI7XG4gICAgb3B0aW9ucy5iYWNrZ3JvdW5kQ29sb3IgPSBcInRyYW5zcGFyZW50XCI7XG4gICAgb3B0aW9ucy5oZWlnaHQgPSB1c2Vycy5sZW5ndGggKiA3NCAqIG9wdGlvbnMuc2NhbGU7XG4gICAgTWVzc2FnZUxpc3QuX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgb3B0aW9ucyk7XG4gICAgZm9yIChpbmRleCA9IGkgPSAwLCBsZW4gPSB1c2Vycy5sZW5ndGg7IGkgPCBsZW47IGluZGV4ID0gKytpKSB7XG4gICAgICB1c2VyID0gdXNlcnNbaW5kZXhdO1xuICAgICAgbWVzc2FnZSA9IG5ldyBNZXNzYWdlTGlzdEl0ZW0oe1xuICAgICAgICBwYXJlbnQ6IHRoaXMsXG4gICAgICAgIHk6IG9wdGlvbnMuc2NhbGUgKiBpbmRleCAqIDc0XG4gICAgICB9LCB1c2VyKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gTWVzc2FnZUxpc3Q7XG5cbn0pKExheWVyKTtcblxuZXhwb3J0cy5NZXNzYWdlTGlzdCA9IE1lc3NhZ2VMaXN0O1xuXG5BY3RpdmVGcmllbmRzU2Nyb2xsTGlzdCA9IChmdW5jdGlvbihzdXBlckNsYXNzKSB7XG4gIGV4dGVuZChBY3RpdmVGcmllbmRzU2Nyb2xsTGlzdCwgc3VwZXJDbGFzcyk7XG5cbiAgZnVuY3Rpb24gQWN0aXZlRnJpZW5kc1Njcm9sbExpc3Qob3B0aW9ucywgdXNlcnMpIHtcbiAgICB2YXIgYXZhdGFyLCBjb250YWluZXIsIGksIGluZGV4LCBsZW4sIG5hbWUsIHVzZXI7XG4gICAgaWYgKG9wdGlvbnMgPT0gbnVsbCkge1xuICAgICAgb3B0aW9ucyA9IHt9O1xuICAgIH1cbiAgICBpZiAob3B0aW9ucy5zY2FsZSA9PSBudWxsKSB7XG4gICAgICBvcHRpb25zLnNjYWxlID0gMTtcbiAgICB9XG4gICAgb3B0aW9ucy53aWR0aCA9IFNjcmVlbi53aWR0aCAtIHN0eWxlLm1hcmdpbnM7XG4gICAgb3B0aW9ucy5oZWlnaHQgPSBvcHRpb25zLnNjYWxlICogMTAwO1xuICAgIG9wdGlvbnMuc2Nyb2xsVmVydGljYWwgPSBmYWxzZTtcbiAgICBBY3RpdmVGcmllbmRzU2Nyb2xsTGlzdC5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLCBvcHRpb25zKTtcbiAgICB0aGlzLmNvbnRlbnQuaGVpZ2h0ID0gbnVsbDtcbiAgICBmb3IgKGluZGV4ID0gaSA9IDAsIGxlbiA9IHVzZXJzLmxlbmd0aDsgaSA8IGxlbjsgaW5kZXggPSArK2kpIHtcbiAgICAgIHVzZXIgPSB1c2Vyc1tpbmRleF07XG4gICAgICBjb250YWluZXIgPSBuZXcgTGF5ZXIoe1xuICAgICAgICBwYXJlbnQ6IHRoaXMuY29udGVudCxcbiAgICAgICAgeDogaW5kZXggKiAoNTAgKyBzdHlsZS5tYXJnaW4pLFxuICAgICAgICB3aWR0aDogNTAsXG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogXCJ0cmFuc3BhcmVudFwiXG4gICAgICB9KTtcbiAgICAgIGF2YXRhciA9IG5ldyBBdmF0YXIoe1xuICAgICAgICBwYXJlbnQ6IGNvbnRhaW5lclxuICAgICAgfSk7XG4gICAgICBuYW1lID0gbmV3IFRleHRMYXllcih7XG4gICAgICAgIHBhcmVudDogY29udGFpbmVyLFxuICAgICAgICB0ZXh0OiB1c2VyLmZpcnN0bmFtZSxcbiAgICAgICAgZm9udFNpemU6IDE0ICogb3B0aW9ucy5zY2FsZSxcbiAgICAgICAgeTogYXZhdGFyLm1heFkgKyA1XG4gICAgICB9KTtcbiAgICAgIGNvbnRhaW5lci53aWR0aCA9IGF2YXRhci53aWR0aDtcbiAgICAgIGF2YXRhci54ID0gbmFtZS54ID0gQWxpZ24uY2VudGVyO1xuICAgICAgdGhpcy5jb250ZW50LmhlaWdodCA9IGNvbnRhaW5lci5oZWlnaHQgPSBhdmF0YXIuaGVpZ2h0ICsgbmFtZS5oZWlnaHQgKyA1O1xuICAgICAgdGhpcy5jb250ZW50LnkgPSBBbGlnbi5jZW50ZXI7XG4gICAgICBhdmF0YXIuc2V0VXNlcih1c2VyKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gQWN0aXZlRnJpZW5kc1Njcm9sbExpc3Q7XG5cbn0pKFNjcm9sbENvbXBvbmVudCk7XG5cbmV4cG9ydHMuQWN0aXZlRnJpZW5kc1Njcm9sbExpc3QgPSBBY3RpdmVGcmllbmRzU2Nyb2xsTGlzdDtcblxuQWN0aXZlRnJpZW5kcyA9IChmdW5jdGlvbihzdXBlckNsYXNzKSB7XG4gIGV4dGVuZChBY3RpdmVGcmllbmRzLCBzdXBlckNsYXNzKTtcblxuICBmdW5jdGlvbiBBY3RpdmVGcmllbmRzKG9wdGlvbnMsIHVzZXJzKSB7XG4gICAgdmFyIGFjdGl2ZUZyaWVuZHNJY29uLCBhY3RpdmVGcmllbmRzTGFiZWwsIGFjdGl2ZU5vdywgYWN0aXZlTm93U2V0dGluZ3MsIHNjcm9sbDtcbiAgICBpZiAob3B0aW9ucyA9PSBudWxsKSB7XG4gICAgICBvcHRpb25zID0ge307XG4gICAgfVxuICAgIGlmIChvcHRpb25zLnNjYWxlID09IG51bGwpIHtcbiAgICAgIG9wdGlvbnMuc2NhbGUgPSAxO1xuICAgIH1cbiAgICBvcHRpb25zLmhlaWdodCA9IDE1MDtcbiAgICBvcHRpb25zLndpZHRoID0gU2NyZWVuLndpZHRoIC0gc3R5bGUubWFyZ2lucztcbiAgICBvcHRpb25zLmJhY2tncm91bmRDb2xvciA9IFwidHJhbnNwYXJlbnRcIjtcbiAgICBvcHRpb25zLnggPSBBbGlnbi5jZW50ZXI7XG4gICAgb3B0aW9ucy5kaXJlY3Rpb25Mb2NrID0gdHJ1ZTtcbiAgICBBY3RpdmVGcmllbmRzLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsIG9wdGlvbnMpO1xuICAgIGFjdGl2ZUZyaWVuZHNMYWJlbCA9IG5ldyBMYXllcih7XG4gICAgICBwYXJlbnQ6IHRoaXMsXG4gICAgICB3aWR0aDogdGhpcy53aWR0aCxcbiAgICAgIGhlaWdodDogNTAgKiBvcHRpb25zLnNjYWxlLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiBcInRyYW5zcGFyZW50XCJcbiAgICB9KTtcbiAgICBhY3RpdmVGcmllbmRzSWNvbiA9IG5ldyBMYXllcih7XG4gICAgICBwYXJlbnQ6IGFjdGl2ZUZyaWVuZHNMYWJlbCxcbiAgICAgIHg6IEFsaWduLmxlZnQsXG4gICAgICB5OiBBbGlnbi5jZW50ZXIsXG4gICAgICBpbWFnZTogXCJpbWFnZXMvYWN0aXZlTm93SWNvbi5wbmdcIixcbiAgICAgIHdpZHRoOiAyMCxcbiAgICAgIGhlaWdodDogMjBcbiAgICB9KTtcbiAgICBhY3RpdmVOb3cgPSBuZXcgVGV4dExheWVyKHtcbiAgICAgIHBhcmVudDogYWN0aXZlRnJpZW5kc0xhYmVsLFxuICAgICAgeDogYWN0aXZlRnJpZW5kc0ljb24ubWF4WCArIDEyLFxuICAgICAgZm9udFNpemU6IDE2LFxuICAgICAgZm9udFdlaWdodDogXCJib2xkXCIsXG4gICAgICBmb250Q29sb3I6IFwiYmxhY2tcIixcbiAgICAgIHk6IEFsaWduLmNlbnRlcixcbiAgICAgIHRleHQ6IFwiQWN0aXZlIG5vdyAoXCIgKyB1c2Vycy5sZW5ndGggKyBcIikgPlwiXG4gICAgfSk7XG4gICAgYWN0aXZlTm93U2V0dGluZ3MgPSBuZXcgTGF5ZXIoe1xuICAgICAgcGFyZW50OiBhY3RpdmVGcmllbmRzTGFiZWwsXG4gICAgICB4OiBBbGlnbi5yaWdodCxcbiAgICAgIHk6IEFsaWduLmNlbnRlcixcbiAgICAgIGltYWdlOiBcImltYWdlcy9hY3RpdmVOb3dTZXR0aW5ncy5wbmdcIixcbiAgICAgIHdpZHRoOiAzNSxcbiAgICAgIGhlaWdodDogMzVcbiAgICB9KTtcbiAgICBzY3JvbGwgPSBuZXcgQWN0aXZlRnJpZW5kc1Njcm9sbExpc3Qoe1xuICAgICAgcGFyZW50OiB0aGlzLFxuICAgICAgeTogQWxpZ24uYm90dG9tXG4gICAgfSwgdXNlcnMpO1xuICB9XG5cbiAgcmV0dXJuIEFjdGl2ZUZyaWVuZHM7XG5cbn0pKExheWVyKTtcblxuZXhwb3J0cy5BY3RpdmVGcmllbmRzID0gQWN0aXZlRnJpZW5kcztcbiIsIlxyXG5jbGFzcyBJcHpVdGlsc1xyXG5cclxuICAgIEBzZXRWaXNpYmxlOiAoY29tcG9uZW50LCB2aXNpYmxlKSAtPlxyXG4gICAgICAgIGNvbXBvbmVudC52aXNpYmxlID0gdmlzaWJsZVxyXG4gICAgICAgIGlmIChjb21wb25lbnQuY2hpbGRyZW4ubGVuZ3RoID4gMClcclxuICAgICAgICAgICAgZm9yIGNoaWxkLCBpbmRleCBpbiBjb21wb25lbnQuY2hpbGRyZW5cclxuICAgICAgICAgICAgICAgIEBzZXRWaXNpYmxlKGNoaWxkLCB2aXNpYmxlKVxyXG4gICAgICAgIHJldHVybiB0cnVlXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IElwelV0aWxzIiwiaW9zID0gcmVxdWlyZSBcImlvcy1raXRcIlxyXG5pcHogPSByZXF1aXJlIFwiaXB6LW1lc3Nlbmdlci1raXRcIlxyXG5cclxuY2xhc3MgSXB6TWVzc2VuZ2VyIGV4dGVuZHMgTGF5ZXJcclxuXHJcbiAgICBAaG9tZVRhYiA9IHVuZGVmaW5lZFxyXG4gICAgQHRhYkJhciA9IHVuZGVmaW5lZFxyXG5cclxuICAgIGNvbnN0cnVjdG9yOihvcHRpb25zID0ge30pIC0+XHJcbiAgICAgICAgb3B0aW9ucy5uYW1lID89IFwiTWVzc2VuZ2VyLk1haW5cIlxyXG4gICAgICAgIG9wdGlvbnMud2lkdGggPz0gU2NyZWVuLndpZHRoXHJcbiAgICAgICAgb3B0aW9ucy5oZWlnaHQgPz0gU2NyZWVuLmhlaWdodFxyXG4gICAgICAgIG9wdGlvbnMuYmFja2dyb3VuZENvbG9yID89IFNjcmVlbi5iYWNrZ3JvdW5kQ29sb3JcclxuXHJcbiAgICAgICAgc3VwZXIgb3B0aW9uc1xyXG5cclxuICAgICAgICBAaG9tZVRhYiA9IG5ldyBpcHouSXB6TWVzc2VuZ2VyVGFiXHJcbiAgICAgICAgICAgIHN1cGVyTGF5ZXI6IEBcclxuICAgICAgICAgICAgbGFiZWw6XCJIb21lXCJcclxuICAgICAgICAgICAgYWN0aXZlSWNvbjpcImltYWdlcy9Ib21lSWNvbkFjdGl2ZS5wbmdcIlxyXG4gICAgICAgICAgICB2aWV3OiBuZXcgaXB6Lklwek1lc3NlbmdlckhvbWUoe3N1cGVyTGF5ZXI6IEB9KVxyXG4gICAgICAgICAgICBcclxuICAgICAgICBjYWxsc1RhYiA9IG5ldyBpcHouSXB6TWVzc2VuZ2VyVGFiXHJcbiAgICAgICAgICAgIHN1cGVyTGF5ZXI6IEBcclxuICAgICAgICAgICAgbGFiZWw6XCJDYWxsc1wiXHJcbiAgICAgICAgICAgIGFjdGl2ZUljb246XCJpbWFnZXMvQ2FsbHNJY29uQWN0aXZlLnBuZ1wiXHJcbiAgICAgICAgICAgIHZpZXc6IG5ldyBpb3MuVmlld1xyXG4gICAgICAgICAgICAgICAgbmFtZTpcIkNhbGxzLnZpZXdcIlxyXG4gICAgICAgICAgICAgICAgc3VwZXJMYXllcjogQFxyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcInJlZFwiXHJcbiAgICAgICAgICAgICAgICBjb25zdHJhaW50czpcclxuICAgICAgICAgICAgICAgICAgICBsZWFkaW5nOjBcclxuICAgICAgICAgICAgICAgICAgICB0cmFpbGluZzowXHJcbiAgICAgICAgICAgICAgICAgICAgdG9wOjBcclxuICAgICAgICAgICAgICAgICAgICBib3R0b206MFxyXG4gICAgICAgICAgICBcclxuICAgICAgICBjYW1lcmFUYWIgPSBuZXcgaXB6Lklwek1lc3NlbmdlclRhYlxyXG4gICAgICAgICAgICBzdXBlckxheWVyOiBAXHJcbiAgICAgICAgICAgIGxhYmVsOlwiXCJcclxuICAgICAgICAgICAgYWN0aXZlSWNvbjpcImltYWdlcy9DYW1lcmFJY29uQWN0aXZlLnBuZ1wiXHJcbiAgICAgICAgICAgIGljb25zaXplOjQ1ICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGFsd2F5c0FjdGl2ZTp0cnVlXHJcbiAgICAgICAgICAgIGNhbkhhdmVCYWRnZTpmYWxzZVxyXG5cclxuICAgICAgICBwZW9wbGVUYWIgPSBuZXcgaXB6Lklwek1lc3NlbmdlclRhYlxyXG4gICAgICAgICAgICBzdXBlckxheWVyOiBAXHJcbiAgICAgICAgICAgIGxhYmVsOlwiUGVvcGxlXCJcclxuICAgICAgICAgICAgYWN0aXZlSWNvbjpcImltYWdlcy9QZW9wbGVJY29uQWN0aXZlLnBuZ1wiXHJcbiAgICAgICAgICAgIHZpZXc6bmV3IGlvcy5WaWV3XHJcbiAgICAgICAgICAgICAgICBuYW1lOlwiUGVvcGxlLnZpZXdcIlxyXG4gICAgICAgICAgICAgICAgc3VwZXJMYXllcjogQFxyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcIm9yYW5nZVwiXHJcbiAgICAgICAgICAgICAgICBjb25zdHJhaW50czpcclxuICAgICAgICAgICAgICAgICAgICBsZWFkaW5nOjBcclxuICAgICAgICAgICAgICAgICAgICB0cmFpbGluZzowXHJcbiAgICAgICAgICAgICAgICAgICAgdG9wOjBcclxuICAgICAgICAgICAgICAgICAgICBib3R0b206MFxyXG4gICAgICAgICAgICBcclxuICAgICAgICBnYW1lc1RhYiA9IG5ldyBpcHouSXB6TWVzc2VuZ2VyVGFiXHJcbiAgICAgICAgICAgIHN1cGVyTGF5ZXI6IEBcclxuICAgICAgICAgICAgbGFiZWw6XCJHYW1lc1wiXHJcbiAgICAgICAgICAgIGFjdGl2ZUljb246XCJpbWFnZXMvR2FtZXNJY29uQWN0aXZlLnBuZ1wiXHJcbiAgICAgICAgICAgIHZpZXc6bmV3IGlvcy5WaWV3XHJcbiAgICAgICAgICAgICAgICBuYW1lOlwiR2FtZXMudmlld1wiXHJcbiAgICAgICAgICAgICAgICBzdXBlckxheWVyOiBAXHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwiZ3JlZW5cIlxyXG4gICAgICAgICAgICAgICAgY29uc3RyYWludHM6XHJcbiAgICAgICAgICAgICAgICAgICAgbGVhZGluZzowXHJcbiAgICAgICAgICAgICAgICAgICAgdHJhaWxpbmc6MFxyXG4gICAgICAgICAgICAgICAgICAgIHRvcDowXHJcbiAgICAgICAgICAgICAgICAgICAgYm90dG9tOjBcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgQHRhYkJhciA9IG5ldyBpcHouSXB6TWVzc2VuZ2VyVGFiQmFyXHJcbiAgICAgICAgICAgIHN1cGVyTGF5ZXI6IEBcclxuICAgICAgICAgICAgdGFiczpbQGhvbWVUYWIsIGNhbGxzVGFiLCBjYW1lcmFUYWIsIHBlb3BsZVRhYiwgZ2FtZXNUYWJdXHJcbiAgICAgICAgICAgIHN0YXJ0OjBcclxuICAgICAgICAgICAgYWN0aXZlQ29sb3I6XCJibHVlXCJcclxuICAgICAgICAgICAgaW5hY3RpdmVDb2xvcjpcImdyZXlcIiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB2aWV3VG9wOm9wdGlvbnMueVxyXG5cclxuICAgICAgICBjYW1WaWV3ID0gbmV3IGlvcy5WaWV3XHJcbiAgICAgICAgICAgIG5hbWU6XCJDYW1lcmEudmlld1wiXHJcbiAgICAgICAgICAgIHN1cGVyTGF5ZXI6IGNhbWVyYVRhYi52aWV3XHJcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXCJibGFja1wiXHJcbiAgICAgICAgICAgIGNvbnN0cmFpbnRzOlxyXG4gICAgICAgICAgICAgICAgbGVhZGluZzowXHJcbiAgICAgICAgICAgICAgICB0cmFpbGluZzowXHJcbiAgICAgICAgICAgICAgICB0b3A6MFxyXG4gICAgICAgICAgICAgICAgYm90dG9tOjAgICAgICAgICAgICAgICAgXHJcblxyXG4gICAgc2V0VXNlcjoodXNlcikgLT5cclxuICAgICAgICBAaG9tZVRhYi52aWV3LnNldFVzZXIodXNlcilcclxuXHJcbiAgICAgICAgQHRhYkJhci5zZXRCYWRnZVZhbHVlKDAsIHVzZXIuSG9tZUJhZGdlKVxyXG4gICAgICAgIEB0YWJCYXIuc2V0QmFkZ2VWYWx1ZSgxLCB1c2VyLkNhbGxzQmFkZ2UpXHJcbiAgICAgICAgQHRhYkJhci5zZXRCYWRnZVZhbHVlKDMsIHVzZXIuUGVvcGxlQmFkZ2UpXHJcbiAgICAgICAgQHRhYkJhci5zZXRCYWRnZVZhbHVlKDQsIHVzZXIuR2FtZXNCYWRnZSlcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gSXB6TWVzc2VuZ2VyXHJcbiIsImlvcyA9IHJlcXVpcmUgJ2lvcy1raXQnXHJcbnV0aWxzID0gcmVxdWlyZSAnaXB6LXV0aWxzJ1xyXG5cclxuZXhwb3J0cy5kZWZhdWx0cyA9IHtcclxuXHR0YWI6IHtcclxuXHRcdHN1cGVyTGF5ZXI6dW5kZWZpbmVkXHJcblx0XHR2aWV3OnVuZGVmaW5lZFxyXG5cdFx0bGFiZWw6IFwibGFiZWxcIlxyXG5cdFx0Zm9udHNpemU6IDEwXHJcblx0XHRhY3RpdmVJY29uOnVuZGVmaW5lZFx0IyBUT0RPIHJlbmFtZSBhcyBpY29uXHJcblx0XHRpY29uc2l6ZTogMjVcclxuXHRcdHBhZGRpbmc6IDVcdFx0XHJcblx0XHRhbHdheXNBY3RpdmU6ZmFsc2VcclxuXHRcdGNhbkhhdmVCYWRnZTp0cnVlXHJcblx0XHRiYWRnZVNpemU6IDEyXHJcblx0XHRiYWRnZUNvbG9yOiBcIiNGRjNCMzBcIlxyXG5cdFx0YmFkZ2VUZXh0U3R5bGUgOiB7XHJcblx0XHRcdGZvbnRTaXplOiAxMFxyXG5cdFx0XHRjb2xvcjogXCIjZmZmXCJcclxuXHRcdFx0dGV4dEFsaWduOiBcImNlbnRlclwiXHJcblx0XHR9XHJcblx0fVxyXG5cdGJhcjoge1x0XHRcclxuXHRcdHN1cGVyTGF5ZXI6dW5kZWZpbmVkXHJcblx0XHR0eXBlOlwidGFiQmFyXCJcclxuXHRcdHRhYnM6IFtdXHJcblx0XHRzdGFydDowXHJcblx0XHRiYXJUb3A6MFxyXG5cdFx0aGVpZ2h0OjUyXHJcblx0XHRiYWNrZ3JvdW5kQ29sb3I6XCJ3aGl0ZVwiXHJcblx0XHRibHVyOmZhbHNlXHJcblx0XHRhY3RpdmVDb2xvcjpcImJsdWVcIlxyXG5cdFx0aW5hY3RpdmVDb2xvcjpcImdyYXlcIlxyXG5cdFx0dmlld1RvcDowXHJcblx0fVxyXG59XHJcblxyXG5leHBvcnRzLmRlZmF1bHRzLnRhYi5wcm9wcyA9IE9iamVjdC5rZXlzKGV4cG9ydHMuZGVmYXVsdHMudGFiKVxyXG5leHBvcnRzLmRlZmF1bHRzLmJhci5wcm9wcyA9IE9iamVjdC5rZXlzKGV4cG9ydHMuZGVmYXVsdHMuYmFyKVxyXG5cclxuZXhwb3J0cy50YWIgPSAoYXJyYXkpIC0+XHJcblx0c2V0dXAgPSBpb3MudXRpbHMuc2V0dXBDb21wb25lbnQoYXJyYXksIGV4cG9ydHMuZGVmYXVsdHMudGFiKVxyXG5cclxuXHR0YWIgPSBuZXcgaW9zLlZpZXdcclxuXHRcdHN1cGVyTGF5ZXI6c2V0dXAuc3VwZXJMYXllclxyXG5cdFx0YmFja2dyb3VuZENvbG9yOlwidHJhbnNwYXJlbnRcIlxyXG5cdFx0bmFtZTpzZXR1cC5sYWJlbFxyXG5cclxuXHRpZiAoc2V0dXAudmlldyAhPSB1bmRlZmluZWQpXHJcblx0XHR0YWIudmlldyA9IHNldHVwLnZpZXdcclxuXHRcdHRhYi52aWV3LmNvbnN0cmFpbnRzID1cclxuXHRcdFx0bGVhZGluZzowXHJcblx0XHRcdHRyYWlsaW5nOjBcclxuXHRcdFx0Ym90dG9tOjBcclxuXHRlbHNlXHJcblx0XHR0YWIudmlldyA9IG5ldyBpb3MuVmlld1xyXG5cdFx0XHRzdXBlckxheWVyOnNldHVwLnN1cGVyTGF5ZXJcclxuXHRcdFx0bmFtZTpzZXR1cC5sYWJlbCArIFwiLnZpZXdcIlxyXG5cdFx0XHRiYWNrZ3JvdW5kQ29sb3I6XCJ0cmFuc3BhcmVudFwiXHJcblx0XHRcdGNvbnN0cmFpbnRzOlxyXG5cdFx0XHRcdGxlYWRpbmc6MFxyXG5cdFx0XHRcdHRyYWlsaW5nOjBcclxuXHRcdFx0XHR0b3A6MFxyXG5cdFx0XHRcdGJvdHRvbTowXHJcblxyXG5cdCMgQ3JlYXRlIENvbnRhaW5lclxyXG5cdHRhYi5jb250YWluZXIgPSBuZXcgaW9zLlZpZXdcclxuXHRcdG5hbWU6IHNldHVwLmxhYmVsICsgXCIuY29udGFpbmVyXCJcclxuXHRcdHN1cGVyTGF5ZXI6dGFiXHJcblx0XHRiYWNrZ3JvdW5kQ29sb3I6XCJ0cmFuc3BhcmVudFwiXHJcblx0XHRjb25zdHJhaW50czpcclxuXHRcdFx0dG9wOnNldHVwLnBhZGRpbmdcclxuXHRcdFx0Ym90dG9tOnNldHVwLnBhZGRpbmdcclxuXHRcdFx0bGVhZGluZzpzZXR1cC5wYWRkaW5nXHJcblx0XHRcdHRyYWlsaW5nOnNldHVwLnBhZGRpbmdcclxuXHJcblx0aWYgc2V0dXAuYWN0aXZlSWNvbiAhPSB1bmRlZmluZWRcclxuXHRcdHRhYi5pY29uID0gbmV3IGlvcy5WaWV3XHJcblx0XHRcdG5hbWU6IHNldHVwLmxhYmVsICsgXCIuaWNvblwiXHJcblx0XHRcdHN1cGVyTGF5ZXI6dGFiLmNvbnRhaW5lclxyXG5cdFx0XHRiYWNrZ3JvdW5kQ29sb3I6XCJ0cmFuc3BhcmVudFwiXHJcblx0XHRcdGNvbnN0cmFpbnRzOlxyXG5cdFx0XHRcdHdpZHRoOnNldHVwLmljb25zaXplXHJcblx0XHRcdFx0aGVpZ2h0OnNldHVwLmljb25zaXplXHJcblx0XHRcdFx0YWxpZ246XCJob3Jpem9udGFsXCJcclxuXHRcdHRhYi5pbWFnZUxheWVyID0gbmV3IGlvcy5WaWV3XHJcblx0XHRcdG5hbWU6IHNldHVwLmxhYmVsICsgXCIuaW1hZ2VcIlxyXG5cdFx0XHRzdXBlckxheWVyOnRhYi5pY29uXHJcblx0XHRcdGltYWdlOiBzZXR1cC5hY3RpdmVJY29uXHJcblx0XHRcdGJhY2tncm91bmRDb2xvcjpcInRyYW5zcGFyZW50XCJcclxuXHRcdFx0Y29uc3RyYWludHM6XHJcblx0XHRcdFx0d2lkdGg6c2V0dXAuaWNvbnNpemVcclxuXHRcdFx0XHRoZWlnaHQ6c2V0dXAuaWNvbnNpemVcclxuXHJcblx0XHRpZiAoc2V0dXAuY2FuSGF2ZUJhZGdlKVxyXG5cdFx0XHR0YWIuYmFkZ2UgPSBuZXcgVGV4dExheWVyXHJcblx0XHRcdFx0bmFtZTpzZXR1cC5sYWJlbCArIFwiLmJhZGdlXCJcclxuXHRcdFx0XHRzdXBlckxheWVyOiB0YWIuaWNvblxyXG5cdFx0XHRcdHg6QWxpZ24ucmlnaHQoNylcclxuXHRcdFx0XHR5OkFsaWduLnRvcFxyXG5cdFx0XHRcdHdpZHRoOiBzZXR1cC5iYWRnZVNpemVcclxuXHRcdFx0XHRoZWlnaHQ6IHNldHVwLmJhZGdlU2l6ZVxyXG5cdFx0XHRcdGJvcmRlclJhZGl1czogMThcclxuXHRcdFx0XHRiYWNrZ3JvdW5kQ29sb3I6IHNldHVwLmJhZGdlQ29sb3JcdFx0XHRcdFxyXG5cdFx0XHRcdGZvbnRTaXplOiBzZXR1cC5iYWRnZVRleHRTdHlsZS5mb250U2l6ZVxyXG5cdFx0XHRcdGNvbG9yOiBzZXR1cC5iYWRnZVRleHRTdHlsZS5jb2xvclxyXG5cdFx0XHRcdHRleHRBbGlnbjogc2V0dXAuYmFkZ2VUZXh0U3R5bGUudGV4dEFsaWduXHRcclxuXHRcdFx0dGFiLmJhZGdlLnZpc2libGUgPSBmYWxzZVxyXG5cclxuXHRpZiAoc2V0dXAubGFiZWwgIT0gXCJcIilcdFxyXG5cdFx0dGFiLmxhYmVsID0gbmV3IGlvcy5UZXh0XHJcblx0XHRcdG5hbWU6IHNldHVwLmxhYmVsICsgXCIubGFiZWxcIlxyXG5cdFx0XHRzdXBlckxheWVyOnRhYi5jb250YWluZXJcclxuXHRcdFx0dGV4dDpzZXR1cC5sYWJlbFxyXG5cdFx0XHRjb2xvcjpcIiM5MjkyOTJcIlxyXG5cdFx0XHRmb250U2l6ZTpzZXR1cC5mb250c2l6ZVxyXG5cdFx0XHRjb25zdHJhaW50czpcclxuXHRcdFx0XHRhbGlnbjpcImhvcml6b250YWxcIlxyXG5cdFx0XHRcdGJvdHRvbTowXHJcblxyXG5cdHRhYi5zZXRBY3RpdmUgPSAodmFsdWUpIC0+XHJcblx0XHRpZiAodmFsdWUgPT0gdHJ1ZSlcclxuXHRcdFx0dGFiLmxhYmVsLmNvbG9yID0gaW9zLnV0aWxzLmNvbG9yKFwiYmx1ZVwiKVxyXG5cdFx0XHRpZiAodGFiLmltYWdlTGF5ZXIgIT0gdW5kZWZpbmVkKVxyXG5cdFx0XHRcdHRhYi5pbWFnZUxheWVyLnNhdHVyYXRlID0gMTAwXHJcblx0XHRcdFx0dGFiLmltYWdlTGF5ZXIuYnJpZ2h0bmVzcyA9IDEwMFxyXG5cdFx0ZWxzZVxyXG5cdFx0XHRpZiAoIXNldHVwLmFsd2F5c0FjdGl2ZSlcclxuXHRcdFx0XHR0YWIubGFiZWwuY29sb3IgPSBpb3MudXRpbHMuY29sb3IoXCJncmV5XCIpXHJcblx0XHRcdFx0aWYgKHRhYi5pbWFnZUxheWVyICE9IHVuZGVmaW5lZClcclxuXHRcdFx0XHRcdHRhYi5pbWFnZUxheWVyLnNhdHVyYXRlID0gMFxyXG5cdFx0XHRcdFx0dGFiLmltYWdlTGF5ZXIuYnJpZ2h0bmVzcyA9IDE1MFxyXG5cclxuXHRcdHV0aWxzLnNldFZpc2libGUodGFiLnZpZXcsIHZhbHVlKVxyXG5cclxuXHRyZXR1cm4gdGFiXHJcblxyXG5leHBvcnRzLmJhciA9IChhcnJheSkgLT5cclxuXHRzZXR1cCA9IGlvcy51dGlscy5zZXR1cENvbXBvbmVudChhcnJheSwgZXhwb3J0cy5kZWZhdWx0cy5iYXIpXHJcblxyXG5cdCMgSWYgbm8gdGFicywgbWFrZSBkdW1teSB0YWJzXHJcblx0aWYgc2V0dXAudGFicy5sZW5ndGggPT0gMFxyXG5cdFx0ZHVtbXlUYWIgPSBuZXcgZXhwb3J0cy50YWJcclxuXHRcdGR1bW15VGFiMiA9IG5ldyBleHBvcnRzLnRhYlxyXG5cdFx0c2V0dXAudGFicy5wdXNoIGR1bW15VGFiXHJcblx0XHRzZXR1cC50YWJzLnB1c2ggZHVtbXlUYWIyXHJcblxyXG5cdHNwZWNzID1cclxuXHRcdHdpZHRoIDogc2V0dXAuc3VwZXJMYXllci53aWR0aCAvIHNldHVwLnRhYnMubGVuZ3RoXHJcblxyXG5cdGJhciA9IG5ldyBpb3MuVmlld1xyXG5cdFx0c3VwZXJMYXllcjpzZXR1cC5zdXBlckxheWVyXHJcblx0XHRiYWNrZ3JvdW5kQ29sb3I6XCJ0cmFuc3BhcmVudFwiXHJcblx0XHRuYW1lOlwidGFiQmFyXCJcclxuXHRcdGNvbnN0cmFpbnRzOlxyXG5cdFx0XHRsZWFkaW5nOjBcclxuXHRcdFx0dHJhaWxpbmc6MFxyXG5cdFx0XHRoZWlnaHQ6c2V0dXAuaGVpZ2h0XHJcblxyXG5cdGJhci5iZyA9IG5ldyBpb3MuVmlld1xyXG5cdFx0c3VwZXJMYXllcjpiYXJcclxuXHRcdG5hbWU6XCIuYmdcIlxyXG5cdFx0Y29uc3RyYWludHM6XHJcblx0XHRcdGxlYWRpbmc6MFxyXG5cdFx0XHR0cmFpbGluZzowXHJcblx0XHRcdHRvcDowXHJcblx0XHRcdGJvdHRvbTowXHJcblxyXG5cdGJhci5kaXZpZGVyID0gbmV3IGlvcy5WaWV3XHJcblx0XHRiYWNrZ3JvdW5kQ29sb3I6XCIjQjJCMkIyXCJcclxuXHRcdG5hbWU6XCIuZGl2aWRlclwiXHJcblx0XHRzdXBlckxheWVyOmJhclxyXG5cdFx0Y29uc3RyYWludHM6XHJcblx0XHRcdGxlYWRpbmc6MFxyXG5cdFx0XHR0cmFpbGluZzowXHJcblx0XHRcdGhlaWdodDouNVxyXG5cclxuXHRiYXIuYm94ID0gbmV3IGlvcy5WaWV3XHJcblx0XHRzdXBlckxheWVyOmJhclxyXG5cdFx0YmFja2dyb3VuZENvbG9yOlwidHJhbnNwYXJlbnRcIlxyXG5cdFx0bmFtZTpcIi5ib3hcIlxyXG5cdFx0Y29uc3RyYWludHM6XHJcblx0XHRcdGxlYWRpbmc6MFxyXG5cdFx0XHR0cmFpbGluZzowXHJcblx0XHRcdHRvcDowXHJcblx0XHRcdGJvdHRvbTowXHJcblxyXG5cdGlmIHNldHVwLnR5cGUgPT0gXCJuYXZCYXJcIlxyXG5cdFx0YmFyLmNvbnN0cmFpbnRzLnRvcCA9IHNldHVwLmJhclRvcFxyXG5cdFx0YmFyLmJnLmNvbnN0cmFpbnRzLnRvcCA9IDBcclxuXHRcdGJhci5kaXZpZGVyLnkgPSBzZXR1cC5oZWlnaHRcclxuXHRlbHNlXHJcblx0XHRiYXIuY29uc3RyYWludHMuYm90dG9tID0gMFxyXG5cdFx0YmFyLmJnLmNvbnN0cmFpbnRzLmJvdHRvbSA9IDBcclxuXHJcblx0c2V0QWN0aXZlID0gKHRhYkluZGV4KSAtPlxyXG5cdFx0Zm9yIHRhYiwgaW5kZXggaW4gc2V0dXAudGFic1xyXG5cdFx0XHRpZiBpbmRleCA9PSB0YWJJbmRleFxyXG5cdFx0XHRcdHRhYi5zZXRBY3RpdmUodHJ1ZSlcclxuXHRcdFx0ZWxzZVxyXG5cdFx0XHRcdHRhYi5zZXRBY3RpdmUoZmFsc2UpXHJcblxyXG5cdGJhci5zZXRCYWRnZVZhbHVlID0gKHRhYkluZGV4LCB2YWx1ZSkgPT5cclxuXHRcdCMgQWRkcyBhIGJhZGdlIHRvIHRoZSB0YWIgaXRlbSBpZiB2YWx1ZSBpcyBhIG51bWJlciA+IDAgYW5kIHJlbW92ZXMgdGhlIGJhZGdlIGlmIG51bGxcclxuXHRcdGZvciB0YWIsIGluZGV4IGluIHNldHVwLnRhYnNcclxuXHRcdFx0aWYgaW5kZXggPT0gdGFiSW5kZXhcclxuXHRcdFx0XHRpZiB2YWx1ZVxyXG5cdFx0XHRcdFx0dGFiLmJhZGdlLnRleHQgPSB2YWx1ZVxyXG5cdFx0XHRcdFx0dGFiLmJhZGdlLnZpc2libGUgPSB0cnVlXHJcblx0XHRcdFx0ZWxzZVxyXG5cdFx0XHRcdFx0dGFiLmJhZGdlLnZpc2libGUgPSBmYWxzZVxyXG5cclxuXHRmb3IgdGFiLCBpbmRleCBpbiBzZXR1cC50YWJzXHJcblx0XHQjQ2hlY2sgZm9yIHZhaWxkIHRhYiBvYmplY3RcclxuXHRcdGJhci5ib3guYWRkU3ViTGF5ZXIodGFiKVxyXG5cclxuXHRcdCMgQ2hhbmdlIGNvbG9yc1xyXG5cdFx0dGFiLmxhYmVsLmNvbG9yID0gaW9zLnV0aWxzLmNvbG9yKHNldHVwLmluYWN0aXZlQ29sb3IpXHJcblx0XHRiYXIuYmcuYmFja2dyb3VuZENvbG9yID0gc2V0dXAuYmFja2dyb3VuZENvbG9yXHJcblxyXG5cdFx0aWYgc2V0dXAuYmx1clxyXG5cdFx0XHRiYXIuYmcuYmFja2dyb3VuZENvbG9yID0gXCJyZ2JhKDI1NSwyNTUsMjU1LCAuOSlcIlxyXG5cdFx0XHRpb3MudXRpbHMuYmdCbHVyKGJhci5iZylcclxuXHRcdFx0XHRcclxuXHRcdGlmIChzZXR1cC50eXBlID09IFwibmF2QmFyXCIpXHJcblx0XHRcdHRhYi52aWV3LmNvbnN0cmFpbnRzLnRvcCA9IHNldHVwLmJhclRvcCArIHNldHVwLmhlaWdodFxyXG5cdFx0ZWxzZVxyXG5cdFx0XHR0YWIudmlldy5jb25zdHJhaW50cy50b3AgPSBzZXR1cC52aWV3VG9wXHJcblx0XHRcdHRhYi52aWV3LmNvbnN0cmFpbnRzLmJvdHRvbSA9IHNldHVwLmhlaWdodFxyXG5cdFx0XHJcblx0XHR0YWIuY29uc3RyYWludHMud2lkdGggPSBzcGVjcy53aWR0aFxyXG5cdFx0dGFiLmNvbnN0cmFpbnRzLmhlaWdodCA9IHNldHVwLmhlaWdodFxyXG5cclxuXHRcdGlmIGluZGV4ID09IDBcclxuXHRcdFx0dGFiLmNvbnN0cmFpbnRzLmxlYWRpbmcgPSAwXHJcblx0XHRlbHNlXHJcblx0XHRcdHRhYi5jb25zdHJhaW50cy5sZWFkaW5nID0gc2V0dXAudGFic1tpbmRleCAtIDFdXHJcblxyXG5cdFx0aW9zLmxheW91dC5zZXQodGFiKVxyXG5cclxuXHRcdHRhYi5vbiBFdmVudHMuVG91Y2hTdGFydCwgLT5cclxuXHRcdFx0dGFiSW5kZXggPSBALnggLyBpb3MudXRpbHMucHgoc3BlY3Mud2lkdGgpXHJcblx0XHRcdHNldEFjdGl2ZSh0YWJJbmRleClcclxuXHJcblx0YmFyLmJveC5jb25zdHJhaW50cyA9XHJcblx0XHRhbGlnbjpcImhvcml6b250YWxcIlxyXG5cclxuXHRpb3MubGF5b3V0LnNldChiYXIuYm94KVxyXG5cdHNldEFjdGl2ZShzZXR1cC5zdGFydClcclxuXHJcblx0YmFyLnRhYnMgPSBzZXR1cC50YWJzXHJcblxyXG5cdHJldHVybiBiYXJcclxuIiwiXHJcbmNsYXNzIElwek1lc3NlbmdlclNlYXJjaEJveCBleHRlbmRzIExheWVyXHJcblxyXG4gICAgY29uc3RydWN0b3I6KG9wdGlvbnMgPSB7fSkgLT5cclxuICAgICAgICBvcHRpb25zLm5hbWUgPz0gXCJNZXNzZW5nZXIuU2VhcmNoQm94XCJcclxuICAgICAgICBvcHRpb25zLndpZHRoID89IG9wdGlvbnMuc3VwZXJMYXllci53aWR0aFxyXG4gICAgICAgIG9wdGlvbnMuaGVpZ2h0ID0gMzJcclxuICAgICAgICBvcHRpb25zLmJhY2tncm91bmRDb2xvciA/PSBTY3JlZW4uYmFja2dyb3VuZENvbG9yXHJcblxyXG4gICAgICAgIHN1cGVyIG9wdGlvbnNcclxuXHJcbiAgICAgICAgc2VhcmNoQmFyID0gbmV3IExheWVyXHJcbiAgICAgICAgICAgIHN1cGVyTGF5ZXI6IEBcclxuICAgICAgICAgICAgd2lkdGg6IEAud2lkdGggICAgICAgICAgICBcclxuICAgICAgICAgICAgaGVpZ2h0OiAzMlxyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwidHJhbnNwYXJlbnRcIiAgICAgICAgXHJcblxyXG4gICAgICAgIHNlYXJjaCA9IG5ldyBMYXllclxyXG4gICAgICAgICAgICB3aWR0aDogc2VhcmNoQmFyLndpZHRoIC0gMTAwXHJcbiAgICAgICAgICAgIHg6IEFsaWduLmNlbnRlclxyXG4gICAgICAgICAgICBzdXBlckxheWVyOiBzZWFyY2hCYXJcclxuICAgICAgICAgICAgaGVpZ2h0OiAyOFxyXG4gICAgICAgICAgICBib3JkZXJSYWRpdXM6IDVcclxuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcIiNERURFREVcIlxyXG5cclxuICAgICAgICBzZWFyY2hQbGFjZWhvbGRlciA9IG5ldyBUZXh0TGF5ZXJcclxuICAgICAgICAgICAgc3VwZXJMYXllcjogc2VhcmNoXHJcbiAgICAgICAgICAgIHRleHQ6IFwiU2VhcmNoXCJcclxuICAgICAgICAgICAgZm9udFNpemU6IDE0XHJcbiAgICAgICAgICAgIGZvbnRGYW1pbHk6IFwiLlNGIE5TIERpc3BsYXlcIlxyXG4gICAgICAgICAgICBsZXR0ZXJTcGFjaW5nOiAwLjBcclxuICAgICAgICAgICAgeDogQWxpZ24uY2VudGVyXHJcbiAgICAgICAgICAgIHk6IEFsaWduLmNlbnRlclxyXG5cclxuICAgICAgICBzZWFyY2hJY29uID0gbmV3IExheWVyXHJcbiAgICAgICAgICAgIHN1cGVyTGF5ZXI6IHNlYXJjaFxyXG4gICAgICAgICAgICBpbWFnZTogXCJpbWFnZXMvU2VhcmNoSWNvbi5wbmdcIlxyXG4gICAgICAgICAgICBoZWlnaHQ6IDEyXHJcbiAgICAgICAgICAgIHdpZHRoOiAxMlxyXG4gICAgICAgICAgICB5OiBBbGlnbi5jZW50ZXJcclxuXHJcbiAgICAgICAgc2VhcmNoSWNvbi54ID0gc2VhcmNoUGxhY2Vob2xkZXIueCAtIChzZWFyY2hJY29uLndpZHRoICsgNSlcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gSXB6TWVzc2VuZ2VyU2VhcmNoQm94IiwiXHJcbmlvcyA9IHJlcXVpcmUgJ2lvcy1raXQnXHJcblxyXG5leHBvcnRzLmRlZmF1bHRzID1cclxuXHRsZWZ0OnVuZGVmaW5lZFxyXG5cdGNlbnRlcjp1bmRlZmluZWRcclxuXHRyaWdodDpcIkVkaXRcIlxyXG5cdGJsdXI6dHJ1ZVxyXG5cdHN1cGVyTGF5ZXI6dW5kZWZpbmVkXHJcblx0dHlwZTpcIm5hdkJhclwiXHJcblx0YWN0aXZlQ29sb3I6J2JsdWUnXHJcblx0aW5hY3RpdmVDb2xvcjonZ3JleSdcclxuXHRiYWNrZ3JvdW5kQ29sb3I6XCJyZ2JhKDI1NSwgMjU1LCAyNTUsIC44KVwiXHJcblx0ZGl2aWRlckJhY2tncm91bmRDb2xvcjpcIiNCMkIyQjJcIlxyXG5cclxuZXhwb3J0cy5kZWZhdWx0cy5wcm9wcyA9IE9iamVjdC5rZXlzKGV4cG9ydHMuZGVmYXVsdHMpXHJcblxyXG5leHBvcnRzLmNyZWF0ZSA9IChhcnJheSkgLT5cclxuXHRzZXR1cCA9IGlvcy51dGlscy5zZXR1cENvbXBvbmVudChhcnJheSwgZXhwb3J0cy5kZWZhdWx0cylcclxuXHJcblx0YmFyID0gbmV3IGlvcy5WaWV3XHJcblx0XHRuYW1lOlwibmF2QmFyXCJcclxuXHRcdGJhY2tncm91bmRDb2xvcjogc2V0dXAuYmFja2dyb3VuZENvbG9yXHJcblx0XHRjb25zdHJhaW50czpcclxuXHRcdFx0bGVhZGluZzowXHJcblx0XHRcdHRyYWlsaW5nOjBcclxuXHRcdFx0dG9wOjBcclxuXHRcdFx0aGVpZ2h0OjY0XHJcblxyXG5cdGJhci5iZyA9IG5ldyBpb3MuVmlld1xyXG5cdFx0c3VwZXJMYXllcjpiYXJcclxuXHRcdGJhY2tncm91bmRDb2xvcjondHJhbnNwYXJlbnQnXHJcblx0XHRuYW1lOlwiLmJnXCJcclxuXHRcdGNvbnN0cmFpbnRzOlxyXG5cdFx0XHRsZWFkaW5nOjBcclxuXHRcdFx0dHJhaWxpbmc6MFxyXG5cdFx0XHRoZWlnaHQ6NDRcclxuXHRcdFx0Ym90dG9tOjBcclxuXHJcblx0YmFyLmRpdmlkZXIgPSBuZXcgaW9zLlZpZXdcclxuXHRcdGJhY2tncm91bmRDb2xvcjpzZXR1cC5kaXZpZGVyQmFja2dyb3VuZENvbG9yXHJcblx0XHRuYW1lOlwiLmRpdmlkZXJcIlxyXG5cdFx0c3VwZXJMYXllcjpiYXIuYmdcclxuXHRcdGNvbnN0cmFpbnRzOlxyXG5cdFx0XHRoZWlnaHQ6LjVcclxuXHRcdFx0Ym90dG9tOjBcclxuXHRcdFx0bGVhZGluZzowXHJcblx0XHRcdHRyYWlsaW5nOjBcclxuXHJcblx0aWYgc2V0dXAuc3VwZXJMYXllclxyXG5cdFx0c2V0dXAuc3VwZXJMYXllci5hZGRTdWJMYXllcihiYXIpXHJcblxyXG5cclxuXHRpZiBzZXR1cC5ibHVyXHJcblx0XHRpb3MudXRpbHMuYmdCbHVyKGJhcilcclxuXHJcblx0aWYgc2V0dXAuYmx1ciA9PSBmYWxzZSAmJiBzZXR1cC5iYWNrZ3JvdW5kQ29sb3IgPT0gXCJyZ2JhKDI1NSwgMjU1LCAyNTUsIC44KVwiXHJcblx0XHRiYXIuYmFja2dyb3VuZENvbG9yID0gJ3doaXRlJ1xyXG5cclxuXHRiYXIudHlwZSA9IHNldHVwLnR5cGVcclxuXHJcblx0Zm9yIGxheWVyIGluIEZyYW1lci5DdXJyZW50Q29udGV4dC5sYXllcnNcclxuXHRcdGlmIGxheWVyLnR5cGUgPT0gXCJzdGF0dXNCYXJcIlxyXG5cdFx0XHRAc3RhdHVzQmFyID0gbGF5ZXJcclxuXHRcdFx0YmFyLnBsYWNlQmVoaW5kKEBzdGF0dXNCYXIpXHJcblxyXG4gICAgIyBIYW5kbGUgTGVmdFxyXG5cdGlmIHR5cGVvZiBzZXR1cC5sZWZ0ID09IFwic3RyaW5nXCIgJiYgdHlwZW9mIHNldHVwLmxlZnQgIT0gXCJib29sZWFuXCJcclxuXHRcdGJhci5sZWZ0ID0gbmV3IGlvcy5CdXR0b25cclxuXHRcdFx0bmFtZTpcIi5sZWZ0XCJcclxuXHRcdFx0c3VwZXJMYXllcjpiYXIuYmdcclxuXHRcdFx0dGV4dDpzZXR1cC5sZWZ0XHJcblx0XHRcdGNvbG9yOnNldHVwLmFjdGl2ZUNvbG9yXHJcblx0XHRcdGZvbnRXZWlnaHQ6NTAwXHJcblx0XHRcdGNvbnN0cmFpbnRzOlxyXG5cdFx0XHRcdGJvdHRvbToxMlxyXG5cdFx0XHRcdGxlYWRpbmc6OFxyXG5cdFx0YmFyLmxlZnQudHlwZSA9IFwiYnV0dG9uXCJcclxuXHRcdGlvcy51dGlscy5zcGVjaWFsQ2hhcihiYXIubGVmdClcclxuXHRpZiB0eXBlb2Ygc2V0dXAubGVmdCA9PSBcIm9iamVjdFwiXHJcblx0XHRiYXIubGVmdCA9IHNldHVwLmxlZnRcclxuXHRcdGJhci5sZWZ0Lm5hbWUgPSBcIi5sZWZ0XCJcclxuXHRcdGJhci5sZWZ0LnN1cGVyTGF5ZXIgPSBiYXIuYmdcclxuXHRcdGJhci5sZWZ0LmNvbnN0cmFpbnRzID1cclxuXHRcdFx0bGVhZGluZzo4XHJcblx0XHRcdGJvdHRvbToxMlxyXG5cdFx0aW9zLmxheW91dC5zZXQoYmFyLmxlZnQpXHJcblxyXG4gICAgIyBIYW5kbGUgQ2VudGVyXHJcblx0aWYgdHlwZW9mIHNldHVwLmNlbnRlciA9PSBcInN0cmluZ1wiICYmIHR5cGVvZiBzZXR1cC5jZW50ZXIgIT0gXCJib29sZWFuXCJcclxuXHRcdGJhci5jZW50ZXIgPSBuZXcgaW9zLkJ1dHRvblxyXG5cdFx0XHRuYW1lOlwiLmNlbnRlclwiXHJcblx0XHRcdHN1cGVyTGF5ZXI6YmFyLmJnXHJcblx0XHRcdHRleHQ6c2V0dXAuY2VudGVyXHJcblx0XHRcdGNvbG9yOnNldHVwLmluYWN0aXZlQ29sb3JcclxuXHRcdFx0Zm9udFdlaWdodDo1MDBcclxuXHRcdFx0Y29uc3RyYWludHM6XHJcblx0XHRcdFx0Ym90dG9tOjEyXHJcblx0XHRcdFx0YWxpZ246XCJob3Jpem9udGFsXCJcclxuXHRcdGJhci5jZW50ZXIudHlwZSA9IFwiYnV0dG9uXCJcclxuXHRcdGlvcy51dGlscy5zcGVjaWFsQ2hhcihiYXIuY2VudGVyKVxyXG5cdGlmIHR5cGVvZiBzZXR1cC5jZW50ZXIgPT0gXCJvYmplY3RcIlxyXG5cdFx0YmFyLmNlbnRlciA9IHNldHVwLmNlbnRlclxyXG5cdFx0YmFyLmNlbnRlci5uYW1lID0gXCIucmlnaHRcIlxyXG5cdFx0YmFyLmNlbnRlci5zdXBlckxheWVyID0gYmFyLmJnXHJcblx0XHRiYXIuY2VudGVyLmNvbnN0cmFpbnRzID1cclxuXHRcdFx0YWxpZ246XCJob3Jpem9udGFsXCJcclxuXHRcdFx0Ym90dG9tOjEyXHJcblx0XHRpb3MubGF5b3V0LnNldChiYXIuY2VudGVyKVxyXG5cclxuXHQjIEhhbmRsZSBSaWdodFxyXG5cdGlmIHR5cGVvZiBzZXR1cC5yaWdodCA9PSBcInN0cmluZ1wiICYmIHR5cGVvZiBzZXR1cC5yaWdodCAhPSBcImJvb2xlYW5cIlxyXG5cdFx0YmFyLnJpZ2h0ID0gbmV3IGlvcy5CdXR0b25cclxuXHRcdFx0bmFtZTpcIi5yaWdodFwiXHJcblx0XHRcdHN1cGVyTGF5ZXI6YmFyLmJnXHJcblx0XHRcdHRleHQ6c2V0dXAucmlnaHRcclxuXHRcdFx0Y29sb3I6c2V0dXAuaW5hY3RpdmVDb2xvclxyXG5cdFx0XHRmb250V2VpZ2h0OjUwMFxyXG5cdFx0XHRjb25zdHJhaW50czpcclxuXHRcdFx0XHRib3R0b206MTJcclxuXHRcdFx0XHR0cmFpbGluZzo4XHJcblx0XHRiYXIucmlnaHQudHlwZSA9IFwiYnV0dG9uXCJcclxuXHRcdGlvcy51dGlscy5zcGVjaWFsQ2hhcihiYXIucmlnaHQpXHJcblx0aWYgdHlwZW9mIHNldHVwLnJpZ2h0ID09IFwib2JqZWN0XCJcclxuXHRcdGJhci5yaWdodCA9IHNldHVwLnJpZ2h0XHJcblx0XHRiYXIucmlnaHQubmFtZSA9IFwiLnJpZ2h0XCJcclxuXHRcdGJhci5yaWdodC5zdXBlckxheWVyID0gYmFyLmJnXHJcblx0XHRiYXIucmlnaHQuY29uc3RyYWludHMgPVxyXG5cdFx0XHR0cmFpbGluZzo4XHJcblx0XHRcdGJvdHRvbToxMlxyXG5cdFx0aW9zLmxheW91dC5zZXQoYmFyLnJpZ2h0KVxyXG5cdFxyXG5cdGJhci5sZWZ0Lm9uIEV2ZW50cy5Ub3VjaFN0YXJ0LCAtPlxyXG5cdFx0YmFyLmxlZnQuY29sb3IgPSBzZXR1cC5hY3RpdmVDb2xvclxyXG5cdFx0YmFyLmNlbnRlci5jb2xvciA9IHNldHVwLmluYWN0aXZlQ29sb3JcclxuXHRcdGJhci5yaWdodC5jb2xvciA9IHNldHVwLmluYWN0aXZlQ29sb3JcclxuXHJcblx0YmFyLmNlbnRlci5vbiBFdmVudHMuVG91Y2hTdGFydCwgLT5cclxuXHRcdGJhci5sZWZ0LmNvbG9yID0gc2V0dXAuaW5hY3RpdmVDb2xvclxyXG5cdFx0YmFyLmNlbnRlci5jb2xvciA9IHNldHVwLmFjdGl2ZUNvbG9yXHJcblx0XHRiYXIucmlnaHQuY29sb3IgPSBzZXR1cC5pbmFjdGl2ZUNvbG9yXHJcblxyXG5cdGJhci5yaWdodC5vbiBFdmVudHMuVG91Y2hTdGFydCwgLT5cclxuXHRcdGJhci5sZWZ0LmNvbG9yID0gc2V0dXAuaW5hY3RpdmVDb2xvclxyXG5cdFx0YmFyLmNlbnRlci5jb2xvciA9IHNldHVwLmluYWN0aXZlQ29sb3JcclxuXHRcdGJhci5yaWdodC5jb2xvciA9IHNldHVwLmFjdGl2ZUNvbG9yXHJcblxyXG5cdHJldHVybiBiYXJcclxuIiwiXHJcbm5hdiA9IHJlcXVpcmUgJ2lwei1tZXNzZW5nZXItbmF2LWJhcidcclxudGFiID0gcmVxdWlyZSAnaXB6LW1lc3Nlbmdlci10YWItYmFyJ1xyXG5raXQgPSByZXF1aXJlICdtZXNzZW5nZXIta2l0J1xyXG5cclxuZXhwb3J0cy5JcHpNZXNzZW5nZXJIb21lID0gcmVxdWlyZSBcImlwei1tZXNzZW5nZXItaG9tZVwiXHJcbmV4cG9ydHMuSXB6TWVzc2VuZ2VyQ2FsbHMgPSByZXF1aXJlIFwiaXB6LW1lc3Nlbmdlci1jYWxsc1wiXHJcbmV4cG9ydHMuSXB6TWVzc2VuZ2VyU2VhcmNoQm94ID0gcmVxdWlyZSBcImlwei1tZXNzZW5nZXItc2VhcmNoQm94XCJcclxuXHJcbmV4cG9ydHMuSXB6TWVzc2VuZ2VyTmF2QmFyID0gbmF2LmNyZWF0ZVxyXG5leHBvcnRzLklwek1lc3NlbmdlclRhYiA9IHRhYi50YWJcclxuZXhwb3J0cy5JcHpNZXNzZW5nZXJUYWJCYXIgPSB0YWIuYmFyXHJcblxyXG5leHBvcnRzLklwekF2YXRhciA9IGtpdC5BdmF0YXJcclxuZXhwb3J0cy5JcHpNZXNzYWdlTGlzdCA9IGtpdC5NZXNzYWdlTGlzdFxyXG5leHBvcnRzLklwek1lc3NhZ2VMaXN0SXRlbSA9IGtpdC5NZXNzYWdlTGlzdEl0ZW1cclxuZXhwb3J0cy5JcHpBY3RpdmVGcmllbmRzU2Nyb2xsTGlzdCA9IGtpdC5BY3RpdmVGcmllbmRzU2Nyb2xsTGlzdFxyXG5leHBvcnRzLklwekFjdGl2ZUZyaWVuZHMgPSBraXQuQWN0aXZlRnJpZW5kc1xyXG5leHBvcnRzLklwek15RGF5ID0ga2l0Lk15RGF5c1xyXG5cclxuIyBUT0RPIGNyZWF0ZSBhIHNlcGFyYXRlIGdsb2JhbCBtb2R1bGUgZm9yIGFsbCBTdHlsZXNcclxuZXhwb3J0cy5zdHlsZSA9IGtpdC5zdHlsZSIsImlvcyA9IHJlcXVpcmUgJ2lvcy1raXQnXHJcbmlweiA9IHJlcXVpcmUgJ2lwei1tZXNzZW5nZXIta2l0J1xyXG5cclxuY2xhc3MgSXB6TWVzc2VuZ2VySG9tZSBleHRlbmRzIExheWVyXHJcblxyXG4gICAgQGF2YXRhciA9IHVuZGVmaW5lZFxyXG4gICAgQG1lc3NhZ2VzVGFiID0gdW5kZWZpbmVkXHJcblxyXG4gICAgY29uc3RydWN0b3I6KG9wdGlvbnM9e30pIC0+XHJcbiAgICAgICAgb3B0aW9ucy5uYW1lID89IFwiTWVzc2VuZ2VyLkhvbWVcIlxyXG4gICAgICAgIG9wdGlvbnMud2lkdGggPz0gb3B0aW9ucy5zdXBlckxheWVyLndpZHRoXHJcbiAgICAgICAgb3B0aW9ucy5oZWlnaHQgPz0gb3B0aW9ucy5zdXBlckxheWVyLmhlaWdodFxyXG4gICAgICAgIG9wdGlvbnMuYmFja2dyb3VuZENvbG9yID89IFNjcmVlbi5iYWNrZ3JvdW5kQ29sb3JcclxuICAgICAgICBvcHRpb25zLm5hdkJhckxhYmVsc0ZvbnRTaXplID89IDE3XHJcblxyXG4gICAgICAgIHN1cGVyIG9wdGlvbnNcclxuXHJcbiAgICAgICAgIyMgSEVBREVSXHJcblxyXG4gICAgICAgIHNlYXJjaEJveCA9IG5ldyBpcHouSXB6TWVzc2VuZ2VyU2VhcmNoQm94KHtzdXBlckxheWVyOiBAfSlcclxuICAgICAgICBcclxuICAgICAgICBAYXZhdGFyID0gbmV3IGlwei5JcHpBdmF0YXIoe3NjYWxlOjAuNywgc3VwZXJMYXllcjogQCwgeDpBbGlnbi5sZWZ0KDEwKSwgeTpBbGlnbi50b3AoLTMpLCBuYW1lOlwiQXZhdGFyXCJ9KVxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgIyBUT0RPIGltYWdlIGJ1dHRvbiBjbGFzc1xyXG4gICAgICAgIGNvbXBvc2UgPSBuZXcgTGF5ZXJcclxuICAgICAgICAgICAgc3VwZXJMYXllcjogQFxyXG4gICAgICAgICAgICBuYW1lOlwiY29tcG9zZVwiXHJcbiAgICAgICAgICAgIGltYWdlOiBcImltYWdlcy9DcmVhdGVJY29uLnBuZ1wiXHJcbiAgICAgICAgICAgIHg6IEFsaWduLnJpZ2h0KC0xMClcclxuICAgICAgICAgICAgd2lkdGg6IDI0XHJcbiAgICAgICAgICAgIGhlaWdodDogMjQgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgIGFjdGl2ZVRhYiA9IG5ldyBpcHouSXB6TWVzc2VuZ2VyVGFiXHJcbiAgICAgICAgICAgIGxhYmVsOlwiQWN0aXZlXCJcclxuICAgICAgICAgICAgZm9udHNpemU6b3B0aW9ucy5uYXZCYXJMYWJlbHNGb250U2l6ZVxyXG4gICAgICAgICAgICBzdXBlckxheWVyOiBAXHJcbiAgICAgICAgICAgIHZpZXc6IG5ldyBpb3MuVmlld1xyXG4gICAgICAgICAgICAgICAgbmFtZTpcIkFjdGl2ZS52aWV3XCJcclxuICAgICAgICAgICAgICAgIHN1cGVyTGF5ZXI6IEBcclxuICAgICAgICAgICAgICAgIHdpZHRoOiBALndpZHRoXHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IEAuaGVpZ2h0XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFNjcmVlbi5iYWNrZ3JvdW5kQ29sb3JcclxuXHJcbiAgICAgICAgZ3JvdXBzVGFiID0gbmV3IGlwei5JcHpNZXNzZW5nZXJUYWJcclxuICAgICAgICAgICAgbGFiZWw6XCJHcm91cHNcIlxyXG4gICAgICAgICAgICBmb250c2l6ZTpvcHRpb25zLm5hdkJhckxhYmVsc0ZvbnRTaXplXHJcbiAgICAgICAgICAgIHN1cGVyTGF5ZXI6IEBcclxuICAgICAgICAgICAgdmlldzogbmV3IGlvcy5WaWV3XHJcbiAgICAgICAgICAgICAgICBuYW1lOlwiR3JvdXBzLnZpZXdcIlxyXG4gICAgICAgICAgICAgICAgc3VwZXJMYXllcjogQFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IEAud2lkdGhcclxuICAgICAgICAgICAgICAgIGhlaWdodDogQC5oZWlnaHRcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogU2NyZWVuLmJhY2tncm91bmRDb2xvclxyXG5cclxuICAgICAgICBAbWVzc2FnZXNUYWIgPSBuZXcgaXB6Lklwek1lc3NlbmdlclRhYlxyXG4gICAgICAgICAgICBsYWJlbDpcIk1lc3NhZ2VzXCJcclxuICAgICAgICAgICAgZm9udHNpemU6b3B0aW9ucy5uYXZCYXJMYWJlbHNGb250U2l6ZVxyXG4gICAgICAgICAgICBzdXBlckxheWVyOiBAXHJcbiAgICAgICAgICAgIHZpZXc6IG5ldyBTY3JvbGxDb21wb25lbnRcclxuICAgICAgICAgICAgICAgIG5hbWU6XCJNZXNzYWdlc1Njcm9sbFwiXHJcbiAgICAgICAgICAgICAgICBzdXBlckxheWVyOiBAXHJcbiAgICAgICAgICAgICAgICBzY3JvbGxIb3Jpem9udGFsOiBmYWxzZVxyXG4gICAgICAgICAgICAgICAgZGlyZWN0aW9uTG9jazogdHJ1ZVxyXG5cclxuICAgICAgICBAbWVzc2FnZXNUYWIudmlldy5jb250ZW50LmJhY2tncm91bmRDb2xvciA9IEAuYmFja2dyb3VuZENvbG9yXHJcblxyXG4gICAgICAgIG5hdkJhciA9IG5ldyBpcHouSXB6TWVzc2VuZ2VyVGFiQmFyXHJcbiAgICAgICAgICAgIHN1cGVyTGF5ZXI6IEBcclxuICAgICAgICAgICAgdGFiczpbQG1lc3NhZ2VzVGFiLCBhY3RpdmVUYWIsIGdyb3Vwc1RhYl1cclxuICAgICAgICAgICAgYWN0aXZlQ29sb3I6XCJibHVlXCJcclxuICAgICAgICAgICAgaW5hY3RpdmVDb2xvcjpcImdyZXlcIlxyXG4gICAgICAgICAgICB0eXBlOlwibmF2QmFyXCJcclxuICAgICAgICAgICAgaGVpZ2h0OiAyMlxyXG4gICAgICAgICAgICBiYXJUb3A6c2VhcmNoQm94Lm1heFkgKyA1XHJcblxyXG4gICAgICAgICMjIEVORCBIRUFERVJcclxuXHJcbiAgICBzZXRVc2VyOih1c2VyKSAtPlxyXG4gICAgICAgIEBhdmF0YXIuc2V0VXNlcih1c2VyKSAgIFxyXG4gICAgICAgIG15RGF5cyA9IG5ldyBpcHouSXB6TXlEYXkoe3BhcmVudDogQG1lc3NhZ2VzVGFiLnZpZXcuY29udGVudH0sIHVzZXIuTXlEYXlzKVxyXG4gICAgICAgIGxhc3RNZXNzYWdlcyA9IG5ldyBpcHouSXB6TWVzc2FnZUxpc3Qoe3BhcmVudDogQG1lc3NhZ2VzVGFiLnZpZXcuY29udGVudCwgeTogbXlEYXlzLm1heFl9LCB1c2VyLkZyaWVuZHMpXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IElwek1lc3NlbmdlckhvbWUiLCJpb3MgPSByZXF1aXJlICdpb3Mta2l0J1xyXG5pcHogPSByZXF1aXJlICdpcHotbWVzc2VuZ2VyLWtpdCdcclxuSXB6TWVzc2VuZ2VyU2VhcmNoQm94ID0gcmVxdWlyZSBcImlwei1tZXNzZW5nZXItc2VhcmNoQm94XCJcclxuXHJcbmNsYXNzIElwek1lc3NlbmdlckNhbGxzXHJcbiAgICBAaGVhZGVyID0gdW5kZWZpbmVkXHJcbiAgICBAZmxvdyA9IHVuZGVmaW5lZFxyXG5cclxuICAgIGNvbnN0cnVjdG9yOihwYXJlbnRWaWV3KSAtPlxyXG4gICAgICAgICMjIEhFQURFUlxyXG4gICAgICAgIEBoZWFkZXIgPSBuZXcgaW9zLlZpZXdcclxuICAgICAgICAgICAgc3VwZXJMYXllcjogcGFyZW50Vmlld1xyXG4gICAgICAgICAgICB3aWR0aDogcGFyZW50Vmlldy53aWR0aFxyXG4gICAgICAgICAgICBoZWlnaHQ6IDY0XHJcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXCJ3aGl0ZVwiXHJcblxyXG4gICAgICAgIHNlYXJjaEJveCA9IG5ldyBJcHpNZXNzZW5nZXJTZWFyY2hCb3goQGhlYWRlcilcclxuICAgICAgICBcclxuICAgICAgICAjIyBFTkQgSEVBREVSXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IElwek1lc3NlbmdlckNhbGxzIiwiaW9zID0gcmVxdWlyZSBcImlvcy1raXRcIlxyXG5JcHpNZXNzZW5nZXIgPSByZXF1aXJlIFwiaXB6LW1lc3NlbmdlclwiXHJcblxyXG5jbGFzcyBNYXN0ZXJMYXlvdXRcclxuICAgIFxyXG4gICAgQGNvbnRlbnRWaWV3ID0gdW5kZWZpbmVkXHJcbiAgICBcclxuICAgIGNvbnN0cnVjdG9yOigpIC0+XHJcbiAgICAgICAgbWFpblZpZXcgPSBuZXcgaW9zLlZpZXdcclxuICAgICAgICAgICAgbmFtZTpcIm1haW5WaWV3XCJcclxuICAgICAgICAgICAgd2lkdGg6U2NyZWVuLndpZHRoXHJcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjpTY3JlZW4uYmFja2dyb3VuZENvbG9yXHJcblxyXG4gICAgICAgIHN0YXR1c0JhciA9IG5ldyBpb3MuU3RhdHVzQmFyXHJcbiAgICAgICAgICAgIHN1cGVyTGF5ZXI6IG1haW5WaWV3XHJcbiAgICAgICAgICAgIGNhcnJpZXI6IFwiVm9kYWZvbmVST1wiXHJcblxyXG4gICAgICAgIFxyXG4gICAgICAgIEBjb250ZW50VmlldyA9IG5ldyBpb3MuVmlld1xyXG4gICAgICAgICAgICAjIHk6c3RhdHVzQmFyLmhlaWdodFxyXG4gICAgICAgICAgICAjIHdpZHRoOlNjcmVlbi53aWR0aFxyXG4gICAgICAgICAgICBuYW1lOlwibWFpbkNvbnRlbnRcIlxyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6U2NyZWVuLmJhY2tncm91bmRDb2xvclxyXG4gICAgICAgICAgICBjb25zdHJhaW50czpcclxuICAgICAgICAgICAgICAgIHRvcDogc3RhdHVzQmFyLmhlaWdodFxyXG4gICAgICAgICAgICAgICAgbGVhZGluZzowXHJcbiAgICAgICAgICAgICAgICB0cmFpbGluZzpTY3JlZW4ud2lkdGhcclxuICAgICAgICBcclxuICAgICAgICAjIGtleWJvYXJkID0gbmV3IGlvcy5LZXlib2FyZFxyXG4gICAgICAgICMgICAgIGhpZGRlbjp0cnVlXHJcblxyXG4gICAgb3BlbkFwcDooYXBwTmFtZSkgLT5cclxuICAgICAgICBzd2l0Y2ggYXBwTmFtZVxyXG4gICAgICAgICAgICB3aGVuIFwiTWVzc2VuZ2VyXCJcclxuICAgICAgICAgICAgICAgIGFwcCA9IG5ldyBJcHpNZXNzZW5nZXIoQGNvbnRlbnRWaWV3KVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGFwcFxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBNYXN0ZXJMYXlvdXRcclxuIiwiY2xhc3MgQmFzZURBTFxuICAgIHVybCA9IFwiaHR0cHM6Ly9mYnVzZXJzLTQ0OTQucmVzdGRiLmlvL3Jlc3RcIlxuICAgIGFwaWtleSA9IFwiNTk1NjM4MmRhZmNlMDllODcyMTFlOTg2XCJcblxuICAgIGdldERiRGF0YTogKHRhYmxlLCBxdWVyeSwgbWF4LCBmaWx0ZXIsIHNvcnQsIHNvcnREaXIsIGNhbGxiYWNrKSAtPlxuICAgICAgICBxdWVyeVN0cmluZyA9IFwiI3t1cmx9LyN7dGFibGV9P2FwaWtleT0je2FwaWtleX0mbWF4PSN7bWF4fSZzb3J0PSN7c29ydH0mZGlyPSN7c29ydERpcn0mZmlsdGVyPSN7ZmlsdGVyfSZpZHRvbGluaz10cnVlJnE9XCIrSlNPTi5zdHJpbmdpZnkocXVlcnkpXG4gICAgICAgIFV0aWxzLmRvbUxvYWREYXRhKHF1ZXJ5U3RyaW5nLCBjYWxsYmFjaylcblxuY2xhc3MgVXNlcnNEQUwgZXh0ZW5kcyBCYXNlREFMXG4gICAgdXNlcnMgPSBbXVxuXG4gICAgZ2V0VXNlcnM6IChxdWVyeSwgbWF4LCBmaWx0ZXIsIHNvcnQsIHNvcnREaXIsIGNhbGxiYWNrKSAtPlxuICAgICAgICB1c2VycyA9IHRoaXMuZ2V0RGJEYXRhKFwiZmJ1c2Vyc1wiLCBxdWVyeSwgbWF4LCBmaWx0ZXIsIHNvcnQsIHNvcnREaXIsIGNhbGxiYWNrKVxuICAgICAgICAjIHVzZXJzID0gSlNPTi5wYXJzZSAnW3tcIl9pZFwiOlwiNTk1NjNiNzI2ZjQ3MWQwODAwMDAxNDNlXCIsXCJmaXJzdG5hbWVcIjpcIkhlbGVuXCIsXCJsYXN0bmFtZVwiOlwiWXVuZHRcIixcImltYWdlXCI6W1wiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMF8zMC0zMC1wZW9wbGUtOFwiXSxcIm1lc3NhZ2VUZXh0XCI6XCJWZW5pYW0gY29ycnVwdGkgcXVhcy5cIixcIm1lc3NhZ2VUaW1lXCI6XCI0OjQ1IEFNXCIsXCJmYXZvcml0ZVwiOnRydWUsXCJiaXJ0aGRheVwiOmZhbHNlLFwid2lzaFwiOlwiSW4gbmVtbyBtb2xlc3RpYWUgYXV0ZW0gYXV0LlwiLFwiX21vY2tcIjp0cnVlLFwibXlEYXlcIjpmYWxzZSxcIm15RGF5VGltZVwiOjAsXCJzdGF0dXNcIjpcImluYWN0aXZlXCIsXCJpbWFnZV8wXCI6XCJodHRwczovL2ZidXNlcnMtNDQ5NC5yZXN0ZGIuaW8vbWVkaWEvMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMF8zMC0zMC1wZW9wbGUtOFwifSx7XCJfaWRcIjpcIjU5NTYzYjcyNmY0NzFkMDgwMDAwMTQ0N1wiLFwiZmlyc3RuYW1lXCI6XCJQYW1lbGFcIixcImxhc3RuYW1lXCI6XCJHaWJzb25cIixcImltYWdlXCI6W1wiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMF8zMC0zMC1wZW9wbGUtMVwiXSxcIm1lc3NhZ2VUZXh0XCI6XCJDb3JydXB0aSByZXJ1bSB1dCBhdXQgcXVpYS5cIixcIm1lc3NhZ2VUaW1lXCI6XCIyOjQzIEFNXCIsXCJmYXZvcml0ZVwiOmZhbHNlLFwiYmlydGhkYXlcIjp0cnVlLFwid2lzaFwiOlwiTW9sZXN0aWFzIHZpdGFlIGl1c3RvIHZvbHVwdGF0ZW0gc2ludC5cIixcIl9tb2NrXCI6dHJ1ZSxcIm15RGF5XCI6dHJ1ZSxcIm15RGF5VGltZVwiOjcsXCJzdGF0dXNcIjpcIm1lc3NlbmdlclwiLFwidW5yZWFkXCI6dHJ1ZSxcImltYWdlXzBcIjpcImh0dHBzOi8vZmJ1c2Vycy00NDk0LnJlc3RkYi5pby9tZWRpYS8wMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXzMwLTMwLXBlb3BsZS0xXCJ9LHtcIl9pZFwiOlwiNTk1NjNiNzI2ZjQ3MWQwODAwMDAxNDRiXCIsXCJmaXJzdG5hbWVcIjpcIk9ycGhhXCIsXCJsYXN0bmFtZVwiOlwiV2luZGxlclwiLFwiaW1hZ2VcIjpbXCIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXzMwLTMwLXBlb3BsZS04XCJdLFwibWVzc2FnZVRleHRcIjpcIkV4ZXJjaXRhdGlvbmVtIGF1dGVtIGxhYm9yZS5cIixcIm1lc3NhZ2VUaW1lXCI6XCIyOjQ3IEFNXCIsXCJmYXZvcml0ZVwiOnRydWUsXCJiaXJ0aGRheVwiOmZhbHNlLFwid2lzaFwiOlwiRWl1cyBtb2RpIGZhY2lsaXMgcGVyZmVyZW5kaXMgdXQgYXV0IGJsYW5kaXRpaXMgdm9sdXB0YXMuXCIsXCJfbW9ja1wiOnRydWUsXCJteURheVwiOnRydWUsXCJteURheVRpbWVcIjo1MCxcInN0YXR1c1wiOlwiaW5hY3RpdmVcIixcImltYWdlXzBcIjpcImh0dHBzOi8vZmJ1c2Vycy00NDk0LnJlc3RkYi5pby9tZWRpYS8wMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXzMwLTMwLXBlb3BsZS04XCJ9LHtcIl9pZFwiOlwiNTk1NjNiNzI2ZjQ3MWQwODAwMDAxNDQ1XCIsXCJmaXJzdG5hbWVcIjpcIktyaXN0aW5hXCIsXCJsYXN0bmFtZVwiOlwiSm9obnN0b25cIixcImltYWdlXCI6W1wiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMF8zMC0zMC1wZW9wbGUtOVwiXSxcIm1lc3NhZ2VUZXh0XCI6XCJMYWJvcmlvc2FtIG9kaW8gdXQgYXV0IGV0LlwiLFwibWVzc2FnZVRpbWVcIjpcIjM6NTYgQU1cIixcImZhdm9yaXRlXCI6dHJ1ZSxcImJpcnRoZGF5XCI6ZmFsc2UsXCJ3aXNoXCI6XCJFdCByYXRpb25lIGVzdCBvbW5pcyBxdWkgc2l0LlwiLFwiX21vY2tcIjp0cnVlLFwibXlEYXlcIjpmYWxzZSxcIm15RGF5VGltZVwiOjAsXCJzdGF0dXNcIjpcIm1lc3NlbmdlclwiLFwiaW1hZ2VfMFwiOlwiaHR0cHM6Ly9mYnVzZXJzLTQ0OTQucmVzdGRiLmlvL21lZGlhLzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBfMzAtMzAtcGVvcGxlLTlcIn0se1wiX2lkXCI6XCI1OTU2M2I3MjZmNDcxZDA4MDAwMDE0NTBcIixcImZpcnN0bmFtZVwiOlwiQXNodHluXCIsXCJsYXN0bmFtZVwiOlwiVHJvbXBcIixcImltYWdlXCI6W1wiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMF8zMC0zMC1wZW9wbGUtNFwiXSxcIm1lc3NhZ2VUZXh0XCI6XCJWb2x1cHRhcyBtaW51cyBxdWkgc2VkIHF1YXNpLlwiLFwibWVzc2FnZVRpbWVcIjpcIjc6MzAgUE1cIixcImZhdm9yaXRlXCI6dHJ1ZSxcImJpcnRoZGF5XCI6ZmFsc2UsXCJ3aXNoXCI6XCJRdWkgcmVjdXNhbmRhZSBvZGl0IG9wdGlvIG5lbW8uXCIsXCJfbW9ja1wiOnRydWUsXCJteURheVwiOmZhbHNlLFwibXlEYXlUaW1lXCI6MCxcInVucmVhZFwiOnRydWUsXCJzdGF0dXNcIjpcImFjdGl2ZVwiLFwiaW1hZ2VfMFwiOlwiaHR0cHM6Ly9mYnVzZXJzLTQ0OTQucmVzdGRiLmlvL21lZGlhLzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBfMzAtMzAtcGVvcGxlLTRcIn0se1wiX2lkXCI6XCI1OTU2M2I3MjZmNDcxZDA4MDAwMDE0NDNcIixcImZpcnN0bmFtZVwiOlwiQ2FsZWJcIixcImxhc3RuYW1lXCI6XCJQdXJkeVwiLFwiaW1hZ2VcIjpbXCIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXzMwLTMwLXBlb3BsZS0xXCJdLFwibWVzc2FnZVRleHRcIjpcIkFuaW1pIG1pbmltYSByZXBlbGxlbmR1cyBhdXQuXCIsXCJtZXNzYWdlVGltZVwiOlwiMzozMyBBTVwiLFwiZmF2b3JpdGVcIjpmYWxzZSxcImJpcnRoZGF5XCI6ZmFsc2UsXCJ3aXNoXCI6XCJTZXF1aSBkZWJpdGlzIG5vbi5cIixcIl9tb2NrXCI6dHJ1ZSxcIm15RGF5XCI6dHJ1ZSxcIm15RGF5VGltZVwiOjI0LFwic3RhdHVzXCI6XCJtZXNzZW5nZXJcIixcImltYWdlXzBcIjpcImh0dHBzOi8vZmJ1c2Vycy00NDk0LnJlc3RkYi5pby9tZWRpYS8wMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXzMwLTMwLXBlb3BsZS0xXCJ9LHtcIl9pZFwiOlwiNTk1NjNiNzI2ZjQ3MWQwODAwMDAxNDQ5XCIsXCJmaXJzdG5hbWVcIjpcIkVzdGhlclwiLFwibGFzdG5hbWVcIjpcIkJhdWNoXCIsXCJpbWFnZVwiOltcIjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBfMzAtMzAtcGVvcGxlLTZcIl0sXCJtZXNzYWdlVGV4dFwiOlwiUmVwZWxsYXQgdmVuaWFtIGF1dCBsYWJvcnVtLlwiLFwibWVzc2FnZVRpbWVcIjpcIjEyOjMzIEFNXCIsXCJmYXZvcml0ZVwiOmZhbHNlLFwiYmlydGhkYXlcIjpmYWxzZSxcIndpc2hcIjpcIk1hZ25pIGlzdGUgdm9sdXB0YXRlIGJlYXRhZSB2ZXJpdGF0aXMgdm9sdXB0YXRlbS5cIixcIl9tb2NrXCI6dHJ1ZSxcIm15RGF5XCI6dHJ1ZSxcIm15RGF5VGltZVwiOjMyLFwic3RhdHVzXCI6XCJtZXNzZW5nZXJcIixcImltYWdlXzBcIjpcImh0dHBzOi8vZmJ1c2Vycy00NDk0LnJlc3RkYi5pby9tZWRpYS8wMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXzMwLTMwLXBlb3BsZS02XCJ9LHtcIl9pZFwiOlwiNTk1NjNiNzI2ZjQ3MWQwODAwMDAxNDUxXCIsXCJmaXJzdG5hbWVcIjpcIlBhaWdlXCIsXCJsYXN0bmFtZVwiOlwiVG9ycGh5XCIsXCJpbWFnZVwiOltcIjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBfMzAtMzAtcGVvcGxlLTlcIl0sXCJtZXNzYWdlVGV4dFwiOlwiVml0YWUgY29uc2VxdWF0dXIgaXN0ZSBxdW9zLlwiLFwibWVzc2FnZVRpbWVcIjpcIjE6MTEgQU1cIixcImZhdm9yaXRlXCI6ZmFsc2UsXCJiaXJ0aGRheVwiOmZhbHNlLFwid2lzaFwiOlwiQWNjdXNhbnRpdW0gc2VkIGxpYmVybyBxdWkgbmVzY2l1bnQuXCIsXCJfbW9ja1wiOnRydWUsXCJteURheVwiOmZhbHNlLFwibXlEYXlUaW1lXCI6MCxcInN0YXR1c1wiOlwiaW5hY3RpdmVcIixcImltYWdlXzBcIjpcImh0dHBzOi8vZmJ1c2Vycy00NDk0LnJlc3RkYi5pby9tZWRpYS8wMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXzMwLTMwLXBlb3BsZS05XCJ9LHtcIl9pZFwiOlwiNTk1NjNiNzI2ZjQ3MWQwODAwMDAxNDRkXCIsXCJmaXJzdG5hbWVcIjpcIlJlZ2luYWxkXCIsXCJsYXN0bmFtZVwiOlwiV2ludGhlaXNlclwiLFwiaW1hZ2VcIjpbXCIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXzMwLTMwLXBlb3BsZS0xXCJdLFwibWVzc2FnZVRleHRcIjpcIkFsaXF1YW0gdXQgcXVpc3F1YW0gYW1ldC5cIixcIm1lc3NhZ2VUaW1lXCI6XCI4OjE0IEFNXCIsXCJmYXZvcml0ZVwiOnRydWUsXCJiaXJ0aGRheVwiOnRydWUsXCJ3aXNoXCI6XCJNaW51cyBuZXNjaXVudCBhdXQgZXVtIHF1YXNpIHZvbHVwdGFzLlwiLFwiX21vY2tcIjp0cnVlLFwibXlEYXlcIjpmYWxzZSxcIm15RGF5VGltZVwiOjAsXCJzdGF0dXNcIjpcIm1lc3NlbmdlclwiLFwiaW1hZ2VfMFwiOlwiaHR0cHM6Ly9mYnVzZXJzLTQ0OTQucmVzdGRiLmlvL21lZGlhLzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBfMzAtMzAtcGVvcGxlLTFcIn0se1wiX2lkXCI6XCI1OTU2M2I3MjZmNDcxZDA4MDAwMDE0NGZcIixcImZpcnN0bmFtZVwiOlwiQmFycmV0dFwiLFwibGFzdG5hbWVcIjpcIkNyaXN0XCIsXCJpbWFnZVwiOltcIjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBfMzAtMzAtcGVvcGxlLThcIl0sXCJtZXNzYWdlVGV4dFwiOlwiQmxhbmRpdGlpcyBpdXJlIGVsaWdlbmRpIHZlcml0YXRpcy5cIixcIm1lc3NhZ2VUaW1lXCI6XCIzOjIzIFBNXCIsXCJmYXZvcml0ZVwiOmZhbHNlLFwiYmlydGhkYXlcIjpmYWxzZSxcIndpc2hcIjpcIkFsaWFzIGV0IHF1YW0gYWxpYXMgY3VwaWRpdGF0ZSBoYXJ1bSBleHBlZGl0YSBkb2xvcmVzIG5vc3RydW0uXCIsXCJfbW9ja1wiOnRydWUsXCJteURheVwiOnRydWUsXCJteURheVRpbWVcIjoyOSxcInVucmVhZFwiOnRydWUsXCJzdGF0dXNcIjpcImFjdGl2ZVwiLFwiaW1hZ2VfMFwiOlwiaHR0cHM6Ly9mYnVzZXJzLTQ0OTQucmVzdGRiLmlvL21lZGlhLzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBfMzAtMzAtcGVvcGxlLThcIn0se1wiX2lkXCI6XCI1OTU2M2I3MjZmNDcxZDA4MDAwMDE0NGNcIixcImZpcnN0bmFtZVwiOlwiSnVhbmFcIixcImxhc3RuYW1lXCI6XCJEb3lsZVwiLFwiaW1hZ2VcIjpbXCIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXzMwLTMwLXBlb3BsZS01XCJdLFwibWVzc2FnZVRleHRcIjpcIkV4cGVkaXRhIG1vbGVzdGlhcy5cIixcIm1lc3NhZ2VUaW1lXCI6XCIyOjQxIEFNXCIsXCJmYXZvcml0ZVwiOnRydWUsXCJiaXJ0aGRheVwiOmZhbHNlLFwid2lzaFwiOlwiSW52ZW50b3JlIHRlbXBvcmUgY29uc2VjdGV0dXIgYXV0LlwiLFwiX21vY2tcIjp0cnVlLFwibXlEYXlcIjp0cnVlLFwibXlEYXlUaW1lXCI6MTQsXCJzdGF0dXNcIjpcIm1lc3NlbmdlclwiLFwiaW1hZ2VfMFwiOlwiaHR0cHM6Ly9mYnVzZXJzLTQ0OTQucmVzdGRiLmlvL21lZGlhLzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBfMzAtMzAtcGVvcGxlLTVcIn0se1wiX2lkXCI6XCI1OTU2M2I3MjZmNDcxZDA4MDAwMDE0NDFcIixcImZpcnN0bmFtZVwiOlwiQnJhZGx5XCIsXCJsYXN0bmFtZVwiOlwiT2JlcmJydW5uZXJcIixcImltYWdlXCI6W1wiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMF8zMC0zMC1wZW9wbGUtMVwiXSxcIm1lc3NhZ2VUZXh0XCI6XCJFb3MgbGliZXJvIGNvbnNlcXV1bnR1ci5cIixcIm1lc3NhZ2VUaW1lXCI6XCI0OjQzIFBNXCIsXCJmYXZvcml0ZVwiOmZhbHNlLFwiYmlydGhkYXlcIjpmYWxzZSxcIndpc2hcIjpcIlNpdCBjb25zZWN0ZXR1ciBwZXJmZXJlbmRpcyBudW1xdWFtIGNvbnNlcXVhdHVyIGFsaWFzIGV0IHRlbmV0dXIuXCIsXCJfbW9ja1wiOnRydWUsXCJteURheVwiOmZhbHNlLFwibXlEYXlUaW1lXCI6MCxcInN0YXR1c1wiOlwiYWN0aXZlXCIsXCJpbWFnZV8wXCI6XCJodHRwczovL2ZidXNlcnMtNDQ5NC5yZXN0ZGIuaW8vbWVkaWEvMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMF8zMC0zMC1wZW9wbGUtMVwifSx7XCJfaWRcIjpcIjU5NTYzYjcyNmY0NzFkMDgwMDAwMTQ0NFwiLFwiZmlyc3RuYW1lXCI6XCJaZW5hXCIsXCJsYXN0bmFtZVwiOlwiSGVzc2VsXCIsXCJpbWFnZVwiOltcIjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBfMzAtMzAtcGVvcGxlLTVcIl0sXCJtZXNzYWdlVGV4dFwiOlwiVW5kZSBjdW1xdWUgaW4gbm9iaXMgaGljIHZlbC5cIixcIm1lc3NhZ2VUaW1lXCI6XCIxOjIzIFBNXCIsXCJmYXZvcml0ZVwiOmZhbHNlLFwiYmlydGhkYXlcIjpmYWxzZSxcIndpc2hcIjpcIk9tbmlzIGRvbG9yZW0gZGljdGEuXCIsXCJfbW9ja1wiOnRydWUsXCJteURheVwiOmZhbHNlLFwibXlEYXlUaW1lXCI6MCxcInN0YXR1c1wiOlwiYWN0aXZlXCIsXCJ1bnJlYWRcIjp0cnVlLFwiaW1hZ2VfMFwiOlwiaHR0cHM6Ly9mYnVzZXJzLTQ0OTQucmVzdGRiLmlvL21lZGlhLzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBfMzAtMzAtcGVvcGxlLTVcIn0se1wiX2lkXCI6XCI1OTU2M2I3MjZmNDcxZDA4MDAwMDE0NDZcIixcImZpcnN0bmFtZVwiOlwiTGF2ZXJuZVwiLFwibGFzdG5hbWVcIjpcIkNhcnJvbGxcIixcImltYWdlXCI6W1wiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMF8zMC0zMC1wZW9wbGUtN1wiXSxcIm1lc3NhZ2VUZXh0XCI6XCJOdW1xdWFtIGRvbG9yaWJ1cyBhYiBjb3Jwb3Jpcy5cIixcIm1lc3NhZ2VUaW1lXCI6XCIxMToxNCBQTVwiLFwiZmF2b3JpdGVcIjpmYWxzZSxcImJpcnRoZGF5XCI6ZmFsc2UsXCJ3aXNoXCI6XCJRdWFzIHNlZCBjb25zZWN0ZXR1ciBjdWxwYSB2b2x1cHRhcyBleHBlZGl0YSB2b2x1cHRhcyBlbmltLlwiLFwiX21vY2tcIjp0cnVlLFwibXlEYXlcIjpmYWxzZSxcIm15RGF5VGltZVwiOjAsXCJzdGF0dXNcIjpcImFjdGl2ZVwiLFwiaW1hZ2VfMFwiOlwiaHR0cHM6Ly9mYnVzZXJzLTQ0OTQucmVzdGRiLmlvL21lZGlhLzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBfMzAtMzAtcGVvcGxlLTdcIn0se1wiX2lkXCI6XCI1OTU2M2I3MjZmNDcxZDA4MDAwMDE0NDhcIixcImZpcnN0bmFtZVwiOlwiQ29ybmVsaXVzXCIsXCJsYXN0bmFtZVwiOlwiQ29sbGluc1wiLFwiaW1hZ2VcIjpbXCIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXzMwLTMwLXBlb3BsZS0xXCJdLFwibWVzc2FnZVRleHRcIjpcIlF1byBmdWdpdCBkZWxlbml0aSBpZCB2ZXJpdGF0aXMgZXQuXCIsXCJtZXNzYWdlVGltZVwiOlwiMTA6NDQgUE1cIixcImZhdm9yaXRlXCI6dHJ1ZSxcImJpcnRoZGF5XCI6ZmFsc2UsXCJ3aXNoXCI6XCJDb3JydXB0aSB0b3RhbSBkb2xvcmUgcmF0aW9uZSBtYWlvcmVzIGl1cmUgY3VwaWRpdGF0ZSBlYSBpbmNpZHVudC5cIixcIl9tb2NrXCI6dHJ1ZSxcIm15RGF5XCI6ZmFsc2UsXCJteURheVRpbWVcIjowLFwic3RhdHVzXCI6XCJhY3RpdmVcIixcImltYWdlXzBcIjpcImh0dHBzOi8vZmJ1c2Vycy00NDk0LnJlc3RkYi5pby9tZWRpYS8wMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXzMwLTMwLXBlb3BsZS0xXCJ9LHtcIl9pZFwiOlwiNTk1NjNiNzI2ZjQ3MWQwODAwMDAxNDRhXCIsXCJmaXJzdG5hbWVcIjpcIk5hdGhhbmFlbFwiLFwibGFzdG5hbWVcIjpcIkphc3RcIixcImltYWdlXCI6W1wiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMF8zMC0zMC1wZW9wbGUtNFwiXSxcIm1lc3NhZ2VUZXh0XCI6XCJRdWkgY3VtcXVlIGVzdC5cIixcIm1lc3NhZ2VUaW1lXCI6XCI2OjExIEFNXCIsXCJmYXZvcml0ZVwiOmZhbHNlLFwiYmlydGhkYXlcIjpmYWxzZSxcIndpc2hcIjpcIkVpdXMgZXQgdmVsaXQgcmVwZWxsZW5kdXMgc2l0IGlkIHZvbHVwdGF0ZW0uXCIsXCJfbW9ja1wiOnRydWUsXCJteURheVwiOnRydWUsXCJteURheVRpbWVcIjo1LFwic3RhdHVzXCI6XCJtZXNzZW5nZXJcIixcInVucmVhZFwiOnRydWUsXCJpbWFnZV8wXCI6XCJodHRwczovL2ZidXNlcnMtNDQ5NC5yZXN0ZGIuaW8vbWVkaWEvMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMF8zMC0zMC1wZW9wbGUtNFwifSx7XCJfaWRcIjpcIjU5NTYzYjcyNmY0NzFkMDgwMDAwMTQ0ZVwiLFwiZmlyc3RuYW1lXCI6XCJKZXJtYWluZVwiLFwibGFzdG5hbWVcIjpcIlVsbHJpY2hcIixcImltYWdlXCI6W1wiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMF8zMC0zMC1wZW9wbGUtOFwiXSxcIm1lc3NhZ2VUZXh0XCI6XCJMYXVkYW50aXVtIHJlcHVkaWFuZGFlIGVzdCBxdWFtLlwiLFwibWVzc2FnZVRpbWVcIjpcIjY6MTQgUE1cIixcImZhdm9yaXRlXCI6ZmFsc2UsXCJiaXJ0aGRheVwiOmZhbHNlLFwid2lzaFwiOlwiU2l0IHF1aSBjdWxwYSBkb2xvcmVzIG9wdGlvIGF1dCBjdW1xdWUgdXQgbmVtby5cIixcIl9tb2NrXCI6dHJ1ZSxcIm15RGF5XCI6ZmFsc2UsXCJteURheVRpbWVcIjowLFwic3RhdHVzXCI6XCJpbmFjdGl2ZVwiLFwidW5yZWFkXCI6dHJ1ZSxcImltYWdlXzBcIjpcImh0dHBzOi8vZmJ1c2Vycy00NDk0LnJlc3RkYi5pby9tZWRpYS8wMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXzMwLTMwLXBlb3BsZS04XCJ9LHtcIl9pZFwiOlwiNTk1NjNiNzI2ZjQ3MWQwODAwMDAxNDNmXCIsXCJmaXJzdG5hbWVcIjpcIlN5bHZhblwiLFwibGFzdG5hbWVcIjpcIlNraWxlc1wiLFwiaW1hZ2VcIjpbXCIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXzMwLTMwLXBlb3BsZS01XCJdLFwibWVzc2FnZVRleHRcIjpcIklkIHZpdGFlIHJlcGVsbGVuZHVzLlwiLFwibWVzc2FnZVRpbWVcIjpcIjk6MTIgQU1cIixcImZhdm9yaXRlXCI6ZmFsc2UsXCJiaXJ0aGRheVwiOmZhbHNlLFwid2lzaFwiOlwiTm9iaXMgb2ZmaWNpaXMgYXRxdWUgZGlzdGluY3RpbyBsYWJvcnVtIHF1aSBhbGlxdWFtIGVhLlwiLFwiX21vY2tcIjp0cnVlLFwibXlEYXlcIjp0cnVlLFwibXlEYXlUaW1lXCI6NDcsXCJzdGF0dXNcIjpcImFjdGl2ZVwiLFwiaW1hZ2VfMFwiOlwiaHR0cHM6Ly9mYnVzZXJzLTQ0OTQucmVzdGRiLmlvL21lZGlhLzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBfMzAtMzAtcGVvcGxlLTVcIn0se1wiX2lkXCI6XCI1OTU2M2I3MjZmNDcxZDA4MDAwMDE0NDJcIixcImZpcnN0bmFtZVwiOlwiQmVybmFkaW5lXCIsXCJsYXN0bmFtZVwiOlwiVmFuZGVydm9ydFwiLFwiaW1hZ2VcIjpbXCIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXzMwLTMwLXBlb3BsZS05XCJdLFwibWVzc2FnZVRleHRcIjpcIk5hbSBzYWVwZSBxdW9kIHRvdGFtLlwiLFwibWVzc2FnZVRpbWVcIjpcIjE6NTMgQU1cIixcImZhdm9yaXRlXCI6dHJ1ZSxcImJpcnRoZGF5XCI6ZmFsc2UsXCJ3aXNoXCI6XCJFeCBub3N0cnVtIGV0IGVhcnVtIG9tbmlzIGludmVudG9yZSBxdWkgc2VkIGlsbHVtIHJlcGVsbGF0LlwiLFwiX21vY2tcIjp0cnVlLFwibXlEYXlcIjp0cnVlLFwibXlEYXlUaW1lXCI6MTAsXCJ1bnJlYWRcIjp0cnVlLFwic3RhdHVzXCI6XCJhY3RpdmVcIixcImltYWdlXzBcIjpcImh0dHBzOi8vZmJ1c2Vycy00NDk0LnJlc3RkYi5pby9tZWRpYS8wMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXzMwLTMwLXBlb3BsZS05XCJ9LHtcIl9pZFwiOlwiNTk1NjNiNzI2ZjQ3MWQwODAwMDAxNDQwXCIsXCJmaXJzdG5hbWVcIjpcIkthbGV5XCIsXCJsYXN0bmFtZVwiOlwiQmFydG9uXCIsXCJpbWFnZVwiOltcIjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBfMzAtMzAtcGVvcGxlLTFcIl0sXCJtZXNzYWdlVGV4dFwiOlwiU2VkIHJlY3VzYW5kYWUgZXQuXCIsXCJtZXNzYWdlVGltZVwiOlwiMToxNCBBTVwiLFwiZmF2b3JpdGVcIjpmYWxzZSxcImJpcnRoZGF5XCI6ZmFsc2UsXCJ3aXNoXCI6XCJFc3QgYW1ldCB1bmRlIGRvbG9yZXMgcXVpIHNhcGllbnRlIHF1aSBldCBub2Jpcy5cIixcIl9tb2NrXCI6dHJ1ZSxcIm15RGF5XCI6ZmFsc2UsXCJteURheVRpbWVcIjowLFwic3RhdHVzXCI6XCJhY3RpdmVcIixcInVucmVhZFwiOnRydWUsXCJpbWFnZV8wXCI6XCJodHRwczovL2ZidXNlcnMtNDQ5NC5yZXN0ZGIuaW8vbWVkaWEvMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMF8zMC0zMC1wZW9wbGUtMVwifV0nXG4gICAgICAgIHJldHVybiB1c2Vyc1xuXG4gICAgZ2V0QWN0aXZlVXNlcnM6ICh1c2VycykgLT5cbiAgICAgICAgYWN0aXZlVXNlcnMgPSBbXVxuICAgICAgICBmb3IgdXNlciBpbiB1c2Vyc1xuXHQgICAgICAgIGlmIHVzZXIuc3RhdHVzIGlzIFwiYWN0aXZlXCJcblx0XHQgICAgICAgIGFjdGl2ZVVzZXJzLnB1c2godXNlcilcbiAgICAgICAgcmV0dXJuIGFjdGl2ZVVzZXJzXG5cbiAgICBnZXRCaXJ0aGRheVVzZXJzOiAodXNlcnMpIC0+XG4gICAgICAgIGJpcnRoZGF5VXNlcnMgPSBbXVxuICAgICAgICBmb3IgdXNlciBpbiB1c2Vyc1xuXHQgICAgICAgIGlmIHVzZXIuYmlydGhkYXkgPT0gdHJ1ZVxuXHRcdCAgICAgICAgYmlydGhkYXlVc2Vycy5wdXNoKHVzZXIpXG4gICAgICAgIHJldHVybiBiaXJ0aGRheVVzZXJzXG5cbiAgICBnZXRGYXZvcml0ZVVzZXJzOiAodXNlcnMpIC0+XG4gICAgICAgIGZhdm9yaXRlVXNlcnMgPSBbXVxuICAgICAgICBmb3IgdXNlciBpbiB1c2Vyc1xuXHQgICAgICAgIGlmIHVzZXIuZmF2b3JpdGUgPT0gdHJ1ZVxuXHRcdCAgICAgICAgZmF2b3JpdGVVc2Vycy5wdXNoKHVzZXIpXG4gICAgICAgIHJldHVybiBmYXZvcml0ZVVzZXJzXG5cbiAgICBnZXRNeURheXM6ICh1c2VycykgLT5cbiAgICAgICAgbXlEYXlzID0gW11cbiAgICAgICAgZm9yIHVzZXIgaW4gdXNlcnNcblx0ICAgICAgICBpZiB1c2VyLm15RGF5ID09IHRydWVcblx0XHQgICAgICAgIG15RGF5cy5wdXNoKHVzZXIpXG4gICAgICAgIHJldHVybiBteURheXNcblxuICAgIG1vZHVsZS5leHBvcnRzID0gVXNlcnNEQUxcblxuY2xhc3MgQ2FsbHNEQUxcbiAgICB1cmwgPSBcImh0dHBzOi8vZmJ1c2Vycy00NDk0LnJlc3RkYi5pby9yZXN0L2NhbGxzXCJcbiAgICBhcGlrZXkgPSBcIjhiZTBkMjc3NzZkYWI5NDgzYWNmZmJlOTcxNWVlMDI1MTJiZTNcIlxuXG4gICAgY2FsbHMgPSBbXVxuXG4gICAgZ2V0Q2FsbHM6IChxdWVyeSwgbWF4LCBmaWx0ZXIsIHNvcnQsIHNvcnREaXIpIC0+XG4gICAgICAgIEdFVGRhdGEgPSBcIiN7dXJsfT9hcGlrZXk9I3thcGlrZXl9Jm1heD0je21heH0mc29ydD0je3NvcnR9JmRpcj17c29ydERpcn0mZmlsdGVyPSN7ZmlsdGVyfSZpZHRvbGluaz10cnVlJnE9XCIrSlNPTi5zdHJpbmdpZnkocXVlcnkpXG4gICAgICAgICMgbG9hZCBkYXRhIGZyb20gZGJcbiAgICAgICAgdXNlcnMgPSBKU09OLnBhcnNlIFV0aWxzLmRvbUxvYWREYXRhU3luYyBHRVRkYXRhXG4gICAgICAgIHJldHVybiBjYWxsc1xuXG4gICAgbW9kdWxlLmV4cG9ydHMgQ2FsbHNEQUxcbiIsImlvcyA9IHJlcXVpcmUgXCJpb3Mta2l0XCJcclxuSXB6TWVzc2VuZ2VyID0gcmVxdWlyZSBcImlwei1tZXNzZW5nZXJcIlxyXG5cclxuY2xhc3MgSXB6Q2hhdEJvdCBleHRlbmRzIExheWVyXHJcbiAgICBAZmxvdyA9IHVuZGVmaW5lZFxyXG4gICAgQHZpZXcgPSB1bmRlZmluZWRcclxuICAgIEBzdGF0dXNCYXIgPSB1bmRlZmluZWRcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcjoob3B0aW9ucyA9IHt9KSAtPlxyXG4gICAgICAgIG9wdGlvbnMubmFtZSA/PSBcIkNoYXRCb3RcIlxyXG4gICAgICAgIG9wdGlvbnMud2lkdGggPz0gU2NyZWVuLndpZHRoXHJcbiAgICAgICAgb3B0aW9ucy5oZWlnaHQgPz0gU2NyZWVuLmhlaWdodFxyXG4gICAgICAgIG9wdGlvbnMuYmFja2dyb3VuZENvbG9yID89IFNjcmVlbi5iYWNrZ3JvdW5kQ29sb3JcclxuXHJcbiAgICAgICAgc3VwZXIgb3B0aW9uc1xyXG5cclxuICAgICAgICBAc3RhdHVzQmFyID0gbmV3IGlvcy5TdGF0dXNCYXJcclxuICAgICAgICAgICAgY2FycmllcjpcIlZvZGFmb25lUk9cIlxyXG5cclxuICAgICAgICBAZmxvdyA9IG5ldyBGbG93Q29tcG9uZW50XHJcbiAgICAgICAgICAgIHN1cGVyTGF5ZXI6QFxyXG5cclxuICAgICAgICBAZmxvdy5oZWFkZXIgPSBAc3RhdHVzQmFyXHJcblxyXG4gICAgc2hvd05leHQ6ICh2aWV3TmFtZSkgLT5cclxuICAgICAgICBAdmlldyA9IHN3aXRjaCB2aWV3TmFtZVxyXG4gICAgICAgICAgICB3aGVuIFwiTWFpblwiIHRoZW4gbmV3IElwek1lc3Nlbmdlcih7c3VwZXJMYXllcjpALCB5OkBzdGF0dXNCYXIubWF4WX0pXHJcbiAgICAgICAgICAgICMgd2hlbiBcIkNoYXRcIiB0aGVuIG5ldyBJcHpNZXNzZW5nZXJDaGF0KGNvbnRlbnRWaWV3KVxyXG5cclxuICAgICAgICBAZmxvdy5zaG93TmV4dChAdmlldylcclxuXHJcbiAgICBzZXRVc2VyOih1c2VyKSAtPlxyXG4gICAgICAgIEB2aWV3LnNldFVzZXIodXNlcilcclxuICAgICAgICBAc3RhdHVzQmFyLmNhcnJpZXIgPSB1c2VyLkNhcnJpZXJcclxuXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IElwekNoYXRCb3RcclxuIiwiI2lPU0tpdCBNb2R1bGVcbiNCeSBLZXZ5biBBcm5vdHRcblxuIyBJbXBvcnQgZnJhbWV3b3JrXG5leHBvcnRzLmxheW91dCA9IGxheW91dCA9IHJlcXVpcmUgJ2lvcy1raXQtbGF5b3V0J1xuZXhwb3J0cy5saWIgPSBsaWJyYXJ5ID0gcmVxdWlyZSAnaW9zLWtpdC1saWJyYXJ5J1xuZXhwb3J0cy51dGlscyA9IHV0aWxzID0gcmVxdWlyZSAnaW9zLWtpdC11dGlscydcbmV4cG9ydHMuY29udmVydGVyID0gY29udiA9IHJlcXVpcmUgJ2lvcy1raXQtY29udmVydGVyJ1xuXG4jIFNldHVwIHJlc291cmNlc1xuZXhwb3J0cy5kZXZpY2UgPSB1dGlscy5nZXREZXZpY2UoKVxuZXhwb3J0cy5hc3NldHMgPSBsaWJyYXJ5LmFzc2V0c1xuZXhwb3J0cy5pc1BhZCA9IC0+IGlmIGV4cG9ydHMuZGV2aWNlLm5hbWUuaW5kZXhPZignaXBhZCcpICE9IC0xIHRoZW4gcmV0dXJuIHRydWUgZWxzZSByZXR1cm4gZmFsc2VcbmV4cG9ydHMuaXNQaG9uZSA9IC0+IGlmIGV4cG9ydHMuZGV2aWNlLm5hbWUuaW5kZXhPZignaXBob25lJykgIT0gLTEgdGhlbiByZXR1cm4gdHJ1ZSBlbHNlIHJldHVybiBmYWxzZVxuXG4jIFNob3J0Y3V0c1xuZXhwb3J0cy5jb252ZXJ0ID0gKHNrZXRjaE9iaikgLT5cbiAgY29udi5jb252ZXJ0KHNrZXRjaE9iailcblxuZXhwb3J0cy5jb2xvciA9IChzdHJpbmcpIC0+XG4gIHJldHVybiB1dGlscy5jb2xvcihzdHJpbmcpXG5cbmV4cG9ydHMucHggPSAobnVtKSAtPlxuICByZXR1cm4gdXRpbHMucHgobnVtKVxuXG5leHBvcnRzLnB0ID0gKG51bSkgLT5cbiAgcmV0dXJuIHV0aWxzLnB0KG51bSlcblxuI0ltcG9ydCBDb21wb25lbnRzXG5leHBvcnRzLmFsZXJ0ID0gcmVxdWlyZSAnaW9zLWtpdC1hbGVydCdcbmV4cG9ydHMuYmFubmVyID0gcmVxdWlyZSAnaW9zLWtpdC1iYW5uZXInXG5leHBvcnRzLmJ1dHRvbiA9IHJlcXVpcmUgJ2lvcy1raXQtYnV0dG9uJ1xuZXhwb3J0cy5maWVsZCA9IHJlcXVpcmUgJ2lvcy1raXQtZmllbGQnXG5leHBvcnRzLmtleWJvYXJkID0gcmVxdWlyZSAnaW9zLWtpdC1rZXlib2FyZCdcbmV4cG9ydHMubmF2ID0gcmVxdWlyZSAnaW9zLWtpdC1uYXYtYmFyJ1xuZXhwb3J0cy5zaGVldCA9IHJlcXVpcmUgJ2lvcy1raXQtc2hlZXQnXG5leHBvcnRzLnN0YXR1cyA9IHJlcXVpcmUgJ2lvcy1raXQtc3RhdHVzLWJhcidcbmV4cG9ydHMudGFiID0gcmVxdWlyZSAnaW9zLWtpdC10YWItYmFyJ1xuZXhwb3J0cy50ZXh0ID0gcmVxdWlyZSAnaW9zLWtpdC10ZXh0J1xuZXhwb3J0cy52aWV3ID0gcmVxdWlyZSAnaW9zLWtpdC12aWV3J1xuXG5cbiMjU2V0dXAgQ29tcG9uZW50c1xuZXhwb3J0cy5BbGVydCA9IGV4cG9ydHMuYWxlcnQuY3JlYXRlXG5leHBvcnRzLkJhbm5lciA9IGV4cG9ydHMuYmFubmVyLmNyZWF0ZVxuZXhwb3J0cy5CdXR0b24gPSBleHBvcnRzLmJ1dHRvbi5jcmVhdGVcbmV4cG9ydHMuRmllbGQgPSBleHBvcnRzLmZpZWxkLmNyZWF0ZVxuZXhwb3J0cy5LZXlib2FyZCA9IGV4cG9ydHMua2V5Ym9hcmQuY3JlYXRlXG5leHBvcnRzLk5hdkJhciA9IGV4cG9ydHMubmF2LmNyZWF0ZVxuZXhwb3J0cy5TaGVldCA9IGV4cG9ydHMuc2hlZXQuY3JlYXRlXG5leHBvcnRzLlN0YXR1c0JhciA9IGV4cG9ydHMuc3RhdHVzLmNyZWF0ZVxuZXhwb3J0cy5UYWIgPSBleHBvcnRzLnRhYi50YWJcbmV4cG9ydHMuVGFiQmFyID0gZXhwb3J0cy50YWIuYmFyXG5leHBvcnRzLlRleHQgPSBleHBvcnRzLnRleHQuY3JlYXRlXG5leHBvcnRzLlZpZXcgPSBleHBvcnRzLnZpZXcuY3JlYXRlXG5cblxuIyBMYXllcnMgZnJvbSBjb252ZXJ0aW5nXG5leHBvcnRzLmwgPSB7fVxuIiwiaW9zID0gcmVxdWlyZSAnaW9zLWtpdCdcblxuZXhwb3J0cy5jcmVhdGUgPSAob2JqKSAtPlxuXHRpZiBvYmogPT0gdW5kZWZpbmVkIHRoZW4gb2JqID0ge31cblxuXHR2aWV3ID0gbmV3IExheWVyXG5cdHZpZXcuY29uc3RyYWludHMgPSB7fVxuXG5cdCMgU2V0IGZyYW1lciBwcm9wc1xuXHRmb3IgcHJvcCBpbiBpb3MubGliLmxheWVyUHJvcHNcblx0XHRcdGlmIG9ialtwcm9wXSB0aGVuIHZpZXdbcHJvcF0gPSBvYmpbcHJvcF1cblxuXHQjIFNldCBjb25zdHJhaW50c1xuXHRpZiBvYmpbXCJjb25zdHJhaW50c1wiXVxuXHRcdHZpZXcuY29uc3RyYWludHMgPSBvYmpbXCJjb25zdHJhaW50c1wiXVxuXHRcdGlvcy5sYXlvdXQuc2V0KHZpZXcpXG5cblx0cmV0dXJuIHZpZXdcbiIsImlvcyA9IHJlcXVpcmUgJ2lvcy1raXQnXG5cbiMjIENvbnZlcnRzIHB4IHRvIHB0XG5leHBvcnRzLnB0ID0gKHB4KSAtPlxuXHRwdCA9IHB4L2lvcy5kZXZpY2Uuc2NhbGVcblx0cHQgPSBNYXRoLnJvdW5kKHB0KVxuXHRyZXR1cm4gcHRcblxuIyMgQ29udmVydHMgcHQgdG8gcHhcbmV4cG9ydHMucHggPSAocHQpIC0+XG5cdHB4ID0gcHQgKiBpb3MuZGV2aWNlLnNjYWxlXG5cdHB4ID0gTWF0aC5yb3VuZChweClcblx0cmV0dXJuIHB4XG5cbiMjIGlPUyBDb2xvciDigJMgVGhpcyB3aWxsIHN0b3JlIGFsbCBvZiB0aGUgZGVmYXVsdCBpT1MgY29sb3JzIGludGVhZCBvZiB0aGUgZGVmYXVsdCBDU1MgY29sb3JzLiAqVGhpcyBpcyBvbmx5IHVwIGhlcmUgYmVjYXVzZSBJIHJlZmVyIHRvIGl0IGluIHRoZSBkZWZhdWx0cy4qXG5leHBvcnRzLmNvbG9yID0gKGNvbG9yU3RyaW5nKSAtPlxuXHRjb2xvciA9IFwiXCJcblx0aWYgdHlwZW9mIGNvbG9yU3RyaW5nID09IFwic3RyaW5nXCJcblx0XHRjb2xvclN0cmluZyA9IGNvbG9yU3RyaW5nLnRvTG93ZXJDYXNlKClcblx0XHRpZiBjb2xvclN0cmluZ1swLi4uNF0gPT0gXCJyZ2JhXCJcblx0XHRcdHJldHVybiBjb2xvclN0cmluZ1xuXHRzd2l0Y2ggY29sb3JTdHJpbmdcblx0XHR3aGVuIFwicmVkXCJcblx0XHRcdGNvbG9yID0gbmV3IENvbG9yKFwiI0ZFMzgyNFwiKVxuXHRcdHdoZW4gXCJibHVlXCJcblx0XHRcdGNvbG9yID0gbmV3IENvbG9yKFwiIzAwNzZGRlwiKVxuXHRcdHdoZW4gXCJwaW5rXCJcblx0XHRcdGNvbG9yID0gbmV3IENvbG9yKFwiI0ZFMjg1MVwiKVxuXHRcdHdoZW4gXCJncmV5XCJcblx0XHRcdGNvbG9yID0gbmV3IENvbG9yKFwiIzkyOTI5MlwiKVxuXHRcdHdoZW4gXCJncmF5XCJcblx0XHRcdGNvbG9yID0gbmV3IENvbG9yKFwiIzkyOTI5MlwiKVxuXHRcdHdoZW4gXCJibGFja1wiXG5cdFx0XHRjb2xvciA9IG5ldyBDb2xvcihcIiMwMzAzMDNcIilcblx0XHR3aGVuIFwid2hpdGVcIlxuXHRcdFx0Y29sb3IgPSBuZXcgQ29sb3IoXCIjRUZFRkY0XCIpXG5cdFx0d2hlbiBcIm9yYW5nZVwiXG5cdFx0XHRjb2xvciA9IG5ldyBDb2xvcihcIiNGRjk2MDBcIilcblx0XHR3aGVuIFwiZ3JlZW5cIlxuXHRcdFx0Y29sb3IgPSBuZXcgQ29sb3IoXCIjNDREQjVFXCIpXG5cdFx0d2hlbiBcImxpZ2h0IGJsdWVcIlxuXHRcdFx0Y29sb3IgPSBuZXcgQ29sb3IoXCIjNTRDN0ZDXCIpXG5cdFx0d2hlbiBcImxpZ2h0LWJsdWVcIlxuXHRcdFx0Y29sb3IgPSBuZXcgQ29sb3IoXCIjNTRDN0ZDXCIpXG5cdFx0d2hlbiBcInllbGxvd1wiXG5cdFx0XHRjb2xvciA9IG5ldyBDb2xvcihcIiNGRkNEMDBcIilcblx0XHR3aGVuIFwibGlnaHQga2V5XCJcblx0XHRcdGNvbG9yID0gbmV3IENvbG9yKFwiIzlEQTdCM1wiKVxuXHRcdHdoZW4gXCJsaWdodC1rZXlcIlxuXHRcdFx0Y29sb3IgPSBuZXcgQ29sb3IoXCIjOURBN0IzXCIpXG5cdFx0ZWxzZVxuXHRcdFx0aWYgY29sb3JTdHJpbmdbMF0gPT0gXCIjXCIgfHwgY29sb3JTdHJpbmcudG9IZXhTdHJpbmcoKVswXSA9PSBcIiNcIlxuXHRcdFx0XHRjb2xvciA9IG5ldyBDb2xvcihjb2xvclN0cmluZylcblx0XHRcdGVsc2Vcblx0XHRcdFx0Y29sb3IgPSBuZXcgQ29sb3IoXCIjOTI5MjkyXCIpXG5cdHJldHVybiBjb2xvclxuXG4jIFN1cHBvcnRpbmcgRnVuY3Rpb25zXG4jIFV0aWxzXG5cbiMgQ2xlYW5zIGEgc3RyaW5nIG9mIDxicj4gYW5kICZuYnNwO1xuZXhwb3J0cy5jbGVhbiA9IChzdHJpbmcpIC0+XG5cdCMjIHJlbW92ZSB3aGl0ZSBzcGFjZVxuXHRzdHJpbmcgPSBzdHJpbmcucmVwbGFjZSgvWyZdbmJzcFs7XS9naSwgXCIgXCIpLnJlcGxhY2UoL1s8XWJyWz5dL2dpLCBcIlwiKVxuXHRyZXR1cm4gc3RyaW5nXG5cbiMgQ29udmVydHMgcHgncyBvZiBhbiBTVkcgdG8gc2NhbGFibGUgdmFyaWFibGVzXG5leHBvcnRzLnN2ZyA9IChzdmcpIC0+XG5cdCMgRmluZCBTdHJpbmdcblx0c3RhcnRJbmRleCA9IHN2Zy5zZWFyY2goXCI8c3ZnIHdpZHRoPVwiKVxuXHRlbmRJbmRleCA9IHN2Zy5zZWFyY2goXCIgdmlld0JveFwiKVxuXHRzdHJpbmcgPSBzdmcuc2xpY2Uoc3RhcnRJbmRleCwgZW5kSW5kZXgpXG5cblx0I0ZpbmQgd2lkdGhcblx0d1N0YXJ0SW5kZXggPSBzdHJpbmcuc2VhcmNoKFwiPVwiKSArIDJcblx0d0VuZEluZGV4ID0gIHN0cmluZy5zZWFyY2goXCJweFwiKVxuXHR3aWR0aCA9IHN0cmluZy5zbGljZSh3U3RhcnRJbmRleCwgd0VuZEluZGV4KVxuXHRuZXdXaWR0aCA9IGV4cG9ydHMucHgod2lkdGgpXG5cblx0IyBGaW5kIEhlaWdodFxuXHRoZWlnaHRTdHJpbmcgPSBzdHJpbmcuc2xpY2Uod0VuZEluZGV4ICsgNCwgc3RyaW5nLmxlbmd0aClcblx0aFN0YXJ0SW5kZXggPSBoZWlnaHRTdHJpbmcuc2VhcmNoKFwiPVwiKSsgMlxuXHRoRW5kSW5kZXggPSBoZWlnaHRTdHJpbmcuc2VhcmNoKFwicHhcIilcblx0aGVpZ2h0ID0gaGVpZ2h0U3RyaW5nLnNsaWNlKGhTdGFydEluZGV4LCBoRW5kSW5kZXgpXG5cdG5ld0hlaWdodCA9IGV4cG9ydHMucHgoaGVpZ2h0KVxuXG5cdCNDcmVhdGUgbmV3IHN0cmluZ1xuXHRuZXdTdHJpbmcgPSBzdHJpbmcucmVwbGFjZSh3aWR0aCwgbmV3V2lkdGgpXG5cdG5ld1N0cmluZyA9IG5ld1N0cmluZy5yZXBsYWNlKGhlaWdodCwgbmV3SGVpZ2h0KVxuXG5cdCNSZXBsYWNlIHN0cmluZ3Ncblx0c3ZnID0gc3ZnLnJlcGxhY2Uoc3RyaW5nLCBuZXdTdHJpbmcpXG5cblx0cmV0dXJuIHtcblx0XHRzdmc6c3ZnXG5cdFx0d2lkdGg6bmV3V2lkdGhcblx0XHRoZWlnaHQ6bmV3SGVpZ2h0XG5cdH1cblxuIyBDaGFuZ2VzIHRoZSBmaWxsIG9mIGFuIFNWR1xuZXhwb3J0cy5jaGFuZ2VGaWxsID0gKGxheWVyLCBjb2xvcikgLT5cblx0c3RhcnRJbmRleCA9IGxheWVyLmh0bWwuc2VhcmNoKFwiZmlsbD1cXFwiI1wiKVxuXHRmaWxsU3RyaW5nID0gbGF5ZXIuaHRtbC5zbGljZShzdGFydEluZGV4LCBsYXllci5odG1sLmxlbmd0aClcblx0ZW5kSW5kZXggPSBmaWxsU3RyaW5nLnNlYXJjaChcIlxcXCI+XCIpXG5cdHN0cmluZyA9IGZpbGxTdHJpbmcuc2xpY2UoMCwgZW5kSW5kZXgpXG5cdG5ld1N0cmluZyA9IFwiZmlsbD1cXFwiXCIgKyBleHBvcnRzLmNvbG9yKGNvbG9yKVxuXHRsYXllci5odG1sID0gbGF5ZXIuaHRtbC5yZXBsYWNlKHN0cmluZywgbmV3U3RyaW5nKVxuXG5leHBvcnRzLmNhcGl0YWxpemUgPSAoc3RyaW5nKSAtPlxuXHRyZXR1cm4gc3RyaW5nLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgc3RyaW5nLnNsaWNlKDEpXG5cbiMgUmV0dXJucyB0aGUgY3VycmVudCB0aW1lXG5leHBvcnRzLmdldFRpbWUgPSAtPlxuXHRkYXlzT2ZUaGVXZWVrID0gW1wiU3VuZGF5XCIsIFwiTW9uZGF5XCIsIFwiVHVlc2RheVwiLCBcIldlZG5lc2RheVwiLCBcIlRodXJzZGF5XCIsIFwiRnJpZGF5XCIsIFwiU2F0dXJkYXlcIl1cblx0bW9udGhzT2ZUaGVZZWFyID0gW1wiSmFudWFyeVwiLCBcIkZlYnJ1YXJ5XCIsIFwiTWFyY2hcIiwgXCJBcHJpbFwiLCBcIk1heVwiLCBcIkp1bmVcIiwgXCJKdWx5XCIsIFwiQXVndXN0XCIsIFwiU2VwdGVtYmVyXCIsIFwiT2N0b2JlclwiLCBcIk5vdmVtYmVyXCIsIFwiRGVjZW1iZXJcIl1cblx0ZGF0ZU9iaiA9IG5ldyBEYXRlKClcblx0bW9udGggPSBtb250aHNPZlRoZVllYXJbZGF0ZU9iai5nZXRNb250aCgpXVxuXHRkYXRlID0gZGF0ZU9iai5nZXREYXRlKClcblx0ZGF5ID0gZGF5c09mVGhlV2Vla1tkYXRlT2JqLmdldERheSgpXVxuXHRob3VycyA9IGRhdGVPYmouZ2V0SG91cnMoKVxuXHRtaW5zID0gZGF0ZU9iai5nZXRNaW51dGVzKClcblx0c2VjcyA9IGRhdGVPYmouZ2V0U2Vjb25kcygpXG5cdHJldHVybiB7XG5cdFx0bW9udGg6bW9udGhcblx0XHRkYXRlOmRhdGVcblx0XHRkYXk6ZGF5XG5cdFx0aG91cnM6aG91cnNcblx0XHRtaW5zOm1pbnNcblx0XHRzZWNzOnNlY3Ncblx0fVxuXG5leHBvcnRzLmJnQmx1ciA9IChsYXllcikgLT5cblx0bGF5ZXIuc3R5bGVbXCItd2Via2l0LWJhY2tkcm9wLWZpbHRlclwiXSA9IFwiYmx1cigje2V4cG9ydHMucHgoNSl9cHgpXCJcblx0cmV0dXJuIGxheWVyXG5cbmV4cG9ydHMudGV4dEF1dG9TaXplID0gKHRleHRMYXllcikgLT5cblx0I0RlZmluZSBXaWR0aFxuXHRjb25zdHJhaW50cyA9IHt9XG5cdGlmIHRleHRMYXllci5jb25zdHJhaW50c1xuXHRcdGlmIHRleHRMYXllci5jb25zdHJhaW50cy5oZWlnaHRcblx0XHRcdGNvbnN0cmFpbnRzLmhlaWdodCA9IGV4cG9ydHMucHgodGV4dExheWVyLmNvbnN0cmFpbnRzLmhlaWdodClcblx0XHRpZiB0ZXh0TGF5ZXIuY29uc3RyYWludHMud2lkdGhcblx0XHRcdGNvbnN0cmFpbnRzLndpZHRoID0gZXhwb3J0cy5weCh0ZXh0TGF5ZXIuY29uc3RyYWludHMud2lkdGgpXG5cblx0c3R5bGVzID1cblx0XHRmb250U2l6ZTogdGV4dExheWVyLnN0eWxlLmZvbnRTaXplXG5cdFx0Zm9udEZhbWlseTogdGV4dExheWVyLnN0eWxlLmZvbnRGYW1pbHlcblx0XHRmb250V2VpZ2h0OiB0ZXh0TGF5ZXIuc3R5bGUuZm9udFdlaWdodFxuXHRcdGxpbmVIZWlnaHQ6IHRleHRMYXllci5zdHlsZS5saW5lSGVpZ2h0XG5cdFx0bGV0dGVyU3BhY2luZzogdGV4dExheWVyLnN0eWxlLmxldHRlclNwYWNpbmdcblx0XHR0ZXh0VHJhbnNmb3JtOiB0ZXh0TGF5ZXIuc3R5bGUudGV4dFRyYW5zZm9ybVxuXHR0ZXh0RnJhbWUgPSBVdGlscy50ZXh0U2l6ZSh0ZXh0TGF5ZXIuaHRtbCwgc3R5bGVzLCBjb25zdHJhaW50cylcblx0cmV0dXJuIHtcblx0XHR3aWR0aCA6IHRleHRGcmFtZS53aWR0aFxuXHRcdGhlaWdodDogdGV4dEZyYW1lLmhlaWdodFxuXHR9XG5cbiMgZXhwb3J0cy5nZXREZXZpY2UgPSAtPlxuI1xuIyBcdCMgTG9hZHMgdGhlIGluaXRpYWwgZnJhbWVcbiMgXHRkZXZpY2UgPSBGcmFtZXIuRGV2aWNlLmRldmljZVR5cGVcbiNcbiMgXHQjIyMgVGhpcyBzd2l0Y2ggbG9va3MgYXQgdGhlIGlubmVyV2lkdGggdG8gZGV0ZXJtaW5lIGlmIHRoZSBwcm90b3R5cGUgaXMgYmVpbmcgb3BlbmVkIG9uIGEgZGV2aWNlLlxuIyBcdElmIHNvLCBpdCdsbCBvdmVycmlkZSB0aGUgZGV2aWNlLCBhbmQgaXQnbGwgYWRqdXN0IHRoZSB2aWV3IHRvIGZ1bGxzY3JlZW4uIyMjXG4jIFx0Y2FwdHVyZWREZXZpY2UgPSB7XG4jIFx0XHR3aWR0aDppb3MubGliLmZyYW1lc1tkZXZpY2VdLndpZHRoXG4jIFx0XHRoZWlnaHQ6aW9zLmxpYi5mcmFtZXNbZGV2aWNlXS5oZWlnaHRcbiMgXHRcdHNjYWxlOmlvcy5saWIuZnJhbWVzW2RldmljZV0uc2NhbGVcbiMgXHRcdG1vYmlsZTppb3MubGliLmZyYW1lc1tkZXZpY2VdLm1vYmlsZVxuIyBcdFx0cGxhdGZvcm06aW9zLmxpYi5mcmFtZXNbZGV2aWNlXS5wbGF0Zm9ybVxuIyBcdH1cbiNcbiMgXHRzd2l0Y2ggaW5uZXJXaWR0aFxuIyBcdFx0IyBpUGhvbmUgNWMvNXMvU0VcbiMgXHRcdHdoZW4gNjQwXG4jIFx0XHRcdGRldmljZSA9IFwiYXBwbGUtaXBob25lLTVzLXNpbHZlclwiXG4jIFx0XHRcdEZyYW1lci5EZXZpY2UuZGV2aWNlVHlwZSA9IFwiZnVsbHNjcmVlblwiXG4jXG4jIFx0XHQjIGlQaG9uZSA2c1xuIyBcdFx0d2hlbiA3NTBcbiMgXHRcdFx0ZGV2aWNlID0gXCJhcHBsZS1pcGhvbmUtNnMtc2lsdmVyXCJcbiMgXHRcdFx0RnJhbWVyLkRldmljZS5kZXZpY2VUeXBlID0gXCJmdWxsc2NyZWVuXCJcbiNcbiMgXHRcdCMgaVBob25lIDZzK1xuIyBcdFx0d2hlbiAxMjQyXG4jIFx0XHRcdGlmIGlubmVySGVpZ2h0ID09IDIyMDhcbiMgXHRcdFx0XHRkZXZpY2UgPSBcImFwcGxlLWlwaG9uZS02cy1wbHVzLXNpbHZlclwiXG4jIFx0XHRcdFx0RnJhbWVyLkRldmljZS5kZXZpY2VUeXBlID0gXCJmdWxsc2NyZWVuXCJcbiMgXHRcdFx0XHRwcmludCBcInlvXCJcbiNcbiMgXHRcdCMgaVBhZCBpbiBwb3J0cmFpdFxuIyBcdFx0d2hlbiAxNTM2XG4jIFx0XHRcdGlmIGlubmVySGVpZ2h0ID09IDIwNDhcbiMgXHRcdFx0XHRkZXZpY2UgPSBcImFwcGxlLWlwYWQtYWlyLTItc2lsdmVyXCJcbiMgXHRcdFx0XHRGcmFtZXIuRGV2aWNlLmRldmljZVR5cGUgPSBcImZ1bGxzY3JlZW5cIlxuI1xuIyBcdFx0IyBpUGFkXG4jIFx0XHR3aGVuIDIwNDhcbiNcbiMgXHRcdFx0IyBpUGFkIFBybyBpbiBwb3J0cmFpdFxuIyBcdFx0XHRpZiBpbm5lckhlaWdodCA9PSAyNzMyXG4jIFx0XHRcdFx0ZGV2aWNlID0gXCJhcHBsZS1pcGFkLXByby1zaWx2ZXJcIlxuI1xuIyBcdFx0XHQjIGlQYWQgaW4gbGFuZHNjY2FwZVxuIyBcdFx0XHRpZiBpbm5lckhlaWdodCA9PSAxNTM2XG4jIFx0XHRcdFx0ZGV2aWNlID0gXCJhcHBsZS1pcGFkLWFpci0yLXNpbHZlclwiXG4jIFx0XHRcdEZyYW1lci5EZXZpY2UuZGV2aWNlVHlwZSA9IFwiZnVsbHNjcmVlblwiXG4jXG4jIFx0XHQjIGlQYWQgUHJvXG4jIFx0XHR3aGVuIDI3MzJcbiMgXHRcdFx0aWYgaW5uZXJIZWlnaHQgPT0gMjA0OFxuIyBcdFx0XHRcdGRldmljZSA9IFwiYXBwbGUtaXBhZC1wcm8tc2lsdmVyXCJcbiMgXHRcdFx0XHRGcmFtZXIuRGV2aWNlLmRldmljZVR5cGUgPSBcImZ1bGxzY3JlZW5cIlxuZXhwb3J0cy5nZXREZXZpY2UgPSAtPlxuXHQjIExvYWRzIHRoZSBpbml0aWFsIGZyYW1lXG5cdG5hbWVGb3JtYXR0ZXIgPSAobmFtZSkgLT5cblx0XHRyZW1vdmVUZXJtcyA9IFtcImFwcGxlLVwiLCBcIi1nb2xkXCIsIFwiLXNpbHZlclwiLCBcIi1yb3NlXCIsIFwiLXNwYWNlLWdyYXlcIiwgXCIteWVsbG93XCIsIFwiLWdyZWVuXCIsIFwiLXJlZFwiLCBcIi13aGl0ZVwiLCBcIi1ibHVlXCIsIFwiLW1pbmlcIiwgXCItYWlyXCIsIFwiLTJcIiwgXCItNFwiXVxuXHRcdGZvciB0ZXJtIGluIHJlbW92ZVRlcm1zXG5cdFx0XHRuYW1lID0gbmFtZS5yZXBsYWNlKHRlcm0sIFwiXCIpXG5cdFx0aWYgbmFtZS5pbmRleE9mKFwiLTVzXCIpICE9IC0xIHRoZW4gbmFtZSA9IG5hbWUucmVwbGFjZShcIi01c1wiLCBcIi01XCIpXG5cdFx0aWYgbmFtZS5pbmRleE9mKFwiLTVjXCIpICE9IC0xIHRoZW4gbmFtZSA9IG5hbWUucmVwbGFjZShcIi01Y1wiLCBcIi01XCIpXG5cdFx0cmV0dXJuIG5hbWVcblx0ZGV2aWNlID0gXCJcIlxuXHRmcmFtZSA9IHRydWVcblx0aWYgaW9zLmxpYi5yZWFsRGV2aWNlc1tpbm5lcldpZHRoXSAmJiBpb3MubGliLnJlYWxEZXZpY2VzW2lubmVyV2lkdGhdW2lubmVySGVpZ2h0XVxuXHRcdGRldmljZSA9IGlvcy5saWIucmVhbERldmljZXNbaW5uZXJXaWR0aF1baW5uZXJIZWlnaHRdXG5cdFx0ZnJhbWUgPSBmYWxzZVxuXHRcdEZyYW1lci5EZXZpY2UuZGV2aWNlVHlwZSA9IFwiZnVsbHNjcmVlblwiXG5cblx0aWYgZnJhbWVcblx0XHRkZXZpY2UgPVxuXHRcdFx0bmFtZTogbmFtZUZvcm1hdHRlcihGcmFtZXIuRGV2aWNlLmRldmljZVR5cGUpXG5cdFx0XHRkaXNwbGF5X25hbWUgOiAgRnJhbWVyLkRldmljZVZpZXcuRGV2aWNlc1tGcmFtZXIuRGV2aWNlLmRldmljZVR5cGVdLmRpc3BsYXlfbmFtZVxuXHRcdFx0d2lkdGggOiAgRnJhbWVyLkRldmljZVZpZXcuRGV2aWNlc1tGcmFtZXIuRGV2aWNlLmRldmljZVR5cGVdLnNjcmVlbldpZHRoXG5cdFx0XHRoZWlnaHQ6ICBGcmFtZXIuRGV2aWNlVmlldy5EZXZpY2VzW0ZyYW1lci5EZXZpY2UuZGV2aWNlVHlwZV0uc2NyZWVuSGVpZ2h0XG5cdFx0XHRzY2FsZTogaW9zLmxpYi5mcmFtZXJGcmFtZXNbRnJhbWVyLkRldmljZVZpZXcuRGV2aWNlc1tGcmFtZXIuRGV2aWNlLmRldmljZVR5cGVdLnNjcmVlbldpZHRoXVxuXG5cdGlmIGRldmljZS5zY2FsZSA9PSB1bmRlZmluZWRcblx0XHRkZXZpY2Uuc2NhbGUgPSAyXG5cdGlmIGRldmljZS53aWR0aCA9PSB1bmRlZmluZWRcblx0XHRkZXZpY2Uud2lkdGggPSBpbm5lcldpZHRoXG5cdGlmIGRldmljZS5oZWlnaHQgPT0gdW5kZWZpbmVkXG5cdFx0ZGV2aWNlLmhlaWdodCA9IGlubmVySGVpZ2h0XG5cblx0cmV0dXJuIGRldmljZVxuXG5cdGV4cG9ydHMuc2NhbGUgPSBpb3MubGliLmZyYW1lc1tkZXZpY2VdLnNjYWxlXG5cblx0aWYgZGV2aWNlID09IFwiZnVsbHNjcmVlblwiXG5cdFx0ZXhwb3J0cy53aWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoXG5cdFx0ZXhwb3J0cy5oZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHRcblx0ZWxzZVxuXHRcdGV4cG9ydHMud2lkdGggPSBpb3MubGliLmZyYW1lc1tkZXZpY2VdLndpZHRoXG5cdFx0ZXhwb3J0cy5oZWlnaHQgPSBpb3MubGliLmZyYW1lc1tkZXZpY2VdLmhlaWdodFxuXHRcdGlmIHdpbmRvdy5pbm5lcldpZHRoID09IDEyNDIgfHwgd2luZG93LmlubmVyV2lkdGggPT0gMjIwOFxuXHRcdFx0ZXhwb3J0cy53aWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoXG5cdFx0XHRleHBvcnRzLmhlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodFxuXHRcdFx0ZXhwb3J0cy5zY2FsZSA9IDNcblx0ZXhwb3J0cy5tb2JpbGUgPSBpb3MubGliLmZyYW1lc1tkZXZpY2VdLm1vYmlsZVxuXHRleHBvcnRzLnBsYXRmb3JtID0gaW9zLmxpYi5mcmFtZXNbZGV2aWNlXS5wbGF0Zm9ybVxuXHRleHBvcnRzLm9yaWVudGF0aW9uID0gIEZyYW1lci5EZXZpY2Uub3JpZW50YXRpb25cblxuXHQjIERldmljZSBTdHJpbmcgU2NydWJiZXJcblx0ZGV2aWNlID0gZGV2aWNlLnJlcGxhY2UoXCJhcHBsZS1cIiwgXCJcIilcblx0ZGV2aWNlID0gZGV2aWNlLnJlcGxhY2UoXCItZ29sZFwiLCBcIlwiKVxuXHRkZXZpY2UgPSBkZXZpY2UucmVwbGFjZShcIi1ncmVlblwiLCBcIlwiKVxuXHRkZXZpY2UgPSBkZXZpY2UucmVwbGFjZShcIi1ibHVlXCIsIFwiXCIpXG5cdGRldmljZSA9IGRldmljZS5yZXBsYWNlKFwiLXJlZFwiLCBcIlwiKVxuXHRkZXZpY2UgPSBkZXZpY2UucmVwbGFjZShcIi13aGl0ZVwiLCBcIlwiKVxuXHRkZXZpY2UgPSBkZXZpY2UucmVwbGFjZShcIi15ZWxsb3dcIiwgXCJcIilcblx0ZGV2aWNlID0gZGV2aWNlLnJlcGxhY2UoXCItcGlua1wiLCBcIlwiKVxuXHRkZXZpY2UgPSBkZXZpY2UucmVwbGFjZShcIi1zcGFjZS1ncmV5XCIsIFwiXCIpXG5cdGRldmljZSA9IGRldmljZS5yZXBsYWNlKFwiLXJvc2VcIiwgXCJcIilcblx0ZGV2aWNlID0gZGV2aWNlLnJlcGxhY2UoXCI1c1wiLCBcIjVcIilcblx0ZGV2aWNlID0gZGV2aWNlLnJlcGxhY2UoXCI1Y1wiLCBcIjVcIilcblx0ZGV2aWNlID0gZGV2aWNlLnJlcGxhY2UoXCItbWluaVwiLCBcIlwiKVxuXHRkZXZpY2UgPSBkZXZpY2UucmVwbGFjZShcIi1haXJcIiwgXCJcIilcblx0ZGV2aWNlID0gZGV2aWNlLnJlcGxhY2UoXCItMlwiLCBcIlwiKVxuXHRkZXZpY2UgPSBkZXZpY2UucmVwbGFjZShcIi00XCIsIFwiXCIpXG5cdGRldmljZSA9IGRldmljZS5yZXBsYWNlKFwiLXNpbHZlclwiLCBcIlwiKVxuXG5cdGNhcHR1cmVkRGV2aWNlLm5hbWUgPSBkZXZpY2VcblxuXHQjIGV4cG9ydHMuZGV2aWNlIGJlY29tZXMgZWl0aGVyIGlwYWQsIGlwYWQtcHJvLCBpcGhvbmUtNSwgaXBob25lLTZzLCBpcGhvbmUtNnMtcGx1c1xuXHRyZXR1cm4gY2FwdHVyZWREZXZpY2VcblxuXG4jIFNwZWNpYWwgQ2hhcmFjdGVyc1xuZXhwb3J0cy5zcGVjaWFsQ2hhciA9IChsYXllcikgLT5cblx0dGV4dCA9IGxheWVyXG5cdGlmIGxheWVyLnR5cGUgPT0gXCJidXR0b25cIiB0aGVuIHRleHQgPSBsYXllci5sYWJlbFxuXHRpZiB0ZXh0Lmh0bWwuaW5kZXhPZihcIi1iXCIpICE9IC0xXG5cdFx0bmV3VGV4dCA9IHRleHQuaHRtbC5yZXBsYWNlKFwiLWIgXCIsIFwiXCIpXG5cdFx0ZXhwb3J0cy51cGRhdGUodGV4dCwgW3t0ZXh0Om5ld1RleHR9LCB7Zm9udFdlaWdodDo2MDB9XSlcblx0aWYgdGV4dC5odG1sLmluZGV4T2YoXCItclwiKSAhPSAtMVxuXHRcdG5ld1RleHQgPSB0ZXh0Lmh0bWwucmVwbGFjZShcIi1yIFwiLCBcIlwiKVxuXHRcdGV4cG9ydHMudXBkYXRlKHRleHQsIFt7dGV4dDpuZXdUZXh0fSwge2NvbG9yOlwicmVkXCJ9XSlcblx0aWYgdGV4dC5odG1sLmluZGV4T2YoXCItcmJcIikgIT0gLTFcblx0XHRuZXdUZXh0ID0gdGV4dC5odG1sLnJlcGxhY2UoXCItcmIgXCIsIFwiXCIpXG5cdFx0ZXhwb3J0cy51cGRhdGUodGV4dCwgW3t0ZXh0Om5ld1RleHR9LCB7Y29sb3I6XCJibHVlXCJ9XSlcblx0aWYgdGV4dC5odG1sLmluZGV4T2YoXCItbGJcIikgIT0gLTFcblx0XHRuZXdUZXh0ID0gdGV4dC5odG1sLnJlcGxhY2UoXCItbGIgXCIsIFwiXCIpXG5cdFx0ZXhwb3J0cy51cGRhdGUodGV4dCwgW3t0ZXh0Om5ld1RleHR9LCB7Y29sb3I6XCJsaWdodC1ibHVlXCJ9XSlcblx0aWYgdGV4dC5odG1sLmluZGV4T2YoXCItZ1wiKSAhPSAtMVxuXHRcdG5ld1RleHQgPSB0ZXh0Lmh0bWwucmVwbGFjZShcIi1nIFwiLCBcIlwiKVxuXHRcdGV4cG9ydHMudXBkYXRlKHRleHQsIFt7dGV4dDpuZXdUZXh0fSwge2NvbG9yOlwiZ3JlZW5cIn1dKVxuXHRpZiB0ZXh0Lmh0bWwuaW5kZXhPZihcIi1vXCIpICE9IC0xXG5cdFx0bmV3VGV4dCA9IHRleHQuaHRtbC5yZXBsYWNlKFwiLW8gXCIsIFwiXCIpXG5cdFx0ZXhwb3J0cy51cGRhdGUodGV4dCwgW3t0ZXh0Om5ld1RleHR9LCB7Y29sb3I6XCJvcmFuZ2VcIn1dKVxuXHRpZiB0ZXh0Lmh0bWwuaW5kZXhPZihcIi1wXCIpICE9IC0xXG5cdFx0bmV3VGV4dCA9IHRleHQuaHRtbC5yZXBsYWNlKFwiLXAgXCIsIFwiXCIpXG5cdFx0ZXhwb3J0cy51cGRhdGUodGV4dCwgW3t0ZXh0Om5ld1RleHR9LCB7Y29sb3I6XCJvcmFuZ2VcIn1dKVxuXHRpZiB0ZXh0Lmh0bWwuaW5kZXhPZihcIi15XCIpICE9IC0xXG5cdFx0bmV3VGV4dCA9IHRleHQuaHRtbC5yZXBsYWNlKFwiLXkgXCIsIFwiXCIpXG5cdFx0ZXhwb3J0cy51cGRhdGUodGV4dCwgW3t0ZXh0Om5ld1RleHR9LCB7Y29sb3I6XCJ5ZWxsb3dcIn1dKVxuXHRpZiB0ZXh0Lmh0bWwuaW5kZXhPZihcIi0jXCIpICE9IC0xXG5cdFx0Y2hvc2VuQ29sb3IgPSB0ZXh0Lmh0bWwuc2xpY2UoMSwgOClcblx0XHRuZXdUZXh0ID0gdGV4dC5odG1sLnNsaWNlKDksIHRleHQuaHRtbC5sZW5ndGgpXG5cdFx0ZXhwb3J0cy51cGRhdGUodGV4dCwgW3t0ZXh0Om5ld1RleHR9LCB7Y29sb3I6Y2hvc2VuQ29sb3J9XSlcblx0aWYgdGV4dC5odG1sLmluZGV4T2YoXCItXCIpICE9IC0xXG5cdFx0bmV3VGV4dCA9IHRleHQuaHRtbC5yZXBsYWNlKFwiLSBcIiwgXCJcIilcblx0XHRleHBvcnRzLnVwZGF0ZSh0ZXh0LCBbe3RleHQ6bmV3VGV4dH1dKVxuXHRpZiBsYXllci5idXR0b25UeXBlID09IFwidGV4dFwiXG5cdFx0bGF5ZXIud2lkdGggPSB0ZXh0LndpZHRoXG5cdGlvcy5sYXlvdXQuc2V0KGxheWVyKVxuXHRpZiBsYXllci50eXBlID09IFwiYnV0dG9uXCIgdGhlbiBsYXllci53aWR0aCA9IHRleHQud2lkdGhcblx0cmV0dXJuIHRleHQuY29sb3JcblxuZXhwb3J0cy51cGRhdGUgPSAobGF5ZXIsIGFycmF5KSAtPlxuXHRpZiBhcnJheSA9PSB1bmRlZmluZWRcblx0XHRhcnJheSA9IFtdXG5cdGlmIGxheWVyLnR5cGUgPT0gXCJ0ZXh0XCJcblx0XHRmb3IgY2hhbmdlIGluIGFycmF5XG5cdFx0XHRrZXkgPSBPYmplY3Qua2V5cyhjaGFuZ2UpWzBdXG5cdFx0XHR2YWx1ZSA9IGNoYW5nZVtrZXldXG5cdFx0XHRpZiBrZXkgPT0gXCJ0ZXh0XCJcblx0XHRcdFx0bGF5ZXIuaHRtbCA9IHZhbHVlXG5cdFx0XHRpZiBrZXkgPT0gXCJmb250V2VpZ2h0XCJcblx0XHRcdFx0bGF5ZXIuc3R5bGVba2V5XSA9IHZhbHVlXG5cdFx0XHRpZiBrZXkgPT0gXCJjb2xvclwiXG5cdFx0XHRcdGxheWVyLmNvbG9yID0gZXhwb3J0cy5jb2xvcih2YWx1ZSlcblxuXHRcdHRleHRGcmFtZSA9IGV4cG9ydHMudGV4dEF1dG9TaXplKGxheWVyKVxuXHRcdGxheWVyLndpZHRoID0gdGV4dEZyYW1lLndpZHRoXG5cdFx0bGF5ZXIuaGVpZ2h0ID0gdGV4dEZyYW1lLmhlaWdodFxuXG5cblx0aW9zLmxheW91dC5zZXQoKVxuXG4jIERlY2lkZXMgaWYgaXQgc2hvdWxkIGJlIHdoaXRlL2JsYWNrIHRleHRcbmV4cG9ydHMuYXV0b0NvbG9yID0gKGNvbG9yT2JqZWN0KSAtPlxuXHRyZ2IgPSBjb2xvck9iamVjdC50b1JnYlN0cmluZygpXG5cdHJnYiA9IHJnYi5zdWJzdHJpbmcoNCwgcmdiLmxlbmd0aC0xKVxuXHRyZ2IgPSByZ2IucmVwbGFjZSgvIC9nLCAnJylcblx0cmdiID0gcmdiLnJlcGxhY2UoLyAvZywgJycpXG5cdHJnYiA9IHJnYi5zcGxpdCgnLCcpXG5cdHJlZCA9IHJnYlswXVxuXHRncmVlbiA9IHJnYlsxXVxuXHRibHVlID0gcmdiWzJdXG5cdGNvbG9yID0gXCJcIlxuXHRpZiAocmVkKjAuMjk5ICsgZ3JlZW4qMC41ODcgKyBibHVlKjAuMTE0KSA+IDE4NlxuXHRcdGNvbG9yID0gXCIjMDAwXCJcblx0ZWxzZVxuXHRcdGNvbG9yID0gXCIjRkZGXCJcblx0cmV0dXJuIGNvbG9yXG5cbmV4cG9ydHMuc2FtZVBhcmVudCA9IChsYXllcjEsIGxheWVyMikgLT5cblx0cGFyZW50T25lID0gbGF5ZXIxLnN1cGVyTGF5ZXJcblx0cGFyZW50VHdvID0gbGF5ZXIyLnN1cGVyTGF5ZXJcblx0aWYgcGFyZW50T25lID09IHBhcmVudFR3b1xuXHRcdHJldHVybiB0cnVlXG5cdGVsc2Vcblx0XHRyZXR1cm4gZmFsc2VcblxuXG5leHBvcnRzLnRpbWVEZWxlZ2F0ZSA9IChsYXllciwgY2xvY2tUeXBlKSAtPlxuXHRAdGltZSA9IGV4cG9ydHMuZ2V0VGltZSgpXG5cdFV0aWxzLmRlbGF5IDYwIC0gQHRpbWUuc2VjcywgLT5cblx0XHRAdGltZSA9IGV4cG9ydHMuZ2V0VGltZSgpXG5cdFx0ZXhwb3J0cy51cGRhdGUobGF5ZXIsIFt0ZXh0OmV4cG9ydHMudGltZUZvcm1hdHRlcihAdGltZSwgY2xvY2tUeXBlKV0pXG5cdFx0VXRpbHMuaW50ZXJ2YWwgNjAsIC0+XG5cdFx0XHRAdGltZSA9IGV4cG9ydHMuZ2V0VGltZSgpXG5cdFx0XHRleHBvcnRzLnVwZGF0ZShsYXllciwgW3RleHQ6ZXhwb3J0cy50aW1lRm9ybWF0dGVyKEB0aW1lLCBjbG9ja1R5cGUpXSlcblxuZXhwb3J0cy50aW1lRm9ybWF0dGVyID0gKHRpbWVPYmosIGNsb2NrVHlwZSkgLT5cblx0aWYgY2xvY2tUeXBlID09IGZhbHNlXG5cdFx0aWYgdGltZU9iai5ob3VycyA+IDEyXG5cdFx0XHR0aW1lT2JqLmhvdXJzID0gdGltZU9iai5ob3VycyAtIDEyXG5cdFx0aWYgdGltZU9iai5ob3VycyA9PSAwIHRoZW4gdGltZU9iai5ob3VycyA9IDEyXG5cdGlmIHRpbWVPYmoubWlucyA8IDEwXG5cdFx0dGltZU9iai5taW5zID0gXCIwXCIgKyB0aW1lT2JqLm1pbnNcblx0cmV0dXJuIHRpbWVPYmouaG91cnMgKyBcIjpcIiArIHRpbWVPYmoubWluc1xuXG5leHBvcnRzLnNldHVwQ29tcG9uZW50ID0gKGFycmF5LCBkZWZhdWx0cykgLT5cblx0aWYgYXJyYXkgPT0gdW5kZWZpbmVkXG5cdFx0YXJyYXkgPSBbXVxuXHRvYmogPSB7fVxuXHRmb3IgaSBpbiBkZWZhdWx0cy5wcm9wc1xuXHRcdGlmIGFycmF5W2ldICE9IHVuZGVmaW5lZFxuXHRcdFx0b2JqW2ldID0gYXJyYXlbaV1cblx0XHRlbHNlXG5cdFx0XHRvYmpbaV0gPSBkZWZhdWx0c1tpXVxuXHRyZXR1cm4gb2JqXG5cblxuZXhwb3J0cy5lbW9qaUZvcm1hdHRlciA9IChzdHJpbmcpIC0+XG5cdFx0dW5pY29kZUZvcm1hdCA9IFwiXCJcblx0XHRpZiBzdHJpbmdbMF0gPT0gXCJFXCIgfHwgc3RyaW5nWzBdID09IFwiM1wiIHx8IHN0cmluZ1swXSA9PSBcIjJcIiB8fCBzdHJpbmdbMF0gPT0gXCJDXCJcblx0XHRcdGFycmF5T2ZDb2RlcyA9IHN0cmluZy5zcGxpdChcIiBcIilcblx0XHRcdGZvciBjb2RlIGluIGFycmF5T2ZDb2Rlc1xuXHRcdFx0XHR1bmljb2RlRm9ybWF0ID0gdW5pY29kZUZvcm1hdCArIFwiJVwiICsgY29kZVxuXHRcdGVsc2Vcblx0XHRcdGFycmF5T2ZDb2RlcyA9IHN0cmluZy5zcGxpdChcIiBcIilcblx0XHRcdHVuaWNvZGVGb3JtYXQgPSBcIiVGMCU5RlwiXG5cdFx0XHRmb3IgY29kZSBpbiBhcnJheU9mQ29kZXNcblx0XHRcdFx0dW5pY29kZUZvcm1hdCA9IHVuaWNvZGVGb3JtYXQgKyBcIiVcIiArIGNvZGVcblx0XHRkZWNvZGVkID0gZGVjb2RlVVJJQ29tcG9uZW50KHVuaWNvZGVGb3JtYXQpXG5cdFx0cmV0dXJuIGRlY29kZWRcblxuZXhwb3J0cy5idWlsZEVtb2ppc09iamVjdCA9ICgpIC0+XG5cdGVtb2ppcyA9IFtdXG5cdGZvciBjb2RlLCBpbmRleCBpbiBpb3MuYXNzZXRzLmVtb2ppQ29kZXNcblx0XHRlbW9qaSA9IGV4cG9ydHMuZW1vamlGb3JtYXR0ZXIoY29kZSlcblx0XHRlbW9qaXMucHVzaCBlbW9qaVxuXG5leHBvcnRzLndyaXRlID0gKG9iaiwgdGV4dCkgLT5cblx0aWYgb2JqLnR5cGUgPT0gJ2ZpZWxkJ1xuXHRcdG9iai50ZXh0Lmh0bWwgPSBvYmoudGV4dC5odG1sICsgdGV4dFxuXHRlbHNlXG5cdFx0b2JqLmh0bWwgPSBvYmouaHRtbCArIHRleHRcbiIsImlvcyA9IHJlcXVpcmUgJ2lvcy1raXQnXG5cblxuZXhwb3J0cy5kZWZhdWx0cyA9XG5cdGVkaXRhYmxlOnRydWVcblx0Y29uc3RyYWludHM6dW5kZWZpbmVkXG5cdHRleHQ6IFwiaU9TIFRleHQgTGF5ZXJcIlxuXHR0eXBlOlwidGV4dFwiXG5cdHg6MFxuXHR5OjBcblx0d2lkdGg6LTFcblx0aGVpZ2h0Oi0xXG5cdHN1cGVyTGF5ZXI6dW5kZWZpbmVkXG5cdHN0eWxlOlwiZGVmYXVsdFwiXG5cdGxpbmVzOjFcblx0dGV4dEFsaWduOlwibGVmdFwiXG5cdGJhY2tncm91bmRDb2xvcjpcInRyYW5zcGFyZW50XCJcblx0Y29sb3I6XCJibGFja1wiXG5cdGZvbnRTaXplOiAxN1xuXHRmb250RmFtaWx5OlwiLWFwcGxlLXN5c3RlbSwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZlwiXG5cdGZvbnRXZWlnaHQ6XCJyZWd1bGFyXCJcblx0bGluZUhlaWdodDpcImF1dG9cIlxuXHRuYW1lOlwidGV4dCBsYXllclwiXG5cdG9wYWNpdHk6MVxuXHR0ZXh0VHJhbnNmb3JtOlwibm9uZVwiXG5cdGxldHRlclNwYWNpbmc6MFxuXHRuYW1lOlwidGV4dCBsYXllclwiXG5cdHNlbGVjdGFibGU6dHJ1ZVxuXHRzZWxlY3RDb2xvcjpcInJnYmEoMCwgMTE4LCAyNTUsIC4yKVwiXG5cdHNlbGVjdENvbnRyb2xzOlwiIzAwNzZGRlwiXG5cbmV4cG9ydHMuZGVmYXVsdHMucHJvcHMgPSBPYmplY3Qua2V5cyhleHBvcnRzLmRlZmF1bHRzKVxuXG5cbmV4cG9ydHMuY3JlYXRlID0gKGFycmF5KSAtPlxuXHRzZXR1cCA9IGlvcy51dGlscy5zZXR1cENvbXBvbmVudChhcnJheSwgZXhwb3J0cy5kZWZhdWx0cylcblx0ZXhjZXB0aW9ucyA9IE9iamVjdC5rZXlzKHNldHVwKVxuXG5cdHRleHRMYXllciA9IG5ldyBpb3MuVmlld1xuXHRcdGJhY2tncm91bmRDb2xvcjpcInRyYW5zcGFyZW50XCJcblx0XHRuYW1lOnNldHVwLm5hbWVcblx0XHRzdXBlckxheWVyOnNldHVwLnN1cGVyTGF5ZXJcblx0XHRjb25zdHJhaW50czpzZXR1cC5jb25zdHJhaW50c1xuXG5cdHRleHRMYXllci50eXBlID0gXCJ0ZXh0XCJcblx0dGV4dExheWVyLmh0bWwgPSBzZXR1cC50ZXh0XG5cdGZvciBwcm9wIGluIGlvcy5saWIubGF5ZXJQcm9wc1xuXHRcdGlmIHNldHVwW3Byb3BdXG5cdFx0XHRpZiBwcm9wID09IFwiY29sb3JcIlxuXHRcdFx0XHRzZXR1cFtwcm9wXSA9IGlvcy51dGlscy5jb2xvcihzZXR1cFtwcm9wXSlcblx0XHRcdHRleHRMYXllcltwcm9wXSA9IHNldHVwW3Byb3BdXG5cdGZvciBwcm9wIGluIGlvcy5saWIubGF5ZXJTdHlsZXNcblx0XHRpZiBzZXR1cFtwcm9wXVxuXHRcdFx0aWYgcHJvcCA9PSBcImxpbmVIZWlnaHRcIiAmJiBzZXR1cFtwcm9wXSA9PSBcImF1dG9cIlxuXHRcdFx0XHR0ZXh0TGF5ZXIuc3R5bGUubGluZUhlaWdodCA9ICBzZXR1cC5mb250U2l6ZVxuXHRcdFx0aWYgcHJvcCA9PSBcImZvbnRXZWlnaHRcIlxuXHRcdFx0XHRzd2l0Y2ggc2V0dXBbcHJvcF1cblx0XHRcdFx0XHR3aGVuIFwidWx0cmF0aGluXCIgdGhlbiBzZXR1cFtwcm9wXSA9IDEwMFxuXHRcdFx0XHRcdHdoZW4gXCJ0aGluXCIgdGhlbiBzZXR1cFtwcm9wXSA9IDIwMFxuXHRcdFx0XHRcdHdoZW4gXCJsaWdodFwiIHRoZW4gc2V0dXBbcHJvcF0gPSAzMDBcblx0XHRcdFx0XHR3aGVuIFwicmVndWxhclwiIHRoZW4gc2V0dXBbcHJvcF0gPSA0MDBcblx0XHRcdFx0XHR3aGVuIFwibWVkaXVtXCIgdGhlbiBzZXR1cFtwcm9wXSA9IDUwMFxuXHRcdFx0XHRcdHdoZW4gXCJzZW1pYm9sZFwiIHRoZW4gc2V0dXBbcHJvcF0gPSA2MDBcblx0XHRcdFx0XHR3aGVuIFwiYm9sZFwiIHRoZW4gc2V0dXBbcHJvcF0gPSA3MDBcblx0XHRcdFx0XHR3aGVuIFwiYmxhY2tcIiB0aGVuIHNldHVwW3Byb3BdID0gODAwXG5cdFx0XHRpZiBwcm9wID09IFwiZm9udFNpemVcIiB8fCBwcm9wID09IFwibGluZUhlaWdodFwiIHx8IHByb3AgPT0gXCJsZXR0ZXJTcGFjaW5nXCJcblx0XHRcdFx0c2V0dXBbcHJvcF0gPSBpb3MudXRpbHMucHgoc2V0dXBbcHJvcF0pICsgXCJweFwiXG5cdFx0XHR0ZXh0TGF5ZXIuc3R5bGVbcHJvcF0gPSBzZXR1cFtwcm9wXVxuXG5cdHRleHRGcmFtZSA9IGlvcy51dGlscy50ZXh0QXV0b1NpemUodGV4dExheWVyKVxuXHR0ZXh0TGF5ZXIucHJvcHMgPSAoaGVpZ2h0OnRleHRGcmFtZS5oZWlnaHQsIHdpZHRoOnRleHRGcmFtZS53aWR0aClcblxuXHRpZiBzZXR1cC5lZGl0YWJsZVxuXHRcdHRleHRMYXllci5vbiBcImNoYW5nZTpodG1sXCIsIC0+XG5cdFx0XHR0ZXh0RnJhbWUgPSBpb3MudXRpbHMudGV4dEF1dG9TaXplKHRleHRMYXllcilcblx0XHRcdHRleHRMYXllci5wcm9wcyA9IChoZWlnaHQ6dGV4dEZyYW1lLmhlaWdodCwgd2lkdGg6dGV4dEZyYW1lLndpZHRoKVxuXG5cblx0aW9zLmxheW91dC5zZXRcblx0XHR0YXJnZXQ6dGV4dExheWVyXG5cdHJldHVybiB0ZXh0TGF5ZXJcbiIsImlvcyA9IHJlcXVpcmUgJ2lvcy1raXQnXG5cblxuZXhwb3J0cy5kZWZhdWx0cyA9XG4gIGtleTpcInZhbHVlXCJcblxuZXhwb3J0cy5kZWZhdWx0cy5wcm9wcyA9IE9iamVjdC5rZXlzKGV4cG9ydHMuZGVmYXVsdHMpXG5cbmV4cG9ydHMuY3JlYXRlID0gKGFycmF5KSAtPlxuICBzZXR1cCA9IGlvcy51dGlscy5zZXR1cENvbXBvbmVudChhcnJheSwgZXhwb3J0cy5kZWZhdWx0cylcbiAgcmV0dXJuXG4iLCJpb3MgPSByZXF1aXJlICdpb3Mta2l0J1xuXG5leHBvcnRzLmRlZmF1bHRzID0ge1xuXHR0YWI6IHtcblx0XHRsYWJlbDogXCJsYWJlbFwiXG5cdFx0aWNvbjpcIjw/eG1sIHZlcnNpb249JzEuMCcgZW5jb2Rpbmc9J1VURi04JyBzdGFuZGFsb25lPSdubyc/PlxuXHRcdFx0PHN2ZyB3aWR0aD0nMjVweCcgaGVpZ2h0PScyNXB4JyB2aWV3Qm94PScwIDAgMjUgMjUnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+XG5cdFx0XHRcdDwhLS0gR2VuZXJhdG9yOiBTa2V0Y2ggMy42LjEgKDI2MzEzKSAtIGh0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaCAtLT5cblx0XHRcdFx0PHRpdGxlPjE8L3RpdGxlPlxuXHRcdFx0XHQ8ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz5cblx0XHRcdFx0PGRlZnM+PC9kZWZzPlxuXHRcdFx0XHQ8ZyBpZD0nUGFnZS0xJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJyBmaWxsLW9wYWNpdHk9JzEnPlxuXHRcdFx0XHRcdDxnIGlkPSdCb3R0b20tQmFyL1RhYi1CYXInIHRyYW5zZm9ybT0ndHJhbnNsYXRlKC0yNS4wMDAwMDAsIC03LjAwMDAwMCknIGZpbGw9JyMwMDc2RkYnPlxuXHRcdFx0XHRcdFx0PGcgaWQ9J1BsYWNlaG9sZGVycycgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMjUuMDAwMDAwLCA3LjAwMDAwMCknPlxuXHRcdFx0XHRcdFx0XHQ8cmVjdCBpZD0nMScgeD0nMCcgeT0nMCcgd2lkdGg9JzI1JyBoZWlnaHQ9JzI1JyByeD0nMyc+PC9yZWN0PlxuXHRcdFx0XHRcdFx0PC9nPlxuXHRcdFx0XHRcdDwvZz5cblx0XHRcdFx0PC9nPlxuXHRcdFx0PC9zdmc+XCJcblx0XHRhY3RpdmU6IHVuZGVmaW5lZFxuXHRcdGluYWN0aXZlOiB1bmRlZmluZWRcblx0XHR0YWJCYXI6IHVuZGVmaW5lZFxuXHRcdHR5cGU6IFwidGFiXCJcblx0fVxuXHRiYXI6IHtcblx0XHR0YWJzOiBbXVxuXHRcdHN0YXJ0OjBcblx0XHR0eXBlOlwidGFiQmFyXCJcblx0XHRiYWNrZ3JvdW5kQ29sb3I6XCJ3aGl0ZVwiXG5cdFx0YWN0aXZlQ29sb3I6XCJibHVlXCJcblx0XHRpbmFjdGl2ZUNvbG9yOlwiZ3JheVwiXG5cdFx0Ymx1cjp0cnVlXG5cdH1cbn1cblxuZXhwb3J0cy5kZWZhdWx0cy50YWIucHJvcHMgPSBPYmplY3Qua2V5cyhleHBvcnRzLmRlZmF1bHRzLnRhYilcbmV4cG9ydHMuZGVmYXVsdHMuYmFyLnByb3BzID0gT2JqZWN0LmtleXMoZXhwb3J0cy5kZWZhdWx0cy5iYXIpXG5cbmV4cG9ydHMudGFiID0gKGFycmF5KSAtPlxuXHRzZXR1cCA9IGlvcy51dGlscy5zZXR1cENvbXBvbmVudChhcnJheSwgZXhwb3J0cy5kZWZhdWx0cy50YWIpXG5cdHNwZWNzID1cblx0XHR3aWR0aDogNzVcblxuXHRzd2l0Y2ggaW9zLmRldmljZS5uYW1lXG5cdFx0d2hlbiBcImlwaG9uZS01XCJcblx0XHRcdHNwZWNzLndpZHRoID0gNTVcblxuXHR0YWIgPSBuZXcgaW9zLlZpZXdcblx0XHRiYWNrZ3JvdW5kQ29sb3I6XCJ0cmFuc3BhcmVudFwiXG5cdFx0bmFtZTpzZXR1cC5sYWJlbFxuXHRcdGNvbnN0cmFpbnRzOlxuXHRcdFx0d2lkdGg6c3BlY3Mud2lkdGhcblx0XHRcdGhlaWdodDo0OVxuXG5cdHRhYi52aWV3ID0gbmV3IGlvcy5WaWV3XG5cdFx0bmFtZTpzZXR1cC5sYWJlbCArIFwiLnZpZXdcIlxuXHRcdGJhY2tncm91bmRDb2xvcjpcInRyYW5zcGFyZW50XCJcblx0XHRjb25zdHJhaW50czpcblx0XHRcdHRvcDowXG5cdFx0XHRib3R0b206MFxuXHRcdFx0bGVhZGluZzowXG5cdFx0XHR0cmFpbGluZzowXG5cblx0IyBDcmVhdGUgQWN0aXZlXG5cdHRhYi5hY3RpdmUgPSBuZXcgaW9zLlZpZXdcblx0XHRuYW1lOlwiLmFjdGl2ZVwiXG5cdFx0YmFja2dyb3VuZENvbG9yOlwidHJhbnNwYXJlbnRcIlxuXHRcdGNvbnN0cmFpbnRzOlxuXHRcdFx0dG9wOjBcblx0XHRcdGJvdHRvbTowXG5cdFx0XHRsZWFkaW5nOjBcblx0XHRcdHRyYWlsaW5nOjBcblx0XHRzdXBlckxheWVyOnRhYlxuXG5cdHRhYi5hY3RpdmUuaWNvbiA9IG5ldyBpb3MuVmlld1xuXHRcdG5hbWU6XCIuYWN0aXZlLmljb25cIlxuXHRcdGNvbnN0cmFpbnRzOlxuXHRcdFx0d2lkdGg6MjVcblx0XHRcdGhlaWdodDoyNVxuXHRcdFx0YWxpZ246XCJob3Jpem9udGFsXCJcblx0XHRcdHRvcDo3XG5cdFx0YmFja2dyb3VuZENvbG9yOlwidHJhbnNwYXJlbnRcIlxuXHRcdHN1cGVyTGF5ZXI6dGFiLmFjdGl2ZVxuXHRpZiBzZXR1cC5hY3RpdmUgPT0gdW5kZWZpbmVkXG5cdFx0c3ZnRnJhbWUgPSBpb3MudXRpbHMuc3ZnKHNldHVwLmljb24pXG5cdFx0dGFiLmFjdGl2ZS5pY29uLmh0bWwgPSBzdmdGcmFtZS5zdmdcblx0XHR0YWIuYWN0aXZlLmljb24ud2lkdGggPSBzdmdGcmFtZS53aWR0aFxuXHRcdHRhYi5hY3RpdmUuaWNvbi5oZWlnaHQgPSBzdmdGcmFtZS5oZWlnaHRcblx0ZWxzZVxuXHRcdHNldHVwLmFjdGl2ZS5zdXBlckxheWVyID0gdGFiLmFjdGl2ZS5pY29uXG5cdFx0c2V0dXAuYWN0aXZlLnByb3BzID1cblx0XHRcdHdpZHRoOnRhYi5hY3RpdmUuaWNvbi53aWR0aFxuXHRcdFx0aGVpZ2h0OnRhYi5hY3RpdmUuaWNvbi5oZWlnaHRcblxuXHQjIENyZWF0ZSBJbmFjdGl2ZVxuXHR0YWIuaW5hY3RpdmUgPSBuZXcgaW9zLlZpZXdcblx0XHRiYWNrZ3JvdW5kQ29sb3I6XCJ0cmFuc3BhcmVudFwiXG5cdFx0bmFtZTpcIi5pbmFjdGl2ZVwiXG5cdFx0Y29uc3RyYWludHM6XG5cdFx0XHR0b3A6MFxuXHRcdFx0Ym90dG9tOjBcblx0XHRcdGxlYWRpbmc6MFxuXHRcdFx0dHJhaWxpbmc6MFxuXHRcdHN1cGVyTGF5ZXI6dGFiXG5cblx0dGFiLmluYWN0aXZlLmljb24gPSBuZXcgaW9zLlZpZXdcblx0XHRjb25zdHJhaW50czpcblx0XHRcdHdpZHRoOjI1XG5cdFx0XHRoZWlnaHQ6MjVcblx0XHRcdGFsaWduOlwiaG9yaXpvbnRhbFwiXG5cdFx0XHR0b3A6N1xuXHRcdGJhY2tncm91bmRDb2xvcjpcInRyYW5zcGFyZW50XCJcblx0XHRuYW1lOlwiLmluYWN0aXZlLmljb25cIlxuXHRcdHN1cGVyTGF5ZXI6dGFiLmluYWN0aXZlXG5cblx0dGFiLmxhYmVsID0gbmV3IGlvcy5UZXh0XG5cdFx0dGV4dDpzZXR1cC5sYWJlbFxuXHRcdHN1cGVyTGF5ZXI6dGFiXG5cdFx0Y29sb3I6XCIjOTI5MjkyXCJcblx0XHRmb250U2l6ZToxMFxuXHRcdG5hbWU6XCIubGFiZWxcIlxuXHRcdHRleHRUcmFuc2Zvcm06XCJjYXBpdGFsaXplXCJcblxuXHR0YWIubGFiZWwuY29uc3RyYWludHMgPVxuXHRcdGJvdHRvbToyXG5cdFx0aG9yaXpvbnRhbENlbnRlcjp0YWIuYWN0aXZlLmljb25cblxuXHRpZiBzZXR1cC5pbmFjdGl2ZSA9PSB1bmRlZmluZWRcblx0XHRzdmdGcmFtZSA9IGlvcy51dGlscy5zdmcoc2V0dXAuaWNvbilcblx0XHR0YWIuaW5hY3RpdmUuaWNvbi5odG1sID0gc3ZnRnJhbWUuc3ZnXG5cdFx0dGFiLmluYWN0aXZlLmljb24ud2lkdGggPSBzdmdGcmFtZS53aWR0aFxuXHRcdHRhYi5pbmFjdGl2ZS5pY29uLmhlaWdodCA9IHN2Z0ZyYW1lLmhlaWdodFxuXG5cdGVsc2Vcblx0XHRzZXR1cC5pbmFjdGl2ZS5zdXBlckxheWVyID0gdGFiLmluYWN0aXZlLmljb25cblx0XHRzZXR1cC5pbmFjdGl2ZS5wcm9wcyA9XG5cdFx0XHR3aWR0aDp0YWIuaW5hY3RpdmUuaWNvbi53aWR0aFxuXHRcdFx0aGVpZ2h0OnRhYi5pbmFjdGl2ZS5pY29uLmhlaWdodFxuXG5cdHJldHVybiB0YWJcblxuZXhwb3J0cy5iYXIgPSAoYXJyYXkpIC0+XG5cdHNldHVwID0gaW9zLnV0aWxzLnNldHVwQ29tcG9uZW50KGFycmF5LCBleHBvcnRzLmRlZmF1bHRzLmJhcilcblxuXHQjIElmIG5vIHRhYnMsIG1ha2UgZHVtbXkgdGFic1xuXHRpZiBzZXR1cC50YWJzLmxlbmd0aCA9PSAwXG5cdFx0ZHVtbXlUYWIgPSBuZXcgZXhwb3J0cy50YWJcblx0XHRkdW1teVRhYjIgPSBuZXcgZXhwb3J0cy50YWJcblx0XHRzZXR1cC50YWJzLnB1c2ggZHVtbXlUYWJcblx0XHRzZXR1cC50YWJzLnB1c2ggZHVtbXlUYWIyXG5cblx0c3BlY3MgPVxuXHRcdHdpZHRoOiA3NVxuXHRzd2l0Y2ggaW9zLmRldmljZS5uYW1lXG5cdFx0d2hlbiBcImlwaG9uZS01XCJcblx0XHRcdHNwZWNzLndpZHRoID0gNTVcblxuXHRiYXIgPSBuZXcgaW9zLlZpZXdcblx0XHRiYWNrZ3JvdW5kQ29sb3I6XCJ0cmFuc3BhcmVudFwiXG5cdFx0bmFtZTpcInRhYkJhclwiXG5cdFx0Y29uc3RyYWludHM6XG5cdFx0XHRsZWFkaW5nOjBcblx0XHRcdHRyYWlsaW5nOjBcblx0XHRcdGJvdHRvbTowXG5cdFx0XHRoZWlnaHQ6NDlcblxuXHRiYXIuYmcgPSBuZXcgaW9zLlZpZXdcblx0XHRzdXBlckxheWVyOmJhclxuXHRcdG5hbWU6XCIuYmdcIlxuXHRcdGNvbnN0cmFpbnRzOlxuXHRcdFx0bGVhZGluZzowXG5cdFx0XHR0cmFpbGluZzowXG5cdFx0XHRib3R0b206MFxuXHRcdFx0aGVpZ2h0OjQ5XG5cblx0YmFyLmRpdmlkZXIgPSBuZXcgaW9zLlZpZXdcblx0XHRiYWNrZ3JvdW5kQ29sb3I6XCIjQjJCMkIyXCJcblx0XHRuYW1lOlwiLmRpdmlkZXJcIlxuXHRcdHN1cGVyTGF5ZXI6YmFyXG5cdFx0Y29uc3RyYWludHM6XG5cdFx0XHR0b3A6MFxuXHRcdFx0bGVhZGluZzowXG5cdFx0XHR0cmFpbGluZzowXG5cdFx0XHRoZWlnaHQ6LjVcblx0YmFyLmJveCA9IG5ldyBpb3MuVmlld1xuXHRcdHN1cGVyTGF5ZXI6YmFyXG5cdFx0YmFja2dyb3VuZENvbG9yOlwidHJhbnNwYXJlbnRcIlxuXHRcdG5hbWU6XCIuYm94XCJcblx0XHRjb25zdHJhaW50czpcblx0XHRcdGhlaWdodDo0OVxuXHRcdFx0d2lkdGg6c2V0dXAudGFicy5sZW5ndGggKiBzcGVjcy53aWR0aFxuXG5cblx0c2V0QWN0aXZlID0gKHRhYkluZGV4KSAtPlxuXHRcdGZvciB0YWIsIGluZGV4IGluIHNldHVwLnRhYnNcblx0XHRcdGlmIGluZGV4ID09IHRhYkluZGV4XG5cdFx0XHRcdHRhYi5sYWJlbC5jb2xvciA9IGlvcy51dGlscy5jb2xvcihzZXR1cC5hY3RpdmVDb2xvcilcblx0XHRcdFx0dGFiLmFjdGl2ZS52aXNpYmxlID0gdHJ1ZVxuXHRcdFx0XHR0YWIuaW5hY3RpdmUudmlzaWJsZSA9IGZhbHNlXG5cdFx0XHRcdHRhYi52aWV3LnZpc2libGUgPSB0cnVlXG5cdFx0XHRlbHNlXG5cdFx0XHRcdHRhYi5sYWJlbC5jb2xvciA9IGlvcy51dGlscy5jb2xvcihzZXR1cC5pbmFjdGl2ZUNvbG9yKVxuXHRcdFx0XHR0YWIuYWN0aXZlLnZpc2libGUgPSBmYWxzZVxuXHRcdFx0XHR0YWIuaW5hY3RpdmUudmlzaWJsZSA9IHRydWVcblx0XHRcdFx0dGFiLnZpZXcudmlzaWJsZSA9IGZhbHNlXG5cblxuXHRmb3IgdGFiLCBpbmRleCBpbiBzZXR1cC50YWJzXG5cdFx0I0NoZWNrIGZvciB2YWlsZCB0YWIgb2JqZWN0XG5cdFx0YmFyLmJveC5hZGRTdWJMYXllcih0YWIpXG5cdFx0IyBDaGFuZ2UgY29sb3JzXG5cdFx0aW9zLnV0aWxzLmNoYW5nZUZpbGwodGFiLmFjdGl2ZS5pY29uLCBpb3MudXRpbHMuY29sb3Ioc2V0dXAuYWN0aXZlQ29sb3IpKVxuXHRcdGlvcy51dGlscy5jaGFuZ2VGaWxsKHRhYi5pbmFjdGl2ZS5pY29uLCBpb3MudXRpbHMuY29sb3Ioc2V0dXAuaW5hY3RpdmVDb2xvcikpXG5cdFx0dGFiLmxhYmVsLmNvbG9yID0gaW9zLnV0aWxzLmNvbG9yKHNldHVwLmluYWN0aXZlQ29sb3IpXG5cdFx0YmFyLmJnLmJhY2tncm91bmRDb2xvciA9IHNldHVwLmJhY2tncm91bmRDb2xvclxuXG5cdFx0aWYgc2V0dXAuYmx1clxuXHRcdFx0YmFyLmJnLmJhY2tncm91bmRDb2xvciA9IFwicmdiYSgyNTUsMjU1LDI1NSwgLjkpXCJcblx0XHRcdGlvcy51dGlscy5iZ0JsdXIoYmFyLmJnKVxuXG5cdFx0aWYgaW5kZXggPT0gMFxuXHRcdFx0dGFiLmNvbnN0cmFpbnRzLmxlYWRpbmcgPSAwXG5cdFx0ZWxzZVxuXHRcdFx0dGFiLmNvbnN0cmFpbnRzLmxlYWRpbmcgPSBzZXR1cC50YWJzW2luZGV4IC0gMV1cblxuXHRcdGlvcy5sYXlvdXQuc2V0KHRhYilcblxuXHRcdHRhYi5vbiBFdmVudHMuVG91Y2hTdGFydCwgLT5cblx0XHRcdHRhYkluZGV4ID0gQC54IC8gaW9zLnV0aWxzLnB4KHNwZWNzLndpZHRoKVxuXHRcdFx0c2V0QWN0aXZlKHRhYkluZGV4KVxuXG5cdGJhci5ib3guY29uc3RyYWludHMgPVxuXHRcdGFsaWduOlwiaG9yaXpvbnRhbFwiXG5cblx0aW9zLmxheW91dC5zZXQoYmFyLmJveClcblx0c2V0QWN0aXZlKHNldHVwLnN0YXJ0KVxuXG5cdGJhci50YWJzID0gc2V0dXAudGFic1xuXG5cdHJldHVybiBiYXJcbiIsInZhciBpb3M7XG5cbmlvcyA9IHJlcXVpcmUoJ2lvcy1raXQnKTtcblxuZXhwb3J0cy5kZWZhdWx0cyA9IHtcbiAgY2FycmllcjogXCJWb2RhZm9uZVJPXCIsXG4gIG5ldHdvcms6IFwiNEdcIixcbiAgYmF0dGVyeTogODAsXG4gIHNpZ25hbDogNSxcbiAgc3R5bGU6IFwiZGFya1wiLFxuICBjbG9jazI0OiBmYWxzZSxcbiAgdHlwZTogXCJzdGF0dXNCYXJcIixcbiAgc3VwZXJMYXllcjogdm9pZCAwXG59O1xuXG5leHBvcnRzLmRlZmF1bHRzLnByb3BzID0gT2JqZWN0LmtleXMoZXhwb3J0cy5kZWZhdWx0cyk7XG5cbmV4cG9ydHMuY3JlYXRlID0gZnVuY3Rpb24oYXJyYXkpIHtcbiAgdmFyIGJhdHRlcnlJY29uLCBiYXR0ZXJ5UGVyY2VudCwgYmx1ZXRvb3RoLCBibHVldG9vdGhTVkcsIGNhcnJpZXIsIGRvdCwgZ3JpcHBlciwgaGlnaEJhdHRlcnksIGksIGosIGssIGwsIGxheWVyLCBsZW4sIGxvd0JhdHRlcnksIG1pZEJhdHRlcnksIG5ldHdvcmssIG5ldHdvcmtJY29uLCBub05ldHdvcmssIG5vbkRvdCwgbm9uRG90cywgcmVmLCByZWYxLCByZWYyLCBzZXR1cCwgc2lnbmFsLCBzdGF0dXNCYXIsIHRpbWU7XG4gIHNldHVwID0gaW9zLnV0aWxzLnNldHVwQ29tcG9uZW50KGFycmF5LCBleHBvcnRzLmRlZmF1bHRzKTtcbiAgc3RhdHVzQmFyID0gbmV3IExheWVyKHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IFwidHJhbnNwYXJlbnRcIixcbiAgICBuYW1lOiBcInN0YXR1c0Jhci5hbGxcIixcbiAgICBzdXBlckxheWVyOiBzZXR1cC5zdXBlckxheWVyXG4gIH0pO1xuICBzdGF0dXNCYXIudHlwZSA9IHNldHVwLnR5cGU7XG4gIHN0YXR1c0Jhci5jb25zdHJhaW50cyA9IHtcbiAgICBsZWFkaW5nOiAwLFxuICAgIHRyYWlsaW5nOiAwLFxuICAgIGhlaWdodDogMjBcbiAgfTtcbiAgc3dpdGNoIChpb3MuZGV2aWNlLm5hbWUpIHtcbiAgICBjYXNlIFwiaXBob25lLTZzLXBsdXNcIjpcbiAgICAgIHRoaXMudG9wQ29uc3RyYWludCA9IDU7XG4gICAgICB0aGlzLmJhdHRlcnlJY29uID0gNTtcbiAgICAgIHRoaXMuYmx1ZXRvb3RoID0gNTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJmdWxsc2NyZWVuXCI6XG4gICAgICB0aGlzLnRvcENvbnN0cmFpbnQgPSA1O1xuICAgICAgdGhpcy5iYXR0ZXJ5SWNvbiA9IC0xMjtcbiAgICAgIHRoaXMuYmx1ZXRvb3RoID0gLTEwO1xuICAgICAgYnJlYWs7XG4gICAgZGVmYXVsdDpcbiAgICAgIHRoaXMudG9wQ29uc3RyYWludCA9IDM7XG4gICAgICB0aGlzLmJhdHRlcnlJY29uID0gLTU7XG4gICAgICB0aGlzLmJsdWV0b290aCA9IC01O1xuICB9XG4gIGlmIChzZXR1cC5zdHlsZSA9PT0gXCJsaWdodFwiKSB7XG4gICAgdGhpcy5jb2xvciA9IFwid2hpdGVcIjtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLmNvbG9yID0gXCJibGFja1wiO1xuICB9XG4gIHJlZiA9IEZyYW1lci5DdXJyZW50Q29udGV4dC5sYXllcnM7XG4gIGZvciAoaiA9IDAsIGxlbiA9IHJlZi5sZW5ndGg7IGogPCBsZW47IGorKykge1xuICAgIGxheWVyID0gcmVmW2pdO1xuICAgIGlmIChsYXllci50eXBlID09PSBcImxvY2tTY3JlZW5cIikge1xuICAgICAgdGhpcy5pc0xvY2tTY3JlZW5QdXRpbHNlbnQgPSB0cnVlO1xuICAgIH1cbiAgfVxuICBpZiAodGhpcy5pc0xvY2tTY3JlZW5QdXRpbHNlbnQpIHtcbiAgICBncmlwcGVyID0gbmV3IExheWVyKHtcbiAgICAgIHN1cGVyTGF5ZXI6IHN0YXR1c0JhcixcbiAgICAgIHdpZHRoOiB1dGlscy5weCgzNyksXG4gICAgICBoZWlnaHQ6IHV0aWxzLnB4KDUpLFxuICAgICAgbmFtZTogXCJncmlwcGVyXCIsXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwidHJhbnNwYXJlbnRcIixcbiAgICAgIG9wYWNpdHk6IC41LFxuICAgICAgbmFtZTogXCJncmlwcGVyXCJcbiAgICB9KTtcbiAgICBncmlwcGVyLmh0bWwgPSBcIjw/eG1sIHZlcnNpb249JzEuMCcgZW5jb2Rpbmc9J1VURi04JyBzdGFuZGFsb25lPSdubyc/PiA8c3ZnIHdpZHRoPSdcIiArICh1dGlscy5weCgzNykpICsgXCJweCcgaGVpZ2h0PSdcIiArICh1dGlscy5weCg1KSkgKyBcInB4JyB2aWV3Qm94PScwIDAgMzcgNScgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJz4gPCEtLSBHZW5lcmF0b3I6IFNrZXRjaCAzLjYuMSAoMjYzMTMpIC0gaHR0cDovL3d3dy5ib2hlbWlhbmNvZGluZy5jb20vc2tldGNoIC0tPiA8dGl0bGU+R3JpcHBlcjwvdGl0bGU+IDxkZXNjPkNyZWF0ZWQgd2l0aCBTa2V0Y2guPC9kZXNjPiA8ZGVmcz48L2RlZnM+IDxnIGlkPSdQYWdlLTEnIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnPiA8ZyBpZD0nS2V5Ym9hcmQvQXV0by1Db21wbGV0ZS1CYXItQ2xvc2VkJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtMTY5LjAwMDAwMCwgLTIuMDAwMDAwKScgZmlsbD0nI0ZGRkZGRic+IDxyZWN0IGlkPSdHcmlwcGVyJyB4PScxNjkuNScgeT0nMi41JyB3aWR0aD0nMzYnIGhlaWdodD0nNCcgcng9JzIuNSc+PC9yZWN0PiA8L2c+IDwvZz4gPC9zdmc+XCI7XG4gICAgZ3JpcHBlci5jb25zdHJhaW50cyA9IHtcbiAgICAgIGFsaWduOiBcImhvcml6b250YWxcIixcbiAgICAgIHRvcDogMlxuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgdGhpcy50aW1lID0gaW9zLnV0aWxzLmdldFRpbWUoKTtcbiAgICBpZiAoc2V0dXAuY2xvY2syNCA9PT0gZmFsc2UpIHtcbiAgICAgIGlmICh0aGlzLnRpbWUuaG91cnMgPiAxMSkge1xuICAgICAgICB0aGlzLnRpbWUuc3RhbXAgPSBcIlBNXCI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnRpbWUuc3RhbXAgPSBcIkFNXCI7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMudGltZS5zdGFtcCA9IFwiXCI7XG4gICAgfVxuICAgIHRpbWUgPSBuZXcgaW9zLlRleHQoe1xuICAgICAgc3R5bGU6IFwic3RhdHVzQmFyVGltZVwiLFxuICAgICAgdGV4dDogaW9zLnV0aWxzLnRpbWVGb3JtYXR0ZXIodGhpcy50aW1lLCBzZXR1cC5jbG9jazI0KSArIFwiIFwiICsgdGhpcy50aW1lLnN0YW1wLFxuICAgICAgZm9udFNpemU6IDEyLFxuICAgICAgZm9udFdlaWdodDogXCJzZW1pYm9sZFwiLFxuICAgICAgc3VwZXJMYXllcjogc3RhdHVzQmFyLFxuICAgICAgY29sb3I6IHRoaXMuY29sb3IsXG4gICAgICBuYW1lOiBcInRpbWVcIlxuICAgIH0pO1xuICAgIHRpbWUuY29uc3RyYWludHMgPSB7XG4gICAgICBhbGlnbjogXCJob3Jpem9udGFsXCIsXG4gICAgICB0b3A6IHRoaXMudG9wQ29uc3RyYWludFxuICAgIH07XG4gIH1cbiAgc2lnbmFsID0gW107XG4gIGlmIChzZXR1cC5zaWduYWwgPCAxKSB7XG4gICAgbm9OZXR3b3JrID0gbmV3IGlvcy5UZXh0KHtcbiAgICAgIHN1cGVyTGF5ZXI6IHN0YXR1c0JhcixcbiAgICAgIGZvbnRTaXplOiAxMixcbiAgICAgIHRleHQ6IFwiTm8gTmV0d29ya1wiXG4gICAgfSk7XG4gICAgbm9OZXR3b3JrLmNvbnN0cmFpbnRzID0ge1xuICAgICAgbGVhZGluZzogNyxcbiAgICAgIHZlcnRpY2FsQ2VudGVyOiB0aW1lXG4gICAgfTtcbiAgfSBlbHNlIHtcbiAgICBmb3IgKGkgPSBrID0gMCwgcmVmMSA9IHNldHVwLnNpZ25hbDsgMCA8PSByZWYxID8gayA8IHJlZjEgOiBrID4gcmVmMTsgaSA9IDAgPD0gcmVmMSA/ICsrayA6IC0taykge1xuICAgICAgZG90ID0gbmV3IExheWVyKHtcbiAgICAgICAgaGVpZ2h0OiBpb3MudXRpbHMucHgoNS41KSxcbiAgICAgICAgd2lkdGg6IGlvcy51dGlscy5weCg1LjUpLFxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwiYmxhY2tcIixcbiAgICAgICAgc3VwZXJMYXllcjogc3RhdHVzQmFyLFxuICAgICAgICBib3JkZXJSYWRpdXM6IGlvcy51dGlscy5weCg1LjUpIC8gMixcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGlzLmNvbG9yLFxuICAgICAgICBuYW1lOiBcInNpZ25hbFtcIiArIGkgKyBcIl1cIlxuICAgICAgfSk7XG4gICAgICBpZiAoaSA9PT0gMCkge1xuICAgICAgICBkb3QuY29uc3RyYWludHMgPSB7XG4gICAgICAgICAgbGVhZGluZzogNyxcbiAgICAgICAgICB2ZXJ0aWNhbENlbnRlcjogdGltZVxuICAgICAgICB9O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZG90LmNvbnN0cmFpbnRzID0ge1xuICAgICAgICAgIGxlYWRpbmc6IFtzaWduYWxbaSAtIDFdLCAxXSxcbiAgICAgICAgICB2ZXJ0aWNhbENlbnRlcjogdGltZVxuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgc2lnbmFsLnB1c2goZG90KTtcbiAgICAgIGlvcy5sYXlvdXQuc2V0KCk7XG4gICAgfVxuICAgIGlmIChzZXR1cC5zaWduYWwgPCA1KSB7XG4gICAgICBub25Eb3RzID0gNSAtIHNldHVwLnNpZ25hbDtcbiAgICAgIGZvciAoaSA9IGwgPSAwLCByZWYyID0gbm9uRG90czsgMCA8PSByZWYyID8gbCA8IHJlZjIgOiBsID4gcmVmMjsgaSA9IDAgPD0gcmVmMiA/ICsrbCA6IC0tbCkge1xuICAgICAgICBub25Eb3QgPSBuZXcgTGF5ZXIoe1xuICAgICAgICAgIGhlaWdodDogaW9zLnV0aWxzLnB4KDUuNSksXG4gICAgICAgICAgd2lkdGg6IGlvcy51dGlscy5weCg1LjUpLFxuICAgICAgICAgIHN1cGVyTGF5ZXI6IHN0YXR1c0JhcixcbiAgICAgICAgICBib3JkZXJSYWRpdXM6IGlvcy51dGlscy5weCg1LjUpIC8gMixcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwidHJhbnNwYXJlbnRcIixcbiAgICAgICAgICBuYW1lOiBcInNpZ25hbFtcIiArIHNpZ25hbC5sZW5ndGggKyBcIl1cIlxuICAgICAgICB9KTtcbiAgICAgICAgbm9uRG90LnN0eWxlLmJvcmRlciA9IChpb3MudXRpbHMucHgoMSkpICsgXCJweCBzb2xpZCBcIiArIHRoaXMuY29sb3I7XG4gICAgICAgIG5vbkRvdC5jb25zdHJhaW50cyA9IHtcbiAgICAgICAgICBsZWFkaW5nOiBbc2lnbmFsW3NpZ25hbC5sZW5ndGggLSAxXSwgMV0sXG4gICAgICAgICAgdmVydGljYWxDZW50ZXI6IHRpbWVcbiAgICAgICAgfTtcbiAgICAgICAgc2lnbmFsLnB1c2gobm9uRG90KTtcbiAgICAgICAgaW9zLmxheW91dC5zZXQoKTtcbiAgICAgIH1cbiAgICB9XG4gICAgY2FycmllciA9IG5ldyBpb3MuVGV4dCh7XG4gICAgICBzdHlsZTogXCJzdGF0dXNCYXJDYXJyaWVyXCIsXG4gICAgICB0ZXh0OiBzZXR1cC5jYXJyaWVyLFxuICAgICAgc3VwZXJMYXllcjogc3RhdHVzQmFyLFxuICAgICAgZm9udFNpemU6IDEyLFxuICAgICAgY29sb3I6IHRoaXMuY29sb3IsXG4gICAgICBuYW1lOiBcImNhcnJpZXJcIixcbiAgICAgIHRleHRUcmFuc2Zvcm06IFwiY2FwaXRhbGl6ZVwiXG4gICAgfSk7XG4gICAgY2Fycmllci5jb25zdHJhaW50cyA9IHtcbiAgICAgIGxlYWRpbmc6IFtzaWduYWxbc2lnbmFsLmxlbmd0aCAtIDFdLCA3XSxcbiAgICAgIHZlcnRpY2FsQ2VudGVyOiB0aW1lXG4gICAgfTtcbiAgICBpb3MubGF5b3V0LnNldCgpO1xuICAgIGlmIChzZXR1cC5jYXJyaWVyKSB7XG4gICAgICBuZXR3b3JrID0gbmV3IGlvcy5UZXh0KHtcbiAgICAgICAgc3R5bGU6IFwic3RhdHVzQmFyTmV0d29ya1wiLFxuICAgICAgICB0ZXh0OiBzZXR1cC5uZXR3b3JrLFxuICAgICAgICBzdXBlckxheWVyOiBzdGF0dXNCYXIsXG4gICAgICAgIGZvbnRTaXplOiAxMixcbiAgICAgICAgY29sb3I6IHRoaXMuY29sb3IsXG4gICAgICAgIG5hbWU6IFwibmV0d29ya1wiLFxuICAgICAgICB0ZXh0VHJhbnNmb3JtOiBcInVwcGVyY2FzZVwiXG4gICAgICB9KTtcbiAgICAgIG5ldHdvcmsuY29uc3RyYWludHMgPSB7XG4gICAgICAgIGxlYWRpbmc6IFtjYXJyaWVyLCA1XSxcbiAgICAgICAgdmVydGljYWxDZW50ZXI6IHRpbWVcbiAgICAgIH07XG4gICAgfVxuICAgIGlmIChzZXR1cC5jYXJyaWVyID09PSBcIlwiIHx8IHNldHVwLmNhcnJpZXIgPT09IFwid2lmaVwiKSB7XG4gICAgICBuZXR3b3JrSWNvbiA9IGlvcy51dGlscy5zdmcoaW9zLmFzc2V0cy5uZXR3b3JrLCB0aGlzLmNvbG9yKTtcbiAgICAgIG5ldHdvcmsgPSBuZXcgTGF5ZXIoe1xuICAgICAgICB3aWR0aDogbmV0d29ya0ljb24ud2lkdGgsXG4gICAgICAgIGhlaWdodDogbmV0d29ya0ljb24uaGVpZ2h0LFxuICAgICAgICBzdXBlckxheWVyOiBzdGF0dXNCYXIsXG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogXCJ0cmFuc3BhcmVudFwiLFxuICAgICAgICBuYW1lOiBcIm5ldHdvcmtcIlxuICAgICAgfSk7XG4gICAgICBuZXR3b3JrLmh0bWwgPSBuZXR3b3JrSWNvbi5zdmc7XG4gICAgICBpb3MudXRpbHMuY2hhbmdlRmlsbChuZXR3b3JrLCB0aGlzLmNvbG9yKTtcbiAgICAgIG5ldHdvcmsuY29uc3RyYWludHMgPSB7XG4gICAgICAgIGxlYWRpbmc6IFtzaWduYWxbc2lnbmFsLmxlbmd0aCAtIDFdLCA1XSxcbiAgICAgICAgdmVydGljYWxDZW50ZXI6IHRpbWVcbiAgICAgIH07XG4gICAgfVxuICB9XG4gIGJhdHRlcnlJY29uID0gbmV3IExheWVyKHtcbiAgICB3aWR0aDogaW9zLnV0aWxzLnB4KDI1KSxcbiAgICBoZWlnaHQ6IGlvcy51dGlscy5weCgxMCksXG4gICAgc3VwZXJMYXllcjogc3RhdHVzQmFyLFxuICAgIGJhY2tncm91bmRDb2xvcjogXCJ0cmFuc3BhcmVudFwiLFxuICAgIG5hbWU6IFwiYmF0dGVyeUljb25cIlxuICB9KTtcbiAgaWYgKHNldHVwLmJhdHRlcnkgPiA3MCkge1xuICAgIGhpZ2hCYXR0ZXJ5ID0gaW9zLnV0aWxzLnN2Zyhpb3MuYXNzZXRzLmJhdHRlcnlIaWdoKTtcbiAgICBiYXR0ZXJ5SWNvbi5odG1sID0gaGlnaEJhdHRlcnkuc3ZnO1xuICAgIGlvcy51dGlscy5jaGFuZ2VGaWxsKGJhdHRlcnlJY29uLCB0aGlzLmNvbG9yKTtcbiAgfVxuICBpZiAoc2V0dXAuYmF0dGVyeSA8PSA3MCAmJiBzZXR1cC5iYXR0ZXJ5ID4gMjApIHtcbiAgICBtaWRCYXR0ZXJ5ID0gaW9zLnV0aWxzLnN2Zyhpb3MuYXNzZXRzLmJhdHRlcnlNaWQpO1xuICAgIGJhdHRlcnlJY29uLmh0bWwgPSBtaWRCYXR0ZXJ5LnN2ZztcbiAgICBpb3MudXRpbHMuY2hhbmdlRmlsbChiYXR0ZXJ5SWNvbiwgdGhpcy5jb2xvcik7XG4gIH1cbiAgaWYgKHNldHVwLmJhdHRlcnkgPD0gMjApIHtcbiAgICBsb3dCYXR0ZXJ5ID0gaW9zLnV0aWxzLnN2Zyhpb3MuYXNzZXRzLmJhdHRlcnlMb3cpO1xuICAgIGJhdHRlcnlJY29uLmh0bWwgPSBsb3dCYXR0ZXJ5LnN2ZztcbiAgICBpb3MudXRpbHMuY2hhbmdlRmlsbChiYXR0ZXJ5SWNvbiwgdGhpcy5jb2xvcik7XG4gIH1cbiAgYmF0dGVyeUljb24uY29uc3RyYWludHMgPSB7XG4gICAgdHJhaWxpbmc6IDcsXG4gICAgdG9wOiB0aGlzLmJhdHRlcnlJY29uXG4gIH07XG4gIGJhdHRlcnlQZXJjZW50ID0gbmV3IGlvcy5UZXh0KHtcbiAgICBzdHlsZTogXCJzdGF0dXNCYXJCYXR0ZXJ5UGVyY2VudFwiLFxuICAgIHRleHQ6IHNldHVwLmJhdHRlcnkgKyBcIiVcIixcbiAgICBzdXBlckxheWVyOiBzdGF0dXNCYXIsXG4gICAgZm9udFNpemU6IDEyLFxuICAgIGNvbG9yOiB0aGlzLmNvbG9yLFxuICAgIG5hbWU6IFwiYmF0dGVyeVBlcmNlbnRcIlxuICB9KTtcbiAgYmF0dGVyeVBlcmNlbnQuY29uc3RyYWludHMgPSB7XG4gICAgdHJhaWxpbmc6IFtiYXR0ZXJ5SWNvbiwgM10sXG4gICAgdmVydGljYWxDZW50ZXI6IHRpbWVcbiAgfTtcbiAgYmx1ZXRvb3RoU1ZHID0gaW9zLnV0aWxzLnN2Zyhpb3MuYXNzZXRzLmJsdWV0b290aCk7XG4gIGJsdWV0b290aCA9IG5ldyBMYXllcih7XG4gICAgd2lkdGg6IGJsdWV0b290aFNWRy53aWR0aCxcbiAgICBoZWlnaHQ6IGJsdWV0b290aFNWRy5oZWlnaHQsXG4gICAgc3VwZXJMYXllcjogc3RhdHVzQmFyLFxuICAgIG9wYWNpdHk6IC41LFxuICAgIGJhY2tncm91bmRDb2xvcjogXCJ0cmFuc3BhcmVudFwiLFxuICAgIG5hbWU6IFwiYmx1ZXRvb3RoXCJcbiAgfSk7XG4gIGJsdWV0b290aC5odG1sID0gYmx1ZXRvb3RoU1ZHLnN2ZztcbiAgaW9zLnV0aWxzLmNoYW5nZUZpbGwoYmx1ZXRvb3RoLCB0aGlzLmNvbG9yKTtcbiAgYmx1ZXRvb3RoLmNvbnN0cmFpbnRzID0ge1xuICAgIHRvcDogdGhpcy5ibHVldG9vdGgsXG4gICAgdHJhaWxpbmc6IFtiYXR0ZXJ5UGVyY2VudCwgN11cbiAgfTtcbiAgaW9zLmxheW91dC5zZXQoKTtcbiAgc3RhdHVzQmFyLmJhdHRlcnkgPSB7fTtcbiAgc3RhdHVzQmFyLmJhdHRlcnkucGVyY2VudCA9IGJhdHRlcnlQZXJjZW50O1xuICBzdGF0dXNCYXIuYmF0dGVyeS5pY29uID0gYmF0dGVyeUljb247XG4gIHN0YXR1c0Jhci5ibHVldG9vdGggPSBibHVldG9vdGg7XG4gIHN0YXR1c0Jhci50aW1lID0gdGltZTtcbiAgc3RhdHVzQmFyLm5ldHdvcmsgPSBuZXR3b3JrO1xuICBzdGF0dXNCYXIuY2FycmllciA9IGNhcnJpZXI7XG4gIHN0YXR1c0Jhci5zaWduYWwgPSBzaWduYWw7XG4gIHJldHVybiBzdGF0dXNCYXI7XG59O1xuIiwiaW9zID0gcmVxdWlyZSAnaW9zLWtpdCdcblxuZXhwb3J0cy5kZWZhdWx0cyA9IHtcblx0Y2FycmllcjpcIlZvZGFmb25lUk9cIlxuXHRuZXR3b3JrOlwiNEdcIlxuXHRiYXR0ZXJ5OiA4MFxuXHRzaWduYWw6NVxuXHRzdHlsZTpcImRhcmtcIlxuXHRjbG9jazI0OmZhbHNlXG5cdHR5cGU6XCJzdGF0dXNCYXJcIlxuXHRzdXBlckxheWVyOnVuZGVmaW5lZFxufVxuXG5leHBvcnRzLmRlZmF1bHRzLnByb3BzID0gT2JqZWN0LmtleXMoZXhwb3J0cy5kZWZhdWx0cylcblxuZXhwb3J0cy5jcmVhdGUgPSAoYXJyYXkpIC0+XG5cdHNldHVwID0gaW9zLnV0aWxzLnNldHVwQ29tcG9uZW50KGFycmF5LCBleHBvcnRzLmRlZmF1bHRzKVxuXHRzdGF0dXNCYXIgPSBuZXcgTGF5ZXJcblx0XHRiYWNrZ3JvdW5kQ29sb3I6XCJ0cmFuc3BhcmVudFwiXG5cdFx0bmFtZTpcInN0YXR1c0Jhci5hbGxcIlxuXHRcdHN1cGVyTGF5ZXI6c2V0dXAuc3VwZXJMYXllclxuXHRzdGF0dXNCYXIudHlwZSA9IHNldHVwLnR5cGVcblx0c3RhdHVzQmFyLmNvbnN0cmFpbnRzID1cblx0XHRsZWFkaW5nOjBcblx0XHR0cmFpbGluZzowXG5cdFx0aGVpZ2h0OjIwXG5cblx0c3dpdGNoIGlvcy5kZXZpY2UubmFtZVxuXHRcdHdoZW4gXCJpcGhvbmUtNnMtcGx1c1wiXG5cdFx0XHRAdG9wQ29uc3RyYWludCA9IDVcblx0XHRcdEBiYXR0ZXJ5SWNvbiA9IDVcblx0XHRcdEBibHVldG9vdGggPSA1XG5cblx0XHR3aGVuIFwiZnVsbHNjcmVlblwiXG5cdFx0XHRAdG9wQ29uc3RyYWludCA9IDVcblx0XHRcdEBiYXR0ZXJ5SWNvbiA9IC0gMTJcblx0XHRcdEBibHVldG9vdGggPSAtIDEwXG5cdFx0ZWxzZVxuXHRcdFx0QHRvcENvbnN0cmFpbnQgPSAzXG5cdFx0XHRAYmF0dGVyeUljb24gPSAtNVxuXHRcdFx0QGJsdWV0b290aCA9IC01XG5cblx0aWYgc2V0dXAuc3R5bGUgPT0gXCJsaWdodFwiXG5cdFx0QGNvbG9yID0gXCJ3aGl0ZVwiXG5cdGVsc2Vcblx0XHRAY29sb3IgPSBcImJsYWNrXCJcblx0Zm9yIGxheWVyIGluIEZyYW1lci5DdXJyZW50Q29udGV4dC5sYXllcnNcblx0XHRpZiBsYXllci50eXBlID09IFwibG9ja1NjcmVlblwiXG5cdFx0XHRAaXNMb2NrU2NyZWVuUHV0aWxzZW50ID0gdHJ1ZVxuXHRpZiBAaXNMb2NrU2NyZWVuUHV0aWxzZW50XG5cdFx0Z3JpcHBlciA9IG5ldyBMYXllciBzdXBlckxheWVyOnN0YXR1c0Jhciwgd2lkdGg6dXRpbHMucHgoMzcpLCBoZWlnaHQ6dXRpbHMucHgoNSksIG5hbWU6XCJncmlwcGVyXCIsIGJhY2tncm91bmRDb2xvcjpcInRyYW5zcGFyZW50XCIsIG9wYWNpdHk6LjUsIG5hbWU6XCJncmlwcGVyXCJcblx0XHRncmlwcGVyLmh0bWwgPSBcIjw/eG1sIHZlcnNpb249JzEuMCcgZW5jb2Rpbmc9J1VURi04JyBzdGFuZGFsb25lPSdubyc/PlxuXHRcdFx0PHN2ZyB3aWR0aD0nI3t1dGlscy5weCgzNyl9cHgnIGhlaWdodD0nI3t1dGlscy5weCg1KX1weCcgdmlld0JveD0nMCAwIDM3IDUnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+XG5cdFx0XHRcdDwhLS0gR2VuZXJhdG9yOiBTa2V0Y2ggMy42LjEgKDI2MzEzKSAtIGh0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaCAtLT5cblx0XHRcdFx0PHRpdGxlPkdyaXBwZXI8L3RpdGxlPlxuXHRcdFx0XHQ8ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz5cblx0XHRcdFx0PGRlZnM+PC9kZWZzPlxuXHRcdFx0XHQ8ZyBpZD0nUGFnZS0xJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJz5cblx0XHRcdFx0XHQ8ZyBpZD0nS2V5Ym9hcmQvQXV0by1Db21wbGV0ZS1CYXItQ2xvc2VkJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtMTY5LjAwMDAwMCwgLTIuMDAwMDAwKScgZmlsbD0nI0ZGRkZGRic+XG5cdFx0XHRcdFx0XHQ8cmVjdCBpZD0nR3JpcHBlcicgeD0nMTY5LjUnIHk9JzIuNScgd2lkdGg9JzM2JyBoZWlnaHQ9JzQnIHJ4PScyLjUnPjwvcmVjdD5cblx0XHRcdFx0XHQ8L2c+XG5cdFx0XHRcdDwvZz5cblx0XHRcdDwvc3ZnPlwiXG5cdFx0Z3JpcHBlci5jb25zdHJhaW50cyA9XG5cdFx0XHRhbGlnbjpcImhvcml6b250YWxcIlxuXHRcdFx0dG9wOjJcblx0ZWxzZVxuXHRcdEB0aW1lID0gaW9zLnV0aWxzLmdldFRpbWUoKVxuXHRcdGlmIHNldHVwLmNsb2NrMjQgPT0gZmFsc2Vcblx0XHRcdGlmIEB0aW1lLmhvdXJzID4gMTFcblx0XHRcdFx0QHRpbWUuc3RhbXAgPSBcIlBNXCJcblx0XHRcdGVsc2Vcblx0XHRcdFx0QHRpbWUuc3RhbXAgPSBcIkFNXCJcblx0XHRlbHNlXG5cdFx0XHRAdGltZS5zdGFtcCA9IFwiXCJcblx0XHR0aW1lID0gbmV3IGlvcy5UZXh0IHN0eWxlOlwic3RhdHVzQmFyVGltZVwiLCB0ZXh0Omlvcy51dGlscy50aW1lRm9ybWF0dGVyKEB0aW1lLCBzZXR1cC5jbG9jazI0KSArIFwiIFwiICsgQHRpbWUuc3RhbXAsIGZvbnRTaXplOjEyLCBmb250V2VpZ2h0Olwic2VtaWJvbGRcIiwgc3VwZXJMYXllcjpzdGF0dXNCYXIsIGNvbG9yOkBjb2xvciwgbmFtZTpcInRpbWVcIlxuXHRcdHRpbWUuY29uc3RyYWludHMgPVxuXHRcdFx0YWxpZ246XCJob3Jpem9udGFsXCJcblx0XHRcdHRvcDpAdG9wQ29uc3RyYWludFxuXG5cdHNpZ25hbCA9IFtdXG5cdGlmIHNldHVwLnNpZ25hbCA8IDFcblx0XHRub05ldHdvcmsgPSBuZXcgaW9zLlRleHQgc3VwZXJMYXllcjpzdGF0dXNCYXIsIGZvbnRTaXplOjEyLCB0ZXh0OlwiTm8gTmV0d29ya1wiXG5cdFx0bm9OZXR3b3JrLmNvbnN0cmFpbnRzID1cblx0XHRcdGxlYWRpbmc6N1xuXHRcdFx0IyB0b3A6M1xuXHRcdFx0dmVydGljYWxDZW50ZXI6IHRpbWVcblx0ZWxzZVxuXHRcdGZvciBpIGluIFswLi4uc2V0dXAuc2lnbmFsXVxuXHRcdFx0ZG90ID0gbmV3IExheWVyIGhlaWdodDppb3MudXRpbHMucHgoNS41KSwgd2lkdGg6aW9zLnV0aWxzLnB4KDUuNSksIGJhY2tncm91bmRDb2xvcjpcImJsYWNrXCIsIHN1cGVyTGF5ZXI6c3RhdHVzQmFyLCBib3JkZXJSYWRpdXM6aW9zLnV0aWxzLnB4KDUuNSkvMiwgYmFja2dyb3VuZENvbG9yOkBjb2xvciwgbmFtZTpcInNpZ25hbFsje2l9XVwiXG5cdFx0XHRpZiBpID09IDBcblx0XHRcdFx0ZG90LmNvbnN0cmFpbnRzID1cblx0XHRcdFx0XHRsZWFkaW5nOjdcblx0XHRcdFx0XHQjIHRvcDozXG5cdFx0XHRcdFx0dmVydGljYWxDZW50ZXI6IHRpbWVcblx0XHRcdGVsc2Vcblx0XHRcdFx0ZG90LmNvbnN0cmFpbnRzID1cblx0XHRcdFx0XHRsZWFkaW5nOltzaWduYWxbaSAtIDEgXSwgMV1cblx0XHRcdFx0XHQjIHRvcDozXG5cdFx0XHRcdFx0dmVydGljYWxDZW50ZXI6IHRpbWVcblx0XHRcdHNpZ25hbC5wdXNoIGRvdFxuXHRcdFx0aW9zLmxheW91dC5zZXQoKVxuXHRcdGlmIHNldHVwLnNpZ25hbCA8IDVcblx0XHRcdG5vbkRvdHMgPSA1IC0gc2V0dXAuc2lnbmFsXG5cdFx0XHRmb3IgaSBpbiBbMC4uLm5vbkRvdHNdXG5cdFx0XHRcdG5vbkRvdCA9IG5ldyBMYXllciBoZWlnaHQ6aW9zLnV0aWxzLnB4KDUuNSksIHdpZHRoOmlvcy51dGlscy5weCg1LjUpLCBzdXBlckxheWVyOnN0YXR1c0JhciwgYm9yZGVyUmFkaXVzOmlvcy51dGlscy5weCg1LjUpLzIsIGJhY2tncm91bmRDb2xvcjpcInRyYW5zcGFyZW50XCIsIG5hbWU6XCJzaWduYWxbI3tzaWduYWwubGVuZ3RofV1cIlxuXHRcdFx0XHRub25Eb3Quc3R5bGUuYm9yZGVyID0gXCIje2lvcy51dGlscy5weCgxKX1weCBzb2xpZCAje0Bjb2xvcn1cIlxuXHRcdFx0XHRub25Eb3QuY29uc3RyYWludHMgPVxuXHRcdFx0XHRcdGxlYWRpbmc6W3NpZ25hbFtzaWduYWwubGVuZ3RoIC0gMV0sIDFdXG5cdFx0XHRcdFx0IyB0b3A6M1xuXHRcdFx0XHRcdHZlcnRpY2FsQ2VudGVyOiB0aW1lXG5cdFx0XHRcdHNpZ25hbC5wdXNoIG5vbkRvdFxuXHRcdFx0XHRpb3MubGF5b3V0LnNldCgpXG5cdFx0Y2FycmllciA9IG5ldyBpb3MuVGV4dCBzdHlsZTpcInN0YXR1c0JhckNhcnJpZXJcIiwgdGV4dDpzZXR1cC5jYXJyaWVyLCBzdXBlckxheWVyOnN0YXR1c0JhciwgZm9udFNpemU6MTIsIGNvbG9yOkBjb2xvciwgbmFtZTpcImNhcnJpZXJcIiwgdGV4dFRyYW5zZm9ybTpcImNhcGl0YWxpemVcIlxuXHRcdGNhcnJpZXIuY29uc3RyYWludHMgPVxuXHRcdFx0bGVhZGluZzpbc2lnbmFsW3NpZ25hbC5sZW5ndGggLSAxXSwgN11cblx0XHRcdCMgdG9wOjNcblx0XHRcdHZlcnRpY2FsQ2VudGVyOiB0aW1lXG5cdFx0aW9zLmxheW91dC5zZXQoKVxuXHRcdGlmIHNldHVwLmNhcnJpZXJcblx0XHRcdG5ldHdvcmsgPSBuZXcgaW9zLlRleHQgc3R5bGU6XCJzdGF0dXNCYXJOZXR3b3JrXCIsIHRleHQ6c2V0dXAubmV0d29yaywgc3VwZXJMYXllcjpzdGF0dXNCYXIsIGZvbnRTaXplOjEyLCBjb2xvcjpAY29sb3IsIG5hbWU6XCJuZXR3b3JrXCIsIHRleHRUcmFuc2Zvcm06XCJ1cHBlcmNhc2VcIlxuXHRcdFx0bmV0d29yay5jb25zdHJhaW50cyA9XG5cdFx0XHRcdGxlYWRpbmc6W2NhcnJpZXIsIDVdXG5cdFx0XHRcdCMgdG9wOjNcblx0XHRcdFx0dmVydGljYWxDZW50ZXI6IHRpbWVcblxuXHRcdGlmIHNldHVwLmNhcnJpZXIgPT0gXCJcIiB8fCBzZXR1cC5jYXJyaWVyID09IFwid2lmaVwiXG5cdFx0XHRuZXR3b3JrSWNvbiA9IGlvcy51dGlscy5zdmcoaW9zLmFzc2V0cy5uZXR3b3JrLCBAY29sb3IpXG5cdFx0XHRuZXR3b3JrID0gbmV3IExheWVyIHdpZHRoOm5ldHdvcmtJY29uLndpZHRoLCBoZWlnaHQ6bmV0d29ya0ljb24uaGVpZ2h0LCBzdXBlckxheWVyOnN0YXR1c0JhciwgYmFja2dyb3VuZENvbG9yOlwidHJhbnNwYXJlbnRcIiwgbmFtZTpcIm5ldHdvcmtcIlxuXHRcdFx0bmV0d29yay5odG1sID0gbmV0d29ya0ljb24uc3ZnXG5cdFx0XHRpb3MudXRpbHMuY2hhbmdlRmlsbChuZXR3b3JrLCBAY29sb3IpXG5cdFx0XHRuZXR3b3JrLmNvbnN0cmFpbnRzID1cblx0XHRcdFx0bGVhZGluZzpbc2lnbmFsW3NpZ25hbC5sZW5ndGggLSAxXSwgNV1cblx0XHRcdFx0IyB0b3A6QHRvcENvbnN0cmFpbnRcblx0XHRcdFx0dmVydGljYWxDZW50ZXI6IHRpbWVcblxuXHRiYXR0ZXJ5SWNvbiA9IG5ldyBMYXllciB3aWR0aDppb3MudXRpbHMucHgoMjUpLCBoZWlnaHQ6aW9zLnV0aWxzLnB4KDEwKSwgc3VwZXJMYXllcjpzdGF0dXNCYXIsIGJhY2tncm91bmRDb2xvcjpcInRyYW5zcGFyZW50XCIsIG5hbWU6XCJiYXR0ZXJ5SWNvblwiXG5cdGlmIHNldHVwLmJhdHRlcnkgPiA3MFxuXHRcdGhpZ2hCYXR0ZXJ5ID0gaW9zLnV0aWxzLnN2Zyhpb3MuYXNzZXRzLmJhdHRlcnlIaWdoKVxuXHRcdGJhdHRlcnlJY29uLmh0bWwgPSBoaWdoQmF0dGVyeS5zdmdcblx0XHRpb3MudXRpbHMuY2hhbmdlRmlsbChiYXR0ZXJ5SWNvbiwgQGNvbG9yKVxuXG5cdGlmIHNldHVwLmJhdHRlcnkgPD0gNzAgJiYgc2V0dXAuYmF0dGVyeSA+IDIwXG5cdFx0bWlkQmF0dGVyeSA9IGlvcy51dGlscy5zdmcoaW9zLmFzc2V0cy5iYXR0ZXJ5TWlkKVxuXHRcdGJhdHRlcnlJY29uLmh0bWwgPSBtaWRCYXR0ZXJ5LnN2Z1xuXHRcdGlvcy51dGlscy5jaGFuZ2VGaWxsKGJhdHRlcnlJY29uLCBAY29sb3IpXG5cblx0aWYgc2V0dXAuYmF0dGVyeSA8PSAyMFxuXHRcdGxvd0JhdHRlcnkgPSBpb3MudXRpbHMuc3ZnKGlvcy5hc3NldHMuYmF0dGVyeUxvdylcblx0XHRiYXR0ZXJ5SWNvbi5odG1sID0gbG93QmF0dGVyeS5zdmdcblx0XHRpb3MudXRpbHMuY2hhbmdlRmlsbChiYXR0ZXJ5SWNvbiwgQGNvbG9yKVxuXG5cdGJhdHRlcnlJY29uLmNvbnN0cmFpbnRzID1cblx0XHR0cmFpbGluZyA6IDdcblx0XHR0b3A6QGJhdHRlcnlJY29uXG5cdFx0IyB2ZXJ0aWNhbENlbnRlcjogdGltZVxuXG5cblx0YmF0dGVyeVBlcmNlbnQgPSBuZXcgaW9zLlRleHQgc3R5bGU6XCJzdGF0dXNCYXJCYXR0ZXJ5UGVyY2VudFwiLCB0ZXh0OnNldHVwLmJhdHRlcnkgKyBcIiVcIiwgc3VwZXJMYXllcjpzdGF0dXNCYXIsIGZvbnRTaXplOjEyLCBjb2xvcjpAY29sb3IsIG5hbWU6XCJiYXR0ZXJ5UGVyY2VudFwiXG5cdGJhdHRlcnlQZXJjZW50LmNvbnN0cmFpbnRzID1cblx0XHR0cmFpbGluZzogW2JhdHRlcnlJY29uLCAzXVxuXHRcdHZlcnRpY2FsQ2VudGVyOnRpbWVcblxuXHRibHVldG9vdGhTVkcgPSBpb3MudXRpbHMuc3ZnKGlvcy5hc3NldHMuYmx1ZXRvb3RoKVxuXHRibHVldG9vdGggPSBuZXcgTGF5ZXIgd2lkdGg6Ymx1ZXRvb3RoU1ZHLndpZHRoLCBoZWlnaHQ6Ymx1ZXRvb3RoU1ZHLmhlaWdodCwgc3VwZXJMYXllcjpzdGF0dXNCYXIsIG9wYWNpdHk6LjUsIGJhY2tncm91bmRDb2xvcjpcInRyYW5zcGFyZW50XCIsIG5hbWU6XCJibHVldG9vdGhcIlxuXHRibHVldG9vdGguaHRtbCA9IGJsdWV0b290aFNWRy5zdmdcblx0aW9zLnV0aWxzLmNoYW5nZUZpbGwoYmx1ZXRvb3RoLCBAY29sb3IpXG5cdGJsdWV0b290aC5jb25zdHJhaW50cyA9XG5cdFx0dG9wOiBAYmx1ZXRvb3RoXG5cdFx0IyB2ZXJ0aWNhbENlbnRlcjogdGltZVxuXHRcdHRyYWlsaW5nOiBbYmF0dGVyeVBlcmNlbnQsIDddXG5cblx0aW9zLmxheW91dC5zZXQoKVxuXG5cdCMgRXhwb3J0IHN0YXR1c0JhclxuXHRzdGF0dXNCYXIuYmF0dGVyeSA9IHt9XG5cdHN0YXR1c0Jhci5iYXR0ZXJ5LnBlcmNlbnQgPSBiYXR0ZXJ5UGVyY2VudFxuXHRzdGF0dXNCYXIuYmF0dGVyeS5pY29uID0gYmF0dGVyeUljb25cblx0c3RhdHVzQmFyLmJsdWV0b290aCA9IGJsdWV0b290aFxuXHRzdGF0dXNCYXIudGltZSA9IHRpbWVcblx0c3RhdHVzQmFyLm5ldHdvcmsgPSBuZXR3b3JrXG5cdHN0YXR1c0Jhci5jYXJyaWVyID0gY2FycmllclxuXHRzdGF0dXNCYXIuc2lnbmFsID0gc2lnbmFsXG5cdHJldHVybiBzdGF0dXNCYXJcbiIsImlvcyA9IHJlcXVpcmUgJ2lvcy1raXQnXG5cbmV4cG9ydHMuZGVmYXVsdHMgPSB7XG5cdGFjdGlvbnM6W1wiUmVwbHlcIiwgXCJSZXBseSBBbGxcIiwgXCJGb3J3YXJkXCIsIFwiUHJpbnRcIl1cblx0ZXhpdDpcIkNhbmNlbFwiXG5cdGFuaW1hdGVkOnRydWVcblx0ZGVzY3JpcHRpb246dW5kZWZpbmVkXG5cdHRhcmdldDp1bmRlZmluZWRcbn1cblxuZXhwb3J0cy5kZWZhdWx0cy5wcm9wcyA9IE9iamVjdC5rZXlzKGV4cG9ydHMuZGVmYXVsdHMpXG5cbmV4cG9ydHMuY3JlYXRlID0gKGFycmF5KSAtPlxuXHRzZXR1cCA9IGlvcy51dGlscy5zZXR1cENvbXBvbmVudChhcnJheSwgZXhwb3J0cy5kZWZhdWx0cylcblx0Zm9yIGwgaW4gRnJhbWVyLkN1cnJlbnRDb250ZXh0LmxheWVyc1xuXHRcdGlmIGwudHlwZSA9PSAnc2hlZXQnXG5cdFx0XHRsLmRpc21pc3MoKVxuXG5cdHNoZWV0ID0gbmV3IGlvcy5WaWV3XG5cdFx0bmFtZTpcInNoZWV0XCJcblx0XHRiYWNrZ3JvdW5kQ29sb3I6XCJ0cmFuc3BhcmVudFwiXG5cdFx0Y29uc3RyYWludHM6XG5cdFx0XHR0b3A6MFxuXHRcdFx0bGVhZGluZzowXG5cdFx0XHR0cmFpbGluZzowXG5cdFx0XHRib3R0b206MFxuXG5cdHNoZWV0LnR5cGUgPSAnc2hlZXQnXG5cblx0c2hlZXQubWVudSA9IG5ldyBMYXllclxuXHRcdG5hbWU6XCJtZW51XCJcblx0XHRzdXBlckxheWVyOnNoZWV0XG5cdFx0YmFja2dyb3VuZENvbG9yOlwidHJhbnNwYXJlbnRcIlxuXHRcdGJvcmRlclJhZGl1czppb3MucHgoMTIpXG5cdFx0Y2xpcDp0cnVlXG5cblx0XHRpZiBpb3MuaXNQYWQoKVxuXHRcdFx0c2hlZXRUaXAgPSBpb3MudXRpbHMuc3ZnKGlvcy5hc3NldHMuc2hlZXRUaXApXG5cdFx0XHRzaGVldC50aXAgPSBuZXcgaW9zLlZpZXdcblx0XHRcdFx0bmFtZTonLnRpcCdcblx0XHRcdFx0Y29sb3I6J2JsYWNrJ1xuXHRcdFx0XHRzdXBlckxheWVyOnNoZWV0XG5cdFx0XHRcdGh0bWw6c2hlZXRUaXAuc3ZnXG5cdFx0XHRcdGhlaWdodDpzaGVldFRpcC5oZWlnaHQgLSA0XG5cdFx0XHRcdHdpZHRoOnNoZWV0VGlwLndpZHRoXG5cdFx0XHRcdGJhY2tncm91bmRDb2xvcjondHJhbnNwYXJlbnQnXG5cdFx0XHRcdGNvbnN0cmFpbnRzOlxuXHRcdFx0XHRcdGhvcml6b250YWxDZW50ZXI6c2V0dXAudGFyZ2V0XG5cdFx0XHRzaGVldC5saW5rZWQgPSBzZXR1cC50YXJnZXRcblx0XHRcdHNoZWV0LmxpbmtlZC5pZ25vcmVFdmVudHMgPSB0cnVlXG5cblx0cGxhY2UgPSAodCwgbCktPlxuXHRcdHcgPSBpb3MuZGV2aWNlLndpZHRoXG5cdFx0aCA9IGlvcy5kZXZpY2UuaGVpZ2h0XG5cdFx0Y2VudGVyWCA9IHcvMlxuXHRcdCMgeCAtIGF4aXNcblx0XHRpZiB3IC0gdC54ID4gY2VudGVyWCAjbGVmdFxuXHRcdFx0aWYgdC54IC0gaW9zLnB4KDE1MCkgPCAwXG5cdFx0XHRcdGwuY29uc3RyYWludHMubGVhZGluZyA9IDEwXG5cdFx0XHRlbHNlXG5cdFx0XHRcdGwuY29uc3RyYWludHMuaG9yaXpvbnRhbENlbnRlciA9IHRcblxuXHRcdGVsc2UgI3JpZ2h0XG5cdFx0XHRpZiB0LnggKyBpb3MucHgoMTUwKSA+IHdcblx0XHRcdFx0bC5jb25zdHJhaW50cy50cmFpbGluZyA9IDEwXG5cdFx0XHRlbHNlXG5cdFx0XHRcdGwuY29uc3RyYWludHMuaG9yaXpvbnRhbENlbnRlciA9IHRcblxuXHRcdGlmIHQueSArIGwuaGVpZ2h0IDwgaCAjdG9wXG5cdFx0XHRcdGwuY29uc3RyYWludHMudG9wID0gW3QsIDQwXVxuXHRcdFx0XHRpZiBpb3MuaXNQYWQoKVxuXHRcdFx0XHRcdHNoZWV0LnRpcC5jb25zdHJhaW50cy5ib3R0b20gPSBbbCwgMV1cblx0XHRlbHNlICNib3R0b21cblx0XHRcdFx0bC5jb25zdHJhaW50cy5ib3R0b20gPSBbdCwgNDBdXG5cdFx0XHRcdGlmIGlvcy5pc1BhZCgpXG5cdFx0XHRcdFx0c2hlZXQudGlwLmNvbnN0cmFpbnRzLnRvcCA9IFtsLCAxXVxuXHRcdFx0XHRcdHNoZWV0LnRpcC5yb3RhdGlvbiA9IDE4MFxuXHRcdGlmIGlvcy5pc1BhZCgpXG5cdFx0XHRpb3MubGF5b3V0LnNldChzaGVldC50aXApXG5cdHNoZWV0LmRpc21pc3MgPSAtPlxuXG5cdFx0aWYgaW9zLmlzUGhvbmUoKVxuXHRcdFx0c2hlZXQubWVudS5hbmltYXRlXG5cdFx0XHRcdHByb3BlcnRpZXM6XG5cdFx0XHRcdFx0eTppb3MuZGV2aWNlLmhlaWdodFxuXHRcdFx0XHR0aW1lOi4yNVxuXG5cdFx0XHRzaGVldC5jYW5jZWwuYW5pbWF0ZVxuXHRcdFx0XHRwcm9wZXJ0aWVzOlxuXHRcdFx0XHRcdHk6aW9zLmRldmljZS5oZWlnaHQgKyBpb3MucHgoNzUpXG5cdFx0XHRcdHRpbWU6LjI1XG5cdFx0XHRzaGVldC5vdmVybGF5LmFuaW1hdGVcblx0XHRcdFx0cHJvcGVydGllczpcblx0XHRcdFx0XHRvcGFjaXR5OjBcblx0XHRcdFx0dGltZTouMjVcblx0XHRcdFV0aWxzLmRlbGF5IC4yNSwgLT5cblx0XHRcdFx0c2hlZXQuZGVzdHJveSgpXG5cdFx0ZWxzZVxuXHRcdFx0c2hlZXQubGlua2VkLmlnbm9yZUV2ZW50cyA9IGZhbHNlXG5cdFx0XHRVdGlscy5kZWxheSAuMTUsIC0+XG5cdFx0XHRcdHNoZWV0LmRlc3Ryb3koKVxuXG5cblx0c2hlZXQuY2FsbCA9IC0+XG5cdFx0aWYgaW9zLmlzUGhvbmUoKVxuXHRcdFx0c2hlZXQubWVudS55ID0gaW9zLmRldmljZS5oZWlnaHRcblx0XHRcdHNoZWV0LmNhbmNlbC55ID0gaW9zLmRldmljZS5oZWlnaHQgKyBpb3MucHgoNzUpXG5cdFx0XHRzaGVldC5vdmVybGF5Lm9wYWNpdHkgPSAwXG5cblx0XHRcdHNoZWV0Lm92ZXJsYXkuYW5pbWF0ZVxuXHRcdFx0XHRwcm9wZXJ0aWVzOlxuXHRcdFx0XHRcdG9wYWNpdHk6LjVcblx0XHRcdFx0dGltZTouMjVcblx0XHRcdGlvcy5sYXlvdXQuYW5pbWF0ZVxuXHRcdFx0XHR0YXJnZXQ6W3NoZWV0Lm1lbnUsIHNoZWV0LmNhbmNlbF1cblx0XHRcdFx0dGltZTouMjVcblx0XHRlbHNlXG5cdFx0XHRwbGFjZShzZXR1cC50YXJnZXQsIHNoZWV0Lm1lbnUpXG5cdFx0XHRpb3MubGF5b3V0LnNldChzaGVldC5tZW51KVxuXG5cblxuXHRpZiBpb3MuZGV2aWNlLm5hbWUuaW5kZXhPZihcImlwYWRcIikgPT0gLTFcblx0XHRzaGVldC5vdmVybGF5ID0gbmV3IGlvcy5WaWV3XG5cdFx0XHRuYW1lOlwiLm92ZXJsYXlcIlxuXHRcdFx0YmFja2dyb3VuZENvbG9yOlwiYmxhY2tcIlxuXHRcdFx0b3BhY2l0eTouNVxuXHRcdFx0c3VwZXJMYXllcjpzaGVldFxuXHRcdFx0Y29uc3RyYWludHM6XG5cdFx0XHRcdHRvcDowXG5cdFx0XHRcdGxlYWRpbmc6MFxuXHRcdFx0XHR0cmFpbGluZzowXG5cdFx0XHRcdGJvdHRvbTowXG5cdFx0c2hlZXQub3ZlcmxheS5zZW5kVG9CYWNrKClcblxuXHRcdHNoZWV0Lm1lbnUuY29uc3RyYWludHMgPVxuXHRcdFx0bGVhZGluZzoxMFxuXHRcdFx0dHJhaWxpbmc6MTBcblx0XHRcdGJvdHRvbTo1NyArIDggKyAxMFxuXHRcdFx0aGVpZ2h0OihzZXR1cC5hY3Rpb25zLmxlbmd0aCkgKiA1N1xuXG5cdFx0c2hlZXQuY2FuY2VsID0gbmV3IGlvcy5CdXR0b25cblx0XHRcdG5hbWU6XCIuY2FuY2VsXCJcblx0XHRcdHR5cGU6XCJiaWdcIlxuXHRcdFx0dGV4dDpzZXR1cC5leGl0XG5cdFx0XHRzdXBlckxheWVyOnNoZWV0XG5cdFx0XHRjb25zdHJhaW50czpcblx0XHRcdFx0Ym90dG9tOjEwXG5cdFx0XHRcdGxlYWRpbmc6MFxuXHRcdFx0XHR0cmFpbGluZzowXG5cdFx0c2hlZXQuY2FuY2VsLm9uIEV2ZW50cy5Ub3VjaEVuZCwgLT5cblx0XHRcdHNoZWV0LmRpc21pc3MoKVxuXHRlbHNlXG5cdFx0c2hlZXQubWVudS5jb25zdHJhaW50cyA9XG5cdFx0XHR3aWR0aDozMDBcblx0XHRcdGhlaWdodDooc2V0dXAuYWN0aW9ucy5sZW5ndGgpICogNTdcblxuXHRcdHNoZWV0Lm1lbnUucHJvcHMgPVxuXHRcdFx0c2hhZG93WToyXG5cdFx0XHRzaGFkb3dCbHVyOmlvcy5weCgxMDApXG5cdFx0XHRzaGFkb3dDb2xvcjpcInJnYmEoMCwwLDAsMC4xKVwiXG5cblx0aW9zLmxheW91dC5zZXQoc2hlZXQpXG5cblx0c2hlZXQuYWN0aW9uc0FycmF5ID0gW11cblx0c2hlZXQuYWN0aW9ucyA9IHt9XG5cdGZvciBhLGkgaW4gc2V0dXAuYWN0aW9uc1xuXHRcdGFjdGlvbiA9IG5ldyBpb3MuVmlld1xuXHRcdFx0bmFtZTogXCIuYWN0aW9ucy5bXFxcIlwiICsgYS50b0xvd2VyQ2FzZSgpICsgXCJcXFwiXVwiXG5cdFx0XHRiYWNrZ3JvdW5kQ29sb3I6XCJyZ2JhKDI1NSwyNTUsMjU1LDEpXCJcblx0XHRcdHN1cGVyTGF5ZXI6c2hlZXQubWVudVxuXHRcdFx0Y29uc3RyYWludHM6XG5cdFx0XHRcdGxlYWRpbmc6MFxuXHRcdFx0XHR0cmFpbGluZzowXG5cdFx0XHRcdGhlaWdodDo1N1xuXHRcdGFjdGlvbi5zdHlsZVtcIi13ZWJraXQtYm94LXNoYWRvd1wiXSA9IFwiaW5zZXQgMCAwIFwiICsgaW9zLnB4KC41KSArIFwicHggcmdiYSgwLDAsMCwuMjUpXCJcblxuXHRcdGFjdGlvbi5sYWJlbCA9IG5ldyBpb3MuVGV4dFxuXHRcdFx0dGV4dDphXG5cdFx0XHRjb2xvcjppb3MuY29sb3IoXCJibHVlXCIpXG5cdFx0XHRmb250U2l6ZToyMFxuXHRcdFx0c3VwZXJMYXllcjphY3Rpb25cblx0XHRcdGNvbnN0cmFpbnRzOlxuXHRcdFx0XHRhbGlnbjpcImNlbnRlclwiXG5cblx0XHRpb3MudXRpbHMuc3BlY2lhbENoYXIoYWN0aW9uLmxhYmVsKVxuXG5cdFx0aWYgaSA9PSAwXG5cdFx0XHRhY3Rpb24uY29uc3RyYWludHMudG9wID0gMFxuXHRcdGVsc2Vcblx0XHRcdGFjdGlvbi5jb25zdHJhaW50cy50b3AgPSBzaGVldC5hY3Rpb25zQXJyYXlbaSAtIDFdXG5cblx0XHRhY3Rpb24ub24gRXZlbnRzLlRvdWNoU3RhcnQsIC0+XG5cdFx0XHRALmFuaW1hdGVcblx0XHRcdFx0cHJvcGVydGllczpcblx0XHRcdFx0XHRiYWNrZ3JvdW5kQ29sb3I6QC5iYWNrZ3JvdW5kQ29sb3IuZGFya2VuKDEwKVxuXHRcdFx0XHRcdHRpbWU6LjJcblxuXHRcdGFjdGlvbi5vbiBFdmVudHMuVG91Y2hFbmQsIC0+XG5cdFx0XHRALmFuaW1hdGVcblx0XHRcdFx0cHJvcGVydGllczpcblx0XHRcdFx0XHRiYWNrZ3JvdW5kQ29sb3I6XCJyZ2JhKDI1NSwyNTUsMjU1LCAuOClcIlxuXHRcdFx0XHR0aW1lOi4yXG5cdFx0XHRzaGVldC5kaXNtaXNzKClcblxuXG5cblx0XHRpb3MubGF5b3V0LnNldChhY3Rpb24pXG5cblx0XHRzaGVldC5hY3Rpb25zQXJyYXkucHVzaCBhY3Rpb25cblx0XHRzaGVldC5hY3Rpb25zW2EudG9Mb3dlckNhc2UoKV0gPSBhY3Rpb25cblxuXG5cdGlmIHNldHVwLmFuaW1hdGVkXG5cdFx0c2hlZXQuY2FsbCgpXG5cdGlmIGlvcy5pc1BhZCgpXG5cdFx0c2hlZXQudGlwLmJyaW5nVG9Gcm9udCgpXG5cdHJldHVybiBzaGVldFxuIiwiaW9zID0gcmVxdWlyZSAnaW9zLWtpdCdcblxuZXhwb3J0cy5kZWZhdWx0cyA9XG5cdHRpdGxlOlwiVGl0bGVcIlxuXHRsZWZ0OnVuZGVmaW5lZFxuXHRyaWdodDpcIkVkaXRcIlxuXHRibHVyOnRydWVcblx0c3VwZXJMYXllcjp1bmRlZmluZWRcblx0dHlwZTpcIm5hdkJhclwiXG5cdGNvbG9yOidibHVlJ1xuXHR0aXRsZUNvbG9yOidibGFjaydcblx0YmFja2dyb3VuZENvbG9yOlwicmdiYSgyNTUsIDI1NSwgMjU1LCAuOClcIlxuXHRkaXZpZGVyQmFja2dyb3VuZENvbG9yOlwiI0IyQjJCMlwiXG5cbmV4cG9ydHMuZGVmYXVsdHMucHJvcHMgPSBPYmplY3Qua2V5cyhleHBvcnRzLmRlZmF1bHRzKVxuXG5leHBvcnRzLmNyZWF0ZSA9IChhcnJheSkgLT5cblx0c2V0dXAgPSBpb3MudXRpbHMuc2V0dXBDb21wb25lbnQoYXJyYXksIGV4cG9ydHMuZGVmYXVsdHMpXG5cblx0YmFyID0gbmV3IGlvcy5WaWV3XG5cdFx0bmFtZTpcIm5hdkJhclwiXG5cdFx0YmFja2dyb3VuZENvbG9yOiBzZXR1cC5iYWNrZ3JvdW5kQ29sb3Jcblx0XHRjb25zdHJhaW50czpcblx0XHRcdGxlYWRpbmc6MFxuXHRcdFx0dHJhaWxpbmc6MFxuXHRcdFx0dG9wOjBcblx0XHRcdGhlaWdodDo2NFxuXG5cdGJhci5iZyA9IG5ldyBpb3MuVmlld1xuXHRcdHN1cGVyTGF5ZXI6YmFyXG5cdFx0YmFja2dyb3VuZENvbG9yOid0cmFuc3BhcmVudCdcblx0XHRuYW1lOlwiLmJnXCJcblx0XHRjb25zdHJhaW50czpcblx0XHRcdGxlYWRpbmc6MFxuXHRcdFx0dHJhaWxpbmc6MFxuXHRcdFx0aGVpZ2h0OjQ0XG5cdFx0XHRib3R0b206MFxuXG5cdGJhci5kaXZpZGVyID0gbmV3IGlvcy5WaWV3XG5cdFx0YmFja2dyb3VuZENvbG9yOnNldHVwLmRpdmlkZXJCYWNrZ3JvdW5kQ29sb3Jcblx0XHRuYW1lOlwiLmRpdmlkZXJcIlxuXHRcdHN1cGVyTGF5ZXI6YmFyLmJnXG5cdFx0Y29uc3RyYWludHM6XG5cdFx0XHRoZWlnaHQ6LjVcblx0XHRcdGJvdHRvbTowXG5cdFx0XHRsZWFkaW5nOjBcblx0XHRcdHRyYWlsaW5nOjBcblxuXHRpZiBzZXR1cC5zdXBlckxheWVyXG5cdFx0c2V0dXAuc3VwZXJMYXllci5hZGRTdWJMYXllcihiYXIpXG5cblxuXHRpZiBzZXR1cC5ibHVyXG5cdFx0aW9zLnV0aWxzLmJnQmx1cihiYXIpXG5cblx0aWYgc2V0dXAuYmx1ciA9PSBmYWxzZSAmJiBzZXR1cC5iYWNrZ3JvdW5kQ29sb3IgPT0gXCJyZ2JhKDI1NSwgMjU1LCAyNTUsIC44KVwiXG5cdFx0YmFyLmJhY2tncm91bmRDb2xvciA9ICd3aGl0ZSdcblxuXHRiYXIudHlwZSA9IHNldHVwLnR5cGVcblxuXHRmb3IgbGF5ZXIgaW4gRnJhbWVyLkN1cnJlbnRDb250ZXh0LmxheWVyc1xuXHRcdGlmIGxheWVyLnR5cGUgPT0gXCJzdGF0dXNCYXJcIlxuXHRcdFx0QHN0YXR1c0JhciA9IGxheWVyXG5cdFx0XHRiYXIucGxhY2VCZWhpbmQoQHN0YXR1c0JhcilcblxuXG5cdGlmIHR5cGVvZiBzZXR1cC50aXRsZSA9PSBcIm9iamVjdFwiXG5cdFx0c2V0dXAudGl0bGUgPSBzZXR1cC50aXRsZS5sYWJlbC5odG1sXG5cblxuXHRiYXIudGl0bGUgPSBuZXcgaW9zLlRleHRcblx0XHRmb250V2VpZ2h0Olwic2VtaWJvbGRcIlxuXHRcdHN1cGVyTGF5ZXI6YmFyLmJnXG5cdFx0dGV4dDpzZXR1cC50aXRsZVxuXHRcdG5hbWU6XCIudGl0bGVcIlxuXHRcdGNvbG9yOnNldHVwLnRpdGxlQ29sb3Jcblx0XHRjb25zdHJhaW50czpcblx0XHRcdGFsaWduOlwiaG9yaXpvbnRhbFwiXG5cdFx0XHRib3R0b206MTJcblxuXHRpb3MudXRpbHMuc3BlY2lhbENoYXIoYmFyLnRpdGxlKVxuXG5cdCMgSGFuZGxlIFJpZ2h0XG5cdGlmIHR5cGVvZiBzZXR1cC5yaWdodCA9PSBcInN0cmluZ1wiICYmIHR5cGVvZiBzZXR1cC5yaWdodCAhPSBcImJvb2xlYW5cIlxuXHRcdGJhci5yaWdodCA9IG5ldyBpb3MuQnV0dG9uXG5cdFx0XHRuYW1lOlwiLnJpZ2h0XCJcblx0XHRcdHN1cGVyTGF5ZXI6YmFyLmJnXG5cdFx0XHR0ZXh0OnNldHVwLnJpZ2h0XG5cdFx0XHRjb2xvcjpzZXR1cC5jb2xvclxuXHRcdFx0Zm9udFdlaWdodDo1MDBcblx0XHRcdGNvbnN0cmFpbnRzOlxuXHRcdFx0XHRib3R0b206MTJcblx0XHRcdFx0dHJhaWxpbmc6OFxuXHRcdGJhci5yaWdodC50eXBlID0gXCJidXR0b25cIlxuXHRcdGlvcy51dGlscy5zcGVjaWFsQ2hhcihiYXIucmlnaHQpXG5cdGlmIHR5cGVvZiBzZXR1cC5yaWdodCA9PSBcIm9iamVjdFwiXG5cdFx0YmFyLnJpZ2h0ID0gc2V0dXAucmlnaHRcblx0XHRiYXIucmlnaHQubmFtZSA9IFwiLnJpZ2h0XCJcblx0XHRiYXIucmlnaHQuc3VwZXJMYXllciA9IGJhci5iZ1xuXHRcdGJhci5yaWdodC5jb25zdHJhaW50cyA9XG5cdFx0XHR0cmFpbGluZzo4XG5cdFx0XHRib3R0b206MTJcblx0XHRpb3MubGF5b3V0LnNldChiYXIucmlnaHQpXG5cblx0IyBIYW5kbGUgTGVmdFxuXHRpZiB0eXBlb2Ygc2V0dXAubGVmdCA9PSBcInN0cmluZ1wiICYmIHR5cGVvZiBzZXR1cC5sZWZ0ICE9IFwiYm9vbGVhblwiXG5cdFx0c2V0TGVhZGluZyA9IDhcblx0XHRpZiBzZXR1cC5sZWZ0LmluZGV4T2YoXCI8XCIpICE9IC0xXG5cdFx0XHRzdmcgPSBpb3MudXRpbHMuc3ZnKGlvcy5hc3NldHMuY2hldnJvbilcblx0XHRcdGJhci5jaGV2cm9uID0gbmV3IGlvcy5WaWV3XG5cdFx0XHRcdG5hbWU6XCIuY2hldnJvblwiXG5cdFx0XHRcdHdpZHRoOnN2Zy53aWR0aFxuXHRcdFx0XHRoZWlnaHQ6c3ZnLmhlaWdodFxuXHRcdFx0XHRiYWNrZ3JvdW5kQ29sb3I6XCJ0cmFuc3BhcmVudFwiXG5cdFx0XHRcdHN1cGVyTGF5ZXI6YmFyLmJnXG5cdFx0XHRiYXIuY2hldnJvbi5odG1sID0gc3ZnLnN2Z1xuXHRcdFx0YmFyLmNoZXZyb24uY29uc3RyYWludHMgPVxuXHRcdFx0XHRcdGJvdHRvbTo5XG5cdFx0XHRcdFx0bGVhZGluZzo4XG5cdFx0XHRzZXR1cC5sZWZ0ID0gc2V0dXAubGVmdC5yZXBsYWNlKFwiPFwiLCBcIlwiKVxuXHRcdFx0aW9zLnV0aWxzLmNoYW5nZUZpbGwoYmFyLmNoZXZyb24sIHNldHVwLmNvbG9yKVxuXHRcdFx0c2V0TGVhZGluZyA9IFtiYXIuY2hldnJvbiwgNF1cblx0XHRcdGlvcy5sYXlvdXQuc2V0KGJhci5jaGV2cm9uKVxuXG5cdFx0YmFyLmxlZnQgPSBuZXcgaW9zLkJ1dHRvblxuXHRcdFx0bmFtZTpcIi5sZWZ0XCJcblx0XHRcdHN1cGVyTGF5ZXI6YmFyLmJnXG5cdFx0XHR0ZXh0OnNldHVwLmxlZnRcblx0XHRcdGNvbG9yOnNldHVwLmNvbG9yXG5cdFx0XHRmb250V2VpZ2h0OjUwMFxuXHRcdFx0Y29uc3RyYWludHM6XG5cdFx0XHRcdGJvdHRvbToxMlxuXHRcdFx0XHRsZWFkaW5nOnNldExlYWRpbmdcblx0XHRiYXIubGVmdC50eXBlID0gXCJidXR0b25cIlxuXHRcdGlvcy51dGlscy5zcGVjaWFsQ2hhcihiYXIubGVmdClcblxuXHRcdGJhci5sZWZ0Lm9uIEV2ZW50cy5Ub3VjaFN0YXJ0LCAtPlxuXHRcdFx0aWYgYmFyLmNoZXZyb25cblx0XHRcdFx0YmFyLmNoZXZyb24uYW5pbWF0ZVxuXHRcdFx0XHRcdHByb3BlcnRpZXM6KG9wYWNpdHk6LjI1KVxuXHRcdFx0XHRcdHRpbWU6LjVcblx0XHRiYXIubGVmdC5vbiBFdmVudHMuVG91Y2hFbmQsIC0+XG5cdFx0XHRpZiBiYXIuY2hldnJvblxuXHRcdFx0XHRiYXIuY2hldnJvbi5hbmltYXRlXG5cdFx0XHRcdFx0cHJvcGVydGllczoob3BhY2l0eToxKVxuXHRcdFx0XHRcdHRpbWU6LjVcblxuXHRpZiB0eXBlb2Ygc2V0dXAubGVmdCA9PSBcIm9iamVjdFwiXG5cdFx0YmFyLmxlZnQgPSBzZXR1cC5sZWZ0XG5cdFx0YmFyLmxlZnQubmFtZSA9IFwiLmxlZnRcIlxuXHRcdGJhci5sZWZ0LnN1cGVyTGF5ZXIgPSBiYXIuYmdcblx0XHRiYXIubGVmdC5jb25zdHJhaW50cyA9XG5cdFx0XHRsZWFkaW5nOjhcblx0XHRcdGJvdHRvbToxMlxuXG5cdGlvcy5sYXlvdXQuc2V0KGJhci5sZWZ0KVxuXHRyZXR1cm4gYmFyXG4iLCJpb3MgPSByZXF1aXJlIFwiaW9zLWtpdFwiXG5cbiMgQnVpbGQgTGlicmFyeSAgUHJvcGVydGllc1xubGF5ZXIgPSBuZXcgTGF5ZXJcbmV4cG9ydHMubGF5ZXJQcm9wcyA9IE9iamVjdC5rZXlzKGxheWVyLnByb3BzKVxuZXhwb3J0cy5sYXllclByb3BzLnB1c2ggXCJzdXBlckxheWVyXCJcbmV4cG9ydHMubGF5ZXJQcm9wcy5wdXNoIFwiY29uc3RyYWludHNcIlxuZXhwb3J0cy5sYXllclN0eWxlcyA9IE9iamVjdC5rZXlzKGxheWVyLnN0eWxlKVxubGF5ZXIuZGVzdHJveSgpXG5cbmV4cG9ydHMuYXNzZXRzID0ge1xuXHRzaGVldFRpcDpcIjw/eG1sIHZlcnNpb249JzEuMCcgZW5jb2Rpbmc9J1VURi04JyBzdGFuZGFsb25lPSdubyc/PlxuXHQ8c3ZnIHdpZHRoPScyN3B4JyBoZWlnaHQ9JzEzcHgnIHZpZXdCb3g9JzAgMCAyNyAxMycgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJz5cblx0ICAgIDwhLS0gR2VuZXJhdG9yOiBTa2V0Y2ggMzkuMSAoMzE3MjApIC0gaHR0cDovL3d3dy5ib2hlbWlhbmNvZGluZy5jb20vc2tldGNoIC0tPlxuXHQgICAgPHRpdGxlPlRyaWFuZ2xlPC90aXRsZT5cblx0ICAgIDxkZXNjPkNyZWF0ZWQgd2l0aCBTa2V0Y2guPC9kZXNjPlxuXHQgICAgPGRlZnM+PC9kZWZzPlxuXHQgICAgPGcgaWQ9J2lPUy1LaXQnIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnPlxuXHQgICAgICAgIDxnIGlkPSdOYXZpZ2F0aW9uLUJhci1Db3B5JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtMjYzNC4wMDAwMDAsIC0xMjQuMDAwMDAwKScgZmlsbD0nI0ZGRkZGRic+XG5cdCAgICAgICAgICAgIDxwYXRoIGQ9J00yNjQ0LjcxOTE2LDEyNS44ODM4MzQgQzI2NDYuMjU0OTgsMTI0LjI5MTEzNiAyNjQ4Ljc0NTg1LDEyNC4yOTE5OTIgMjY1MC4yODA4NCwxMjUuODgzODM0IEwyNjYxLDEzNyBMMjYzNCwxMzcgTDI2NDQuNzE5MTYsMTI1Ljg4MzgzNCBaJyBpZD0nVHJpYW5nbGUnPjwvcGF0aD5cblx0ICAgICAgICA8L2c+XG5cdCAgICA8L2c+XG5cdDwvc3ZnPlwiXG5cdGJsdWV0b290aDogXCI8P3htbCB2ZXJzaW9uPScxLjAnIGVuY29kaW5nPSdVVEYtOCcgc3RhbmRhbG9uZT0nbm8nPz5cblx0XHQ8c3ZnIHdpZHRoPSc3cHgnIGhlaWdodD0nMTNweCcgdmlld0JveD0nMCAwIDggMTUnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+XG5cdFx0XHQ8IS0tIEdlbmVyYXRvcjogU2tldGNoIDMuNi4xICgyNjMxMykgLSBodHRwOi8vd3d3LmJvaGVtaWFuY29kaW5nLmNvbS9za2V0Y2ggLS0+XG5cdFx0XHQ8dGl0bGU+Qmx1ZXRvb3RoPC90aXRsZT5cblx0XHRcdDxkZXNjPkNyZWF0ZWQgd2l0aCBTa2V0Y2guPC9kZXNjPlxuXHRcdFx0PGRlZnM+PC9kZWZzPlxuXHRcdFx0XHQ8ZyBpZD0nU3RhdHVzLUljb25zLShXaGl0ZSknIHRyYW5zZm9ybT0ndHJhbnNsYXRlKC0xMzcuMDAwMDAwLCAwLjAwMDAwMCknIGZpbGw9JyNGRkYnPlxuXHRcdFx0XHRcdDxwYXRoIGQ9J00xNDAuNSwxNC41IEwxNDUsMTAuMjUgTDE0MS44LDcuNSBMMTQ1LDQuNzUgTDE0MC41LDAuNSBMMTQwLjUsNi4wNzE0Mjg1NyBMMTM3LjgsMy43NSBMMTM3LDQuNSBMMTQwLjI1ODMzMyw3LjM3NSBMMTM3LDEwLjI1IEwxMzcuOCwxMSBMMTQwLjUsOC42Nzg1NzE0MyBMMTQwLjUsMTQuNSBaIE0xNDEuNSwzIEwxNDMuMzY2NjY3LDQuNzUgTDE0MS41LDYuMjUgTDE0MS41LDMgWiBNMTQxLjUsOC41IEwxNDMuMzY2NjY3LDEwLjI1IEwxNDEuNSwxMiBMMTQxLjUsOC41IFonIGlkPSdCbHVldG9vdGgnPjwvcGF0aD5cblx0XHRcdFx0PC9nPlxuXHRcdDwvc3ZnPlwiXG5cdGJhdHRlcnlIaWdoIDogXCI8P3htbCB2ZXJzaW9uPScxLjAnIGVuY29kaW5nPSdVVEYtOCcgc3RhbmRhbG9uZT0nbm8nPz5cblx0XHQ8c3ZnIHdpZHRoPScyNXB4JyBoZWlnaHQ9JzEwcHgnIHZpZXdCb3g9JzAgMCAyNSAxMCcgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJz5cblx0XHQgICAgPCEtLSBHZW5lcmF0b3I6IFNrZXRjaCAzLjcuMiAoMjgyNzYpIC0gaHR0cDovL3d3dy5ib2hlbWlhbmNvZGluZy5jb20vc2tldGNoIC0tPlxuXHRcdCAgICA8dGl0bGU+QmF0dGVyeTwvdGl0bGU+XG5cdFx0ICAgIDxkZXNjPkNyZWF0ZWQgd2l0aCBTa2V0Y2guPC9kZXNjPlxuXHRcdCAgICA8ZGVmcz48L2RlZnM+XG5cdFx0ICAgIDxnIGlkPSdTeW1ib2xzJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJz5cblx0XHQgICAgICAgIDxnIGlkPSdTdGF0dXMtQmFyL0JsYWNrLzEwMCUnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKC0zNDUuMDAwMDAwLCAtNS4wMDAwMDApJyBmaWxsPScjMDMwMzAzJz5cblx0XHQgICAgICAgICAgICA8cGF0aCBkPSdNMzQ2LjQ5MzcxMyw1LjUgQzM0NS42Njg3NTgsNS41IDM0NSw2LjE2ODAyMTU1IDM0NSw3LjAwNTMwMzI0IEwzNDUsMTMuNDk0Njk2OCBDMzQ1LDE0LjMyNjA1MjggMzQ1LjY3MzM4LDE1IDM0Ni40OTM3MTMsMTUgTDM2Ni4wMDYyODcsMTUgQzM2Ni44MzEyNDIsMTUgMzY3LjUsMTQuMzMxOTc4NCAzNjcuNSwxMy40OTQ2OTY4IEwzNjcuNSw3LjAwNTMwMzI0IEMzNjcuNSw2LjE3Mzk0NzIyIDM2Ni44MjY2Miw1LjUgMzY2LjAwNjI4Nyw1LjUgTDM0Ni40OTM3MTMsNS41IFogTTM2OCw4LjUgTDM2OCwxMiBMMzY4Ljc1LDEyIEMzNjkuMTY0MjE0LDEyIDM2OS41LDExLjY2NDQwNTMgMzY5LjUsMTEuMjU3NzQgTDM2OS41LDkuMjQyMjU5OTggQzM2OS41LDguODMyMzIxMTEgMzY5LjE2NzEwMSw4LjUgMzY4Ljc1LDguNSBMMzY4LDguNSBaIE0zNDYuNTA4MTUyLDYgQzM0NS45NTEzNjUsNiAzNDUuNSw2LjQ1Njk5NjkyIDM0NS41LDcuMDA4NDQwNTUgTDM0NS41LDEzLjQ5MTU1OTQgQzM0NS41LDE0LjA0ODUwNTggMzQ1Ljk0OTA1OCwxNC41IDM0Ni41MDgxNTIsMTQuNSBMMzY1Ljk5MTg0OCwxNC41IEMzNjYuNTQ4NjM1LDE0LjUgMzY3LDE0LjA0MzAwMzEgMzY3LDEzLjQ5MTU1OTQgTDM2Nyw3LjAwODQ0MDU1IEMzNjcsNi40NTE0OTQyMiAzNjYuNTUwOTQyLDYgMzY1Ljk5MTg0OCw2IEwzNDYuNTA4MTUyLDYgWiBNMzQ2LjUwNjc0NCw2LjUgQzM0Ni4yMjY4NzcsNi41IDM0Niw2LjcxNjM3MjAxIDM0Niw2Ljk5MjA5NTk1IEwzNDYsMTMuNTA3OTA0MSBDMzQ2LDEzLjc3OTY4MTEgMzQ2LjIzMDIyNSwxNCAzNDYuNTA2NzQ0LDE0IEwzNjUuOTkzMjU2LDE0IEMzNjYuMjczMTIzLDE0IDM2Ni41LDEzLjc4MzYyOCAzNjYuNSwxMy41MDc5MDQxIEwzNjYuNSw2Ljk5MjA5NTk1IEMzNjYuNSw2LjcyMDMxODg2IDM2Ni4yNjk3NzUsNi41IDM2NS45OTMyNTYsNi41IEwzNDYuNTA2NzQ0LDYuNSBaJyBpZD0nQmF0dGVyeSc+PC9wYXRoPlxuXHRcdCAgICAgICAgPC9nPlxuXHRcdCAgICA8L2c+XG5cdFx0PC9zdmc+XCJcblx0YmF0dGVyeU1pZCA6IFwiPD94bWwgdmVyc2lvbj0nMS4wJyBlbmNvZGluZz0nVVRGLTgnIHN0YW5kYWxvbmU9J25vJz8+XG5cdFx0PHN2ZyB3aWR0aD0nMjVweCcgaGVpZ2h0PScxMHB4JyB2aWV3Qm94PScwIDAgMjUgMTAnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+XG5cdFx0ICAgIDwhLS0gR2VuZXJhdG9yOiBTa2V0Y2ggMy43LjIgKDI4Mjc2KSAtIGh0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaCAtLT5cblx0XHQgICAgPHRpdGxlPkJhdHRlcnk8L3RpdGxlPlxuXHRcdCAgICA8ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz5cblx0XHQgICAgPGRlZnM+PC9kZWZzPlxuXHRcdCAgICA8ZyBpZD0nU3ltYm9scycgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCc+XG5cdFx0ICAgICAgICA8ZyBpZD0nU3RhdHVzLUJhci9CbGFjay9Mb3ctUG93ZXInIHRyYW5zZm9ybT0ndHJhbnNsYXRlKC0zNDUuMDAwMDAwLCAtNS4wMDAwMDApJyBmaWxsPScjMDMwMzAzJz5cblx0XHQgICAgICAgICAgICA8cGF0aCBkPSdNMzQ2LjQ5MzcxMyw1LjUgQzM0NS42Njg3NTgsNS41IDM0NSw2LjE2ODAyMTU1IDM0NSw3LjAwNTMwMzI0IEwzNDUsMTMuNDk0Njk2OCBDMzQ1LDE0LjMyNjA1MjggMzQ1LjY3MzM4LDE1IDM0Ni40OTM3MTMsMTUgTDM2Ni4wMDYyODcsMTUgQzM2Ni44MzEyNDIsMTUgMzY3LjUsMTQuMzMxOTc4NCAzNjcuNSwxMy40OTQ2OTY4IEwzNjcuNSw3LjAwNTMwMzI0IEMzNjcuNSw2LjE3Mzk0NzIyIDM2Ni44MjY2Miw1LjUgMzY2LjAwNjI4Nyw1LjUgTDM0Ni40OTM3MTMsNS41IFogTTM2OCw4LjUgTDM2OCwxMiBMMzY4Ljc1LDEyIEMzNjkuMTY0MjE0LDEyIDM2OS41LDExLjY2NDQwNTMgMzY5LjUsMTEuMjU3NzQgTDM2OS41LDkuMjQyMjU5OTggQzM2OS41LDguODMyMzIxMTEgMzY5LjE2NzEwMSw4LjUgMzY4Ljc1LDguNSBMMzY4LDguNSBaIE0zNDYuNTA4MTUyLDYgQzM0NS45NTEzNjUsNiAzNDUuNSw2LjQ1Njk5NjkyIDM0NS41LDcuMDA4NDQwNTUgTDM0NS41LDEzLjQ5MTU1OTQgQzM0NS41LDE0LjA0ODUwNTggMzQ1Ljk0OTA1OCwxNC41IDM0Ni41MDgxNTIsMTQuNSBMMzY1Ljk5MTg0OCwxNC41IEMzNjYuNTQ4NjM1LDE0LjUgMzY3LDE0LjA0MzAwMzEgMzY3LDEzLjQ5MTU1OTQgTDM2Nyw3LjAwODQ0MDU1IEMzNjcsNi40NTE0OTQyMiAzNjYuNTUwOTQyLDYgMzY1Ljk5MTg0OCw2IEwzNDYuNTA4MTUyLDYgWiBNMzQ2LjUwOTY1LDYuNSBDMzQ2LjIyODE3OCw2LjUgMzQ2LDYuNzE2MzcyMDEgMzQ2LDYuOTkyMDk1OTUgTDM0NiwxMy41MDc5MDQxIEMzNDYsMTMuNzc5NjgxMSAzNDYuMjI3NjUzLDE0IDM0Ni41MDk2NSwxNCBMMzU2LDE0IEwzNTYsNi41IEwzNDYuNTA5NjUsNi41IFonIGlkPSdCYXR0ZXJ5Jz48L3BhdGg+XG5cdFx0ICAgICAgICA8L2c+XG5cdFx0ICAgIDwvZz5cblx0XHQ8L3N2Zz5cIlxuXHRiYXR0ZXJ5TG93IDogXCI8P3htbCB2ZXJzaW9uPScxLjAnIGVuY29kaW5nPSdVVEYtOCcgc3RhbmRhbG9uZT0nbm8nPz5cblx0XHQ8c3ZnIHdpZHRoPScyNXB4JyBoZWlnaHQ9JzEwcHgnIHZpZXdCb3g9JzAgMCAyNSAxMCcgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJz5cblx0XHQgICAgPCEtLSBHZW5lcmF0b3I6IFNrZXRjaCAzLjcuMiAoMjgyNzYpIC0gaHR0cDovL3d3dy5ib2hlbWlhbmNvZGluZy5jb20vc2tldGNoIC0tPlxuXHRcdCAgICA8dGl0bGU+QmF0dGVyeTwvdGl0bGU+XG5cdFx0ICAgIDxkZXNjPkNyZWF0ZWQgd2l0aCBTa2V0Y2guPC9kZXNjPlxuXHRcdCAgICA8ZGVmcz48L2RlZnM+XG5cdFx0ICAgIDxnIGlkPSdTeW1ib2xzJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJz5cblx0XHQgICAgICAgIDxnIGlkPSdTdGF0dXMtQmFyL0JsYWNrLzIwJScgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTM0NS4wMDAwMDAsIC01LjAwMDAwMCknIGZpbGw9JyMwMzAzMDMnPlxuXHRcdCAgICAgICAgICAgIDxwYXRoIGQ9J00zNDYuNDkzNzEzLDUuNSBDMzQ1LjY2ODc1OCw1LjUgMzQ1LDYuMTY4MDIxNTUgMzQ1LDcuMDA1MzAzMjQgTDM0NSwxMy40OTQ2OTY4IEMzNDUsMTQuMzI2MDUyOCAzNDUuNjczMzgsMTUgMzQ2LjQ5MzcxMywxNSBMMzY2LjAwNjI4NywxNSBDMzY2LjgzMTI0MiwxNSAzNjcuNSwxNC4zMzE5Nzg0IDM2Ny41LDEzLjQ5NDY5NjggTDM2Ny41LDcuMDA1MzAzMjQgQzM2Ny41LDYuMTczOTQ3MjIgMzY2LjgyNjYyLDUuNSAzNjYuMDA2Mjg3LDUuNSBMMzQ2LjQ5MzcxMyw1LjUgTDM0Ni40OTM3MTMsNS41IFogTTM2OCw4LjUgTDM2OCwxMiBMMzY4Ljc1LDEyIEMzNjkuMTY0MjE0LDEyIDM2OS41LDExLjY2NDQwNTMgMzY5LjUsMTEuMjU3NzQgTDM2OS41LDkuMjQyMjU5OTggQzM2OS41LDguODMyMzIxMTEgMzY5LjE2NzEwMSw4LjUgMzY4Ljc1LDguNSBMMzY4LDguNSBMMzY4LDguNSBaIE0zNDYuNTA4MTUyLDYgQzM0NS45NTEzNjUsNiAzNDUuNSw2LjQ1Njk5NjkyIDM0NS41LDcuMDA4NDQwNTUgTDM0NS41LDEzLjQ5MTU1OTQgQzM0NS41LDE0LjA0ODUwNTggMzQ1Ljk0OTA1OCwxNC41IDM0Ni41MDgxNTIsMTQuNSBMMzY1Ljk5MTg0OCwxNC41IEMzNjYuNTQ4NjM1LDE0LjUgMzY3LDE0LjA0MzAwMzEgMzY3LDEzLjQ5MTU1OTQgTDM2Nyw3LjAwODQ0MDU1IEMzNjcsNi40NTE0OTQyMiAzNjYuNTUwOTQyLDYgMzY1Ljk5MTg0OCw2IEwzNDYuNTA4MTUyLDYgWiBNMzQ2LjQ5MDQ3OSw2LjUgQzM0Ni4yMTk1OTUsNi41IDM0Niw2LjcxNjM3MjAxIDM0Niw2Ljk5MjA5NTk1IEwzNDYsMTMuNTA3OTA0MSBDMzQ2LDEzLjc3OTY4MTEgMzQ2LjIxNTA1NywxNCAzNDYuNDkwNDc5LDE0IEwzNTAsMTQgTDM1MCw2LjUgTDM0Ni40OTA0NzksNi41IFonIGlkPSdCYXR0ZXJ5Jz48L3BhdGg+XG5cdFx0ICAgICAgICA8L2c+XG5cdFx0ICAgIDwvZz5cblx0XHQ8L3N2Zz5cIlxuXHRiYW5uZXJCRyA6IHtcblx0XHRcImlwaG9uZS01XCI6IFwiPD94bWwgdmVyc2lvbj0nMS4wJyBlbmNvZGluZz0nVVRGLTgnIHN0YW5kYWxvbmU9J25vJz8+XG5cdFx0XHQ8c3ZnIHdpZHRoPSczMjBweCcgaGVpZ2h0PSc2OHB4JyB2aWV3Qm94PScwIDAgMzIwIDY4JyB2ZXJzaW9uPScxLjEnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgeG1sbnM6eGxpbms9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnPlxuXHRcdFx0ICAgIDwhLS0gR2VuZXJhdG9yOiBTa2V0Y2ggMy42LjEgKDI2MzEzKSAtIGh0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaCAtLT5cblx0XHRcdCAgICA8dGl0bGU+aXBob25lNTwvdGl0bGU+XG5cdFx0XHQgICAgPGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+XG5cdFx0XHQgICAgPGRlZnM+PC9kZWZzPlxuXHRcdFx0ICAgIDxnIGlkPSdQYWdlLTEnIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnIGZpbGwtb3BhY2l0eT0nMC45Jz5cblx0XHRcdCAgICAgICAgPGcgaWQ9J2lQaG9uZS01LzVTLzVDJyBmaWxsPScjMUExQTFDJz5cblx0XHRcdCAgICAgICAgICAgIDxwYXRoIGQ9J00wLDAgTDMyMCwwIEwzMjAsNjggTDAsNjggTDAsMCBaIE0xNDIsNjEuMDA0ODgxNSBDMTQyLDU5Ljg5NzYxNiAxNDIuODk2Mjc5LDU5IDE0NC4wMDI0LDU5IEwxNzYuOTk3Niw1OSBDMTc4LjEwMzQ5NSw1OSAxNzksNTkuODkzODk5OCAxNzksNjEuMDA0ODgxNSBMMTc5LDYxLjk5NTExODUgQzE3OSw2My4xMDIzODQgMTc4LjEwMzcyMSw2NCAxNzYuOTk3Niw2NCBMMTQ0LjAwMjQsNjQgQzE0Mi44OTY1MDUsNjQgMTQyLDYzLjEwNjEwMDIgMTQyLDYxLjk5NTExODUgTDE0Miw2MS4wMDQ4ODE1IFonIGlkPSdpcGhvbmU1Jz48L3BhdGg+XG5cdFx0XHQgICAgICAgIDwvZz5cblx0XHRcdCAgICA8L2c+XG5cdFx0XHQ8L3N2Zz5cIlxuXHRcdFwiaXBob25lLTZzXCI6IFwiPD94bWwgdmVyc2lvbj0nMS4wJyBlbmNvZGluZz0nVVRGLTgnIHN0YW5kYWxvbmU9J25vJz8+XG5cdFx0XHRcdDxzdmcgd2lkdGg9JzM3NXB4JyBoZWlnaHQ9JzY4cHgnIHZpZXdCb3g9JzAgMCAzNzUgNjgnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+XG5cdFx0XHRcdFx0PCEtLSBHZW5lcmF0b3I6IFNrZXRjaCAzLjYgKDI2MzA0KSAtIGh0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaCAtLT5cblx0XHRcdFx0XHQ8dGl0bGU+Tm90aWZpY2F0aW9uIGJhY2tncm91bmQ8L3RpdGxlPlxuXHRcdFx0XHRcdDxkZXNjPkNyZWF0ZWQgd2l0aCBTa2V0Y2guPC9kZXNjPlxuXHRcdFx0XHRcdDxkZWZzPjwvZGVmcz5cblx0XHRcdFx0XHQ8ZyBpZD0nUGFnZS0xJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJyBmaWxsLW9wYWNpdHk9JzAuOSc+XG5cdFx0XHRcdFx0XHQ8ZyBpZD0naU9TOC1QdXNoLU5vdGlmaWNhdGlvbicgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTU4LjAwMDAwMCwgLTIzLjAwMDAwMCknIGZpbGw9JyMxQTFBMUMnPlxuXHRcdFx0XHRcdFx0XHQ8ZyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSg1OC4wMDAwMDAsIDcuMDAwMDAwKScgaWQ9J05vdGlmaWNhdGlvbi1jb250YWluZXInPlxuXHRcdFx0XHRcdFx0XHRcdDxnPlxuXHRcdFx0XHRcdFx0XHRcdFx0PHBhdGggZD0nTTAsMTYgTDM3NSwxNiBMMzc1LDg0IEwwLDg0IEwwLDE2IFogTTE2OSw3Ny4wMDQ4ODE1IEMxNjksNzUuODk3NjE2IDE2OS44OTYyNzksNzUgMTcxLjAwMjQsNzUgTDIwMy45OTc2LDc1IEMyMDUuMTAzNDk1LDc1IDIwNiw3NS44OTM4OTk4IDIwNiw3Ny4wMDQ4ODE1IEwyMDYsNzcuOTk1MTE4NSBDMjA2LDc5LjEwMjM4NCAyMDUuMTAzNzIxLDgwIDIwMy45OTc2LDgwIEwxNzEuMDAyNCw4MCBDMTY5Ljg5NjUwNSw4MCAxNjksNzkuMTA2MTAwMiAxNjksNzcuOTk1MTE4NSBMMTY5LDc3LjAwNDg4MTUgWicgaWQ9J05vdGlmaWNhdGlvbi1iYWNrZ3JvdW5kJz48L3BhdGg+XG5cdFx0XHRcdFx0XHRcdFx0PC9nPlxuXHRcdFx0XHRcdFx0XHQ8L2c+XG5cdFx0XHRcdFx0XHQ8L2c+XG5cdFx0XHRcdFx0PC9nPlxuXHRcdFx0XHQ8L3N2Zz5cIlxuXHRcdFwiaXBob25lLTZzLXBsdXNcIiA6IFwiPD94bWwgdmVyc2lvbj0nMS4wJyBlbmNvZGluZz0nVVRGLTgnIHN0YW5kYWxvbmU9J25vJz8+XG5cdFx0XHRcdDxzdmcgd2lkdGg9JzQxNHB4JyBoZWlnaHQ9JzY4cHgnIHZpZXdCb3g9JzAgMCA0MTQgNjgnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+XG5cdFx0XHRcdDwhLS0gR2VuZXJhdG9yOiBTa2V0Y2ggMy42ICgyNjMwNCkgLSBodHRwOi8vd3d3LmJvaGVtaWFuY29kaW5nLmNvbS9za2V0Y2ggLS0+XG5cdFx0XHRcdDx0aXRsZT5Ob3RpZmljYXRpb24gYmFja2dyb3VuZCBDb3B5PC90aXRsZT5cblx0XHRcdFx0PGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+XG5cdFx0XHRcdDxkZWZzPjwvZGVmcz5cblx0XHRcdFx0PGcgaWQ9J1BhZ2UtMScgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCcgZmlsbC1vcGFjaXR5PScwLjknPlxuXHRcdFx0XHRcdDxnIGlkPSdpT1M4LVB1c2gtTm90aWZpY2F0aW9uJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtNDMuMDAwMDAwLCAtNzQuMDAwMDAwKScgZmlsbD0nIzFBMUExQyc+XG5cdFx0XHRcdFx0XHQ8ZyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSg0My4wMDAwMDAsIDc0LjAwMDAwMCknIGlkPSdOb3RpZmljYXRpb24tY29udGFpbmVyJz5cblx0XHRcdFx0XHRcdFx0PGc+XG5cdFx0XHRcdFx0XHRcdFx0PHBhdGggZD0nTTAsMCBMNDE0LDAgTDQxNCw2OCBMMCw2OCBMMCwwIFogTTE4OSw2MS4wMDQ4ODE1IEMxODksNTkuODk3NjE2IDE4OS44OTYyNzksNTkgMTkxLjAwMjQsNTkgTDIyMy45OTc2LDU5IEMyMjUuMTAzNDk1LDU5IDIyNiw1OS44OTM4OTk4IDIyNiw2MS4wMDQ4ODE1IEwyMjYsNjEuOTk1MTE4NSBDMjI2LDYzLjEwMjM4NCAyMjUuMTAzNzIxLDY0IDIyMy45OTc2LDY0IEwxOTEuMDAyNCw2NCBDMTg5Ljg5NjUwNSw2NCAxODksNjMuMTA2MTAwMiAxODksNjEuOTk1MTE4NSBMMTg5LDYxLjAwNDg4MTUgWicgaWQ9J05vdGlmaWNhdGlvbi1iYWNrZ3JvdW5kLUNvcHknPjwvcGF0aD5cblx0XHRcdFx0XHRcdFx0PC9nPlxuXHRcdFx0XHRcdFx0PC9nPlxuXHRcdFx0XHRcdDwvZz5cblx0XHRcdFx0PC9nPlxuXHRcdFx0PC9zdmc+XCJcblx0XHRcImlwYWRcIiA6IFwiPD94bWwgdmVyc2lvbj0nMS4wJyBlbmNvZGluZz0nVVRGLTgnIHN0YW5kYWxvbmU9J25vJz8+XG5cdFx0XHRcdDxzdmcgd2lkdGg9Jzc2OHB4JyBoZWlnaHQ9JzY4cHgnIHZpZXdCb3g9JzAgMCA3NjggNjgnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+XG5cdFx0XHRcdCAgICA8IS0tIEdlbmVyYXRvcjogU2tldGNoIDMuNi4xICgyNjMxMykgLSBodHRwOi8vd3d3LmJvaGVtaWFuY29kaW5nLmNvbS9za2V0Y2ggLS0+XG5cdFx0XHRcdCAgICA8dGl0bGU+aXBhZC1wb3J0cmFpdDwvdGl0bGU+XG5cdFx0XHRcdCAgICA8ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz5cblx0XHRcdFx0ICAgIDxkZWZzPjwvZGVmcz5cblx0XHRcdFx0ICAgIDxnIGlkPSdQYWdlLTEnIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnIGZpbGwtb3BhY2l0eT0nMC45Jz5cblx0XHRcdFx0ICAgICAgICA8ZyBpZD0naVBhZC1Qb3J0cmFpdCcgZmlsbD0nIzFBMUExQyc+XG5cdFx0XHRcdCAgICAgICAgICAgIDxwYXRoIGQ9J00wLDAgTDc2OCwwIEw3NjgsNjggTDAsNjggTDAsMCBaIE0zNjYsNjEuMDA0ODgxNSBDMzY2LDU5Ljg5NzYxNiAzNjYuODk2Mjc5LDU5IDM2OC4wMDI0LDU5IEw0MDAuOTk3Niw1OSBDNDAyLjEwMzQ5NSw1OSA0MDMsNTkuODkzODk5OCA0MDMsNjEuMDA0ODgxNSBMNDAzLDYxLjk5NTExODUgQzQwMyw2My4xMDIzODQgNDAyLjEwMzcyMSw2NCA0MDAuOTk3Niw2NCBMMzY4LjAwMjQsNjQgQzM2Ni44OTY1MDUsNjQgMzY2LDYzLjEwNjEwMDIgMzY2LDYxLjk5NTExODUgTDM2Niw2MS4wMDQ4ODE1IFonIGlkPSdpcGFkLXBvcnRyYWl0Jz48L3BhdGg+XG5cdFx0XHRcdCAgICAgICAgPC9nPlxuXHRcdFx0XHQgICAgPC9nPlxuXHRcdFx0XHQ8L3N2Zz5cIlxuXHRcdFwiaXBhZC1wcm9cIiA6IFwiPD94bWwgdmVyc2lvbj0nMS4wJyBlbmNvZGluZz0nVVRGLTgnIHN0YW5kYWxvbmU9J25vJz8+XG5cdFx0XHRcdDxzdmcgd2lkdGg9JzEwMjRweCcgaGVpZ2h0PSc2OHB4JyB2aWV3Qm94PScwIDAgMTAyNCA2OCcgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJz5cblx0XHRcdFx0ICAgIDwhLS0gR2VuZXJhdG9yOiBTa2V0Y2ggMy42LjEgKDI2MzEzKSAtIGh0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaCAtLT5cblx0XHRcdFx0ICAgIDx0aXRsZT5pcGFkLXByby1wb3J0cmFpdDwvdGl0bGU+XG5cdFx0XHRcdCAgICA8ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz5cblx0XHRcdFx0ICAgIDxkZWZzPjwvZGVmcz5cblx0XHRcdFx0ICAgIDxnIGlkPSdQYWdlLTEnIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnIGZpbGwtb3BhY2l0eT0nMC45Jz5cblx0XHRcdFx0ICAgICAgICA8ZyBpZD0naVBhZC1Qcm8tUG9ydHJhaXQnIGZpbGw9JyMxQTFBMUMnPlxuXHRcdFx0XHQgICAgICAgICAgICA8cGF0aCBkPSdNMCwwIEwxMDI0LDAgTDEwMjQsNjggTDAsNjggTDAsMCBaIE00OTQsNjEuMDA0ODgxNSBDNDk0LDU5Ljg5NzYxNiA0OTQuODk2Mjc5LDU5IDQ5Ni4wMDI0LDU5IEw1MjguOTk3Niw1OSBDNTMwLjEwMzQ5NSw1OSA1MzEsNTkuODkzODk5OCA1MzEsNjEuMDA0ODgxNSBMNTMxLDYxLjk5NTExODUgQzUzMSw2My4xMDIzODQgNTMwLjEwMzcyMSw2NCA1MjguOTk3Niw2NCBMNDk2LjAwMjQsNjQgQzQ5NC44OTY1MDUsNjQgNDk0LDYzLjEwNjEwMDIgNDk0LDYxLjk5NTExODUgTDQ5NCw2MS4wMDQ4ODE1IFonIGlkPSdpcGFkLXByby1wb3J0cmFpdCc+PC9wYXRoPlxuXHRcdFx0XHQgICAgICAgIDwvZz5cblx0XHRcdFx0ICAgIDwvZz5cblx0XHRcdFx0PC9zdmc+XCJcblx0fVxuXHRlbW9qaUNvZGVzOiBbXCI5OCA4MFwiLCBcIjk4IEFDXCIsIFwiOTggODFcIiwgXCI5OCA4MlwiLCBcIjk4IDgzXCIsIFwiOTggODRcIiwgXCI5OCA4NVwiLCBcIjk4IDg2XCIsIFwiOTggODdcIiwgXCI5OCA4OVwiLCBcIjk4IDhhXCIsIFwiOTkgODJcIiwgXCI5OSA4M1wiLCBcIkUyIDk4IEJBIEVGIEI4IDhGXCIsIFwiOTggOEJcIiAsIFwiOTggOENcIiwgXCI5OCA4RFwiLCBcIjk4IDk4XCIsIFwiOTggOTdcIiwgXCI5OCA5OVwiLCBcIjk4IDlBXCIsIFwiOTggOUNcIiwgXCI5OCA5RFwiLCBcIjk4IDlCXCIsIFwiQTQgOTFcIiwgXCJBNCA5M1wiLCBcIjk4IDhFXCIsIFwiQTQgOTdcIiwgXCI5OCA4RlwiLCBcIjk4IEI2XCIsIFwiOTggOTBcIiwgXCI5OCA5MVwiLCBcIjk4IDkyXCIsIFwiOTkgODRcIiwgXCJBNCA5NFwiLCBcIjk4IEIzXCIsIFwiOTggOUVcIiwgXCI5OCA5RlwiLCBcIjk4IEEwXCIsIFwiOTggQTFcIiwgXCI5OCA5NFwiLCBcIjk4IDk1XCIsIFwiOTkgODFcIiwgXCJFMiA5OCBCOSBFRiBCOCA4RlwiLCBcIjk4IEEzXCIsIFwiOTggOTZcIiwgXCI5OCBBQlwiLCBcIjk4IEE5XCIsIFwiOTggQTRcIiwgXCI5OCBBRVwiLCBcIjk4IEIxXCIsIFwiOTggQThcIiwgXCI5OCBCMFwiLCBcIjk4IEFGXCIsIFwiOTggQTZcIiwgXCI5OCBBN1wiLCBcIjk4IEEyXCIsIFwiOTggQTVcIiwgXCI5OCBBQVwiLCBcIjk4IDkzXCIsIFwiOTggQURcIiwgXCI5OCBCNVwiLCBcIjk4IEIyXCIsIFwiQTQgOTBcIiwgXCI5OCBCN1wiLCBcIkE0IDkyXCIsIFwiQTQgOTVcIiwgXCI5OCBCNFwiLCBcIjkyIEE0XCIsIFwiOTIgQTlcIiwgXCI5OCA4OFwiLCBcIjkxIEJGXCIsIFwiOTEgQjlcIiwgXCI5MSBCQVwiLCBcIjkyIDgwXCIsIFwiOTEgQkJcIiwgXCI5MSBCRFwiLCBcIkE0IDk2XCIsIFwiOTggQkFcIiwgXCI5OCBCOFwiLCBcIjk4IEI5XCIsIFwiOTggQkJcIiwgXCI5OCBCQ1wiLCBcIjk4IEJEXCIsIFwiOTkgODBcIiwgXCI5OCBCRlwiLCBcIjk4IEJFXCIsIFwiOTkgOENcIiwgXCI5MSA4RlwiLCBcIjkxIDhCXCIsIFwiOTEgOERcIiwgXCI5MSA4RVwiLCBcIjkxIDhBXCIsIFwiRTIgOUMgOEFcIiwgXCJFMiA5QyA4QyBFRiBCOCA4RlwiLCBcIjkxIDhDXCIsIFwiRTIgOUMgOEJcIiwgXCI5MSA5MFwiLCBcIjkyIEFBXCIsIFwiOTkgOEZcIiwgXCJFMiA5OCA5RCBFRiBCOCA4RlwiLCBcIjkxIDg2XCIsIFwiOTEgODdcIiwgXCI5MSA4OFwiLCBcIjkxIDg5XCIsIFwiOTYgOTVcIiwgXCI5NiA5MFwiLCBcIkE0IDk4XCIsIFwiOTYgOTZcIiwgXCJFMiA5QyA4RCBFRiBCOCA4RlwiLCBcIjkyIDg1XCIsIFwiOTEgODRcIiwgXCI5MSA4NVwiLCBcIjkxIDgyXCIsIFwiOTEgODNcIiwgXCI5MSA4MVwiLCBcIjkxIDgwXCIsIFwiOTEgQTRcIiwgXCI5MSBBNVwiLCBcIjk3IEEzXCIsIFwiOTEgQjZcIiwgXCI5MSBBNlwiLCBcIjkxIEE3XCIsIFwiOTEgQThcIiwgXCI5MSBBOVwiLCBcIjkxIEIxXCIsIFwiOTEgQjRcIiwgXCI5MSBCNVwiLCBcIjkxIEIyXCIsIFwiOTEgQjNcIiwgXCI5MSBBRVwiLCBcIjkxIEI3XCIsIFwiOTIgODJcIiwgXCI5NSBCNVwiLCBcIjhFIDg1XCIsIFwiOTEgQkNcIiwgXCI5MSBCOFwiLCBcIjkxIEIwXCIsIFwiOUEgQjZcIiwgXCI4RiA4M1wiLCBcIjkyIDgzXCIsIFwiOTEgQUZcIiwgXCI5MSBBQlwiLCBcIjkxIEFDXCIsIFwiOTEgQURcIiwgXCI5OSA4N1wiLCBcIjkyIDgxXCIsIFwiOTkgODVcIiwgXCI5OSA4NlwiLCBcIjk5IDhCXCIsIFwiOTkgOEVcIiwgXCI5OSA4RFwiLCBcIjkyIDg3XCIsIFwiOTIgODZcIiwgXCI5MiA5MVwiLCBcIjkxIEE5IEUyIDgwIDhEIEUyIDlEIEE0IEVGIEI4IDhGIEUyIDgwIDhEIEYwIDlGIDkxIEE5XCIsIFwiOTEgQTggRTIgODAgOEQgRTIgOUQgQTQgRUYgQjggOEYgRTIgODAgOEQgRjAgOUYgOTEgQThcIiwgXCI5MiA4RlwiLCBcIjkxIEE5IEUyIDgwIDhEIEUyIDlEIEE0IEVGIEI4IDhGIEUyIDgwIDhEIEYwIDlGIDkyIDhCIEUyIDgwIDhEIEYwIDlGIDkxIEE5XCIsIFwiOTEgQTggRTIgODAgOEQgRTIgOUQgQTQgRUYgQjggOEYgRTIgODAgOEQgRjAgOUYgOTIgOEIgRTIgODAgOEQgRjAgOUYgOTEgQThcIiwgXCI5MSBBQVwiLCBcIjkxIEE4IEUyIDgwIDhEIEYwIDlGIDkxIEE5IEUyIDgwIDhEIEYwIDlGIDkxIEE3XCIsIFwiOTEgQTggRTIgODAgOEQgRjAgOUYgOTEgQTkgRTIgODAgOEQgRjAgOUYgOTEgQTcgRTIgODAgOEQgRjAgOUYgOTEgQTZcIiwgXCI5MSBBOCBFMiA4MCA4RCBGMCA5RiA5MSBBOSBFMiA4MCA4RCBGMCA5RiA5MSBBNiBFMiA4MCA4RCBGMCA5RiA5MSBBNlwiLCBcIjkxIEE4IEUyIDgwIDhEIEYwIDlGIDkxIEE5IEUyIDgwIDhEIEYwIDlGIDkxIEE3IEUyIDgwIDhEIEYwIDlGIDkxIEE3XCIsIFwiOTEgQTkgRTIgODAgOEQgRjAgOUYgOTEgQTkgRTIgODAgOEQgRjAgOUYgOTEgQTZcIiwgXCI5MSBBOSBFMiA4MCA4RCBGMCA5RiA5MSBBOSBFMiA4MCA4RCBGMCA5RiA5MSBBN1wiLCBcIjkxIEE5IEUyIDgwIDhEIEYwIDlGIDkxIEE5IEUyIDgwIDhEIEYwIDlGIDkxIEE3IEUyIDgwIDhEIEYwIDlGIDkxIEE2XCIsIFwiOTEgQTkgRTIgODAgOEQgRjAgOUYgOTEgQTkgRTIgODAgOEQgRjAgOUYgOTEgQTYgRTIgODAgOEQgRjAgOUYgOTEgQTZcIiwgXCI5MSBBOSBFMiA4MCA4RCBGMCA5RiA5MSBBOSBFMiA4MCA4RCBGMCA5RiA5MSBBNyBFMiA4MCA4RCBGMCA5RiA5MSBBN1wiLCBcIjkxIEE4IEUyIDgwIDhEIEYwIDlGIDkxIEE4IEUyIDgwIDhEIEYwIDlGIDkxIEE2XCIsIFwiOTEgQTggRTIgODAgOEQgRjAgOUYgOTEgQTggRTIgODAgOEQgRjAgOUYgOTEgQTdcIiwgXCI5MSBBOCBFMiA4MCA4RCBGMCA5RiA5MSBBOCBFMiA4MCA4RCBGMCA5RiA5MSBBNyBFMiA4MCA4RCBGMCA5RiA5MSBBNlwiLCBcIjkxIEE4IEUyIDgwIDhEIEYwIDlGIDkxIEE4IEUyIDgwIDhEIEYwIDlGIDkxIEE2IEUyIDgwIDhEIEYwIDlGIDkxIEE2XCIsIFwiOTEgQTggRTIgODAgOEQgRjAgOUYgOTEgQTggRTIgODAgOEQgRjAgOUYgOTEgQTcgRTIgODAgOEQgRjAgOUYgOTEgQTdcIiwgXCI5MSA5QVwiLCBcIjkxIDk1XCIsIFwiOTEgOTZcIiwgXCI5MSA5NFwiLCBcIjkxIDk3XCIsIFwiOTEgOTlcIiwgXCI5MSA5OFwiLCBcIjkyIDg0XCIsIFwiOTIgOEJcIiwgXCI5MSBBM1wiLCBcIjkxIEEwXCIsIFwiOTEgQTFcIiwgXCI5MSBBMlwiLCBcIjkxIDlFXCIsIFwiOTEgOUZcIiwgXCI5MSA5MlwiLCBcIjhFIEE5XCIsIFwiRTIgOUIgOTFcIiwgXCI4RSA5M1wiLCBcIjkxIDkxXCIsIFwiOEUgOTJcIiwgXCI5MSA5RFwiLCBcIjkxIDlCXCIsIFwiOTEgOUNcIiwgXCI5MiBCQ1wiLCBcIjkxIDkzXCIsIFwiOTUgQjZcIiwgXCI5MiA4RFwiLCBcIjhDIDgyXCIsIFwiOUIgOTFcIiwgXCI5MCBCNlwiLCBcIjkwIEIxXCIsIFwiOTAgQURcIiwgXCI5MCBCOVwiLCBcIjkwIEIwXCIsIFwiOTAgQkJcIiwgXCI5MCBCQ1wiLCBcIjkwIEE4XCIsIFwiOTAgQUZcIiwgXCJBNiA4MVwiLCBcIjkwIEFFXCIsIFwiOTAgQjdcIiwgXCI5MCBCRFwiLCBcIjkwIEI4XCIsIFwiOTAgOTlcIiwgXCI5MCBCNVwiLCBcIjk5IDg4XCIsIFwiOTkgODlcIiwgXCI5OSA4QVwiLCBcIjkwIDkyXCIsIFwiOTAgOTRcIiwgXCI5MCBBN1wiLCBcIjkwIEE2XCIsIFwiOTAgQTRcIiwgXCI5MCBBM1wiLCBcIjkwIEE1XCIsIFwiOTAgQkFcIiwgXCI5MCA5N1wiLCBcIjkwIEI0XCIsIFwiQTYgODRcIiwgXCI5MCA5RFwiLCBcIjkwIDlCXCIsIFwiOTAgOENcIiwgXCI5MCA5RVwiLCBcIjkwIDlDXCIsIFwiOTUgQjdcIiwgXCJBNiA4MlwiLCBcIkE2IDgwXCIsIFwiOTAgOERcIiwgXCI5MCBBMlwiLCBcIjkwIEEwXCIsIFwiOTAgOUZcIiwgXCI5MCBBMVwiLCBcIjkwIEFDXCIsIFwiOTAgQjNcIiwgXCI5MCA4QlwiLCBcIjkwIDhBXCIsIFwiOTAgODZcIiwgXCI5MCA4NVwiLCBcIjkwIDgzXCIsIFwiOTAgODJcIiwgXCI5MCA4NFwiLCBcIjkwIEFBXCIsIFwiOTAgQUJcIiwgXCI5MCA5OFwiLCBcIjkwIDkwXCIsIFwiOTAgOEZcIiwgXCI5MCA5MVwiLCBcIjkwIDhFXCIsIFwiOTAgOTZcIiwgXCI5MCA4MFwiLCBcIjkwIDgxXCIsIFwiOTAgOTNcIiwgXCJBNiA4M1wiLCBcIjk1IDhBXCIsIFwiOTAgOTVcIiwgXCI5MCBBOVwiLCBcIjkwIDg4XCIsIFwiOTAgODdcIiwgXCI5MCBCRlwiLCBcIjkwIEJFXCIsIFwiOTAgODlcIiwgXCI5MCBCMlwiLCBcIjhDIEI1XCIsIFwiOEUgODRcIiwgXCI4QyBCMlwiLCBcIjhDIEIzXCIsIFwiOEMgQjRcIiwgXCI4QyBCMVwiLCBcIjhDIEJGXCIsIFwiRTIgOTggOThcIiwgXCI4RCA4MFwiLCBcIjhFIDhEXCIsIFwiOEUgOEJcIiwgXCI4RCA4M1wiLCBcIjhEIDgyXCIsIFwiOEQgODFcIiwgXCI4QyBCRVwiLCBcIjhDIEJBXCIsIFwiOEMgQkFcIiwgXCI4QyBCQlwiLCBcIjhDIEI5XCIsIFwiOEMgQjdcIiwgXCI4QyBCQ1wiLCBcIjhDIEI4XCIsIFwiOTIgOTBcIiwgXCI4RCA4NFwiLCBcIjhDIEIwXCIsIFwiOEUgODNcIiwgXCI5MCA5QVwiLCBcIjk1IEI4XCIsIFwiOEMgOEVcIiwgXCI4QyA4RFwiLCBcIjhDIDhGXCIsIFwiOEMgOTVcIiwgXCI4QyA5NlwiLCBcIjhDIDk3XCIsIFwiOEMgOThcIiwgXCI4QyA5MVwiLCBcIjhDIDkyXCIsIFwiOEMgOTNcIiwgXCI4QyA5NFwiLCBcIjhDIDlBXCIsIFwiOEMgOURcIiwgXCI4QyA5QlwiLCBcIjhDIDlDXCIsIFwiOEMgOUVcIiwgXCI4QyA5OVwiLCBcIkUyIEFEIDkwIEVGIEI4IDhGXCIsIFwiOEMgOUZcIiwgXCI5MiBBQlwiLCBcIkUyIDlDIEE4XCIsIFwiRTIgOTggODQgRUYgQjggOEZcIiwgXCJFMiA5OCA4MCBFRiBCOCA4RlwiLCBcIjhDIEE0XCIsIFwiRTIgOUIgODUgRUYgQjggOEZcIiwgXCI4QyBBNVwiLCBcIjhDIEE2XCIsIFwiRTIgOTggODEgRUYgQjggOEZcIiwgXCI4QyBBN1wiLCBcIkUyIDlCIDg4XCIsIFwiOEMgQTlcIiwgXCJFMiA5QSBBMSBFRiBCOCA4RlwiLCBcIjk0IEE1XCIsIFwiOTIgQTVcIiwgXCJFMiA5RCA4NCBFRiBCOCA4RlwiLCBcIjhDIEE4XCIsIFwiRTIgOTggODMgRUYgQjggOEZcIiwgXCJFMiA5QiA4NCBFRiBCOCA4RlwiLCBcIjhDIEFDXCIsIFwiOTIgQThcIiwgXCI4QyBBQVwiLCBcIjhDIEFCXCIsIFwiRTIgOTggODIgRUYgQjggOEZcIiwgXCJFMiA5OCA5NCBFRiBCOCA4RlwiLCBcIjkyIEE3XCIsIFwiOTIgQTZcIiwgXCI4QyA4QVwiLCBcIjlCIDkxXCIsIFwiOUIgOTFcIiwgXCI4RCA4RlwiLCBcIjhEIDhFXCIsIFwiOEQgOTBcIiwgXCI4RCA4QVwiLCBcIjhEIDhCXCIsIFwiOEQgOENcIiwgXCI4RCA4OVwiLCBcIjhEIDg3XCIsIFwiOEQgOTNcIiwgXCI4RCA4OFwiLCBcIjhEIDkyXCIsIFwiOEQgOTFcIiwgXCI4RCA4RFwiLCBcIjhEIDg1XCIsIFwiOEQgODZcIiwgXCI4QyBCNlwiLCBcIjhDIEJEXCIsIFwiOEQgQTBcIiwgXCI4RCBBRlwiLCBcIjhEIDlFXCIsIFwiQTcgODBcIiwgXCI4RCA5N1wiLCBcIjhEIDk2XCIsIFwiOEQgQTRcIiwgXCI4RCBCM1wiLCBcIjhEIDk0XCIsIFwiOEQgOUZcIiwgXCI4QyBBRFwiLCBcIjhEIDk1XCIsIFwiOEQgOURcIiwgXCI4QyBBRVwiLCBcIjhDIEFGXCIsIFwiOEQgOUNcIiwgXCI4RCBCMlwiLCBcIjhEIEE1XCIsIFwiOEQgQTNcIiwgXCI4RCBCMVwiLCBcIjhEIDlCXCIsIFwiOEQgOTlcIiwgXCI4RCA5QVwiLCBcIjhEIDk4XCIsIFwiOEQgQTJcIiwgXCI4RCBBMVwiLCBcIjhEIEE3XCIsIFwiOEQgQThcIiwgXCI4RCBBNlwiLCBcIjhEIEIwXCIsIFwiOEUgODJcIiwgXCI4RCBBRVwiLCBcIjhEIEFDXCIsIFwiOEQgQURcIiwgXCI4RCBBQlwiLCBcIjhEIEJGXCIsIFwiOEQgQTlcIiwgXCI4RCBBQVwiLCBcIjhEIEJBXCIsIFwiOEQgQkJcIiwgXCI4RCBCN1wiLCBcIjhEIEI4XCIsIFwiOEQgQjlcIiwgXCI4RCBCRVwiLCBcIjhEIEI2XCIsIFwiOEQgQjVcIiwgXCJFMiA5OCA5NSBFRiBCOCA4RlwiLCBcIjhEIEJDXCIsIFwiOEQgQjRcIiwgXCI4RCBCRFwiLFwiOUIgOTFcIiwgXCI5QiA5MVwiLCBcIjlCIDkxXCIsIFwiRTIgOUEgQkQgRUYgQjggOEZcIiwgXCI4RiA4MFwiLCBcIjhGIDg4XCIsIFwiRTIgOUEgQkUgRUYgQjggOEZcIiwgXCI4RSBCRVwiLCBcIjhGIDkwXCIsIFwiOEYgODlcIiwgXCI4RSBCMVwiLCBcIkUyIDlCIEIzIEVGIEI4IDhGXCIsIFwiOEYgOENcIiwgXCI4RiA5M1wiLCBcIjhGIEI4XCIsIFwiOEYgOTJcIiwgXCI4RiA5MVwiLCBcIjhGIDhGXCIsIFwiOEUgQkZcIiwgXCJFMiA5QiBCN1wiLCBcIjhGIDgyXCIsIFwiRTIgOUIgQjhcIiwgXCI4RiBCOVwiLCBcIjhFIEEzXCIsIFwiOUEgQTNcIiwgXCI4RiA4QVwiLCBcIjhGIDg0XCIsIFwiOUIgODBcIiwgXCJFMiA5QiBCOVwiLCBcIjhGIDhCXCIsIFwiOUEgQjRcIiwgXCI5QSBCNVwiLCBcIjhGIDg3XCIsIFwiOTUgQjRcIiwgXCI4RiA4NlwiLCBcIjhFIEJEXCIsIFwiOEYgODVcIiwgXCI4RSA5NlwiLCBcIjhFIDk3XCIsIFwiOEYgQjVcIiwgXCI4RSBBQlwiLCBcIjhFIDlGXCIsIFwiOEUgQURcIiwgXCI4RSBBOFwiLCBcIjhFIEFBXCIsIFwiOEUgQTRcIiwgXCI4RSBBN1wiLCBcIjhFIEJDXCIsIFwiOEUgQjlcIiwgXCI4RSBCN1wiLCBcIjhFIEJBXCIsIFwiOEUgQjhcIiwgXCI4RSBCQlwiLCBcIjhFIEFDXCIsIFwiOEUgQUVcIiwgXCI5MSBCRVwiLCBcIjhFIEFGXCIsIFwiOEUgQjJcIiwgXCI4RSBCMFwiLCBcIjhFIEIzXCIsIFwiOUIgOTFcIiwgXCI5QiA5MVwiLCBcIjlCIDkxXCIsIFwiOUEgOTdcIiwgXCI5QSA5NVwiLCBcIjlBIDk5XCIsIFwiOUEgOENcIiwgXCI5QSA4RVwiLCBcIjhGIDhFXCIsIFwiOUEgOTNcIiwgXCI5QSA5MVwiLCBcIjlBIDkyXCIsIFwiOUEgOTBcIiwgXCI5QSA5QVwiLCBcIjlBIDlCXCIsIFwiOUEgOUNcIixcIjhGIDhEXCIsIFwiOUEgQjJcIiwgXCI5QSBBOFwiLCBcIjlBIDk0XCIsIFwiOUEgOERcIiwgXCI5QSA5OFwiLCBcIjlBIDk2XCIsIFwiOUEgQTFcIiwgXCI5QSBBMFwiLCBcIjlBIEFGXCIsIFwiOUEgODNcIiwgXCI5QSA4QlwiLCBcIjlBIDlEXCIsIFwiOUEgODRcIiwgXCI5QSA4NVwiLCBcIjlBIDg4XCIsIFwiOUEgOUVcIiwgXCI5QSA4MlwiLCBcIjlBIDg2XCIsIFwiOUEgODdcIiwgXCI5QSA4QVwiLCBcIjlBIDg5XCIsIFwiOUEgODFcIiwgXCI5QiBBOVwiLCBcIkUyIDlDIDg4IEVGIEI4IDhGXCIsIFwiOUIgQUJcIiwgXCI5QiBBQ1wiLCBcIkUyIDlCIEI1IEVGIEI4IDhGXCIsIFwiOUIgQTVcIiwgXCI5QSBBNFwiLCBcIkUyIDlCIEI0XCIsIFwiOUIgQjNcIiwgXCI5QSA4MFwiLCBcIjlCIEIwXCIsIFwiOTIgQkFcIiwgXCJFMiA5QSA5MyBFRiBCOCA4RlwiLCBcIjlBIEE3XCIsIFwiRTIgOUIgQkQgRUYgQjggOEZcIiwgXCI5QSA4RlwiLCBcIjlBIEE2XCIsIFwiOUEgQTVcIiwgXCI4RiA4MVwiLCBcIjlBIEEyXCIsIFwiOEUgQTFcIiwgXCI4RSBBMlwiLCBcIjhFIEEwXCIsIFwiOEYgOTdcIiwgXCI4QyA4MVwiLCBcIjk3IEJDXCIsIFwiOEYgQURcIiwgXCJFMiA5QiBCMiBFRiBCOCA4RlwiLCBcIjhFIDkxXCIsIFwiRTIgOUIgQjBcIiwgXCI4RiA5NFwiLCBcIjk3IEJCXCIsIFwiOEMgOEJcIiwgXCI5NyBCRVwiLCBcIjhGIDk1XCIsIFwiRTIgOUIgQkEgRUYgQjggOEZcIiwgXCI4RiA5RVwiLCBcIjlCIEEzXCIsIFwiOUIgQTRcIiwgXCI4QyA4NVwiLCBcIjhDIDg0XCIsIFwiOEYgOUNcIiwgXCI4RiA5NlwiLCBcIjhGIDlEXCIsIFwiOEMgODdcIiwgXCI4QyA4NlwiLCBcIjhGIDk5XCIsIFwiOEMgODNcIiwgXCI4QyA4OVwiLCBcIjhDIDhDXCIsIFwiOEMgQTBcIiwgXCI4RSA4N1wiLCBcIjhFIDg2XCIsIFwiOEMgODhcIiwgXCI4RiA5OFwiLCBcIjhGIEIwXCIsIFwiOEYgQUZcIiwgXCI4RiA5RlwiLCBcIjk3IEJEXCIsIFwiOEYgQTBcIiwgXCI4RiBBMVwiLCBcIjhGIDlBXCIsIFwiOEYgQTJcIiwgXCI4RiBBQ1wiLCBcIjhGIEEzXCIsIFwiOEYgQTRcIiwgXCI4RiBBNVwiLCBcIjhGIEE2XCIsIFwiOEYgQThcIiwgXCI4RiBBQVwiLCBcIjhGIEFCXCIsIFwiOEYgQTlcIiwgXCI5MiA5MlwiLCBcIjhGIDlCXCIsIFwiRTIgOUIgQUEgRUYgQjggOEZcIiwgXCI5NSA4Q1wiLCBcIjk1IDhEXCIsIFwiOTUgOEJcIiwgXCJFMiA5QiBBOVwiLCBcIkUyIDhDIDlBIEVGIEI4IDhGXCIsIFwiOTMgQjFcIiwgXCI5MyBCMlwiLCBcIjkyIEJCXCIsIFwiRTIgOEMgQTggRUYgQjggOEZcIiwgXCI5NiBBNVwiLCBcIjk2IEE4XCIsIFwiOTYgQjFcIiwgXCI5NiBCMlwiLCBcIjk1IEI5XCIsIFwiOTcgOUNcIiwgXCI5MiBCRFwiLCBcIjkyIEJFXCIsIFwiOTIgQkZcIiwgXCI5MyA4MFwiLCBcIjkzIEJDXCIsIFwiOTMgQjdcIiwgXCI5MyBCOFwiLCBcIjkzIEI5XCIsIFwiOEUgQTVcIiwgXCI5MyBCRFwiLCBcIjhFIDlFXCIsIFwiOTMgOUVcIiwgXCJFMiA5OCA4RSBFRiBCOCA4RlwiLCBcIjkzIDlGXCIsIFwiOTMgQTBcIiwgXCI5MyBCQVwiLCBcIjkzIEJCXCIsIFwiOEUgOTlcIiwgXCI4RSA5QVwiLCBcIjhFIDlCXCIsIFwiRTIgOEYgQjFcIiwgXCJFMiA4RiBCMlwiLCBcIkUyIDhGIEIwXCIsIFwiOTUgQjBcIiwgXCJFMiA4RiBCM1wiLCBcIkUyIDhDIDlCIEVGIEI4IDhGXCIsIFwiOTMgQTFcIiwgXCI5NCA4QlwiLCBcIjk0IDhDXCIsIFwiOTIgQTFcIiwgXCI5NCBBNlwiLCBcIjk1IEFGXCIsIFwiOTcgOTFcIiwgXCI5QiBBMlwiLCBcIjkyIEI4XCIsIFwiOTIgQjVcIiwgXCI5MiBCNFwiLCBcIjkyIEI2XCIsIFwiOTIgQjdcIiwgXCI5MiBCMFwiLCBcIjkyIEIzXCIsIFwiOTIgOEVcIiwgXCJFMiA5QSA5NlwiLCBcIjk0IEE3XCIsIFwiOTQgQThcIiwgXCJFMiA5QSA5MlwiLCBcIjlCIEEwXCIsIFwiRTIgOUIgOEZcIiwgXCI5NCBBOVwiLCBcIkUyIDlBIDk5XCIsIFwiRTIgOUIgOTNcIiwgXCI5NCBBQlwiLCBcIjkyIEEzXCIsIFwiOTQgQUFcIiwgXCI5NyBBMVwiLCBcIkUyIDlBIDk0XCIsIFwiOUIgQTFcIiwgXCI5QSBBQ1wiLCBcIkUyIDk4IEEwIEVGIEI4IDhGXCIsIFwiRTIgOUEgQjBcIiwgXCJFMiA5QSBCMVwiLCBcIjhGIEJBXCIsIFwiOTQgQUVcIiwgXCI5MyBCRlwiLCBcIjkyIDg4XCIsIFwiRTIgOUEgOTdcIiwgXCI5NCBBRFwiLCBcIjk0IEFDXCIsIFwiOTUgQjNcIiwgXCI5MiA4QVwiLCBcIjkyIDg5XCIsIFwiOEMgQTFcIiwgXCI4RiBCN1wiLCBcIjk0IDk2XCIsIFwiOUEgQkRcIiwgXCI5QSBCRlwiLCBcIjlCIDgxXCIsIFwiOTQgOTFcIiwgXCI5NyA5RFwiLCBcIjlCIDhCXCIsIFwiOUIgOENcIiwgXCI5QiA4RlwiLCBcIjlBIEFBXCIsIFwiOUIgOEVcIiwgXCI5NiBCQ1wiLCBcIjk3IEJBXCIsIFwiRTIgOUIgQjFcIiwgXCI5NyBCRlwiLCBcIjlCIDhEXCIsIFwiOEUgODhcIiwgXCI4RSA4RlwiLCBcIjhFIDgwXCIsIFwiOEUgODFcIiwgXCI4RSA4QVwiLCBcIjhFIDg5XCIsIFwiOEUgOEVcIiwgXCI4RSA5MFwiLCBcIjhFIDhDXCIsIFwiOEYgQUVcIiwgXCJFMiA5QyA4OSBFRiBCOCA4RlwiLCBcIjkzIEE5XCIsIFwiOTMgQThcIiwgXCI5MyBBN1wiLCBcIjkyIDhDXCIsIFwiOTMgQUVcIiwgXCI5MyBBQVwiLCBcIjkzIEFCXCIsIFwiOTMgQUNcIiwgXCI5MyBBRFwiLCBcIjkzIEE2XCIsIFwiOTMgQUZcIiwgXCI5MyBBNVwiLCBcIjkzIEE0XCIsIFwiOTMgOUNcIiwgXCI5MyA4M1wiLCBcIjkzIDkxXCIsIFwiOTMgOEFcIiwgXCI5MyA4OFwiLCBcIjkzIDg5XCIsIFwiOTMgODRcIiwgXCI5MyA4NVwiLCBcIjkzIDg2XCIsIFwiOTcgOTNcIiwgXCI5MyA4N1wiLCBcIjk3IDgzXCIsIFwiOTcgQjNcIiwgXCI5NyA4NFwiLCBcIjkzIDhCXCIsIFwiOTcgOTJcIiwgXCI5MyA4MVwiLCBcIjkzIDgyXCIsIFwiOTcgODJcIiwgXCI5NyA5RVwiLCBcIjkzIEIwXCIsIFwiOTMgOTNcIiwgXCI5MyA5NVwiLCBcIjkzIDk3XCIsIFwiOTMgOThcIiwgXCI5MyA5OVwiLCBcIjkzIDk0XCIsIFwiOTMgOTJcIiwgXCI5MyA5QVwiLCBcIjkzIDk2XCIsIFwiOTQgOTdcIiwgXCI5MyA4RVwiLCBcIjk2IDg3XCIsIFwiRTIgOUMgODIgRUYgQjggOEZcIiwgXCI5MyA5MFwiLCBcIjkzIDhGXCIsIFwiOTMgOENcIiwgXCI5MyA4RFwiLCBcIjlBIEE5XCIsIFwiOEYgQjNcIiwgXCI4RiBCNFwiLCBcIjk0IDkwXCIsIFwiOTQgOTJcIiwgXCI5NCA5M1wiLCBcIjk0IDhGXCIsIFwiOTYgOEFcIiwgXCI5NiA4QlwiLCBcIkUyIDlDIDkyIEVGIEI4IDhGXCIsIFwiOTMgOURcIiwgXCJFMiA5QyA4RiBFRiBCOCA4RlwiLCBcIjk2IDhEXCIsIFwiOTYgOENcIiwgXCI5NCA4RFwiLCBcIjk0IDhFXCIsIFwiOUIgOTFcIiwgXCI5QiA5MVwiLCBcIkUyIDlEIEE0IEVGIEI4IDhGXCIsIFwiOTIgOUJcIiwgXCI5MiA5QVwiLCBcIjkyIDk5XCIsIFwiOTIgOUNcIiwgXCI5MiA5NFwiLCBcIkUyIDlEIEEzIEVGIEI4IDhGXCIsIFwiOTIgOTVcIiwgXCI5MiA5RVwiLCBcIjkyIDkzXCIsIFwiOTIgOTdcIiwgXCI5MiA5NlwiLCBcIjkyIDk4XCIsIFwiOTIgOURcIiwgXCI5MiA5RlwiLCBcIkUyIDk4IEFFIEVGIEI4IDhGXCIsIFwiRTIgOUMgOUQgRUYgQjggOEZcIiwgXCJFMiA5OCBBQSBFRiBCOCA4RlwiLCBcIjk1IDg5XCIsIFwiRTIgOTggQjggRUYgQjggOEZcIiwgXCJFMiA5QyBBMSBFRiBCOCA4RlwiLCBcIjk0IEFGXCIsIFwiOTUgOEVcIiwgXCJFMiA5OCBBRiBFRiBCOCA4RlwiLCBcIkUyIDk4IEE2IEVGIEI4IDhGXCIsIFwiOUIgOTBcIiwgXCJFMiA5QiA4RVwiLCBcIkUyIDk5IDg4IEVGIEI4IDhGXCIsIFwiRTIgOTkgODkgRUYgQjggOEZcIiwgXCJFMiA5OSA4QSBFRiBCOCA4RlwiLCBcIkUyIDk5IDhCIEVGIEI4IDhGXCIsIFwiRTIgOTkgOEMgRUYgQjggOEZcIiwgXCJFMiA5OSA4RCBFRiBCOCA4RlwiLCBcIkUyIDk5IDhFIEVGIEI4IDhGXCIsIFwiRTIgOTkgOEYgRUYgQjggOEZcIiwgXCJFMiA5OSA5MCBFRiBCOCA4RlwiLCBcIkUyIDk5IDkxIEVGIEI4IDhGXCIsIFwiRTIgOTkgOTIgRUYgQjggOEZcIiwgXCJFMiA5OSA5MyBFRiBCOCA4RlwiLCBcIjg2IDk0XCIsIFwiRTIgOUEgOUJcIiwgXCI4OCBCM1wiLCBcIjg4IEI5XCIsIFwiRTIgOTggQTIgRUYgQjggOEZcIiwgXCJFMiA5OCBBMyBFRiBCOCA4RlwiLCBcIjkzIEI0XCIsIFwiOTMgQjNcIiwgXCI4OCBCNlwiLCBcIjg4IDlBIEVGIEI4IDhGXCIsIFwiODggQjhcIiwgXCI4OCBCQVwiLCBcIjg4IEI3IEVGIEI4IDhGXCIsIFwiRTIgOUMgQjQgRUYgQjggOEZcIiwgXCI4NiA5QVwiLCBcIjg5IDkxXCIsIFwiOTIgQUVcIiwgXCI4OSA5MFwiLCBcIkUzIDhBIDk5IEVGIEI4IDhGXCIsIFwiRTMgOEEgOTcgRUYgQjggOEZcIiwgXCI4OCBCNFwiLCBcIjg4IEI1XCIsIFwiODggQjJcIiwgXCI4NSBCMCBFRiBCOCA4RlwiLCBcIjg1IEIxIEVGIEI4IDhGXCIsIFwiODYgOEVcIiwgXCI4NiA5MVwiLCBcIjg1IEJFIEVGIEI4IDhGXCIsIFwiODYgOThcIiwgXCJFMiA5QiA5NCBFRiBCOCA4RlwiLCBcIjkzIDlCXCIsIFwiOUEgQUJcIiwgXCJFMiA5RCA4Q1wiLCBcIkUyIEFEIDk1IEVGIEI4IDhGXCIsIFwiOTIgQTJcIiwgXCJFMiA5OSBBOCBFRiBCOCA4RlwiLCBcIjlBIEI3XCIsIFwiOUEgQUZcIiwgXCI5QSBCM1wiLCBcIjlBIEIxXCIsIFwiOTQgOUVcIiwgXCI5MyBCNVwiLCBcIkUyIDlEIDk3IEVGIEI4IDhGXCIsIFwiRTIgOUQgOTVcIiwgXCJFMiA5RCA5M1wiLCBcIkUyIDlEIDk0XCIsIFwiRTIgODAgQkMgRUYgQjggOEZcIiwgXCJFMiA4MSA4OSBFRiBCOCA4RlwiLCBcIjkyIEFGXCIsIFwiOTQgODVcIiwgXCI5NCA4NlwiLCBcIjk0IEIxXCIsIFwiRTIgOUEgOUNcIiwgXCJFMyA4MCBCRCBFRiBCOCA4RlwiLCBcIkUyIDlBIEEwIEVGIEI4IDhGXCIsIFwiOUEgQjhcIiwgXCI5NCBCMFwiLCBcIkUyIDk5IEJCIEVGIEI4IDhGXCIsIFwiODggQUYgRUYgQjggOEZcIiwgXCI5MiBCOVwiLCBcIkUyIDlEIDg3IEVGIEI4IDhGXCIsIFwiRTIgOUMgQjMgRUYgQjggOEZcIiwgXCJFMiA5RCA4RVwiLCBcIkUyIDlDIDg1XCIsIFwiOTIgQTBcIiwgXCI4QyA4MFwiLCBcIkUyIDlFIEJGXCIsIFwiOEMgOTBcIiwgXCJFMiA5MyA4MiBFRiBCOCA4RlwiLCBcIjhGIEE3XCIsIFwiODggODIgRUYgQjggOEZcIiwgXCI5QiA4MlwiLCBcIjlCIDgzXCIsIFwiOUIgODRcIiwgXCI5QiA4NVwiLCBcIkUyIDk5IEJGIEVGIEI4IDhGXCIsIFwiOUEgQURcIiwgXCI5QSBCRVwiLCBcIjg1IEJGIEVGIEI4IDhGXCIsIFwiOUEgQjBcIiwgXCI5QSBCOVwiLCBcIjlBIEJBXCIsIFwiOUEgQkNcIiwgXCI5QSBCQlwiLCBcIjlBIEFFXCIsIFwiOEUgQTZcIiwgXCI5MyBCNlwiLCBcIjg4IDgxXCIsIFwiODYgOTZcIiwgXCI4NiA5N1wiLCBcIjg2IDk5XCIsIFwiODYgOTJcIiwgXCI4NiA5NVwiLCBcIjg2IDkzXCIsIFwiMzAgRUYgQjggOEYgRTIgODMgQTNcIiwgXCIzMSBFRiBCOCA4RiBFMiA4MyBBM1wiLCBcIjMyIEVGIEI4IDhGIEUyIDgzIEEzXCIsIFwiMzMgRUYgQjggOEYgRTIgODMgQTNcIiwgXCIzNCBFRiBCOCA4RiBFMiA4MyBBM1wiLCBcIjM1IEVGIEI4IDhGIEUyIDgzIEEzXCIsIFwiMzYgRUYgQjggOEYgRTIgODMgQTNcIiwgXCIzNyBFRiBCOCA4RiBFMiA4MyBBM1wiLCBcIjM4IEVGIEI4IDhGIEUyIDgzIEEzXCIsIFwiMzkgRUYgQjggOEYgRTIgODMgQTNcIiwgXCI5NCA5RlwiLCBcIjk0IEEyXCIsIFwiRTIgOTYgQjYgRUYgQjggOEZcIiwgXCJFMiA4RiBCOFwiLCBcIkUyIDhGIEFGXCIsIFwiRTIgOEYgQjlcIiwgXCJFMiA4RiBCQVwiLCBcIkUyIDhGIEFEXCIsIFwiRTIgOEYgQUVcIiwgXCJFMiA4RiBBOVwiLCBcIkUyIDhGIEFBXCIsIFwiOTQgODBcIiwgXCI5NCA4MVwiLCBcIjk0IDgyXCIsIFwiRTIgOTcgODAgRUYgQjggOEZcIiwgXCI5NCBCQ1wiLCBcIjk0IEJEXCIsIFwiRTIgOEYgQUJcIiwgXCJFMiA4RiBBQ1wiLCBcIkUyIDlFIEExIEVGIEI4IDhGXCIsIFwiRTIgQUMgODUgRUYgQjggOEZcIiwgXCJFMiBBQyA4NiBFRiBCOCA4RlwiLCBcIkUyIEFDIDg3IEVGIEI4IDhGXCIsIFwiRTIgODYgOTcgRUYgQjggOEZcIiwgXCJFMiA4NiA5OCBFRiBCOCA4RlwiLCBcIkUyIDg2IDk5IEVGIEI4IDhGXCIsIFwiRTIgODYgOTYgRUYgQjggOEZcIiwgXCJFMiA4NiA5NSBFRiBCOCA4RlwiLCBcIkUyIDg2IDk0IEVGIEI4IDhGXCIsIFwiOTQgODRcIiwgXCJFMiA4NiBBQSBFRiBCOCA4RlwiLCBcIkUyIDg2IEE5IEVGIEI4IDhGXCIsIFwiRTIgQTQgQjQgRUYgQjggOEZcIiwgXCJFMiBBNCBCNSBFRiBCOCA4RlwiLCBcIjIzIEVGIEI4IDhGIEUyIDgzIEEzXCIsIFwiMkEgRUYgQjggOEYgRTIgODMgQTNcIiwgXCJFMiA4NCBCOSBFRiBCOCA4RlwiLCBcIjk0IEE0XCIsIFwiOTQgQTFcIiwgXCI5NCBBMFwiLCBcIjk0IEEzXCIsIFwiOEUgQjVcIiwgXCI4RSBCNlwiLCBcIkUzIDgwIEIwIEVGIEI4IDhGXCIsIFwiRTIgOUUgQjBcIiwgXCJFMiA5QyA5NCBFRiBCOCA4RlwiLCBcIjk0IDgzXCIsIFwiRTIgOUUgOTVcIiwgXCJFMiA5RSA5NlwiLCBcIkUyIDlFIDk3XCIsIFwiRTIgOUMgOTYgRUYgQjggOEZcIiwgXCI5MiBCMlwiLCBcIjkyIEIxXCIsIFwiQzIgQTkgRUYgQjggOEZcIiwgXCJDMiBBRSBFRiBCOCA4RlwiLCBcIkUyIDg0IEEyIEVGIEI4IDhGXCIsIFwiOTQgOUFcIiwgXCI5NCA5OVwiLCBcIjk0IDlCXCIsIFwiOTQgOURcIiwgXCI5NCA5Q1wiLCBcIkUyIDk4IDkxIEVGIEI4IDhGXCIsIFwiOTQgOThcIiwgXCJFMiA5QSBBQSBFRiBCOCA4RlwiLCBcIkUyIDlBIEFCIEVGIEI4IDhGXCIsIFwiOTQgQjRcIiwgXCI5NCBCNVwiLCBcIjk0IEI4XCIsIFwiOTQgQjlcIiwgXCI5NCBCNlwiLCBcIjk0IEI3XCIsIFwiOTQgQkFcIiwgXCJFMiA5NiBBQSBFRiBCOCA4RlwiLCBcIkUyIDk2IEFCIEVGIEI4IDhGXCIsIFwiRTIgQUMgOUIgRUYgQjggOEZcIiwgXCJFMiBBQyA5QyBFRiBCOCA4RlwiLCBcIjk0IEJCXCIsIFwiRTIgOTcgQkMgRUYgQjggOEZcIiwgXCJFMiA5NyBCQiBFRiBCOCA4RlwiLCBcIkUyIDk3IEJFIEVGIEI4IDhGXCIsIFwiRTIgOTcgQkQgRUYgQjggOEZcIiwgXCI5NCBCMlwiLCBcIjk0IEIzXCIsIFwiOTQgODhcIiwgXCI5NCA4OVwiLCBcIjk0IDhBXCIsIFwiOTQgODdcIiwgXCI5MyBBM1wiLCBcIjkzIEEyXCIsIFwiOTQgOTRcIiwgXCI5NCA5NVwiLCBcIjgzIDhGXCIsIFwiODAgODQgRUYgQjggOEZcIiwgXCJFMiA5OSBBMCBFRiBCOCA4RlwiLCBcIkUyIDk5IEEzIEVGIEI4IDhGXCIsIFwiRTIgOTkgQTUgRUYgQjggOEZcIiwgXCJFMiA5OSBBNiBFRiBCOCA4RlwiLCBcIjhFIEI0XCIsIFwiOTEgODEgRTIgODAgOEQgRjAgOUYgOTcgQThcIiwgXCI5MiBBRFwiLCBcIjk3IEFGXCIsIFwiOTIgQUNcIiwgXCI5NSA5MFwiLCBcIjk1IDkxXCIsIFwiOTUgOTJcIiwgXCI5NSA5M1wiLCBcIjk1IDk0XCIsIFwiOTUgOTVcIiwgXCI5NSA5NlwiLCBcIjk1IDk3XCIsIFwiOTUgOThcIiwgXCI5NSA5OVwiLCBcIjk1IDlBXCIsIFwiOTUgOUJcIiwgXCI5NSA5Q1wiLCBcIjk1IDlEXCIsIFwiOTUgOUVcIiwgXCI5NSA5RlwiLCBcIjk1IEEwXCIsIFwiOTUgQTFcIiwgXCI5NSBBMlwiLCBcIjk1IEEzXCIsIFwiOTUgQTRcIiwgXCI5NSBBNVwiLCBcIjk1IEE2XCIsIFwiOTUgQTdcIiwgXCI5QiA5MVwiLCBcIjg3IEE2IEYwIDlGIDg3IEFCXCIsIFwiODcgQTYgRjAgOUYgODcgQkRcIiwgXCI4NyBBNiBGMCA5RiA4NyBCMVwiLCBcIjg3IEE5IEYwIDlGIDg3IEJGXCIsIFwiODcgQTYgRjAgOUYgODcgQjhcIiwgXCI4NyBBNiBGMCA5RiA4NyBBOVwiLCBcIjg3IEE2IEYwIDlGIDg3IEI0XCIsIFwiODcgQTYgRjAgOUYgODcgQUVcIiwgXCI4NyBBNiBGMCA5RiA4NyBCNlwiLCBcIjg3IEE2IEYwIDlGIDg3IEFDXCIsIFwiODcgQTYgRjAgOUYgODcgQjdcIiwgXCI4NyBBNiBGMCA5RiA4NyBCMlwiLCBcIjg3IEE2IEYwIDlGIDg3IEJDXCIsIFwiODcgQTYgRjAgOUYgODcgQkFcIiwgXCI4NyBBNiBGMCA5RiA4NyBCOVwiLCBcIjg3IEE2IEYwIDlGIDg3IEJGXCIsIFwiODcgQTcgRjAgOUYgODcgQjhcIiwgXCI4NyBBNyBGMCA5RiA4NyBBRFwiLCBcIjg3IEE3IEYwIDlGIDg3IEE5XCIsIFwiODcgQTcgRjAgOUYgODcgQTdcIiwgXCI4NyBBNyBGMCA5RiA4NyBCRVwiLCBcIjg3IEE3IEYwIDlGIDg3IEFBXCIsIFwiODcgQTcgRjAgOUYgODcgQkZcIiwgXCI4NyBBNyBGMCA5RiA4NyBBRlwiLCBcIjg3IEE3IEYwIDlGIDg3IEIyXCIsIFwiODcgQTcgRjAgOUYgODcgQjlcIiwgXCI4NyBBNyBGMCA5RiA4NyBCNFwiLCBcIjg3IEE3IEYwIDlGIDg3IEI2XCIsIFwiODcgQTcgRjAgOUYgODcgQTZcIiwgXCI4NyBBNyBGMCA5RiA4NyBCQ1wiLCBcIjg3IEE3IEYwIDlGIDg3IEI3XCIsIFwiODcgQUUgRjAgOUYgODcgQjRcIiwgXCI4NyBCQiBGMCA5RiA4NyBBQ1wiLCBcIjg3IEE3IEYwIDlGIDg3IEIzXCIsIFwiODcgQTcgRjAgOUYgODcgQUNcIiwgXCI4NyBBNyBGMCA5RiA4NyBBQlwiLCBcIjg3IEE3IEYwIDlGIDg3IEFFXCIsIFwiODcgQTggRjAgOUYgODcgQkJcIiwgXCI4NyBCMCBGMCA5RiA4NyBBRFwiLCBcIjg3IEE4IEYwIDlGIDg3IEIyXCIsIFwiODcgQTggRjAgOUYgODcgQTZcIiwgXCI4NyBBRSBGMCA5RiA4NyBBOFwiLCBcIjg3IEIwIEYwIDlGIDg3IEJFXCIsIFwiODcgQTggRjAgOUYgODcgQUJcIiwgXCI4NyBCOSBGMCA5RiA4NyBBOVwiLCBcIjg3IEE4IEYwIDlGIDg3IEIxXCIsIFwiODcgQTggRjAgOUYgODcgQjNcIiwgXCI4NyBBOCBGMCA5RiA4NyBCRFwiLCBcIjg3IEE4IEYwIDlGIDg3IEE4XCIsIFwiODcgQTggRjAgOUYgODcgQjRcIiwgXCI4NyBCMCBGMCA5RiA4NyBCMlwiLCBcIjg3IEE4IEYwIDlGIDg3IEFDXCIsIFwiODcgQTggRjAgOUYgODcgQTlcIiwgXCI4NyBBOCBGMCA5RiA4NyBCMFwiLCBcIjg3IEE4IEYwIDlGIDg3IEI3XCIsIFwiODcgQUQgRjAgOUYgODcgQjdcIiwgXCI4NyBBOCBGMCA5RiA4NyBCQVwiLCBcIjg3IEE4IEYwIDlGIDg3IEJDXCIsIFwiODcgQTggRjAgOUYgODcgQkVcIiwgXCI4NyBBOCBGMCA5RiA4NyBCRlwiLCBcIjg3IEE5IEYwIDlGIDg3IEIwXCIsIFwiODcgQTkgRjAgOUYgODcgQUZcIiwgXCI4NyBBOSBGMCA5RiA4NyBCMlwiLCBcIjg3IEE5IEYwIDlGIDg3IEI0XCIsIFwiODcgQUEgRjAgOUYgODcgQThcIiwgXCI4NyBBQSBGMCA5RiA4NyBBQ1wiLCBcIjg3IEI4IEYwIDlGIDg3IEJCXCIsIFwiODcgQUMgRjAgOUYgODcgQjZcIiwgXCI4NyBBQSBGMCA5RiA4NyBCN1wiLCBcIjg3IEFBIEYwIDlGIDg3IEFBXCIsIFwiODcgQUEgRjAgOUYgODcgQjlcIiwgXCI4NyBBQSBGMCA5RiA4NyBCQVwiLCBcIjg3IEFCIEYwIDlGIDg3IEIwXCIsIFwiODcgQUIgRjAgOUYgODcgQjRcIiwgXCI4NyBBQiBGMCA5RiA4NyBBRlwiLCBcIjg3IEFCIEYwIDlGIDg3IEFFXCIsIFwiODcgQUIgRjAgOUYgODcgQjdcIiwgXCI4NyBBQyBGMCA5RiA4NyBBQlwiLCBcIjg3IEI1IEYwIDlGIDg3IEFCXCIsIFwiODcgQjkgRjAgOUYgODcgQUJcIiwgXCI4NyBBQyBGMCA5RiA4NyBBNlwiLCBcIjg3IEFDIEYwIDlGIDg3IEIyXCIsIFwiODcgQUMgRjAgOUYgODcgQUFcIiwgXCI4NyBBOSBGMCA5RiA4NyBBQVwiLCBcIjg3IEFDIEYwIDlGIDg3IEFEXCIsIFwiODcgQUMgRjAgOUYgODcgQUVcIiwgXCI4NyBBQyBGMCA5RiA4NyBCN1wiLCBcIjg3IEFDIEYwIDlGIDg3IEIxXCIsIFwiODcgQUMgRjAgOUYgODcgQTlcIiwgXCI4NyBBQyBGMCA5RiA4NyBCNVwiLCBcIjg3IEFDIEYwIDlGIDg3IEJBXCIsIFwiODcgQUMgRjAgOUYgODcgQjlcIiwgXCI4NyBBQyBGMCA5RiA4NyBBQ1wiLCBcIjg3IEFDIEYwIDlGIDg3IEIzXCIsIFwiODcgQUMgRjAgOUYgODcgQkNcIiwgXCI4NyBBQyBGMCA5RiA4NyBCRVwiLCBcIjg3IEFEIEYwIDlGIDg3IEI5XCIsIFwiODcgQUQgRjAgOUYgODcgQjNcIiwgXCI4NyBBRCBGMCA5RiA4NyBCMFwiLCBcIjg3IEFEIEYwIDlGIDg3IEJBXCIsIFwiODcgQUUgRjAgOUYgODcgQjhcIiwgXCI4NyBBRSBGMCA5RiA4NyBCM1wiLCBcIjg3IEFFIEYwIDlGIDg3IEE5XCIsIFwiODcgQUUgRjAgOUYgODcgQjdcIiwgXCI4NyBBRSBGMCA5RiA4NyBCNlwiLCBcIjg3IEFFIEYwIDlGIDg3IEFBXCIsIFwiODcgQUUgRjAgOUYgODcgQjJcIiwgXCI4NyBBRSBGMCA5RiA4NyBCMVwiLCBcIjg3IEFFIEYwIDlGIDg3IEI5XCIsIFwiODcgQTggRjAgOUYgODcgQUVcIiwgXCI4NyBBRiBGMCA5RiA4NyBCMlwiLCBcIjg3IEFGIEYwIDlGIDg3IEI1XCIsIFwiODcgQUYgRjAgOUYgODcgQUFcIiwgXCI4NyBBRiBGMCA5RiA4NyBCNFwiLCBcIjg3IEIwIEYwIDlGIDg3IEJGXCIsIFwiODcgQjAgRjAgOUYgODcgQUFcIiwgXCI4NyBCMCBGMCA5RiA4NyBBRVwiLCBcIjg3IEJEIEYwIDlGIDg3IEIwXCIsIFwiODcgQjAgRjAgOUYgODcgQkNcIiwgXCI4NyBCMCBGMCA5RiA4NyBBQ1wiLCBcIjg3IEIxIEYwIDlGIDg3IEE2XCIsIFwiODcgQjEgRjAgOUYgODcgQkJcIiwgXCI4NyBCMSBGMCA5RiA4NyBBN1wiLCBcIjg3IEIxIEYwIDlGIDg3IEI4XCIsIFwiODcgQjEgRjAgOUYgODcgQjdcIiwgXCI4NyBCMSBGMCA5RiA4NyBCRVwiLCBcIjg3IEIxIEYwIDlGIDg3IEFFXCIsIFwiODcgQjEgRjAgOUYgODcgQjlcIiwgXCI4NyBCMSBGMCA5RiA4NyBCQVwiLCBcIjg3IEIyIEYwIDlGIDg3IEI0XCIsIFwiODcgQjIgRjAgOUYgODcgQjBcIiwgXCI4NyBCMiBGMCA5RiA4NyBBQ1wiLCBcIjg3IEIyIEYwIDlGIDg3IEJDXCIsIFwiODcgQjIgRjAgOUYgODcgQkVcIiwgXCI4NyBCMiBGMCA5RiA4NyBCQlwiLCBcIjg3IEIyIEYwIDlGIDg3IEIxXCIsIFwiODcgQjIgRjAgOUYgODcgQjlcIiwgXCI4NyBCMiBGMCA5RiA4NyBBRFwiLCBcIjg3IEIyIEYwIDlGIDg3IEI2XCIsIFwiODcgQjIgRjAgOUYgODcgQjdcIiwgXCI4NyBCMiBGMCA5RiA4NyBCQVwiLCBcIjg3IEJFIEYwIDlGIDg3IEI5XCIsIFwiODcgQjIgRjAgOUYgODcgQkRcIiwgXCI4NyBBQiBGMCA5RiA4NyBCMlwiLCBcIjg3IEIyIEYwIDlGIDg3IEE5XCIsIFwiODcgQjIgRjAgOUYgODcgQThcIiwgXCI4NyBCMiBGMCA5RiA4NyBCM1wiLCBcIjg3IEIyIEYwIDlGIDg3IEFBXCIsIFwiODcgQjIgRjAgOUYgODcgQjhcIiwgXCI4NyBCMiBGMCA5RiA4NyBBNlwiLCBcIjg3IEIyIEYwIDlGIDg3IEJGXCIsIFwiODcgQjIgRjAgOUYgODcgQjJcIiwgXCI4NyBCMyBGMCA5RiA4NyBBNlwiLCBcIjg3IEIzIEYwIDlGIDg3IEI3XCIsIFwiODcgQjMgRjAgOUYgODcgQjVcIiwgXCI4NyBCMyBGMCA5RiA4NyBCMVwiLCBcIjg3IEIzIEYwIDlGIDg3IEE4XCIsIFwiODcgQjMgRjAgOUYgODcgQkZcIiwgXCI4NyBCMyBGMCA5RiA4NyBBRVwiLCBcIjg3IEIzIEYwIDlGIDg3IEFBXCIsIFwiODcgQjMgRjAgOUYgODcgQUNcIiwgXCI4NyBCMyBGMCA5RiA4NyBCQVwiLCBcIjg3IEIzIEYwIDlGIDg3IEFCXCIsIFwiODcgQjIgRjAgOUYgODcgQjVcIiwgXCI4NyBCMCBGMCA5RiA4NyBCNVwiLCBcIjg3IEIzIEYwIDlGIDg3IEI0XCIsIFwiODcgQjQgRjAgOUYgODcgQjJcIiwgXCI4NyBCNSBGMCA5RiA4NyBCMFwiLCBcIjg3IEI1IEYwIDlGIDg3IEJDXCIsIFwiODcgQjUgRjAgOUYgODcgQjhcIiwgXCI4NyBCNSBGMCA5RiA4NyBBNlwiLCBcIjg3IEI1IEYwIDlGIDg3IEFDXCIsIFwiODcgQjUgRjAgOUYgODcgQkVcIiwgXCI4NyBCNSBGMCA5RiA4NyBBQVwiLCBcIjg3IEI1IEYwIDlGIDg3IEFEXCIsIFwiODcgQjUgRjAgOUYgODcgQjNcIiwgXCI4NyBCNSBGMCA5RiA4NyBCMVwiLCBcIjg3IEI1IEYwIDlGIDg3IEI5XCIsIFwiODcgQjUgRjAgOUYgODcgQjdcIiwgXCI4NyBCNiBGMCA5RiA4NyBBNlwiLCBcIjg3IEI3IEYwIDlGIDg3IEFBXCIsIFwiODcgQjcgRjAgOUYgODcgQjRcIiwgXCI4NyBCNyBGMCA5RiA4NyBCQVwiLCBcIjg3IEI3IEYwIDlGIDg3IEJDXCIsIFwiODcgQTcgRjAgOUYgODcgQjFcIiwgXCI4NyBCOCBGMCA5RiA4NyBBRFwiLCBcIjg3IEIwIEYwIDlGIDg3IEIzXCIsIFwiODcgQjEgRjAgOUYgODcgQThcIiwgXCI4NyBCNSBGMCA5RiA4NyBCMlwiLCBcIjg3IEJCIEYwIDlGIDg3IEE4XCIsIFwiODcgQkMgRjAgOUYgODcgQjhcIiwgXCI4NyBCOCBGMCA5RiA4NyBCMlwiLCBcIjg3IEI4IEYwIDlGIDg3IEI5XCIsIFwiODcgQjggRjAgOUYgODcgQTZcIiwgXCI4NyBCOCBGMCA5RiA4NyBCM1wiLCBcIjg3IEI3IEYwIDlGIDg3IEI4XCIsIFwiODcgQjggRjAgOUYgODcgQThcIiwgXCI4NyBCOCBGMCA5RiA4NyBCMVwiLCBcIjg3IEI4IEYwIDlGIDg3IEFDXCIsIFwiODcgQjggRjAgOUYgODcgQkRcIiwgXCI4NyBCOCBGMCA5RiA4NyBCMFwiLCBcIjg3IEI4IEYwIDlGIDg3IEFFXCIsIFwiODcgQjggRjAgOUYgODcgQTdcIiwgXCI4NyBCOCBGMCA5RiA4NyBCNFwiLCBcIjg3IEJGIEYwIDlGIDg3IEE2XCIsIFwiODcgQUMgRjAgOUYgODcgQjhcIiwgXCI4NyBCMCBGMCA5RiA4NyBCN1wiLCBcIjg3IEI4IEYwIDlGIDg3IEI4XCIsIFwiODcgQUEgRjAgOUYgODcgQjhcIiwgXCI4NyBCMSBGMCA5RiA4NyBCMFwiLCBcIjg3IEI4IEYwIDlGIDg3IEE5XCIsIFwiODcgQjggRjAgOUYgODcgQjdcIiwgXCI4NyBCOCBGMCA5RiA4NyBCRlwiLCBcIjg3IEI4IEYwIDlGIDg3IEFBXCIsIFwiODcgQTggRjAgOUYgODcgQURcIiwgXCI4NyBCOCBGMCA5RiA4NyBCRVwiLCBcIjg3IEI5IEYwIDlGIDg3IEJDXCIsIFwiODcgQjkgRjAgOUYgODcgQUZcIiwgXCI4NyBCOSBGMCA5RiA4NyBCRlwiLCBcIjg3IEI5IEYwIDlGIDg3IEFEXCIsIFwiODcgQjkgRjAgOUYgODcgQjFcIiwgXCI4NyBCOSBGMCA5RiA4NyBBQ1wiLCBcIjg3IEI5IEYwIDlGIDg3IEIwXCIsIFwiODcgQjkgRjAgOUYgODcgQjRcIiwgXCI4NyBCOSBGMCA5RiA4NyBCOVwiLCBcIjg3IEI5IEYwIDlGIDg3IEIzXCIsIFwiODcgQjkgRjAgOUYgODcgQjdcIiwgXCI4NyBCOSBGMCA5RiA4NyBCMlwiLCBcIjg3IEI5IEYwIDlGIDg3IEE4XCIsIFwiODcgQjkgRjAgOUYgODcgQkJcIiwgXCI4NyBCQSBGMCA5RiA4NyBBQ1wiLCBcIjg3IEJBIEYwIDlGIDg3IEE2XCIsIFwiODcgQTYgRjAgOUYgODcgQUFcIiwgXCI4NyBBQyBGMCA5RiA4NyBBN1wiLCBcIjg3IEJBIEYwIDlGIDg3IEI4XCIsIFwiODcgQkIgRjAgOUYgODcgQUVcIiwgXCI4NyBCQSBGMCA5RiA4NyBCRVwiLCBcIjg3IEJBIEYwIDlGIDg3IEJGXCIsIFwiODcgQkIgRjAgOUYgODcgQkFcIiwgXCI4NyBCQiBGMCA5RiA4NyBBNlwiLCBcIjg3IEJCIEYwIDlGIDg3IEFBXCIsIFwiODcgQkIgRjAgOUYgODcgQjNcIiwgXCI4NyBCQyBGMCA5RiA4NyBBQlwiLCBcIjg3IEFBIEYwIDlGIDg3IEFEXCIsIFwiODcgQkUgRjAgOUYgODcgQUFcIiwgXCI4NyBCRiBGMCA5RiA4NyBCMlwiLCBcIjg3IEJGIEYwIDlGIDg3IEJDXCJdXG5cdG5ldHdvcms6XCJcbjxzdmcgd2lkdGg9JzE0cHgnIGhlaWdodD0nMTBweCcgdmlld0JveD0nODcgNSAxNCAxMCcgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJz5cbiAgICA8IS0tIEdlbmVyYXRvcjogU2tldGNoIDMuNy4yICgyODI3NikgLSBodHRwOi8vd3d3LmJvaGVtaWFuY29kaW5nLmNvbS9za2V0Y2ggLS0+XG4gICAgPGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+XG4gICAgPGRlZnM+PC9kZWZzPlxuICAgIDxwYXRoIGQ9J005Ni4xNDQ0MjA4LDEyLjQzODUwNDMgQzk1LjYyNjM3NCwxMS44NDU0NDU2IDk0Ljg1MjM2MTYsMTEuNDY4OTExOSA5My45ODc1NjMsMTEuNDY4OTExOSBDOTMuMTM5MDA3MywxMS40Njg5MTE5IDkyLjM3Nzg1OTQsMTEuODMxNDM0MSA5MS44NjAxNjUyLDEyLjQwNTMxNzcgTDk0LjAyMjUzOTEsMTQuNSBMOTYuMTQ0NDIwOCwxMi40Mzg1MDQzIFogTTk4LjMyMzQ5NjQsMTAuMzIxNDQyNSBDOTcuMjQ0Nzc5NCw5LjE5MTc0NTYzIDk1LjcwMTQzODcsOC40ODQ0NTU5NiA5My45ODc1NjMsOC40ODQ0NTU5NiBDOTIuMjg4MjcyMyw4LjQ4NDQ1NTk2IDkwLjc1NjYyNjQsOS4xNzk3NTg5MyA4OS42NzkyNjk4LDEwLjI5MjY5MzYgTDkwLjc2OTI5ODcsMTEuMzQ4NiBDOTEuNTY3MjA1LDEwLjUwNTM3MDggOTIuNzEzNjQ4LDkuOTc2NjgzOTQgOTMuOTg3NTYzLDkuOTc2NjgzOTQgQzk1LjI3Njg4MzYsOS45NzY2ODM5NCA5Ni40MzU2MzA1LDEwLjUxODIzNSA5Ny4yMzQ2MjE1LDExLjM3OTMyOTMgTDk4LjMyMzQ5NjQsMTAuMzIxNDQyNSBMOTguMzIzNDk2NCwxMC4zMjE0NDI1IFogTTEwMC41LDguMjA2ODc5MzMgQzk4Ljg2Mjk1NzgsNi41Mzk0MzY3MiA5Ni41NTA1Njk5LDUuNSA5My45ODc1NjMsNS41IEM5MS40Mzc1MTAzLDUuNSA4OS4xMzU1NDk2LDYuNTI4OTU2MDUgODcuNSw4LjE4MTY0NDMxIEw4OC41ODk1NTc5LDkuMjM3MDk0NDEgQzg5Ljk0NjA3OTgsNy44NTQzMTY1NSA5MS44NjI4OTIxLDYuOTkyMjI3OTggOTMuOTg3NTYzLDYuOTkyMjI3OTggQzk2LjEyNjAwMjYsNi45OTIyMjc5OCA5OC4wNTM4ODA5LDcuODY1NTI2MDkgOTkuNDExODY5OCw5LjI2NDA0MjcyIEwxMDAuNSw4LjIwNjg3OTMzIFonIGlkPSdXaS1GaScgc3Ryb2tlPSdub25lJyBmaWxsPScjMDMwMzAzJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnPjwvcGF0aD5cbjwvc3ZnPlwiXG5cdGFjdGl2aXR5OiBcIjw/eG1sIHZlcnNpb249JzEuMCcgZW5jb2Rpbmc9J1VURi04JyBzdGFuZGFsb25lPSdubyc/PlxuXHRcdFx0PHN2ZyB3aWR0aD0nMTZweCcgaGVpZ2h0PScxNnB4JyB2aWV3Qm94PScwIDAgMTYgMTYnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluaycgeG1sbnM6c2tldGNoPSdodHRwOi8vd3d3LmJvaGVtaWFuY29kaW5nLmNvbS9za2V0Y2gvbnMnPlxuXHRcdFx0XHQ8IS0tIEdlbmVyYXRvcjogU2tldGNoIDMuNS4yICgyNTIzNSkgLSBodHRwOi8vd3d3LmJvaGVtaWFuY29kaW5nLmNvbS9za2V0Y2ggLS0+XG5cdFx0XHRcdDx0aXRsZT5Tb2NjZXIgQmFsbDwvdGl0bGU+XG5cdFx0XHRcdDxkZXNjPkNyZWF0ZWQgd2l0aCBTa2V0Y2guPC9kZXNjPlxuXHRcdFx0XHQ8ZGVmcz5cblx0XHRcdFx0XHQ8Y2lyY2xlIGlkPSdwYXRoLTEnIGN4PSc4JyBjeT0nOCcgcj0nOCc+PC9jaXJjbGU+XG5cdFx0XHRcdDwvZGVmcz5cblx0XHRcdFx0PGcgaWQ9J1BhZ2UtMScgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCcgc2tldGNoOnR5cGU9J01TUGFnZSc+XG5cdFx0XHRcdFx0PGcgaWQ9J2lQaG9uZS02JyBza2V0Y2g6dHlwZT0nTVNBcnRib2FyZEdyb3VwJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtMTc5LjAwMDAwMCwgLTYzOS4wMDAwMDApJz5cblx0XHRcdFx0XHRcdDxnIGlkPSdTb2NjZXItQmFsbCcgc2tldGNoOnR5cGU9J01TTGF5ZXJHcm91cCcgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMTc5LjAwMDAwMCwgNjM5LjAwMDAwMCknPlxuXHRcdFx0XHRcdFx0XHQ8bWFzayBpZD0nbWFzay0yJyBza2V0Y2g6bmFtZT0nTWFzaycgZmlsbD0nd2hpdGUnPlxuXHRcdFx0XHRcdFx0XHRcdDx1c2UgeGxpbms6aHJlZj0nI3BhdGgtMSc+PC91c2U+XG5cdFx0XHRcdFx0XHRcdDwvbWFzaz5cblx0XHRcdFx0XHRcdFx0PHVzZSBpZD0nTWFzaycgc3Ryb2tlPScjNEE1MzYxJyBza2V0Y2g6dHlwZT0nTVNTaGFwZUdyb3VwJyB4bGluazpocmVmPScjcGF0aC0xJz48L3VzZT5cblx0XHRcdFx0XHRcdFx0PHBhdGggZD0nTTYsMTIuMTIwMzA0NiBMMTIuODU3MzM4NCw4IEwxMy4zNzIzNzY1LDguODU3MTY3MyBMNi41MTUwMzgwNywxMi45Nzc0NzE5IEw2LDEyLjEyMDMwNDYgTDYsMTIuMTIwMzA0NiBaJyBpZD0nUmVjdGFuZ2xlLTQ3JyBmaWxsPScjNEE1MzYxJyBza2V0Y2g6dHlwZT0nTVNTaGFwZUdyb3VwJyBtYXNrPSd1cmwoI21hc2stMiknPjwvcGF0aD5cblx0XHRcdFx0XHRcdFx0PHBhdGggZD0nTTExLjg0OTY0OCw4LjcyNjA1NTEgTDE5LjEwMDExMDMsNS4zNDUxMDkwMSBMMTkuNTIyNzI4NSw2LjI1MTQxNjggTDEyLjI3MjI2NjIsOS42MzIzNjI4OSBMMTEuODQ5NjQ4LDguNzI2MDU1MSBMMTEuODQ5NjQ4LDguNzI2MDU1MSBaJyBpZD0nUmVjdGFuZ2xlLTQ3LUNvcHktMycgZmlsbD0nIzRBNTM2MScgc2tldGNoOnR5cGU9J01TU2hhcGVHcm91cCcgbWFzaz0ndXJsKCNtYXNrLTIpJz48L3BhdGg+XG5cdFx0XHRcdFx0XHRcdDxwYXRoIGQ9J002LDMuMTIwMzA0NiBMMTIuODU3MzM4NCwtMSBMMTMuMzcyMzc2NSwtMC4xNDI4MzI2OTkgTDYuNTE1MDM4MDcsMy45Nzc0NzE5IEw2LDMuMTIwMzA0NiBMNiwzLjEyMDMwNDYgWicgaWQ9J1JlY3RhbmdsZS00Ny1Db3B5LTInIGZpbGw9JyM0QTUzNjEnIHNrZXRjaDp0eXBlPSdNU1NoYXBlR3JvdXAnIG1hc2s9J3VybCgjbWFzay0yKSc+PC9wYXRoPlxuXHRcdFx0XHRcdFx0XHQ8cGF0aCBkPSdNLTEsNy4xMjAzMDQ2IEw1Ljg1NzMzODQxLDMgTDYuMzcyMzc2NDgsMy44NTcxNjczIEwtMC40ODQ5NjE5MjUsNy45Nzc0NzE5IEwtMSw3LjEyMDMwNDYgTC0xLDcuMTIwMzA0NiBaJyBpZD0nUmVjdGFuZ2xlLTQ3LUNvcHktNCcgZmlsbD0nIzRBNTM2MScgc2tldGNoOnR5cGU9J01TU2hhcGVHcm91cCcgbWFzaz0ndXJsKCNtYXNrLTIpJz48L3BhdGg+XG5cdFx0XHRcdFx0XHRcdDxyZWN0IGlkPSdSZWN0YW5nbGUtNTAnIGZpbGw9JyM0QTUzNjEnIHNrZXRjaDp0eXBlPSdNU1NoYXBlR3JvdXAnIG1hc2s9J3VybCgjbWFzay0yKScgeD0nNCcgeT0nNicgd2lkdGg9JzEnIGhlaWdodD0nNSc+PC9yZWN0PlxuXHRcdFx0XHRcdFx0XHQ8cmVjdCBpZD0nUmVjdGFuZ2xlLTUxJyBmaWxsPScjNEE1MzYxJyBza2V0Y2g6dHlwZT0nTVNTaGFwZUdyb3VwJyBtYXNrPSd1cmwoI21hc2stMiknIHg9JzExLjUnIHk9JzMnIHdpZHRoPScxJyBoZWlnaHQ9JzEyJz48L3JlY3Q+XG5cdFx0XHRcdFx0XHRcdDxwYXRoIGQ9J001LDQuODU3MTY3MyBMMTEuODU3MzM4NCw4Ljk3NzQ3MTkgTDEyLjM3MjM3NjUsOC4xMjAzMDQ2IEw1LjUxNTAzODA3LDQgTDUsNC44NTcxNjczJyBpZD0nUmVjdGFuZ2xlLTQ3LUNvcHknIGZpbGw9JyM0QTUzNjEnIHNrZXRjaDp0eXBlPSdNU1NoYXBlR3JvdXAnIG1hc2s9J3VybCgjbWFzay0yKSc+PC9wYXRoPlxuXHRcdFx0XHRcdFx0XHQ8cGF0aCBkPSdNNSwxMi44NTcxNjczIEwxMS44NTczMzg0LDE2Ljk3NzQ3MTkgTDEyLjM3MjM3NjUsMTYuMTIwMzA0NiBMNS41MTUwMzgwNywxMiBMNSwxMi44NTcxNjczJyBpZD0nUmVjdGFuZ2xlLTQ3LUNvcHktNScgZmlsbD0nIzRBNTM2MScgc2tldGNoOnR5cGU9J01TU2hhcGVHcm91cCcgbWFzaz0ndXJsKCNtYXNrLTIpJz48L3BhdGg+XG5cdFx0XHRcdFx0XHRcdDxwYXRoIGQ9J00xMS45MDQ4OTcyLDYuMTQ3NjYwNjQgTDEzLjg3MTQyMjcsOC4zMzE3MDg0OSBMMTIuNDAxOTU5NiwxMC44NzY4OTMzIEw5LjUyNzI1NTg5LDEwLjI2NTg1NjIgTDkuMjIwMDU0NDUsNy4zNDMwMjk2NSBMMTEuOTA0ODk3Miw2LjE0NzY2MDY0JyBpZD0nUG9seWdvbi0xJyBmaWxsPScjRDhEOEQ4JyBza2V0Y2g6dHlwZT0nTVNTaGFwZUdyb3VwJyBtYXNrPSd1cmwoI21hc2stMiknPjwvcGF0aD5cblx0XHRcdFx0XHRcdFx0PHBhdGggZD0nTTExLjkwNDg5NzIsNi4xNDc2NjA2NCBMMTMuODcxNDIyNyw4LjMzMTcwODQ5IEwxMi40MDE5NTk2LDEwLjg3Njg5MzMgTDkuNTI3MjU1ODksMTAuMjY1ODU2MiBMOS4yMjAwNTQ0NSw3LjM0MzAyOTY1IEwxMS45MDQ4OTcyLDYuMTQ3NjYwNjQnIGlkPSdQb2x5Z29uLTEtQ29weScgZmlsbD0nIzRBNTM2MScgc2tldGNoOnR5cGU9J01TU2hhcGVHcm91cCcgbWFzaz0ndXJsKCNtYXNrLTIpJz48L3BhdGg+XG5cdFx0XHRcdFx0XHRcdDxwYXRoIGQ9J003LjQ1NzcxMTg5LDMuMTk1MDQ3MzkgTDcuMzU1MTQ0ODQsNi4xMzIxODMzMyBMNC41MzAwNjc2LDYuOTQyMjYxMiBMMi44ODY2NDA4OSw0LjUwNTc4MDkgTDQuNjk2MDI0NTcsMi4xODk4NzU0MSBMNy40NTc3MTE4OSwzLjE5NTA0NzM5JyBpZD0nUG9seWdvbi0xLUNvcHktMicgZmlsbD0nIzRBNTM2MScgc2tldGNoOnR5cGU9J01TU2hhcGVHcm91cCcgbWFzaz0ndXJsKCNtYXNrLTIpJz48L3BhdGg+XG5cdFx0XHRcdFx0XHRcdDxwYXRoIGQ9J003LjQ1NzcxMTg5LDExLjE5NTA0NzQgTDcuMzU1MTQ0ODQsMTQuMTMyMTgzMyBMNC41MzAwNjc2LDE0Ljk0MjI2MTIgTDIuODg2NjQwODksMTIuNTA1NzgwOSBMNC42OTYwMjQ1NywxMC4xODk4NzU0IEw3LjQ1NzcxMTg5LDExLjE5NTA0NzQnIGlkPSdQb2x5Z29uLTEtQ29weS0zJyBmaWxsPScjNEE1MzYxJyBza2V0Y2g6dHlwZT0nTVNTaGFwZUdyb3VwJyBtYXNrPSd1cmwoI21hc2stMiknPjwvcGF0aD5cblx0XHRcdFx0XHRcdFx0PHBhdGggZD0nTTE0LjU0MzE3MDEsMC4wNzI1OTM5MzE0IEwxNC40NDA2MDMxLDMuMDA5NzI5ODggTDExLjYxNTUyNTgsMy44MTk4MDc3NCBMOS45NzIwOTkxMiwxLjM4MzMyNzQ1IEwxMS43ODE0ODI4LC0wLjkzMjU3ODA1IEwxNC41NDMxNzAxLDAuMDcyNTkzOTMxNCcgaWQ9J1BvbHlnb24tMS1Db3B5LTQnIGZpbGw9JyM0QTUzNjEnIHNrZXRjaDp0eXBlPSdNU1NoYXBlR3JvdXAnIG1hc2s9J3VybCgjbWFzay0yKSc+PC9wYXRoPlxuXHRcdFx0XHRcdFx0PC9nPlxuXHRcdFx0XHRcdDwvZz5cblx0XHRcdFx0PC9nPlxuXHRcdFx0PC9zdmc+XCJcblx0YW5pbWFsczogXCI8P3htbCB2ZXJzaW9uPScxLjAnIGVuY29kaW5nPSdVVEYtOCcgc3RhbmRhbG9uZT0nbm8nPz5cblx0XHRcdDxzdmcgd2lkdGg9JzE3cHgnIGhlaWdodD0nMTZweCcgdmlld0JveD0nMCAwIDE3IDE3JyB2ZXJzaW9uPScxLjEnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgeG1sbnM6eGxpbms9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnIHhtbG5zOnNrZXRjaD0naHR0cDovL3d3dy5ib2hlbWlhbmNvZGluZy5jb20vc2tldGNoL25zJz5cblx0XHRcdFx0PCEtLSBHZW5lcmF0b3I6IFNrZXRjaCAzLjUuMiAoMjUyMzUpIC0gaHR0cDovL3d3dy5ib2hlbWlhbmNvZGluZy5jb20vc2tldGNoIC0tPlxuXHRcdFx0XHQ8dGl0bGU+R3JvdXA8L3RpdGxlPlxuXHRcdFx0XHQ8ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz5cblx0XHRcdFx0PGRlZnM+PC9kZWZzPlxuXHRcdFx0XHQ8ZyBpZD0nUGFnZS0xJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJyBza2V0Y2g6dHlwZT0nTVNQYWdlJz5cblx0XHRcdFx0XHQ8ZyBpZD0naVBob25lLTYnIHNrZXRjaDp0eXBlPSdNU0FydGJvYXJkR3JvdXAnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKC0xMTcuMDAwMDAwLCAtNjM5LjAwMDAwMCknIHN0cm9rZT0nIzRBNTM2MSc+XG5cdFx0XHRcdFx0XHQ8ZyBpZD0naWNfRm9vZCcgc2tldGNoOnR5cGU9J01TTGF5ZXJHcm91cCcgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMTE4LjAwMDAwMCwgNjQwLjAwMDAwMCknPlxuXHRcdFx0XHRcdFx0XHQ8ZyBpZD0nR3JvdXAnIHNrZXRjaDp0eXBlPSdNU1NoYXBlR3JvdXAnPlxuXHRcdFx0XHRcdFx0XHRcdDxwYXRoIGQ9J001LjY4Mzc3NTM3LDEuMzgxNTY2NDYgQzYuMjM5MjYwNjYsMS4xMzYyNCA2Ljg1MzcyMDA1LDEgNy41LDEgQzguMTQ2Mjc5OTUsMSA4Ljc2MDczOTM0LDEuMTM2MjQgOS4zMTYyMjQ2MywxLjM4MTU2NjQ2IEM5LjgwODc5Mjc1LDAuNTYyMzU5MDE5IDEwLjgyNTU4ODgsMCAxMiwwIEMxMy42NTY4NTQyLDAgMTUsMS4xMTkyODgxMyAxNSwyLjUgQzE1LDMuNTU3MTM5OCAxNC4yMTI2MjQ2LDQuNDYxMDI4NDMgMTMuMDk5OTIyNiw0LjgyNjYyNTE0IEMxNC4yNDk2NTI4LDUuNjQxODU0MjIgMTUsNi45ODMzMDA2MiAxNSw4LjUgQzE1LDEwLjcxNjcxNDQgMTMuMzk3MTg3MywxMi41NTkwNzE5IDExLjI4NzI2NzEsMTIuOTMxMzY3MyBDMTAuNDg2NzI0OCwxNC4xNzU3NzAzIDkuMDg5NjE2OTYsMTUgNy41LDE1IEM1LjkxMDM4MzA0LDE1IDQuNTEzMjc1MjQsMTQuMTc1NzcwMyAzLjcxMjczMjkxLDEyLjkzMTM2NzMgQzEuNjAyODEyNjgsMTIuNTU5MDcxOSAwLDEwLjcxNjcxNDQgMCw4LjUgQzAsNi45ODMzMDA2MiAwLjc1MDM0NzI0NCw1LjY0MTg1NDIyIDEuOTAwMDc3NDEsNC44MjY2MjUxNCBDMC43ODczNzU0NDUsNC40NjEwMjg0MyAwLDMuNTU3MTM5OCAwLDIuNSBDMCwxLjExOTI4ODEzIDEuMzQzMTQ1NzUsMCAzLDAgQzQuMTc0NDExMjIsMCA1LjE5MTIwNzI1LDAuNTYyMzU5MDE5IDUuNjgzNzc1MzcsMS4zODE1NjY0NiBaJyBpZD0nT3ZhbC04Jz48L3BhdGg+XG5cdFx0XHRcdFx0XHRcdFx0PHBhdGggZD0nTTUuNzM4MzQyMjgsMTIgQzUuODYyOTA5NzksMTIgNi4xNDY0MjM1MywxMiA2LjE0NjQyMzUzLDEyIEM2LjE0NjQyMzUzLDEyIDYuNDMyMTU2OTYsMTIuNDQyNjEyMyA2LjUyNDY1ODIsMTIuNDkxOTczOSBDNi42NjQ1NTYwMSwxMi41NjY2Mjc3IDcsMTIuNDkxOTczOSA3LDEyLjQ5MTk3MzkgTDcsMTIgTDgsMTIgTDgsMTIuNDkxOTczOSBMOC40OTc5OTIyOCwxMi40OTE5NzM5IEw4Ljg0MzAxNzY5LDEyIEw5LjM5MTg0NTcsMTIgQzkuMzkxODQ1NywxMiA4Ljk5NTk4NDU3LDEyLjk4Mzk0NzggOC40OTc5OTIyOCwxMi45ODM5NDc4IEw2LjYwNzAyNDA3LDEyLjk4Mzk0NzggQzYuMjE0MDQ4MTMsMTIuOTgzOTQ3OCA1LjQ1OTk2MDk0LDEyIDUuNzM4MzQyMjgsMTIgWicgaWQ9J1JlY3RhbmdsZS00NC1Db3B5LTInPjwvcGF0aD5cblx0XHRcdFx0XHRcdFx0XHQ8Y2lyY2xlIGlkPSdPdmFsLTE0JyBjeD0nMTAuNScgY3k9JzcuNScgcj0nMC41Jz48L2NpcmNsZT5cblx0XHRcdFx0XHRcdFx0XHQ8Y2lyY2xlIGlkPSdPdmFsLTE0LUNvcHknIGN4PSc0LjUnIGN5PSc3LjUnIHI9JzAuNSc+PC9jaXJjbGU+XG5cdFx0XHRcdFx0XHRcdFx0PHBhdGggZD0nTTEyLjY5OTk5NjksNSBDMTIuNjk5OTk2OSwzLjA2NzAwMzM4IDExLjEzMjk5MzYsMS41IDkuMTk5OTk2OTUsMS41JyBpZD0nT3ZhbC0xNic+PC9wYXRoPlxuXHRcdFx0XHRcdFx0XHRcdDxwYXRoIGQ9J001LjUsNSBDNS41LDMuMDY3MDAzMzggMy45MzI5OTY2MiwxLjUgMiwxLjUnIGlkPSdPdmFsLTE2LUNvcHknIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDMuNzUwMDAwLCAzLjI1MDAwMCkgc2NhbGUoLTEsIDEpIHRyYW5zbGF0ZSgtMy43NTAwMDAsIC0zLjI1MDAwMCkgJz48L3BhdGg+XG5cdFx0XHRcdFx0XHRcdFx0PHJlY3QgaWQ9J1JlY3RhbmdsZS00NC1Db3B5JyB4PSc3JyB5PScxMScgd2lkdGg9JzEnIGhlaWdodD0nMSc+PC9yZWN0PlxuXHRcdFx0XHRcdFx0XHRcdDxwYXRoIGQ9J002LDEwIEw2LjUsMTAgTDYuNDk5OTk5OTksOS41IEw4LjUwMDAwMDA1LDkuNSBMOC41MDAwMDAwNSwxMCBMOSwxMCBMOSwxMC41IEw4LjUsMTAuNSBMOC41LDExIEw2LjUsMTEgTDYuNSwxMC41IEw2LDEwLjUgTDYsMTAgWicgaWQ9J1BhdGgnPjwvcGF0aD5cblx0XHRcdFx0XHRcdFx0PC9nPlxuXHRcdFx0XHRcdFx0PC9nPlxuXHRcdFx0XHRcdDwvZz5cblx0XHRcdFx0PC9nPlxuXHRcdFx0PC9zdmc+XCJcblx0Y2hldnJvbiA6IFwiPD94bWwgdmVyc2lvbj0nMS4wJyBlbmNvZGluZz0nVVRGLTgnIHN0YW5kYWxvbmU9J25vJz8+XG5cdFx0PHN2ZyB3aWR0aD0nMTNweCcgaGVpZ2h0PScyMnB4JyB2aWV3Qm94PScwIDAgMTMgMjInIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+XG5cdFx0ICAgIDwhLS0gR2VuZXJhdG9yOiBTa2V0Y2ggMy42LjEgKDI2MzEzKSAtIGh0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaCAtLT5cblx0XHQgICAgPHRpdGxlPkJhY2sgQ2hldnJvbjwvdGl0bGU+XG5cdFx0ICAgIDxkZXNjPkNyZWF0ZWQgd2l0aCBTa2V0Y2guPC9kZXNjPlxuXHRcdCAgICA8ZGVmcz48L2RlZnM+XG5cdFx0ICAgIDxnIGlkPSdQYWdlLTEnIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnPlxuXHRcdCAgICAgICAgPGcgaWQ9J05hdmlnYXRpb24tQmFyL0JhY2snIHRyYW5zZm9ybT0ndHJhbnNsYXRlKC04LjAwMDAwMCwgLTMxLjAwMDAwMCknIGZpbGw9JyMwMDc2RkYnPlxuXHRcdCAgICAgICAgICAgIDxwYXRoIGQ9J004LjUsNDIgTDE5LDMxLjUgTDIxLDMzLjUgTDEyLjUsNDIgTDIxLDUwLjUgTDE5LDUyLjUgTDguNSw0MiBaJyBpZD0nQmFjay1DaGV2cm9uJz48L3BhdGg+XG5cdFx0ICAgICAgICA8L2c+XG5cdFx0ICAgIDwvZz5cblx0XHQ8L3N2Zz5cIlxuXHRlbW9qaXM6IFtcIvCfmIBcIiwgXCLwn5isXCIsIFwi8J+YgVwiLCBcIvCfmIJcIiwgXCLwn5iDXCIsIFwi8J+YhFwiLCBcIvCfmIVcIiwgXCLwn5iGXCIsIFwi8J+Yh1wiLCBcIvCfmIlcIiwgXCLwn5iKXCIsIFwi8J+ZglwiLCBcIvCfmYNcIiwgXCLimLrvuI9cIiwgXCLwn5iLXCIsIFwi8J+YjFwiLCBcIvCfmI1cIiwgXCLwn5iYXCIsIFwi8J+Yl1wiLCBcIvCfmJlcIiwgXCLwn5iaXCIsIFwi8J+YnFwiLCBcIvCfmJ1cIiwgXCLwn5ibXCIsIFwi8J+kkVwiLCBcIvCfpJNcIiwgXCLwn5iOXCIsIFwi8J+kl1wiLCBcIvCfmI9cIiwgXCLwn5i2XCIsIFwi8J+YkFwiLCBcIvCfmJFcIiwgXCLwn5iSXCIsIFwi8J+ZhFwiLCBcIvCfpJRcIiwgXCLwn5izXCIsIFwi8J+YnlwiLCBcIvCfmJ9cIiwgXCLwn5igXCIsIFwi8J+YoVwiLCBcIvCfmJRcIiwgXCLwn5iVXCIsIFwi8J+ZgVwiLCBcIuKYue+4j1wiLCBcIvCfmKNcIiwgXCLwn5iWXCIsIFwi8J+Yq1wiLCBcIvCfmKlcIiwgXCLwn5ikXCIsIFwi8J+YrlwiLCBcIvCfmLFcIiwgXCLwn5ioXCIsIFwi8J+YsFwiLCBcIvCfmK9cIiwgXCLwn5imXCIsIFwi8J+Yp1wiLCBcIvCfmKJcIiwgXCLwn5ilXCIsIFwi8J+YqlwiLCBcIvCfmJNcIiwgXCLwn5itXCIsIFwi8J+YtVwiLCBcIvCfmLJcIiwgXCLwn6SQXCIsIFwi8J+Yt1wiLCBcIvCfpJJcIiwgXCLwn6SVXCIsIFwi8J+YtFwiLCBcIvCfkqRcIiwgXCLwn5KpXCIsIFwi8J+YiFwiLCBcIvCfkb9cIiwgXCLwn5G5XCIsIFwi8J+RulwiLCBcIvCfkoBcIiwgXCLwn5G7XCIsIFwi8J+RvVwiLCBcIvCfpJZcIiwgXCLwn5i6XCIsIFwi8J+YuFwiLCBcIvCfmLlcIiwgXCLwn5i7XCIsIFwi8J+YvFwiLCBcIvCfmL1cIiwgXCLwn5mAXCIsIFwi8J+Yv1wiLCBcIvCfmL5cIiwgXCLwn5mMXCIsIFwi8J+Rj1wiLCBcIvCfkYtcIiwgXCLwn5GNXCIsIFwi8J+RjlwiLCBcIvCfkYpcIiwgXCLinIpcIiwgXCLinIzvuI9cIiwgXCLwn5GMXCIsIFwi4pyLXCIsIFwi8J+RkFwiLCBcIvCfkqpcIiwgXCLwn5mPXCIsIFwi4pid77iPXCIsIFwi8J+RhlwiLCBcIvCfkYdcIiwgXCLwn5GIXCIsIFwi8J+RiVwiLCBcIvCflpVcIiwgXCLwn5aQXCIsIFwi8J+kmFwiLCBcIvCflpZcIiwgXCLinI3vuI9cIiwgXCLwn5KFXCIsIFwi8J+RhFwiLCBcIvCfkYVcIiwgXCLwn5GCXCIsIFwi8J+Rg1wiLCBcIvCfkYFcIiwgXCLwn5GAXCIsIFwi8J+RpFwiLCBcIvCfkaVcIiwgXCLwn5ejXCIsIFwi8J+RtlwiLCBcIvCfkaZcIiwgXCLwn5GnXCIsIFwi8J+RqFwiLCBcIvCfkalcIiwgXCLwn5GxXCIsIFwi8J+RtFwiLCBcIvCfkbVcIiwgXCLwn5GyXCIsIFwi8J+Rs1wiLCBcIvCfka5cIiwgXCLwn5G3XCIsIFwi8J+SglwiLCBcIvCflbVcIiwgXCLwn46FXCIsIFwi8J+RvFwiLCBcIvCfkbhcIiwgXCLwn5GwXCIsIFwi8J+atlwiLCBcIvCfj4NcIiwgXCLwn5KDXCIsIFwi8J+Rr1wiLCBcIvCfkatcIiwgXCLwn5GsXCIsIFwi8J+RrVwiLCBcIvCfmYdcIiwgXCLwn5KBXCIsIFwi8J+ZhVwiLCBcIvCfmYZcIiwgXCLwn5mLXCIsIFwi8J+ZjlwiLCBcIvCfmY1cIiwgXCLwn5KHXCIsIFwi8J+ShlwiLCBcIvCfkpFcIiwgXCLwn5Gp4oCN4p2k77iP4oCN8J+RqVwiLCBcIvCfkajigI3inaTvuI/igI3wn5GoXCIsIFwi8J+Sj1wiLCBcIvCfkanigI3inaTvuI/igI3wn5KL4oCN8J+RqVwiLCBcIvCfkajigI3inaTvuI/igI3wn5KL4oCN8J+RqFwiLCBcIvCfkapcIiwgXCLwn5Go4oCN8J+RqeKAjfCfkadcIiwgXCLwn5Go4oCN8J+RqeKAjfCfkafigI3wn5GmXCIsIFwi8J+RqOKAjfCfkanigI3wn5Gm4oCN8J+RplwiLCBcIvCfkajigI3wn5Gp4oCN8J+Rp+KAjfCfkadcIiwgXCLwn5Gp4oCN8J+RqeKAjfCfkaZcIiwgXCLwn5Gp4oCN8J+RqeKAjfCfkadcIiwgXCLwn5Gp4oCN8J+RqeKAjfCfkafigI3wn5GmXCIsIFwi8J+RqeKAjfCfkanigI3wn5Gm4oCN8J+RplwiLCBcIvCfkanigI3wn5Gp4oCN8J+Rp+KAjfCfkadcIiwgXCLwn5Go4oCN8J+RqOKAjfCfkaZcIiwgXCLwn5Go4oCN8J+RqOKAjfCfkadcIiwgXCLwn5Go4oCN8J+RqOKAjfCfkafigI3wn5GmXCIsIFwi8J+RqOKAjfCfkajigI3wn5Gm4oCN8J+RplwiLCBcIvCfkajigI3wn5Go4oCN8J+Rp+KAjfCfkadcIiwgXCLwn5GaXCIsIFwi8J+RlVwiLCBcIvCfkZZcIiwgXCLwn5GUXCIsIFwi8J+Rl1wiLCBcIvCfkZlcIiwgXCLwn5GYXCIsIFwi8J+ShFwiLCBcIvCfkotcIiwgXCLwn5GjXCIsIFwi8J+RoFwiLCBcIvCfkaFcIiwgXCLwn5GiXCIsIFwi8J+RnlwiLCBcIvCfkZ9cIiwgXCLwn5GSXCIsIFwi8J+OqVwiLCBcIuKbkVwiLCBcIvCfjpNcIiwgXCLwn5GRXCIsIFwi8J+OklwiLCBcIvCfkZ1cIiwgXCLwn5GbXCIsIFwi8J+RnFwiLCBcIvCfkrxcIiwgXCLwn5GTXCIsIFwi8J+VtlwiLCBcIvCfko1cIiwgXCLwn4yCXCIsIFwi8J+bkVwiLCBcIvCfkLZcIiwgXCLwn5CxXCIsIFwi8J+QrVwiLCBcIvCfkLlcIiwgXCLwn5CwXCIsIFwi8J+Qu1wiLCBcIvCfkLxcIiwgXCLwn5CoXCIsIFwi8J+Qr1wiLCBcIvCfpoFcIiwgXCLwn5CuXCIsIFwi8J+Qt1wiLCBcIvCfkL1cIiwgXCLwn5C4XCIsIFwi8J+QmVwiLCBcIvCfkLVcIiwgXCLwn5mIXCIsIFwi8J+ZiVwiLCBcIvCfmYpcIiwgXCLwn5CSXCIsIFwi8J+QlFwiLCBcIvCfkKdcIiwgXCLwn5CmXCIsIFwi8J+QpFwiLCBcIvCfkKNcIiwgXCLwn5ClXCIsIFwi8J+QulwiLCBcIvCfkJdcIiwgXCLwn5C0XCIsIFwi8J+mhFwiLCBcIvCfkJ1cIiwgXCLwn5CbXCIsIFwi8J+QjFwiLCBcIvCfkJ5cIiwgXCLwn5CcXCIsIFwi8J+Vt1wiLCBcIvCfpoJcIiwgXCLwn6aAXCIsIFwi8J+QjVwiLCBcIvCfkKJcIiwgXCLwn5CgXCIsIFwi8J+Qn1wiLCBcIvCfkKFcIiwgXCLwn5CsXCIsIFwi8J+Qs1wiLCBcIvCfkItcIiwgXCLwn5CKXCIsIFwi8J+QhlwiLCBcIvCfkIVcIiwgXCLwn5CDXCIsIFwi8J+QglwiLCBcIvCfkIRcIiwgXCLwn5CqXCIsIFwi8J+Qq1wiLCBcIvCfkJhcIiwgXCLwn5CQXCIsIFwi8J+Qj1wiLCBcIvCfkJFcIiwgXCLwn5COXCIsIFwi8J+QllwiLCBcIvCfkIBcIiwgXCLwn5CBXCIsIFwi8J+Qk1wiLCBcIvCfpoNcIiwgXCLwn5WKXCIsIFwi8J+QlVwiLCBcIvCfkKlcIiwgXCLwn5CIXCIsIFwi8J+Qh1wiLCBcIvCfkL9cIiwgXCLwn5C+XCIsIFwi8J+QiVwiLCBcIvCfkLJcIiwgXCLwn4y1XCIsIFwi8J+OhFwiLCBcIvCfjLJcIiwgXCLwn4yzXCIsIFwi8J+MtFwiLCBcIvCfjLFcIiwgXCLwn4y/XCIsIFwi4piYXCIsIFwi8J+NgFwiLCBcIvCfjo1cIiwgXCLwn46LXCIsIFwi8J+Ng1wiLCBcIvCfjYJcIiwgXCLwn42BXCIsIFwi8J+MvlwiLCBcIvCfjLpcIiwgXCLwn4y6XCIsIFwi8J+Mu1wiLCBcIvCfjLlcIiwgXCLwn4y3XCIsIFwi8J+MvFwiLCBcIvCfjLhcIiwgXCLwn5KQXCIsIFwi8J+NhFwiLCBcIvCfjLBcIiwgXCLwn46DXCIsIFwi8J+QmlwiLCBcIvCflbhcIiwgXCLwn4yOXCIsIFwi8J+MjVwiLCBcIvCfjI9cIiwgXCLwn4yVXCIsIFwi8J+MllwiLCBcIvCfjJdcIiwgXCLwn4yYXCIsIFwi8J+MkVwiLCBcIvCfjJJcIiwgXCLwn4yTXCIsIFwi8J+MlFwiLCBcIvCfjJpcIiwgXCLwn4ydXCIsIFwi8J+Mm1wiLCBcIvCfjJxcIiwgXCLwn4yeXCIsIFwi8J+MmVwiLCBcIuKtkO+4j1wiLCBcIvCfjJ9cIiwgXCLwn5KrXCIsIFwi4pyoXCIsIFwi4piE77iPXCIsIFwi4piA77iPXCIsIFwi8J+MpFwiLCBcIuKbhe+4j1wiLCBcIvCfjKVcIiwgXCLwn4ymXCIsIFwi4piB77iPXCIsIFwi8J+Mp1wiLCBcIuKbiFwiLCBcIvCfjKlcIiwgXCLimqHvuI9cIiwgXCLwn5SlXCIsIFwi8J+SpVwiLCBcIuKdhO+4j1wiLCBcIvCfjKhcIiwgXCLimIPvuI9cIiwgXCLim4TvuI9cIiwgXCLwn4ysXCIsIFwi8J+SqFwiLCBcIvCfjKpcIiwgXCLwn4yrXCIsIFwi4piC77iPXCIsIFwi4piU77iPXCIsIFwi8J+Sp1wiLCBcIvCfkqZcIiwgXCLwn4yKXCIsIFwi8J+bkVwiLCBcIvCfm5FcIiwgXCLwn42PXCIsIFwi8J+NjlwiLCBcIvCfjZBcIiwgXCLwn42KXCIsIFwi8J+Ni1wiLCBcIvCfjYxcIiwgXCLwn42JXCIsIFwi8J+Nh1wiLCBcIvCfjZNcIiwgXCLwn42IXCIsIFwi8J+NklwiLCBcIvCfjZFcIiwgXCLwn42NXCIsIFwi8J+NhVwiLCBcIvCfjYZcIiwgXCLwn4y2XCIsIFwi8J+MvVwiLCBcIvCfjaBcIiwgXCLwn42vXCIsIFwi8J+NnlwiLCBcIvCfp4BcIiwgXCLwn42XXCIsIFwi8J+NllwiLCBcIvCfjaRcIiwgXCLwn42zXCIsIFwi8J+NlFwiLCBcIvCfjZ9cIiwgXCLwn4ytXCIsIFwi8J+NlVwiLCBcIvCfjZ1cIiwgXCLwn4yuXCIsIFwi8J+Mr1wiLCBcIvCfjZxcIiwgXCLwn42yXCIsIFwi8J+NpVwiLCBcIvCfjaNcIiwgXCLwn42xXCIsIFwi8J+Nm1wiLCBcIvCfjZlcIiwgXCLwn42aXCIsIFwi8J+NmFwiLCBcIvCfjaJcIiwgXCLwn42hXCIsIFwi8J+Np1wiLCBcIvCfjahcIiwgXCLwn42mXCIsIFwi8J+NsFwiLCBcIvCfjoJcIiwgXCLwn42uXCIsIFwi8J+NrFwiLCBcIvCfja1cIiwgXCLwn42rXCIsIFwi8J+Nv1wiLCBcIvCfjalcIiwgXCLwn42qXCIsIFwi8J+NulwiLCBcIvCfjbtcIiwgXCLwn423XCIsIFwi8J+NuFwiLCBcIvCfjblcIiwgXCLwn42+XCIsIFwi8J+NtlwiLCBcIvCfjbVcIiwgXCLimJXvuI9cIiwgXCLwn428XCIsIFwi8J+NtFwiLCBcIvCfjb1cIiwgXCLwn5uRXCIsIFwi8J+bkVwiLCBcIvCfm5FcIiwgXCLimr3vuI9cIiwgXCLwn4+AXCIsIFwi8J+PiFwiLCBcIuKavu+4j1wiLCBcIvCfjr5cIiwgXCLwn4+QXCIsIFwi8J+PiVwiLCBcIvCfjrFcIiwgXCLim7PvuI9cIiwgXCLwn4+MXCIsIFwi8J+Pk1wiLCBcIvCfj7hcIiwgXCLwn4+SXCIsIFwi8J+PkVwiLCBcIvCfj49cIiwgXCLwn46/XCIsIFwi4pu3XCIsIFwi8J+PglwiLCBcIuKbuFwiLCBcIvCfj7lcIiwgXCLwn46jXCIsIFwi8J+ao1wiLCBcIvCfj4pcIiwgXCLwn4+EXCIsIFwi8J+bgFwiLCBcIuKbuVwiLCBcIvCfj4tcIiwgXCLwn5q0XCIsIFwi8J+atVwiLCBcIvCfj4dcIiwgXCLwn5W0XCIsIFwi8J+PhlwiLCBcIvCfjr1cIiwgXCLwn4+FXCIsIFwi8J+OllwiLCBcIvCfjpdcIiwgXCLwn4+1XCIsIFwi8J+Oq1wiLCBcIvCfjp9cIiwgXCLwn46tXCIsIFwi8J+OqFwiLCBcIvCfjqpcIiwgXCLwn46kXCIsIFwi8J+Op1wiLCBcIvCfjrxcIiwgXCLwn465XCIsIFwi8J+Ot1wiLCBcIvCfjrpcIiwgXCLwn464XCIsIFwi8J+Ou1wiLCBcIvCfjqxcIiwgXCLwn46uXCIsIFwi8J+RvlwiLCBcIvCfjq9cIiwgXCLwn46yXCIsIFwi8J+OsFwiLCBcIvCfjrNcIiwgXCLwn5uRXCIsIFwi8J+bkVwiLCBcIvCfm5FcIiwgXCLwn5qXXCIsIFwi8J+alVwiLCBcIvCfmplcIiwgXCLwn5qMXCIsIFwi8J+ajlwiLCBcIvCfj45cIiwgXCLwn5qTXCIsIFwi8J+akVwiLCBcIvCfmpJcIiwgXCLwn5qQXCIsIFwi8J+amlwiLCBcIvCfmptcIiwgXCLwn5qcXCIsIFwi8J+PjVwiLCBcIvCfmrJcIiwgXCLwn5qoXCIsIFwi8J+alFwiLCBcIvCfmo1cIiwgXCLwn5qYXCIsIFwi8J+allwiLCBcIvCfmqFcIiwgXCLwn5qgXCIsIFwi8J+ar1wiLCBcIvCfmoNcIiwgXCLwn5qLXCIsIFwi8J+anVwiLCBcIvCfmoRcIiwgXCLwn5qFXCIsIFwi8J+aiFwiLCBcIvCfmp5cIiwgXCLwn5qCXCIsIFwi8J+ahlwiLCBcIvCfmodcIiwgXCLwn5qKXCIsIFwi8J+aiVwiLCBcIvCfmoFcIiwgXCLwn5upXCIsIFwi4pyI77iPXCIsIFwi8J+bq1wiLCBcIvCfm6xcIiwgXCLim7XvuI9cIiwgXCLwn5ulXCIsIFwi8J+apFwiLCBcIuKbtFwiLCBcIvCfm7NcIiwgXCLwn5qAXCIsIFwi8J+bsFwiLCBcIvCfkrpcIiwgXCLimpPvuI9cIiwgXCLwn5qnXCIsIFwi4pu977iPXCIsIFwi8J+aj1wiLCBcIvCfmqZcIiwgXCLwn5qlXCIsIFwi8J+PgVwiLCBcIvCfmqJcIiwgXCLwn46hXCIsIFwi8J+OolwiLCBcIvCfjqBcIiwgXCLwn4+XXCIsIFwi8J+MgVwiLCBcIvCfl7xcIiwgXCLwn4+tXCIsIFwi4puy77iPXCIsIFwi8J+OkVwiLCBcIuKbsFwiLCBcIvCfj5RcIiwgXCLwn5e7XCIsIFwi8J+Mi1wiLCBcIvCfl75cIiwgXCLwn4+VXCIsIFwi4pu677iPXCIsIFwi8J+PnlwiLCBcIvCfm6NcIiwgXCLwn5ukXCIsIFwi8J+MhVwiLCBcIvCfjIRcIiwgXCLwn4+cXCIsIFwi8J+PllwiLCBcIvCfj51cIiwgXCLwn4yHXCIsIFwi8J+MhlwiLCBcIvCfj5lcIiwgXCLwn4yDXCIsIFwi8J+MiVwiLCBcIvCfjIxcIiwgXCLwn4ygXCIsIFwi8J+Oh1wiLCBcIvCfjoZcIiwgXCLwn4yIXCIsIFwi8J+PmFwiLCBcIvCfj7BcIiwgXCLwn4+vXCIsIFwi8J+Pn1wiLCBcIvCfl71cIiwgXCLwn4+gXCIsIFwi8J+PoVwiLCBcIvCfj5pcIiwgXCLwn4+iXCIsIFwi8J+PrFwiLCBcIvCfj6NcIiwgXCLwn4+kXCIsIFwi8J+PpVwiLCBcIvCfj6ZcIiwgXCLwn4+oXCIsIFwi8J+PqlwiLCBcIvCfj6tcIiwgXCLwn4+pXCIsIFwi8J+SklwiLCBcIvCfj5tcIiwgXCLim6rvuI9cIiwgXCLwn5WMXCIsIFwi8J+VjVwiLCBcIvCflYtcIiwgXCLim6lcIiwgXCLijJrvuI9cIiwgXCLwn5OxXCIsIFwi8J+TslwiLCBcIvCfkrtcIiwgXCLijKjvuI9cIiwgXCLwn5alXCIsIFwi8J+WqFwiLCBcIvCflrFcIiwgXCLwn5ayXCIsIFwi8J+VuVwiLCBcIvCfl5xcIiwgXCLwn5K9XCIsIFwi8J+SvlwiLCBcIvCfkr9cIiwgXCLwn5OAXCIsIFwi8J+TvFwiLCBcIvCfk7dcIiwgXCLwn5O4XCIsIFwi8J+TuVwiLCBcIvCfjqVcIiwgXCLwn5O9XCIsIFwi8J+OnlwiLCBcIvCfk55cIiwgXCLimI7vuI9cIiwgXCLwn5OfXCIsIFwi8J+ToFwiLCBcIvCfk7pcIiwgXCLwn5O7XCIsIFwi8J+OmVwiLCBcIvCfjppcIiwgXCLwn46bXCIsIFwi4o+xXCIsIFwi4o+yXCIsIFwi4o+wXCIsIFwi8J+VsFwiLCBcIuKPs1wiLCBcIuKMm++4j1wiLCBcIvCfk6FcIiwgXCLwn5SLXCIsIFwi8J+UjFwiLCBcIvCfkqFcIiwgXCLwn5SmXCIsIFwi8J+Vr1wiLCBcIvCfl5FcIiwgXCLwn5uiXCIsIFwi8J+SuFwiLCBcIvCfkrVcIiwgXCLwn5K0XCIsIFwi8J+StlwiLCBcIvCfkrdcIiwgXCLwn5KwXCIsIFwi8J+Ss1wiLCBcIvCfko5cIiwgXCLimpZcIiwgXCLwn5SnXCIsIFwi8J+UqFwiLCBcIuKaklwiLCBcIvCfm6BcIiwgXCLim49cIiwgXCLwn5SpXCIsIFwi4pqZXCIsIFwi4puTXCIsIFwi8J+Uq1wiLCBcIvCfkqNcIiwgXCLwn5SqXCIsIFwi8J+XoVwiLCBcIuKalFwiLCBcIvCfm6FcIiwgXCLwn5qsXCIsIFwi4pig77iPXCIsIFwi4pqwXCIsIFwi4pqxXCIsIFwi8J+PulwiLCBcIvCflK5cIiwgXCLwn5O/XCIsIFwi8J+SiFwiLCBcIuKal1wiLCBcIvCflK1cIiwgXCLwn5SsXCIsIFwi8J+Vs1wiLCBcIvCfkopcIiwgXCLwn5KJXCIsIFwi8J+MoVwiLCBcIvCfj7dcIiwgXCLwn5SWXCIsIFwi8J+avVwiLCBcIvCfmr9cIiwgXCLwn5uBXCIsIFwi8J+UkVwiLCBcIvCfl51cIiwgXCLwn5uLXCIsIFwi8J+bjFwiLCBcIvCfm49cIiwgXCLwn5qqXCIsIFwi8J+bjlwiLCBcIvCflrxcIiwgXCLwn5e6XCIsIFwi4puxXCIsIFwi8J+Xv1wiLCBcIvCfm41cIiwgXCLwn46IXCIsIFwi8J+Oj1wiLCBcIvCfjoBcIiwgXCLwn46BXCIsIFwi8J+OilwiLCBcIvCfjolcIiwgXCLwn46OXCIsIFwi8J+OkFwiLCBcIvCfjoxcIiwgXCLwn4+uXCIsIFwi4pyJ77iPXCIsIFwi8J+TqVwiLCBcIvCfk6hcIiwgXCLwn5OnXCIsIFwi8J+SjFwiLCBcIvCfk65cIiwgXCLwn5OqXCIsIFwi8J+Tq1wiLCBcIvCfk6xcIiwgXCLwn5OtXCIsIFwi8J+TplwiLCBcIvCfk69cIiwgXCLwn5OlXCIsIFwi8J+TpFwiLCBcIvCfk5xcIiwgXCLwn5ODXCIsIFwi8J+TkVwiLCBcIvCfk4pcIiwgXCLwn5OIXCIsIFwi8J+TiVwiLCBcIvCfk4RcIiwgXCLwn5OFXCIsIFwi8J+ThlwiLCBcIvCfl5NcIiwgXCLwn5OHXCIsIFwi8J+Xg1wiLCBcIvCfl7NcIiwgXCLwn5eEXCIsIFwi8J+Ti1wiLCBcIvCfl5JcIiwgXCLwn5OBXCIsIFwi8J+TglwiLCBcIvCfl4JcIiwgXCLwn5eeXCIsIFwi8J+TsFwiLCBcIvCfk5NcIiwgXCLwn5OVXCIsIFwi8J+Tl1wiLCBcIvCfk5hcIiwgXCLwn5OZXCIsIFwi8J+TlFwiLCBcIvCfk5JcIiwgXCLwn5OaXCIsIFwi8J+TllwiLCBcIvCflJdcIiwgXCLwn5OOXCIsIFwi8J+Wh1wiLCBcIuKcgu+4j1wiLCBcIvCfk5BcIiwgXCLwn5OPXCIsIFwi8J+TjFwiLCBcIvCfk41cIiwgXCLwn5qpXCIsIFwi8J+Ps1wiLCBcIvCfj7RcIiwgXCLwn5SQXCIsIFwi8J+UklwiLCBcIvCflJNcIiwgXCLwn5SPXCIsIFwi8J+WilwiLCBcIvCflotcIiwgXCLinJLvuI9cIiwgXCLwn5OdXCIsIFwi4pyP77iPXCIsIFwi8J+WjVwiLCBcIvCfloxcIiwgXCLwn5SNXCIsIFwi8J+UjlwiLCBcIvCfm5FcIiwgXCLwn5uRXCIsIFwi4p2k77iPXCIsIFwi8J+Sm1wiLCBcIvCfkppcIiwgXCLwn5KZXCIsIFwi8J+SnFwiLCBcIvCfkpRcIiwgXCLinaPvuI9cIiwgXCLwn5KVXCIsIFwi8J+SnlwiLCBcIvCfkpNcIiwgXCLwn5KXXCIsIFwi8J+SllwiLCBcIvCfkphcIiwgXCLwn5KdXCIsIFwi8J+Sn1wiLCBcIuKYru+4j1wiLCBcIuKcne+4j1wiLCBcIuKYqu+4j1wiLCBcIvCflYlcIiwgXCLimLjvuI9cIiwgXCLinKHvuI9cIiwgXCLwn5SvXCIsIFwi8J+VjlwiLCBcIuKYr++4j1wiLCBcIuKYpu+4j1wiLCBcIvCfm5BcIiwgXCLim45cIiwgXCLimYjvuI9cIiwgXCLimYnvuI9cIiwgXCLimYrvuI9cIiwgXCLimYvvuI9cIiwgXCLimYzvuI9cIiwgXCLimY3vuI9cIiwgXCLimY7vuI9cIiwgXCLimY/vuI9cIiwgXCLimZDvuI9cIiwgXCLimZHvuI9cIiwgXCLimZLvuI9cIiwgXCLimZPvuI9cIiwgXCLwn4aUXCIsIFwi4pqbXCIsIFwi8J+Is1wiLCBcIvCfiLlcIiwgXCLimKLvuI9cIiwgXCLimKPvuI9cIiwgXCLwn5O0XCIsIFwi8J+Ts1wiLCBcIvCfiLZcIiwgXCLwn4ia77iPXCIsIFwi8J+IuFwiLCBcIvCfiLpcIiwgXCLwn4i377iPXCIsIFwi4py077iPXCIsIFwi8J+GmlwiLCBcIvCfiZFcIiwgXCLwn5KuXCIsIFwi8J+JkFwiLCBcIuOKme+4j1wiLCBcIuOKl++4j1wiLCBcIvCfiLRcIiwgXCLwn4i1XCIsIFwi8J+IslwiLCBcIvCfhbDvuI9cIiwgXCLwn4Wx77iPXCIsIFwi8J+GjlwiLCBcIvCfhpFcIiwgXCLwn4W+77iPXCIsIFwi8J+GmFwiLCBcIuKblO+4j1wiLCBcIvCfk5tcIiwgXCLwn5qrXCIsIFwi4p2MXCIsIFwi4q2V77iPXCIsIFwi8J+SolwiLCBcIuKZqO+4j1wiLCBcIvCfmrdcIiwgXCLwn5qvXCIsIFwi8J+as1wiLCBcIvCfmrFcIiwgXCLwn5SeXCIsIFwi8J+TtVwiLCBcIuKdl++4j1wiLCBcIuKdlVwiLCBcIuKdk1wiLCBcIuKdlFwiLCBcIuKAvO+4j1wiLCBcIuKBie+4j1wiLCBcIvCfkq9cIiwgXCLwn5SFXCIsIFwi8J+UhlwiLCBcIvCflLFcIiwgXCLimpxcIiwgXCLjgL3vuI9cIiwgXCLimqDvuI9cIiwgXCLwn5q4XCIsIFwi8J+UsFwiLCBcIuKZu++4j1wiLCBcIvCfiK/vuI9cIiwgXCLwn5K5XCIsIFwi4p2H77iPXCIsIFwi4pyz77iPXCIsIFwi4p2OXCIsIFwi4pyFXCIsIFwi8J+SoFwiLCBcIvCfjIBcIiwgXCLinr9cIiwgXCLwn4yQXCIsIFwi4pOC77iPXCIsIFwi8J+Pp1wiLCBcIvCfiILvuI9cIiwgXCLwn5uCXCIsIFwi8J+bg1wiLCBcIvCfm4RcIiwgXCLwn5uFXCIsIFwi4pm/77iPXCIsIFwi8J+arVwiLCBcIvCfmr5cIiwgXCLwn4W/77iPXCIsIFwi8J+asFwiLCBcIvCfmrlcIiwgXCLwn5q6XCIsIFwi8J+avFwiLCBcIvCfmrtcIiwgXCLwn5quXCIsIFwi8J+OplwiLCBcIvCfk7ZcIiwgXCLwn4iBXCIsIFwi8J+GllwiLCBcIvCfhpdcIiwgXCLwn4aZXCIsIFwi8J+GklwiLCBcIvCfhpVcIiwgXCLwn4aTXCIsIFwiMO+4j+KDo1wiLCBcIjHvuI/ig6NcIiwgXCIy77iP4oOjXCIsIFwiM++4j+KDo1wiLCBcIjTvuI/ig6NcIiwgXCI177iP4oOjXCIsIFwiNu+4j+KDo1wiLCBcIjfvuI/ig6NcIiwgXCI477iP4oOjXCIsIFwiOe+4j+KDo1wiLCBcIvCflJ9cIiwgXCLwn5SiXCIsIFwi4pa277iPXCIsIFwi4o+4XCIsIFwi4o+vXCIsIFwi4o+5XCIsIFwi4o+6XCIsIFwi4o+tXCIsIFwi4o+uXCIsIFwi4o+pXCIsIFwi4o+qXCIsIFwi8J+UgFwiLCBcIvCflIFcIiwgXCLwn5SCXCIsIFwi4peA77iPXCIsIFwi8J+UvFwiLCBcIvCflL1cIiwgXCLij6tcIiwgXCLij6xcIiwgXCLinqHvuI9cIiwgXCLirIXvuI9cIiwgXCLirIbvuI9cIiwgXCLirIfvuI9cIiwgXCLihpfvuI9cIiwgXCLihpjvuI9cIiwgXCLihpnvuI9cIiwgXCLihpbvuI9cIiwgXCLihpXvuI9cIiwgXCLihpTvuI9cIiwgXCLwn5SEXCIsIFwi4oaq77iPXCIsIFwi4oap77iPXCIsIFwi4qS077iPXCIsIFwi4qS177iPXCIsIFwiI++4j+KDo1wiLCBcIirvuI/ig6NcIiwgXCLihLnvuI9cIiwgXCLwn5SkXCIsIFwi8J+UoVwiLCBcIvCflKBcIiwgXCLwn5SjXCIsIFwi8J+OtVwiLCBcIvCfjrZcIiwgXCLjgLDvuI9cIiwgXCLinrBcIiwgXCLinJTvuI9cIiwgXCLwn5SDXCIsIFwi4p6VXCIsIFwi4p6WXCIsIFwi4p6XXCIsIFwi4pyW77iPXCIsIFwi8J+SslwiLCBcIvCfkrFcIiwgXCLCqe+4j1wiLCBcIsKu77iPXCIsIFwi4oSi77iPXCIsIFwi8J+UmlwiLCBcIvCflJlcIiwgXCLwn5SbXCIsIFwi8J+UnVwiLCBcIvCflJxcIiwgXCLimJHvuI9cIiwgXCLwn5SYXCIsIFwi4pqq77iPXCIsIFwi4pqr77iPXCIsIFwi8J+UtFwiLCBcIvCflLVcIiwgXCLwn5S4XCIsIFwi8J+UuVwiLCBcIvCflLZcIiwgXCLwn5S3XCIsIFwi8J+UulwiLCBcIuKWqu+4j1wiLCBcIuKWq++4j1wiLCBcIuKsm++4j1wiLCBcIuKsnO+4j1wiLCBcIvCflLtcIiwgXCLil7zvuI9cIiwgXCLil7vvuI9cIiwgXCLil77vuI9cIiwgXCLil73vuI9cIiwgXCLwn5SyXCIsIFwi8J+Us1wiLCBcIvCflIhcIiwgXCLwn5SJXCIsIFwi8J+UilwiLCBcIvCflIdcIiwgXCLwn5OjXCIsIFwi8J+TolwiLCBcIvCflJRcIiwgXCLwn5SVXCIsIFwi8J+Dj1wiLCBcIvCfgITvuI9cIiwgXCLimaDvuI9cIiwgXCLimaPvuI9cIiwgXCLimaXvuI9cIiwgXCLimabvuI9cIiwgXCLwn460XCIsIFwi8J+RgeKAjfCfl6hcIiwgXCLwn5KtXCIsIFwi8J+Xr1wiLCBcIvCfkqxcIiwgXCLwn5WQXCIsIFwi8J+VkVwiLCBcIvCflZJcIiwgXCLwn5WTXCIsIFwi8J+VlFwiLCBcIvCflZVcIiwgXCLwn5WWXCIsIFwi8J+Vl1wiLCBcIvCflZhcIiwgXCLwn5WZXCIsIFwi8J+VmlwiLCBcIvCflZtcIiwgXCLwn5WcXCIsIFwi8J+VnVwiLCBcIvCflZ5cIiwgXCLwn5WfXCIsIFwi8J+VoFwiLCBcIvCflaFcIiwgXCLwn5WiXCIsIFwi8J+Vo1wiLCBcIvCflaRcIiwgXCLwn5WlXCIsIFwi8J+VplwiLCBcIvCfladcIiwgXCLwn5uRXCIsIFwi8J+HpvCfh6tcIiwgXCLwn4em8J+HvVwiLCBcIvCfh6bwn4exXCIsIFwi8J+HqfCfh79cIiwgXCLwn4em8J+HuFwiLCBcIvCfh6bwn4epXCIsIFwi8J+HpvCfh7RcIiwgXCLwn4em8J+HrlwiLCBcIvCfh6bwn4e2XCIsIFwi8J+HpvCfh6xcIiwgXCLwn4em8J+Ht1wiLCBcIvCfh6bwn4eyXCIsIFwi8J+HpvCfh7xcIiwgXCLwn4em8J+HulwiLCBcIvCfh6bwn4e5XCIsIFwi8J+HpvCfh79cIiwgXCLwn4en8J+HuFwiLCBcIvCfh6fwn4etXCIsIFwi8J+Hp/Cfh6lcIiwgXCLwn4en8J+Hp1wiLCBcIvCfh6fwn4e+XCIsIFwi8J+Hp/Cfh6pcIiwgXCLwn4en8J+Hv1wiLCBcIvCfh6fwn4evXCIsIFwi8J+Hp/Cfh7JcIiwgXCLwn4en8J+HuVwiLCBcIvCfh6fwn4e0XCIsIFwi8J+Hp/Cfh7ZcIiwgXCLwn4en8J+HplwiLCBcIvCfh6fwn4e8XCIsIFwi8J+Hp/Cfh7dcIiwgXCLwn4eu8J+HtFwiLCBcIvCfh7vwn4esXCIsIFwi8J+Hp/Cfh7NcIiwgXCLwn4en8J+HrFwiLCBcIvCfh6fwn4erXCIsIFwi8J+Hp/Cfh65cIiwgXCLwn4eo8J+Hu1wiLCBcIvCfh7Dwn4etXCIsIFwi8J+HqPCfh7JcIiwgXCLwn4eo8J+HplwiLCBcIvCfh67wn4eoXCIsIFwi8J+HsPCfh75cIiwgXCLwn4eo8J+Hq1wiLCBcIvCfh7nwn4epXCIsIFwi8J+HqPCfh7FcIiwgXCLwn4eo8J+Hs1wiLCBcIvCfh6jwn4e9XCIsIFwi8J+HqPCfh6hcIiwgXCLwn4eo8J+HtFwiLCBcIvCfh7Dwn4eyXCIsIFwi8J+HqPCfh6xcIiwgXCLwn4eo8J+HqVwiLCBcIvCfh6jwn4ewXCIsIFwi8J+HqPCfh7dcIiwgXCLwn4et8J+Ht1wiLCBcIvCfh6jwn4e6XCIsIFwi8J+HqPCfh7xcIiwgXCLwn4eo8J+HvlwiLCBcIvCfh6jwn4e/XCIsIFwi8J+HqfCfh7BcIiwgXCLwn4ep8J+Hr1wiLCBcIvCfh6nwn4eyXCIsIFwi8J+HqfCfh7RcIiwgXCLwn4eq8J+HqFwiLCBcIvCfh6rwn4esXCIsIFwi8J+HuPCfh7tcIiwgXCLwn4es8J+HtlwiLCBcIvCfh6rwn4e3XCIsIFwi8J+HqvCfh6pcIiwgXCLwn4eq8J+HuVwiLCBcIvCfh6rwn4e6XCIsIFwi8J+Hq/Cfh7BcIiwgXCLwn4er8J+HtFwiLCBcIvCfh6vwn4evXCIsIFwi8J+Hq/Cfh65cIiwgXCLwn4er8J+Ht1wiLCBcIvCfh6zwn4erXCIsIFwi8J+HtfCfh6tcIiwgXCLwn4e58J+Hq1wiLCBcIvCfh6zwn4emXCIsIFwi8J+HrPCfh7JcIiwgXCLwn4es8J+HqlwiLCBcIvCfh6nwn4eqXCIsIFwi8J+HrPCfh61cIiwgXCLwn4es8J+HrlwiLCBcIvCfh6zwn4e3XCIsIFwi8J+HrPCfh7FcIiwgXCLwn4es8J+HqVwiLCBcIvCfh6zwn4e1XCIsIFwi8J+HrPCfh7pcIiwgXCLwn4es8J+HuVwiLCBcIvCfh6zwn4esXCIsIFwi8J+HrPCfh7NcIiwgXCLwn4es8J+HvFwiLCBcIvCfh6zwn4e+XCIsIFwi8J+HrfCfh7lcIiwgXCLwn4et8J+Hs1wiLCBcIvCfh63wn4ewXCIsIFwi8J+HrfCfh7pcIiwgXCLwn4eu8J+HuFwiLCBcIvCfh67wn4ezXCIsIFwi8J+HrvCfh6lcIiwgXCLwn4eu8J+Ht1wiLCBcIvCfh67wn4e2XCIsIFwi8J+HrvCfh6pcIiwgXCLwn4eu8J+HslwiLCBcIvCfh67wn4exXCIsIFwi8J+HrvCfh7lcIiwgXCLwn4eo8J+HrlwiLCBcIvCfh6/wn4eyXCIsIFwi8J+Hr/Cfh7VcIiwgXCLwn4ev8J+HqlwiLCBcIvCfh6/wn4e0XCIsIFwi8J+HsPCfh79cIiwgXCLwn4ew8J+HqlwiLCBcIvCfh7Dwn4euXCIsIFwi8J+HvfCfh7BcIiwgXCLwn4ew8J+HvFwiLCBcIvCfh7Dwn4esXCIsIFwi8J+HsfCfh6ZcIiwgXCLwn4ex8J+Hu1wiLCBcIvCfh7Hwn4enXCIsIFwi8J+HsfCfh7hcIiwgXCLwn4ex8J+Ht1wiLCBcIvCfh7Hwn4e+XCIsIFwi8J+HsfCfh65cIiwgXCLwn4ex8J+HuVwiLCBcIvCfh7Hwn4e6XCIsIFwi8J+HsvCfh7RcIiwgXCLwn4ey8J+HsFwiLCBcIvCfh7Lwn4esXCIsIFwi8J+HsvCfh7xcIiwgXCLwn4ey8J+HvlwiLCBcIvCfh7Lwn4e7XCIsIFwi8J+HsvCfh7FcIiwgXCLwn4ey8J+HuVwiLCBcIvCfh7Lwn4etXCIsIFwi8J+HsvCfh7ZcIiwgXCLwn4ey8J+Ht1wiLCBcIvCfh7Lwn4e6XCIsIFwi8J+HvvCfh7lcIiwgXCLwn4ey8J+HvVwiLCBcIvCfh6vwn4eyXCIsIFwi8J+HsvCfh6lcIiwgXCLwn4ey8J+HqFwiLCBcIvCfh7Lwn4ezXCIsIFwi8J+HsvCfh6pcIiwgXCLwn4ey8J+HuFwiLCBcIvCfh7Lwn4emXCIsIFwi8J+HsvCfh79cIiwgXCLwn4ey8J+HslwiLCBcIvCfh7Pwn4emXCIsIFwi8J+Hs/Cfh7dcIiwgXCLwn4ez8J+HtVwiLCBcIvCfh7Pwn4exXCIsIFwi8J+Hs/Cfh6hcIiwgXCLwn4ez8J+Hv1wiLCBcIvCfh7Pwn4euXCIsIFwi8J+Hs/Cfh6pcIiwgXCLwn4ez8J+HrFwiLCBcIvCfh7Pwn4e6XCIsIFwi8J+Hs/Cfh6tcIiwgXCLwn4ey8J+HtVwiLCBcIvCfh7Dwn4e1XCIsIFwi8J+Hs/Cfh7RcIiwgXCLwn4e08J+HslwiLCBcIvCfh7Xwn4ewXCIsIFwi8J+HtfCfh7xcIiwgXCLwn4e18J+HuFwiLCBcIvCfh7Xwn4emXCIsIFwi8J+HtfCfh6xcIiwgXCLwn4e18J+HvlwiLCBcIvCfh7Xwn4eqXCIsIFwi8J+HtfCfh61cIiwgXCLwn4e18J+Hs1wiLCBcIvCfh7Xwn4exXCIsIFwi8J+HtfCfh7lcIiwgXCLwn4e18J+Ht1wiLCBcIvCfh7bwn4emXCIsIFwi8J+Ht/Cfh6pcIiwgXCLwn4e38J+HtFwiLCBcIvCfh7fwn4e6XCIsIFwi8J+Ht/Cfh7xcIiwgXCLwn4en8J+HsVwiLCBcIvCfh7jwn4etXCIsIFwi8J+HsPCfh7NcIiwgXCLwn4ex8J+HqFwiLCBcIvCfh7Xwn4eyXCIsIFwi8J+Hu/Cfh6hcIiwgXCLwn4e88J+HuFwiLCBcIvCfh7jwn4eyXCIsIFwi8J+HuPCfh7lcIiwgXCLwn4e48J+HplwiLCBcIvCfh7jwn4ezXCIsIFwi8J+Ht/Cfh7hcIiwgXCLwn4e48J+HqFwiLCBcIvCfh7jwn4exXCIsIFwi8J+HuPCfh6xcIiwgXCLwn4e48J+HvVwiLCBcIvCfh7jwn4ewXCIsIFwi8J+HuPCfh65cIiwgXCLwn4e48J+Hp1wiLCBcIvCfh7jwn4e0XCIsIFwi8J+Hv/Cfh6ZcIiwgXCLwn4es8J+HuFwiLCBcIvCfh7Dwn4e3XCIsIFwi8J+HuPCfh7hcIiwgXCLwn4eq8J+HuFwiLCBcIvCfh7Hwn4ewXCIsIFwi8J+HuPCfh6lcIiwgXCLwn4e48J+Ht1wiLCBcIvCfh7jwn4e/XCIsIFwi8J+HuPCfh6pcIiwgXCLwn4eo8J+HrVwiLCBcIvCfh7jwn4e+XCIsIFwi8J+HufCfh7xcIiwgXCLwn4e58J+Hr1wiLCBcIvCfh7nwn4e/XCIsIFwi8J+HufCfh61cIiwgXCLwn4e58J+HsVwiLCBcIvCfh7nwn4esXCIsIFwi8J+HufCfh7BcIiwgXCLwn4e58J+HtFwiLCBcIvCfh7nwn4e5XCIsIFwi8J+HufCfh7NcIiwgXCLwn4e58J+Ht1wiLCBcIvCfh7nwn4eyXCIsIFwi8J+HufCfh6hcIiwgXCLwn4e58J+Hu1wiLCBcIvCfh7rwn4esXCIsIFwi8J+HuvCfh6ZcIiwgXCLwn4em8J+HqlwiLCBcIvCfh6zwn4enXCIsIFwi8J+HuvCfh7hcIiwgXCLwn4e78J+HrlwiLCBcIvCfh7rwn4e+XCIsIFwi8J+HuvCfh79cIiwgXCLwn4e78J+HulwiLCBcIvCfh7vwn4emXCIsIFwi8J+Hu/Cfh6pcIiwgXCLwn4e78J+Hs1wiLCBcIvCfh7zwn4erXCIsIFwi8J+HqvCfh61cIiwgXCLwn4e+8J+HqlwiLCBcIvCfh7/wn4eyXCIsIFwi8J+Hv/Cfh7xcIl1cblx0ZW1vamkgOiBcIjw/eG1sIHZlcnNpb249JzEuMCcgZW5jb2Rpbmc9J1VURi04JyBzdGFuZGFsb25lPSdubyc/PlxuXHRcdDxzdmcgd2lkdGg9JzIwcHgnIGhlaWdodD0nMjBweCcgdmlld0JveD0nMCAwIDIwIDIwJyB2ZXJzaW9uPScxLjEnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgeG1sbnM6eGxpbms9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnIHhtbG5zOnNrZXRjaD0naHR0cDovL3d3dy5ib2hlbWlhbmNvZGluZy5jb20vc2tldGNoL25zJz5cblx0XHRcdDwhLS0gR2VuZXJhdG9yOiBTa2V0Y2ggMy41LjIgKDI1MjM1KSAtIGh0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaCAtLT5cblx0XHRcdDx0aXRsZT5FbW9qaTwvdGl0bGU+XG5cdFx0XHQ8ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz5cblx0XHRcdDxkZWZzPjwvZGVmcz5cblx0XHRcdDxnIGlkPSdQYWdlLTEnIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnIHNrZXRjaDp0eXBlPSdNU1BhZ2UnPlxuXHRcdFx0XHQ8ZyBpZD0nS2V5Ym9hcmQvTGlnaHQvTG93ZXInIHNrZXRjaDp0eXBlPSdNU0xheWVyR3JvdXAnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKC02MC4wMDAwMDAsIC0xODEuMDAwMDAwKScgZmlsbD0nIzAzMDMwMyc+XG5cdFx0XHRcdFx0PGcgaWQ9J0JvdHRvbS1Sb3cnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDMuMDAwMDAwLCAxNzAuMDAwMDAwKScgc2tldGNoOnR5cGU9J01TU2hhcGVHcm91cCc+XG5cdFx0XHRcdFx0XHQ8cGF0aCBkPSdNNjYuNzUsMzAuNSBDNzIuMTM0Nzc2MywzMC41IDc2LjUsMjYuMTM0Nzc2MyA3Ni41LDIwLjc1IEM3Ni41LDE1LjM2NTIyMzcgNzIuMTM0Nzc2MywxMSA2Ni43NSwxMSBDNjEuMzY1MjIzNywxMSA1NywxNS4zNjUyMjM3IDU3LDIwLjc1IEM1NywyNi4xMzQ3NzYzIDYxLjM2NTIyMzcsMzAuNSA2Ni43NSwzMC41IFogTTY2Ljc1LDI5LjUgQzcxLjU4MjQ5MTYsMjkuNSA3NS41LDI1LjU4MjQ5MTYgNzUuNSwyMC43NSBDNzUuNSwxNS45MTc1MDg0IDcxLjU4MjQ5MTYsMTIgNjYuNzUsMTIgQzYxLjkxNzUwODQsMTIgNTgsMTUuOTE3NTA4NCA1OCwyMC43NSBDNTgsMjUuNTgyNDkxNiA2MS45MTc1MDg0LDI5LjUgNjYuNzUsMjkuNSBaIE02My43NSwxOSBDNjQuNDQwMzU1OSwxOSA2NSwxOC40NDAzNTU5IDY1LDE3Ljc1IEM2NSwxNy4wNTk2NDQxIDY0LjQ0MDM1NTksMTYuNSA2My43NSwxNi41IEM2My4wNTk2NDQxLDE2LjUgNjIuNSwxNy4wNTk2NDQxIDYyLjUsMTcuNzUgQzYyLjUsMTguNDQwMzU1OSA2My4wNTk2NDQxLDE5IDYzLjc1LDE5IFogTTY5Ljc1LDE5IEM3MC40NDAzNTU5LDE5IDcxLDE4LjQ0MDM1NTkgNzEsMTcuNzUgQzcxLDE3LjA1OTY0NDEgNzAuNDQwMzU1OSwxNi41IDY5Ljc1LDE2LjUgQzY5LjA1OTY0NDEsMTYuNSA2OC41LDE3LjA1OTY0NDEgNjguNSwxNy43NSBDNjguNSwxOC40NDAzNTU5IDY5LjA1OTY0NDEsMTkgNjkuNzUsMTkgWiBNNTkuODg3NjMzNCwyMi4xNjQxNDQ0IEM1OS42MzkwMzE2LDIxLjM4MzEzNCA2MC4wNjU5MTgsMjAuOTc4NTE1NiA2MC44NTMwOTUxLDIxLjIzMjkzMDQgQzYwLjg1MzA5NTEsMjEuMjMyOTMwNCA2My4wOTM3NTAzLDIyLjIxMjUgNjYuNzUwMDAwMSwyMi4yMTI1IEM3MC40MDYyNDk5LDIyLjIxMjUgNzIuNjQ2OTA0NywyMS4yMzI5MzA0IDcyLjY0NjkwNDcsMjEuMjMyOTMwNCBDNzMuNDI4NzE2MiwyMC45NjYyMTUzIDczLjg4MTI0NjMsMjEuNDA0NDA5NyA3My42MDU4NDc3LDIyLjE4MDc0MzcgQzczLjYwNTg0NzcsMjIuMTgwNzQzNyA3Mi42LDI3LjU3NSA2Ni43NSwyNy41NzUgQzYwLjksMjcuNTc1IDU5Ljg4NzYzMzQsMjIuMTY0MTQ0NCA1OS44ODc2MzM0LDIyLjE2NDE0NDQgWiBNNjYuNzUsMjMuMTg3NSBDNjQuMDY4NzUsMjMuMTg3NSA2MS44NTQ0MDU1LDIyLjQ3Mzc4MjEgNjEuODU0NDA1NSwyMi40NzM3ODIxIEM2MS4zMjczMDE5LDIyLjMyOTQ4IDYxLjE3ODEyMzMsMjIuNTcyMTYxNSA2MS41NjM5NTU1LDIyLjk1NzA3NSBDNjEuNTYzOTU1NSwyMi45NTcwNzUgNjIuMzYyNSwyNC42NSA2Ni43NSwyNC42NSBDNzEuMTM3NSwyNC42NSA3MS45NTA4NTAzLDIyLjk0MzgzMDQgNzEuOTUwODUwMywyMi45NDM4MzA0IEM3Mi4zMDkzNjU5LDIyLjUzOTkyNzggNzIuMTY5MDc5MywyMi4zMzU5ODQ0IDcxLjYzNTQyNzMsMjIuNDc2MzQ5IEM3MS42MzU0MjczLDIyLjQ3NjM0OSA2OS40MzEyNSwyMy4xODc1IDY2Ljc1LDIzLjE4NzUgWicgaWQ9J0Vtb2ppJz48L3BhdGg+XG5cdFx0XHRcdFx0PC9nPlxuXHRcdFx0XHQ8L2c+XG5cdFx0XHQ8L2c+XG5cdFx0PC9zdmc+XCJcblx0ZGVsZXRlOiB7XG5cdFx0b24gOiBcIjw/eG1sIHZlcnNpb249JzEuMCcgZW5jb2Rpbmc9J1VURi04JyBzdGFuZGFsb25lPSdubyc/PlxuXHRcdFx0XHQ8c3ZnIHdpZHRoPScyNHB4JyBoZWlnaHQ9JzE4cHgnIHZpZXdCb3g9JzAgMCAyNCAxOCcgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJyB4bWxuczpza2V0Y2g9J2h0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaC9ucyc+XG5cdFx0XHRcdFx0PCEtLSBHZW5lcmF0b3I6IFNrZXRjaCAzLjUuMiAoMjUyMzUpIC0gaHR0cDovL3d3dy5ib2hlbWlhbmNvZGluZy5jb20vc2tldGNoIC0tPlxuXHRcdFx0XHRcdDx0aXRsZT5CYWNrPC90aXRsZT5cblx0XHRcdFx0XHQ8ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz5cblx0XHRcdFx0XHQ8ZGVmcz48L2RlZnM+XG5cdFx0XHRcdFx0PGcgaWQ9J1BhZ2UtMScgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCcgc2tldGNoOnR5cGU9J01TUGFnZSc+XG5cdFx0XHRcdFx0XHQ8ZyBpZD0nS2V5Ym9hcmQvTGlnaHQvVXBwZXInIHNrZXRjaDp0eXBlPSdNU0xheWVyR3JvdXAnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKC0zMzkuMDAwMDAwLCAtMTMwLjAwMDAwMCknIGZpbGw9JyMwMzAzMDMnPlxuXHRcdFx0XHRcdFx0XHQ8ZyBpZD0nVGhpcmQtUm93JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgzLjAwMDAwMCwgMTE4LjAwMDAwMCknIHNrZXRjaDp0eXBlPSdNU1NoYXBlR3JvdXAnPlxuXHRcdFx0XHRcdFx0XHRcdDxwYXRoIGQ9J00zNTEuNjQyNjYzLDIwLjk3NzY5MDMgTDM1NC40NjY3OTUsMTguMTUzNTU4NSBDMzU0Ljc2MDEwNiwxNy44NjAyNDc2IDM1NC43NjM5ODMsMTcuMzgxNDk2MiAzNTQuNDcxMDksMTcuMDg4NjAzIEMzNTQuMTc2MTU1LDE2Ljc5MzY2NzcgMzUzLjcwMTQsMTYuNzk3NjMyOCAzNTMuNDA2MTM1LDE3LjA5Mjg5ODMgTDM1MC41ODIwMDMsMTkuOTE3MDMwMSBMMzQ3Ljc1Nzg3MSwxNy4wOTI4OTgzIEMzNDcuNDY0NTYsMTYuNzk5NTg3NCAzNDYuOTg1ODA5LDE2Ljc5NTcwOTcgMzQ2LjY5MjkxNiwxNy4wODg2MDMgQzM0Ni4zOTc5OCwxNy4zODM1MzgyIDM0Ni40MDE5NDUsMTcuODU4MjkzIDM0Ni42OTcyMTEsMTguMTUzNTU4NSBMMzQ5LjUyMTM0MywyMC45Nzc2OTAzIEwzNDYuNjk3MjExLDIzLjgwMTgyMiBDMzQ2LjQwMzksMjQuMDk1MTMyOSAzNDYuNDAwMDIyLDI0LjU3Mzg4NDMgMzQ2LjY5MjkxNiwyNC44NjY3Nzc2IEMzNDYuOTg3ODUxLDI1LjE2MTcxMjggMzQ3LjQ2MjYwNiwyNS4xNTc3NDc3IDM0Ny43NTc4NzEsMjQuODYyNDgyMiBMMzUwLjU4MjAwMywyMi4wMzgzNTA0IEwzNTMuNDA2MTM1LDI0Ljg2MjQ4MjIgQzM1My42OTk0NDUsMjUuMTU1NzkzMSAzNTQuMTc4MTk3LDI1LjE1OTY3MDggMzU0LjQ3MTA5LDI0Ljg2Njc3NzYgQzM1NC43NjYwMjUsMjQuNTcxODQyMyAzNTQuNzYyMDYsMjQuMDk3MDg3NSAzNTQuNDY2Nzk1LDIzLjgwMTgyMiBMMzUxLjY0MjY2MywyMC45Nzc2OTAzIFogTTMzNy4wNTkzNDUsMjIuMDU5MzQ0NSBDMzM2LjQ3NDI4NSwyMS40NzQyODQ3IDMzNi40ODEzNTEsMjAuNTE4NjQ4OSAzMzcuMDU5MzQ1LDE5Ljk0MDY1NTUgTDM0My43ODk5MTUsMTMuMjEwMDg1MyBDMzQ0LjE4MjA4NCwxMi44MTc5MTYgMzQ0Ljk0ODkyLDEyLjUgMzQ1LjUwNzQ4NCwxMi41IEwzNTYuMDAyMDk4LDEyLjUgQzM1Ny45MzM5MzYsMTIuNSAzNTkuNSwxNC4wNjg4NDc3IDM1OS41LDE2LjAwMTc5ODMgTDM1OS41LDI1Ljk5ODIwMTcgQzM1OS41LDI3LjkzMjE5MTUgMzU3LjkyMzA4OCwyOS41IDM1Ni4wMDIwOTgsMjkuNSBMMzQ1LjUwNzQ4NCwyOS41IEMzNDQuOTUxMDY2LDI5LjUgMzQ0LjE3NzE2OSwyOS4xNzcxNjkzIDM0My43ODk5MTUsMjguNzg5OTE0OCBMMzM3LjA1OTM0NSwyMi4wNTkzNDQ1IFonIGlkPSdCYWNrJz48L3BhdGg+XG5cdFx0XHRcdFx0XHRcdDwvZz5cblx0XHRcdFx0XHRcdDwvZz5cblx0XHRcdFx0XHQ8L2c+XG5cdFx0XHRcdDwvc3ZnPlwiXG5cdFx0b2ZmIDogXCI8P3htbCB2ZXJzaW9uPScxLjAnIGVuY29kaW5nPSdVVEYtOCcgc3RhbmRhbG9uZT0nbm8nPz5cblx0XHQ8c3ZnIHdpZHRoPScyNHB4JyBoZWlnaHQ9JzE4cHgnIHZpZXdCb3g9JzAgMCAyNCAxOCcgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJyB4bWxuczpza2V0Y2g9J2h0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaC9ucyc+XG5cdFx0XHQ8IS0tIEdlbmVyYXRvcjogU2tldGNoIDMuNS4yICgyNTIzNSkgLSBodHRwOi8vd3d3LmJvaGVtaWFuY29kaW5nLmNvbS9za2V0Y2ggLS0+XG5cdFx0XHQ8dGl0bGU+QmFjazwvdGl0bGU+XG5cdFx0XHQ8ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz5cblx0XHRcdDxkZWZzPjwvZGVmcz5cblx0XHRcdDxnIGlkPSdQYWdlLTEnIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnIHNrZXRjaDp0eXBlPSdNU1BhZ2UnPlxuXHRcdFx0XHQ8ZyBpZD0nS2V5Ym9hcmQvTGlnaHQvVXBwZXInIHNrZXRjaDp0eXBlPSdNU0xheWVyR3JvdXAnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKC0zMzkuMDAwMDAwLCAtMTMwLjAwMDAwMCknIGZpbGw9JyMwMzAzMDMnPlxuXHRcdFx0XHRcdDxnIGlkPSdUaGlyZC1Sb3cnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDMuMDAwMDAwLCAxMTguMDAwMDAwKScgc2tldGNoOnR5cGU9J01TU2hhcGVHcm91cCc+XG5cdFx0XHRcdFx0XHQ8cGF0aCBkPSdNMzM3LjA1OTM0NSwyMi4wNTkzNDQ1IEMzMzYuNDc0Mjg1LDIxLjQ3NDI4NDcgMzM2LjQ4MTM1MSwyMC41MTg2NDg5IDMzNy4wNTkzNDUsMTkuOTQwNjU1NSBMMzQzLjc4OTkxNSwxMy4yMTAwODUzIEMzNDQuMTgyMDg0LDEyLjgxNzkxNiAzNDQuOTQ4OTIsMTIuNSAzNDUuNTA3NDg0LDEyLjUgTDM1Ni4wMDIwOTgsMTIuNSBDMzU3LjkzMzkzNiwxMi41IDM1OS41LDE0LjA2ODg0NzcgMzU5LjUsMTYuMDAxNzk4MyBMMzU5LjUsMjUuOTk4MjAxNyBDMzU5LjUsMjcuOTMyMTkxNSAzNTcuOTIzMDg4LDI5LjUgMzU2LjAwMjA5OCwyOS41IEwzNDUuNTA3NDg0LDI5LjUgQzM0NC45NTEwNjYsMjkuNSAzNDQuMTc3MTY5LDI5LjE3NzE2OTMgMzQzLjc4OTkxNSwyOC43ODk5MTQ4IEwzMzcuMDU5MzQ1LDIyLjA1OTM0NDUgWiBNMzUxLjY0MjY2MywyMC45Nzc2OTAzIEwzNTQuNDY2Nzk1LDE4LjE1MzU1ODUgQzM1NC43NjAxMDYsMTcuODYwMjQ3NiAzNTQuNzYzOTgzLDE3LjM4MTQ5NjIgMzU0LjQ3MTA5LDE3LjA4ODYwMyBDMzU0LjE3NjE1NSwxNi43OTM2Njc3IDM1My43MDE0LDE2Ljc5NzYzMjggMzUzLjQwNjEzNSwxNy4wOTI4OTgzIEwzNTAuNTgyMDAzLDE5LjkxNzAzMDEgTDM0Ny43NTc4NzEsMTcuMDkyODk4MyBDMzQ3LjQ2NDU2LDE2Ljc5OTU4NzQgMzQ2Ljk4NTgwOSwxNi43OTU3MDk3IDM0Ni42OTI5MTYsMTcuMDg4NjAzIEMzNDYuMzk3OTgsMTcuMzgzNTM4MiAzNDYuNDAxOTQ1LDE3Ljg1ODI5MyAzNDYuNjk3MjExLDE4LjE1MzU1ODUgTDM0OS41MjEzNDMsMjAuOTc3NjkwMyBMMzQ2LjY5NzIxMSwyMy44MDE4MjIgQzM0Ni40MDM5LDI0LjA5NTEzMjkgMzQ2LjQwMDAyMiwyNC41NzM4ODQzIDM0Ni42OTI5MTYsMjQuODY2Nzc3NiBDMzQ2Ljk4Nzg1MSwyNS4xNjE3MTI4IDM0Ny40NjI2MDYsMjUuMTU3NzQ3NyAzNDcuNzU3ODcxLDI0Ljg2MjQ4MjIgTDM1MC41ODIwMDMsMjIuMDM4MzUwNCBMMzUzLjQwNjEzNSwyNC44NjI0ODIyIEMzNTMuNjk5NDQ1LDI1LjE1NTc5MzEgMzU0LjE3ODE5NywyNS4xNTk2NzA4IDM1NC40NzEwOSwyNC44NjY3Nzc2IEMzNTQuNzY2MDI1LDI0LjU3MTg0MjMgMzU0Ljc2MjA2LDI0LjA5NzA4NzUgMzU0LjQ2Njc5NSwyMy44MDE4MjIgTDM1MS42NDI2NjMsMjAuOTc3NjkwMyBaIE0zMzguNzA5NzIsMjEuNzA5NzE5NSBDMzM4LjMxNzc1MiwyMS4zMTc3NTIyIDMzOC4zMTg5NjUsMjAuNjgxMDM0OSAzMzguNzA5NzIsMjAuMjkwMjgwNSBMMzQ0LjY0MzI0NSwxNC4zNTY3NTQ3IEMzNDQuODQwMjc2LDE0LjE1OTcyNDUgMzQ1LjIyNTYzOSwxNCAzNDUuNDkzNzQxLDE0IEwzNTUuOTk3MjM5LDE0IEMzNTcuMTAzMzMzLDE0IDM1Ny45OTk5OTksMTQuODk3MDYwMSAzNTcuOTk5OTk5LDE2LjAwNTg1ODYgTDM1Ny45OTk5OTksMjUuOTk0MTQxMiBDMzU3Ljk5OTk5OSwyNy4xMDE5NDY0IDM1Ny4xMDY0NTcsMjcuOTk5OTk5OSAzNTUuOTk3MjM5LDI3Ljk5OTk5OTkgTDM0NS40OTM3NDEsMjggQzM0NS4yMjEwNTYsMjggMzQ0Ljg0MDY0MywyNy44NDA2NDMxIDM0NC42NDMyNDYsMjcuNjQzMjQ1MyBMMzM4LjcwOTcyLDIxLjcwOTcxOTUgWicgaWQ9J0JhY2snPjwvcGF0aD5cblx0XHRcdFx0XHQ8L2c+XG5cdFx0XHRcdDwvZz5cblx0XHRcdDwvZz5cblx0XHQ8L3N2Zz5cIlxuXHR9XG5cdGZvb2QgOiAgXCI8P3htbCB2ZXJzaW9uPScxLjAnIGVuY29kaW5nPSdVVEYtOCcgc3RhbmRhbG9uZT0nbm8nPz5cblx0XHRcdDxzdmcgd2lkdGg9JzE3cHgnIGhlaWdodD0nMTZweCcgdmlld0JveD0nMCAwIDE3IDE3JyB2ZXJzaW9uPScxLjEnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgeG1sbnM6eGxpbms9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnIHhtbG5zOnNrZXRjaD0naHR0cDovL3d3dy5ib2hlbWlhbmNvZGluZy5jb20vc2tldGNoL25zJz5cblx0XHRcdFx0PCEtLSBHZW5lcmF0b3I6IFNrZXRjaCAzLjUuMiAoMjUyMzUpIC0gaHR0cDovL3d3dy5ib2hlbWlhbmNvZGluZy5jb20vc2tldGNoIC0tPlxuXHRcdFx0XHQ8dGl0bGU+Rm9vZDwvdGl0bGU+XG5cdFx0XHRcdDxkZXNjPkNyZWF0ZWQgd2l0aCBTa2V0Y2guPC9kZXNjPlxuXHRcdFx0XHQ8ZGVmcz48L2RlZnM+XG5cdFx0XHRcdDxnIGlkPSdpT1MtOS1LZXlib2FyZHMnIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnIHNrZXRjaDp0eXBlPSdNU1BhZ2UnPlxuXHRcdFx0XHRcdDxnIGlkPSdpUGhvbmUtNi1Qb3J0cmFpdC1MaWdodC1Db3B5JyBza2V0Y2g6dHlwZT0nTVNBcnRib2FyZEdyb3VwJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtMTQ4LjAwMDAwMCwgLTYzNy4wMDAwMDApJz5cblx0XHRcdFx0XHRcdDxnIGlkPSdLZXlib2FyZHMnIHNrZXRjaDp0eXBlPSdNU0xheWVyR3JvdXAnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDAuMDAwMDAwLCA0MDguMDAwMDAwKSc+XG5cdFx0XHRcdFx0XHRcdDxnIGlkPSdGb29kJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgxNDkuNTAwMDAwLCAyMjkuNTAwMDAwKScgc2tldGNoOnR5cGU9J01TU2hhcGVHcm91cCc+XG5cdFx0XHRcdFx0XHRcdFx0PHBhdGggZD0nTTUuNSwxNS41IEwxLDE1LjUgTDAsNSBMNi41LDUgTDYuMjYzNjA5MzMsNy40ODIxMDIwMicgaWQ9J0RyaW5rJyBzdHJva2U9JyM0QTU0NjEnPjwvcGF0aD5cblx0XHRcdFx0XHRcdFx0XHQ8cGF0aCBkPSdNNi4wMTA3NzU0NSwxLjk2OTMwMDk4IEw2LjUxNTcxMzUyLDUuMjIyNzA1MzkgTDUuNzE5MDgxODQsNS42Nzk0NzgxMiBMNS4wMzg5MDA5LDEuOTY5MzAwOTggTDQuODU1NTcyNDcsMS45NjkzMDA5OCBMNC44NTU1NzI0NywwLjk2OTMwMDk4IEw4Ljg1NTU3MjQ3LDAuOTY5MzAwOTggTDguODU1NTcyNDcsMS45NjkzMDA5OCBMNi4wMTA3NzU0NSwxLjk2OTMwMDk4IFonIGlkPSdTdHJhdycgZmlsbD0nIzRBNTQ2MScgdHJhbnNmb3JtPSd0cmFuc2xhdGUoNi44NTU1NzIsIDMuMzI0MzkwKSByb3RhdGUoMjQuMDAwMDAwKSB0cmFuc2xhdGUoLTYuODU1NTcyLCAtMy4zMjQzOTApICc+PC9wYXRoPlxuXHRcdFx0XHRcdFx0XHRcdDxyZWN0IGlkPSdCb3R0b20tQnVuJyBzdHJva2U9JyM0QTU0NjEnIHg9JzMnIHk9JzE0JyB3aWR0aD0nMTAuNScgaGVpZ2h0PScxLjUnIHJ4PScxJz48L3JlY3Q+XG5cdFx0XHRcdFx0XHRcdFx0PHBhdGggZD0nTTEuNSwxMi41MDI0NDA4IEMxLjUsMTEuOTQ4ODA4IDEuOTQ5MTY5MTYsMTEuNSAyLjQ5MjY4NzIzLDExLjUgTDE0LjAwNzMxMjgsMTEuNSBDMTQuNTU1NTU4OCwxMS41IDE1LDExLjk0Njk0OTkgMTUsMTIuNTAyNDQwOCBMMTUsMTIuOTk3NTU5MiBDMTUsMTMuNTUxMTkyIDE0LjU1MDgzMDgsMTQgMTQuMDA3MzEyOCwxNCBMMi40OTI2ODcyMywxNCBDMS45NDQ0NDEyMSwxNCAxLjUsMTMuNTUzMDUwMSAxLjUsMTIuOTk3NTU5MiBMMS41LDEyLjUwMjQ0MDggWiBNMy45MzMwMDAwMywxMS44MzkyNzI3IEMzLjQxNzcxODM0LDExLjY1MTg5NzYgMy40NDQ4MzY5NywxMS41IDMuOTk1NTc3NSwxMS41IEwxMy4wMDQ0MjI1LDExLjUgQzEzLjU1NDI2NDgsMTEuNSAxMy41ODY2MDYxLDExLjY1MDMyNTEgMTMuMDY3LDExLjgzOTI3MjcgTDguNSwxMy41IEwzLjkzMzAwMDAzLDExLjgzOTI3MjcgWicgaWQ9JyZxdW90O1BhdHR5JnF1b3Q7JyBmaWxsPScjNEE1NDYxJz48L3BhdGg+XG5cdFx0XHRcdFx0XHRcdFx0PHBhdGggZD0nTTIuNSwxMC41IEwxMy41LDEwLjUgTDE1LDExLjUgTDEsMTEuNSBMMi41LDEwLjUgWicgaWQ9J0NoZWVzZScgZmlsbD0nIzRBNTQ2MSc+PC9wYXRoPlxuXHRcdFx0XHRcdFx0XHRcdDxwYXRoIGQ9J004LjI1LDEwLjUgQzExLjQyNTYzNzMsMTAuNSAxNCwxMC4zMjg0MjcxIDE0LDkuNSBDMTQsOC42NzE1NzI4OCAxMS40MjU2MzczLDggOC4yNSw4IEM1LjA3NDM2MjY5LDggMi41LDguNjcxNTcyODggMi41LDkuNSBDMi41LDEwLjMyODQyNzEgNS4wNzQzNjI2OSwxMC41IDguMjUsMTAuNSBaJyBpZD0nVG9wLUJ1bicgc3Ryb2tlPScjNEE1NDYxJyBzdHJva2Utd2lkdGg9JzAuNzUnPjwvcGF0aD5cblx0XHRcdFx0XHRcdFx0PC9nPlxuXHRcdFx0XHRcdFx0PC9nPlxuXHRcdFx0XHRcdDwvZz5cblx0XHRcdFx0PC9nPlxuXHRcdFx0PC9zdmc+XCJcblx0ZmxhZ3M6IFwiPD94bWwgdmVyc2lvbj0nMS4wJyBlbmNvZGluZz0nVVRGLTgnIHN0YW5kYWxvbmU9J25vJz8+XG5cdFx0XHQ8c3ZnIHdpZHRoPScxMXB4JyBoZWlnaHQ9JzE1cHgnIHZpZXdCb3g9JzAgMCAxMSAxNScgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJyB4bWxuczpza2V0Y2g9J2h0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaC9ucyc+XG5cdFx0XHRcdDwhLS0gR2VuZXJhdG9yOiBTa2V0Y2ggMy41LjIgKDI1MjM1KSAtIGh0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaCAtLT5cblx0XHRcdFx0PHRpdGxlPkZsYWc8L3RpdGxlPlxuXHRcdFx0XHQ8ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz5cblx0XHRcdFx0PGRlZnM+PC9kZWZzPlxuXHRcdFx0XHQ8ZyBpZD0naU9TLTktS2V5Ym9hcmRzJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJyBza2V0Y2g6dHlwZT0nTVNQYWdlJz5cblx0XHRcdFx0XHQ8ZyBpZD0naVBob25lLTYtUG9ydHJhaXQtTGlnaHQtQ29weScgc2tldGNoOnR5cGU9J01TQXJ0Ym9hcmRHcm91cCcgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTI3NS4wMDAwMDAsIC02MzkuMDAwMDAwKSc+XG5cdFx0XHRcdFx0XHQ8ZyBpZD0nS2V5Ym9hcmRzJyBza2V0Y2g6dHlwZT0nTVNMYXllckdyb3VwJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgwLjAwMDAwMCwgNDA4LjAwMDAwMCknPlxuXHRcdFx0XHRcdFx0XHQ8ZyBpZD0nRmxhZycgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMjc1LjAwMDAwMCwgMjMxLjUwMDAwMCknIHNrZXRjaDp0eXBlPSdNU1NoYXBlR3JvdXAnPlxuXHRcdFx0XHRcdFx0XHRcdDxyZWN0IGlkPSdQb2xlJyBmaWxsPScjNEE1NDYxJyB4PScwJyB5PScwJyB3aWR0aD0nMScgaGVpZ2h0PScxNCc+PC9yZWN0PlxuXHRcdFx0XHRcdFx0XHRcdDxwYXRoIGQ9J00xLDEgQzEsMSAxLjI1LDIgMy41LDIgQzUuNzUsMiA2LDAuNzQ5OTk5OTk4IDgsMC43NSBDMTAsMC43NDk5OTk5OTggMTAsMS41IDEwLDEuNSBMMTAsNy41IEMxMCw3LjUgMTAsNi41IDgsNi41IEM2LDYuNSA0LjgwNjIzOTExLDggMy41LDggQzIuMTkzNzYwODksOCAxLDcgMSw3IEwxLDEgWicgc3Ryb2tlPScjNEE1NDYxJyBzdHJva2UtbGluZWpvaW49J3JvdW5kJz48L3BhdGg+XG5cdFx0XHRcdFx0XHRcdDwvZz5cblx0XHRcdFx0XHRcdDwvZz5cblx0XHRcdFx0XHQ8L2c+XG5cdFx0XHRcdDwvZz5cblx0XHRcdDwvc3ZnPlwiXG5cdGZyZXF1ZW50OiBcIjw/eG1sIHZlcnNpb249JzEuMCcgZW5jb2Rpbmc9J1VURi04JyBzdGFuZGFsb25lPSdubyc/PlxuXHRcdFx0PHN2ZyB3aWR0aD0nMTdweCcgaGVpZ2h0PScxNnB4JyB2aWV3Qm94PScwIDAgMTcgMTYnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluaycgeG1sbnM6c2tldGNoPSdodHRwOi8vd3d3LmJvaGVtaWFuY29kaW5nLmNvbS9za2V0Y2gvbnMnPlxuXHRcdFx0XHQ8IS0tIEdlbmVyYXRvcjogU2tldGNoIDMuNS4yICgyNTIzNSkgLSBodHRwOi8vd3d3LmJvaGVtaWFuY29kaW5nLmNvbS9za2V0Y2ggLS0+XG5cdFx0XHRcdDx0aXRsZT5SZWNlbnQ8L3RpdGxlPlxuXHRcdFx0XHQ8ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz5cblx0XHRcdFx0PGRlZnM+PC9kZWZzPlxuXHRcdFx0XHQ8ZyBpZD0naU9TLTktS2V5Ym9hcmRzJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJyBza2V0Y2g6dHlwZT0nTVNQYWdlJz5cblx0XHRcdFx0XHQ8ZyBpZD0naVBob25lLTYtUG9ydHJhaXQtTGlnaHQtQ29weScgc2tldGNoOnR5cGU9J01TQXJ0Ym9hcmRHcm91cCcgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTU1LjAwMDAwMCwgLTYzOC4wMDAwMDApJz5cblx0XHRcdFx0XHRcdDxnIGlkPSdLZXlib2FyZHMnIHNrZXRjaDp0eXBlPSdNU0xheWVyR3JvdXAnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDAuMDAwMDAwLCA0MDguMDAwMDAwKSc+XG5cdFx0XHRcdFx0XHRcdDxnIGlkPSdSZWNlbnQnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDU1LjUwMDAwMCwgMjMwLjAwMDAwMCknIHNrZXRjaDp0eXBlPSdNU1NoYXBlR3JvdXAnPlxuXHRcdFx0XHRcdFx0XHRcdDxjaXJjbGUgaWQ9J0JvZHknIHN0cm9rZT0nIzRBNTQ2MScgY3g9JzgnIGN5PSc4JyByPSc4Jz48L2NpcmNsZT5cblx0XHRcdFx0XHRcdFx0XHQ8cGF0aCBkPSdNNy41LDcuNSBMNy41LDguNSBMOC41LDguNSBMOC41LDIgTDcuNSwyIEw3LjUsNy41IEw0LDcuNSBMNCw4LjUgTDguNSw4LjUgTDguNSw3LjUgTDcuNSw3LjUgWicgaWQ9J0hhbmRzJyBmaWxsPScjNEE1NDYxJz48L3BhdGg+XG5cdFx0XHRcdFx0XHRcdDwvZz5cblx0XHRcdFx0XHRcdDwvZz5cblx0XHRcdFx0XHQ8L2c+XG5cdFx0XHRcdDwvZz5cblx0XHRcdDwvc3ZnPlwiXG5cdGtleWJvYXJkIDogXCI8P3htbCB2ZXJzaW9uPScxLjAnIGVuY29kaW5nPSdVVEYtOCcgc3RhbmRhbG9uZT0nbm8nPz5cblx0XHRcdDxzdmcgd2lkdGg9JzMyLjVweCcgaGVpZ2h0PScyMy41cHgnIHZpZXdCb3g9JzAgMCA2NSA0NycgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJz5cblx0XHRcdCAgICA8IS0tIEdlbmVyYXRvcjogU2tldGNoIDMuNi4xICgyNjMxMykgLSBodHRwOi8vd3d3LmJvaGVtaWFuY29kaW5nLmNvbS9za2V0Y2ggLS0+XG5cdFx0XHQgICAgPHRpdGxlPlNoYXBlPC90aXRsZT5cblx0XHRcdCAgICA8ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz5cblx0XHRcdCAgICA8ZGVmcz48L2RlZnM+XG5cdFx0XHQgICAgPGcgaWQ9J1BhZ2UtMScgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCc+XG5cdFx0XHQgICAgICAgIDxnIGlkPSdpUGFkLVBvcnRyYWl0JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtMTQzNi4wMDAwMDAsIC0xOTU2LjAwMDAwMCknIGZpbGw9JyMwMDAwMDAnPlxuXHRcdFx0ICAgICAgICAgICAgPGcgaWQ9J0tleWJvYXJkLUxpZ2h0JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgwLjAwMDAwMCwgMTQyMi4wMDAwMDApJz5cblx0XHRcdCAgICAgICAgICAgICAgICA8ZyBpZD0nS2V5Ym9hcmQtZG93bicgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMTQxMi4wMDAwMDAsIDUwMC4wMDAwMDApJz5cblx0XHRcdCAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0nTTg3LjAwMTMzMiwzNCBDODguMTA1MTY1OSwzNCA4OSwzNC44OTk3MTI3IDg5LDM1Ljk5MzI4NzQgTDg5LDYxLjAwNjcxMjYgQzg5LDYyLjEwNzU3NDggODguMTA1ODc1OSw2MyA4Ny4wMDEzMzIsNjMgTDI1Ljk5ODY2OCw2MyBDMjQuODk0ODM0MSw2MyAyNCw2Mi4xMDAyODczIDI0LDYxLjAwNjcxMjYgTDI0LDM1Ljk5MzI4NzQgQzI0LDM0Ljg5MjQyNTIgMjQuODk0MTI0MSwzNCAyNS45OTg2NjgsMzQgTDg3LjAwMTMzMiwzNCBaIE0yNiwzNiBMMjYsNjEgTDg3LDYxIEw4NywzNiBMMjYsMzYgWiBNNzksNDAgTDgzLDQwIEw4Myw0NCBMNzksNDQgTDc5LDQwIFogTTcyLDQwIEw3Niw0MCBMNzYsNDQgTDcyLDQ0IEw3Miw0MCBaIE02NSw0MCBMNjksNDAgTDY5LDQ0IEw2NSw0NCBMNjUsNDAgWiBNNTgsNDAgTDYyLDQwIEw2Miw0NCBMNTgsNDQgTDU4LDQwIFogTTUxLDQwIEw1NSw0MCBMNTUsNDQgTDUxLDQ0IEw1MSw0MCBaIE00NCw0MCBMNDgsNDAgTDQ4LDQ0IEw0NCw0NCBMNDQsNDAgWiBNMzcsNDAgTDQxLDQwIEw0MSw0NCBMMzcsNDQgTDM3LDQwIFogTTMwLDQwIEwzNCw0MCBMMzQsNDQgTDMwLDQ0IEwzMCw0MCBaIE03OSw0NyBMODMsNDcgTDgzLDUxIEw3OSw1MSBMNzksNDcgWiBNNzIsNDcgTDc2LDQ3IEw3Niw1MSBMNzIsNTEgTDcyLDQ3IFogTTY1LDQ3IEw2OSw0NyBMNjksNTEgTDY1LDUxIEw2NSw0NyBaIE01OCw0NyBMNjIsNDcgTDYyLDUxIEw1OCw1MSBMNTgsNDcgWiBNNTEsNDcgTDU1LDQ3IEw1NSw1MSBMNTEsNTEgTDUxLDQ3IFogTTQ0LDQ3IEw0OCw0NyBMNDgsNTEgTDQ0LDUxIEw0NCw0NyBaIE0zNyw0NyBMNDEsNDcgTDQxLDUxIEwzNyw1MSBMMzcsNDcgWiBNMzAsNDcgTDM0LDQ3IEwzNCw1MSBMMzAsNTEgTDMwLDQ3IFogTTc5LDU0IEw4Myw1NCBMODMsNTggTDc5LDU4IEw3OSw1NCBaIE03Miw1NCBMNzYsNTQgTDc2LDU4IEw3Miw1OCBMNzIsNTQgWiBNNDQsNTQgTDY5LDU0IEw2OSw1OCBMNDQsNTggTDQ0LDU0IFogTTM3LDU0IEw0MSw1NCBMNDEsNTggTDM3LDU4IEwzNyw1NCBaIE0zMCw1NCBMMzQsNTQgTDM0LDU4IEwzMCw1OCBMMzAsNTQgWiBNNDQuMzE2MzQ5OCw2OS45NzcxMDQ3IEM0My4zNjg0MjI1LDcwLjU0MjAzNDIgNDMuMzMzODcyMSw3MS41MDk2NDk1IDQ0LjIzNzgyMTcsNzIuMTM3MzkxMiBMNTUuMzYyMTUzOSw3OS44NjI2MDg4IEM1Ni4yNjY3MTEzLDgwLjQ5MDc3MjYgNTcuNzMzODk2NSw4MC40OTAzNTA1IDU4LjYzNzg0NjEsNzkuODYyNjA4OCBMNjkuNzYyMTc4Myw3Mi4xMzczOTEyIEM3MC42NjY3MzU3LDcxLjUwOTIyNzQgNzAuNjQ4MDEyLDcwLjUyMDUyMDQgNjkuNzExNTE4Nyw2OS45MjM0MTY2IEw2OS45ODI1NzMxLDcwLjA5NjIzOTYgQzY5LjUxODEzMzMsNjkuODAwMTE1IDY4Ljc3ODI1NTcsNjkuODEyNjQ5MyA2OC4zMjYxMzA3LDcwLjEyNjkzMjMgTDU3LjgxNTQ5OTksNzcuNDMzMTI2MyBDNTcuMzY1MTExNyw3Ny43NDYyMDIgNTYuNjI4MTY1LDc3LjczODE3ODYgNTYuMTc2MjEwMyw3Ny40MTk5NDI0IEw0NS44Mzg2MTM3LDcwLjE0MDg5NzcgQzQ1LjM4MzY0NzIsNjkuODIwNTQwNyA0NC42Mzc1MDM5LDY5Ljc4NTcwODggNDQuMTU2NjM5Myw3MC4wNzIyODYyIEw0NC4zMTYzNDk4LDY5Ljk3NzEwNDcgWicgaWQ9J1NoYXBlJz48L3BhdGg+XG5cdFx0XHQgICAgICAgICAgICAgICAgPC9nPlxuXHRcdFx0ICAgICAgICAgICAgPC9nPlxuXHRcdFx0ICAgICAgICA8L2c+XG5cdFx0XHQgICAgPC9nPlxuXHRcdFx0PC9zdmc+XCJcblx0a2V5UG9wVXA6XG5cdFx0bGlnaHQ6XG5cdFx0XHRcImlwaG9uZS01XCIgOiBcIjxzdmcgd2lkdGg9JzU1cHgnIGhlaWdodD0nOTJweCcgdmlld0JveD0nNTMgMzE2IDU1IDkyJyB2ZXJzaW9uPScxLjEnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgeG1sbnM6eGxpbms9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnPlxuXHRcdFx0XHRcdCAgICA8IS0tIEdlbmVyYXRvcjogU2tldGNoIDMuNy4yICgyODI3NikgLSBodHRwOi8vd3d3LmJvaGVtaWFuY29kaW5nLmNvbS9za2V0Y2ggLS0+XG5cdFx0XHRcdFx0ICAgIDxkZXNjPkNyZWF0ZWQgd2l0aCBTa2V0Y2guPC9kZXNjPlxuXHRcdFx0XHRcdCAgICA8ZGVmcz5cblx0XHRcdFx0XHQgICAgICAgIDxmaWx0ZXIgeD0nLTUwJScgeT0nLTUwJScgd2lkdGg9JzIwMCUnIGhlaWdodD0nMjAwJScgZmlsdGVyVW5pdHM9J29iamVjdEJvdW5kaW5nQm94JyBpZD0nZmlsdGVyLTEnPlxuXHRcdFx0XHRcdCAgICAgICAgICAgIDxmZU9mZnNldCBkeD0nMCcgZHk9JzEnIGluPSdTb3VyY2VBbHBoYScgcmVzdWx0PSdzaGFkb3dPZmZzZXRPdXRlcjEnPjwvZmVPZmZzZXQ+XG5cdFx0XHRcdFx0ICAgICAgICAgICAgPGZlR2F1c3NpYW5CbHVyIHN0ZERldmlhdGlvbj0nMS41JyBpbj0nc2hhZG93T2Zmc2V0T3V0ZXIxJyByZXN1bHQ9J3NoYWRvd0JsdXJPdXRlcjEnPjwvZmVHYXVzc2lhbkJsdXI+XG5cdFx0XHRcdFx0ICAgICAgICAgICAgPGZlQ29sb3JNYXRyaXggdmFsdWVzPScwIDAgMCAwIDAgICAwIDAgMCAwIDAgICAwIDAgMCAwIDAgIDAgMCAwIDAuNCAwJyB0eXBlPSdtYXRyaXgnIGluPSdzaGFkb3dCbHVyT3V0ZXIxJyByZXN1bHQ9J3NoYWRvd01hdHJpeE91dGVyMSc+PC9mZUNvbG9yTWF0cml4PlxuXHRcdFx0XHRcdCAgICAgICAgICAgIDxmZU1lcmdlPlxuXHRcdFx0XHRcdCAgICAgICAgICAgICAgICA8ZmVNZXJnZU5vZGUgaW49J3NoYWRvd01hdHJpeE91dGVyMSc+PC9mZU1lcmdlTm9kZT5cblx0XHRcdFx0XHQgICAgICAgICAgICAgICAgPGZlTWVyZ2VOb2RlIGluPSdTb3VyY2VHcmFwaGljJz48L2ZlTWVyZ2VOb2RlPlxuXHRcdFx0XHRcdCAgICAgICAgICAgIDwvZmVNZXJnZT5cblx0XHRcdFx0XHQgICAgICAgIDwvZmlsdGVyPlxuXHRcdFx0XHRcdCAgICAgICAgPHBhdGggZD0nTTEuMzQxNzMyMzEsNDAuOTM5MTcwMSBDMC41MTc0NjYxMjgsNDAuMjA1ODkgMCwzOS4xMzc0MjUxIDAsMzcuOTQ3NzYzNSBMMCw0LjAwMzQ1NTk4IEMwLDEuNzg5MTcxMzYgMS43OTUyODI0OCwwIDQuMDA5ODc1NjYsMCBMNDQuOTkwMTI0MywwIEM0Ny4yMTI1NjA4LDAgNDksMS43OTI0MDgzIDQ5LDQuMDAzNDU1OTggTDQ5LDM3Ljk0Nzc2MzUgQzQ5LDM4LjkxMjQwNTEgNDguNjU5Mjc5OCwzOS43OTYzNjU5IDQ4LjA5MTYwNDEsNDAuNDg2ODY2NSBDNDguMDQxNDIzMyw0MC45MDMyMjg5IDQ3LjcxMTE4ODgsNDEuNDA3NDY3MiA0Ny4wODI1OTA4LDQxLjk1MjI1IEM0Ny4wODI1OTA4LDQxLjk1MjI1IDM4LjUyOTkxNDUsNDkuMDY0MzM2MiAzOC41Mjk5MTQ1LDUxLjE1MjY0MjQgQzM4LjUyOTkxNDUsNjEuNjQ5NzU2MSAzOC4xNzcwMDk5LDgyLjAwMjU0MDYgMzguMTc3MDA5OSw4Mi4wMDI1NDA2IEMzOC4xNDEyMzA0LDg0LjIwMjQzNTQgMzYuMzIxMDI4NCw4NiAzNC4xMTI4NDk1LDg2IEwxNS4zMDU5NTM5LDg2IEMxMy4xMDc5Niw4NiAxMS4yNzgxODg0LDg0LjIxMDA3ODkgMTEuMjQxNzkzNiw4Mi4wMDIwOTkzIEMxMS4yNDE3OTM2LDgyLjAwMjA5OTMgMTAuODg4ODg4OSw2MS42NDcwODUyIDEwLjg4ODg4ODksNTEuMTQ4NjM2MSBDMTAuODg4ODg4OSw0OS4wNjE2NjU0IDIuMzQxNDM2NjIsNDIuMjM4NjU1IDIuMzQxNDM2NjIsNDIuMjM4NjU1IEMxLjc3ODI3MzExLDQxLjc2NDEzNjUgMS40NDg4MTM1NCw0MS4zMjA0MjM3IDEuMzQxNzMyMzEsNDAuOTM5MTcwMSBaJyBpZD0ncGF0aC0yJz48L3BhdGg+XG5cdFx0XHRcdFx0ICAgICAgICA8bWFzayBpZD0nbWFzay0zJyBtYXNrQ29udGVudFVuaXRzPSd1c2VyU3BhY2VPblVzZScgbWFza1VuaXRzPSdvYmplY3RCb3VuZGluZ0JveCcgeD0nMCcgeT0nMCcgd2lkdGg9JzQ5JyBoZWlnaHQ9Jzg2JyBmaWxsPSd3aGl0ZSc+XG5cdFx0XHRcdFx0ICAgICAgICAgICAgPHVzZSB4bGluazpocmVmPScjcGF0aC0yJz48L3VzZT5cblx0XHRcdFx0XHQgICAgICAgIDwvbWFzaz5cblx0XHRcdFx0XHQgICAgPC9kZWZzPlxuXHRcdFx0XHRcdCAgICA8ZyBpZD0nUG9wb3ZlcicgZmlsdGVyPSd1cmwoI2ZpbHRlci0xKScgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCcgdHJhbnNmb3JtPSd0cmFuc2xhdGUoNTYuMDAwMDAwLCAzMTguMDAwMDAwKSc+XG5cdFx0XHRcdFx0ICAgICAgICA8dXNlIGlkPSdSZWN0YW5nbGUtMTQnIHN0cm9rZT0nI0IyQjRCOScgbWFzaz0ndXJsKCNtYXNrLTMpJyBmaWxsPScjRkNGQ0ZDJyB4bGluazpocmVmPScjcGF0aC0yJz48L3VzZT5cblx0XHRcdFx0XHQgICAgPC9nPlxuXHRcdFx0XHRcdDwvc3ZnPlwiXG5cdFx0XHRcImlwaG9uZS02c1wiIDogXCI8c3ZnIHdpZHRoPSc2NHB4JyBoZWlnaHQ9JzEwN3B4JyB2aWV3Qm94PScyNCAzODcgNjQgMTA3JyB2ZXJzaW9uPScxLjEnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgeG1sbnM6eGxpbms9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnPlxuXHRcdFx0XHRcdCAgICA8IS0tIEdlbmVyYXRvcjogU2tldGNoIDMuNy4yICgyODI3NikgLSBodHRwOi8vd3d3LmJvaGVtaWFuY29kaW5nLmNvbS9za2V0Y2ggLS0+XG5cdFx0XHRcdFx0ICAgIDxkZXNjPkNyZWF0ZWQgd2l0aCBTa2V0Y2guPC9kZXNjPlxuXHRcdFx0XHRcdCAgICA8ZGVmcz5cblx0XHRcdFx0XHQgICAgICAgIDxmaWx0ZXIgeD0nLTUwJScgeT0nLTUwJScgd2lkdGg9JzIwMCUnIGhlaWdodD0nMjAwJScgZmlsdGVyVW5pdHM9J29iamVjdEJvdW5kaW5nQm94JyBpZD0nZmlsdGVyLTEnPlxuXHRcdFx0XHRcdCAgICAgICAgICAgIDxmZU9mZnNldCBkeD0nMCcgZHk9JzEnIGluPSdTb3VyY2VBbHBoYScgcmVzdWx0PSdzaGFkb3dPZmZzZXRPdXRlcjEnPjwvZmVPZmZzZXQ+XG5cdFx0XHRcdFx0ICAgICAgICAgICAgPGZlR2F1c3NpYW5CbHVyIHN0ZERldmlhdGlvbj0nMS41JyBpbj0nc2hhZG93T2Zmc2V0T3V0ZXIxJyByZXN1bHQ9J3NoYWRvd0JsdXJPdXRlcjEnPjwvZmVHYXVzc2lhbkJsdXI+XG5cdFx0XHRcdFx0ICAgICAgICAgICAgPGZlQ29sb3JNYXRyaXggdmFsdWVzPScwIDAgMCAwIDAgICAwIDAgMCAwIDAgICAwIDAgMCAwIDAgIDAgMCAwIDAuNCAwJyB0eXBlPSdtYXRyaXgnIGluPSdzaGFkb3dCbHVyT3V0ZXIxJyByZXN1bHQ9J3NoYWRvd01hdHJpeE91dGVyMSc+PC9mZUNvbG9yTWF0cml4PlxuXHRcdFx0XHRcdCAgICAgICAgICAgIDxmZU1lcmdlPlxuXHRcdFx0XHRcdCAgICAgICAgICAgICAgICA8ZmVNZXJnZU5vZGUgaW49J3NoYWRvd01hdHJpeE91dGVyMSc+PC9mZU1lcmdlTm9kZT5cblx0XHRcdFx0XHQgICAgICAgICAgICAgICAgPGZlTWVyZ2VOb2RlIGluPSdTb3VyY2VHcmFwaGljJz48L2ZlTWVyZ2VOb2RlPlxuXHRcdFx0XHRcdCAgICAgICAgICAgIDwvZmVNZXJnZT5cblx0XHRcdFx0XHQgICAgICAgIDwvZmlsdGVyPlxuXHRcdFx0XHRcdCAgICAgICAgPHBhdGggZD0nTTEuNDg2NDc2NDYsNDguMzc3OTk0NyBDMC41ODAyNjY0OSw0Ny42NDY0Mjk2IDAsNDYuNTI5NTg3IDAsNDUuMjc4MTk0OCBMMCwzLjk5MDA5Nzg3IEMwLDEuNzgyNTkxMiAxLjc5NTA5NTc3LDAgNC4wMDk0NTg2MiwwIEw1My45OTA1NDE0LDAgQzU2LjIwMDU3NDYsMCA1OCwxLjc4NjQyNzY3IDU4LDMuOTkwMDk3ODcgTDU4LDQ1LjI3ODE5NDggQzU4LDQ2LjE4MzMwMDQgNTcuNjk4MjI1OCw0Ny4wMTY5NzMzIDU3LjE4OTUwOTcsNDcuNjg1NjMyNSBDNTcuMDM5Njg2NSw0OC4wMjEyNDk3IDU2LjczNjAwOTgsNDguMzk3MjgzNCA1Ni4yNzE4MzYzLDQ4Ljc5NTA2NjEgQzU2LjI3MTgzNjMsNDguNzk1MDY2MSA0NS42MDY4Mzc2LDU3LjYyMjA2OTMgNDUuNjA2ODM3Niw2MC4wNzQ2MTQ5IEM0NS42MDY4Mzc2LDcyLjQwMjYyMDUgNDUuMTc3OTY3LDk2Ljk5MjMxNjQgNDUuMTc3OTY3LDk2Ljk5MjMxNjQgQzQ1LjE0MTM3NDgsOTkuMjEyMjIxNCA0My4zMTkzMDY1LDEwMSA0MS4xMDkwMDM1LDEwMSBMMTcuMzg2NzIzLDEwMSBDMTUuMTgxMjcyMiwxMDEgMTMuMzU0NjgzLDk5LjIwNTUwMDkgMTMuMzE3NzU5NSw5Ni45OTE4NzQxIEMxMy4zMTc3NTk1LDk2Ljk5MTg3NDEgMTIuODg4ODg4OSw3Mi4zOTk0ODM4IDEyLjg4ODg4ODksNjAuMDY5OTA5OSBDMTIuODg4ODg4OSw1Ny42MTg5MzI2IDIuMjI2NzM0MzcsNDkuMTQ2MjkzNiAyLjIyNjczNDM3LDQ5LjE0NjI5MzYgQzEuOTA1MjQwODcsNDguODc4ODMyNyAxLjY1OTExNjU1LDQ4LjYyMDczMyAxLjQ4NjQ3NjQ2LDQ4LjM3Nzk5NDcgWicgaWQ9J3BhdGgtMic+PC9wYXRoPlxuXHRcdFx0XHRcdCAgICAgICAgPG1hc2sgaWQ9J21hc2stMycgbWFza0NvbnRlbnRVbml0cz0ndXNlclNwYWNlT25Vc2UnIG1hc2tVbml0cz0nb2JqZWN0Qm91bmRpbmdCb3gnIHg9JzAnIHk9JzAnIHdpZHRoPSc1OCcgaGVpZ2h0PScxMDEnIGZpbGw9J3doaXRlJz5cblx0XHRcdFx0XHQgICAgICAgICAgICA8dXNlIHhsaW5rOmhyZWY9JyNwYXRoLTInPjwvdXNlPlxuXHRcdFx0XHRcdCAgICAgICAgPC9tYXNrPlxuXHRcdFx0XHRcdCAgICA8L2RlZnM+XG5cdFx0XHRcdFx0ICAgIDxnIGlkPSdQb3BvdmVyJyBmaWx0ZXI9J3VybCgjZmlsdGVyLTEpJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgyNy4wMDAwMDAsIDM4OS4wMDAwMDApJz5cblx0XHRcdFx0XHQgICAgICAgIDx1c2UgaWQ9J1JlY3RhbmdsZS0xNCcgc3Ryb2tlPScjQjJCNEI5JyBtYXNrPSd1cmwoI21hc2stMyknIGZpbGw9JyNGQ0ZDRkMnIHhsaW5rOmhyZWY9JyNwYXRoLTInPjwvdXNlPlxuXHRcdFx0XHRcdCAgICA8L2c+XG5cdFx0XHRcdFx0PC9zdmc+XCJcblx0XHRcdFwiaXBob25lLTZzLXBsdXNcIiA6IFwiPHN2ZyB3aWR0aD0nNzBweCcgaGVpZ2h0PScxMTlweCcgdmlld0JveD0nMjggNDUwIDcwIDExOScgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJz5cblx0XHRcdFx0XHQgICAgPCEtLSBHZW5lcmF0b3I6IFNrZXRjaCAzLjcuMiAoMjgyNzYpIC0gaHR0cDovL3d3dy5ib2hlbWlhbmNvZGluZy5jb20vc2tldGNoIC0tPlxuXHRcdFx0XHRcdCAgICA8ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz5cblx0XHRcdFx0XHQgICAgPGRlZnM+XG5cdFx0XHRcdFx0ICAgICAgICA8ZmlsdGVyIHg9Jy01MCUnIHk9Jy01MCUnIHdpZHRoPScyMDAlJyBoZWlnaHQ9JzIwMCUnIGZpbHRlclVuaXRzPSdvYmplY3RCb3VuZGluZ0JveCcgaWQ9J2ZpbHRlci0xJz5cblx0XHRcdFx0XHQgICAgICAgICAgICA8ZmVPZmZzZXQgZHg9JzAnIGR5PScxJyBpbj0nU291cmNlQWxwaGEnIHJlc3VsdD0nc2hhZG93T2Zmc2V0T3V0ZXIxJz48L2ZlT2Zmc2V0PlxuXHRcdFx0XHRcdCAgICAgICAgICAgIDxmZUdhdXNzaWFuQmx1ciBzdGREZXZpYXRpb249JzEuNScgaW49J3NoYWRvd09mZnNldE91dGVyMScgcmVzdWx0PSdzaGFkb3dCbHVyT3V0ZXIxJz48L2ZlR2F1c3NpYW5CbHVyPlxuXHRcdFx0XHRcdCAgICAgICAgICAgIDxmZUNvbG9yTWF0cml4IHZhbHVlcz0nMCAwIDAgMCAwICAgMCAwIDAgMCAwICAgMCAwIDAgMCAwICAwIDAgMCAwLjQgMCcgdHlwZT0nbWF0cml4JyBpbj0nc2hhZG93Qmx1ck91dGVyMScgcmVzdWx0PSdzaGFkb3dNYXRyaXhPdXRlcjEnPjwvZmVDb2xvck1hdHJpeD5cblx0XHRcdFx0XHQgICAgICAgICAgICA8ZmVNZXJnZT5cblx0XHRcdFx0XHQgICAgICAgICAgICAgICAgPGZlTWVyZ2VOb2RlIGluPSdzaGFkb3dNYXRyaXhPdXRlcjEnPjwvZmVNZXJnZU5vZGU+XG5cdFx0XHRcdFx0ICAgICAgICAgICAgICAgIDxmZU1lcmdlTm9kZSBpbj0nU291cmNlR3JhcGhpYyc+PC9mZU1lcmdlTm9kZT5cblx0XHRcdFx0XHQgICAgICAgICAgICA8L2ZlTWVyZ2U+XG5cdFx0XHRcdFx0ICAgICAgICA8L2ZpbHRlcj5cblx0XHRcdFx0XHQgICAgICAgIDxwYXRoIGQ9J00xLjk1NzI5Mzk1LDU0LjA3MjgzMDQgQzAuNzg1OTExMTMyLDUzLjM3NTc2OTkgMCw1Mi4wOTg3NzYgMCw1MC42Mzg5MDIyIEwwLDMuOTk1MjQ0MTkgQzAsMS43ODY3MTQyOCAxLjc5MjQyMjAyLDAgNC4wMDM0ODY2MywwIEw1OS45OTY1MTM0LDAgQzYyLjIwNDYyMzUsMCA2NCwxLjc4ODczMTc1IDY0LDMuOTk1MjQ0MTkgTDY0LDUwLjYzODkwMjIgQzY0LDUxLjkyMzM2ODYgNjMuMzkzNzExNiw1My4wNjUxNTU2IDYyLjQ1MTM5MSw1My43OTU3NTQgQzYyLjQ0Mjc3NTIsNTMuODAzMjQzMyA2Mi40MzQxMDE5LDUzLjgxMDc0MDQgNjIuNDI1MzcwOSw1My44MTgyNDU0IEM2Mi40MjUzNzA5LDUzLjgxODI0NTQgNTAuMzI0Nzg2Myw2My44OTc3NDAyIDUwLjMyNDc4NjMsNjYuNjE3Mzk0NyBDNTAuMzI0Nzg2Myw4MC4yODgwNTQ0IDQ5Ljg0NDMwNDksMTA4LjAwMjAwNyA0OS44NDQzMDQ5LDEwOC4wMDIwMDcgQzQ5LjgwNzk2NjUsMTEwLjIxMDIzNCA0Ny45ODc0MjMyLDExMiA0NS43Nzg5MDg5LDExMiBMMTguNzY4MDk5NywxMTIgQzE2LjU1MzQzOTcsMTEyIDE0LjczOTQ0NTYsMTEwLjIwOTg0IDE0LjcwMjcwMzcsMTA4LjAwMTU2NiBDMTQuNzAyNzAzNywxMDguMDAxNTY2IDE0LjIyMjIyMjIsODAuMjg0NTc2MSAxNC4yMjIyMjIyLDY2LjYxMjE3NzMgQzE0LjIyMjIyMjIsNjMuODk0MjYxOSAyLjE0MDgxNDIyLDU0LjIzMjEzMzcgMi4xNDA4MTQyMiw1NC4yMzIxMzM3IEMyLjA3NjY0OTEzLDU0LjE3ODYyOTggMi4wMTU0ODExMSw1NC4xMjU1MTM0IDEuOTU3MjkzOTUsNTQuMDcyODMwNCBaJyBpZD0ncGF0aC0yJz48L3BhdGg+XG5cdFx0XHRcdFx0ICAgICAgICA8bWFzayBpZD0nbWFzay0zJyBtYXNrQ29udGVudFVuaXRzPSd1c2VyU3BhY2VPblVzZScgbWFza1VuaXRzPSdvYmplY3RCb3VuZGluZ0JveCcgeD0nMCcgeT0nMCcgd2lkdGg9JzY0JyBoZWlnaHQ9JzExMicgZmlsbD0nd2hpdGUnPlxuXHRcdFx0XHRcdCAgICAgICAgICAgIDx1c2UgeGxpbms6aHJlZj0nI3BhdGgtMic+PC91c2U+XG5cdFx0XHRcdFx0ICAgICAgICA8L21hc2s+XG5cdFx0XHRcdFx0ICAgIDwvZGVmcz5cblx0XHRcdFx0XHQgICAgPGcgaWQ9J1BvcG92ZXInIGZpbHRlcj0ndXJsKCNmaWx0ZXItMSknIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDMxLjAwMDAwMCwgNDUyLjAwMDAwMCknPlxuXHRcdFx0XHRcdCAgICAgICAgPHVzZSBpZD0nUmVjdGFuZ2xlLTE0JyBzdHJva2U9JyNCMkI0QjknIG1hc2s9J3VybCgjbWFzay0zKScgZmlsbD0nI0ZDRkNGQycgeGxpbms6aHJlZj0nI3BhdGgtMic+PC91c2U+XG5cdFx0XHRcdFx0ICAgIDwvZz5cblx0XHRcdFx0XHQ8L3N2Zz5cIlxuXHRcdGRhcms6XG5cdFx0XHRcImlwaG9uZS01XCIgOiBcIjxzdmcgd2lkdGg9JzU1cHgnIGhlaWdodD0nOTJweCcgdmlld0JveD0nNTMgMzE2IDU1IDkyJyB2ZXJzaW9uPScxLjEnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgeG1sbnM6eGxpbms9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnPlxuXHRcdFx0XHRcdCAgICA8IS0tIEdlbmVyYXRvcjogU2tldGNoIDMuNy4yICgyODI3NikgLSBodHRwOi8vd3d3LmJvaGVtaWFuY29kaW5nLmNvbS9za2V0Y2ggLS0+XG5cdFx0XHRcdFx0ICAgIDxkZXNjPkNyZWF0ZWQgd2l0aCBTa2V0Y2guPC9kZXNjPlxuXHRcdFx0XHRcdCAgICA8ZGVmcz5cblx0XHRcdFx0XHQgICAgICAgIDxmaWx0ZXIgeD0nLTUwJScgeT0nLTUwJScgd2lkdGg9JzIwMCUnIGhlaWdodD0nMjAwJScgZmlsdGVyVW5pdHM9J29iamVjdEJvdW5kaW5nQm94JyBpZD0nZmlsdGVyLTEnPlxuXHRcdFx0XHRcdCAgICAgICAgICAgIDxmZU9mZnNldCBkeD0nMCcgZHk9JzEnIGluPSdTb3VyY2VBbHBoYScgcmVzdWx0PSdzaGFkb3dPZmZzZXRPdXRlcjEnPjwvZmVPZmZzZXQ+XG5cdFx0XHRcdFx0ICAgICAgICAgICAgPGZlR2F1c3NpYW5CbHVyIHN0ZERldmlhdGlvbj0nMS41JyBpbj0nc2hhZG93T2Zmc2V0T3V0ZXIxJyByZXN1bHQ9J3NoYWRvd0JsdXJPdXRlcjEnPjwvZmVHYXVzc2lhbkJsdXI+XG5cdFx0XHRcdFx0ICAgICAgICAgICAgPGZlQ29sb3JNYXRyaXggdmFsdWVzPScwIDAgMCAwIDAgICAwIDAgMCAwIDAgICAwIDAgMCAwIDAgIDAgMCAwIDAuNCAwJyB0eXBlPSdtYXRyaXgnIGluPSdzaGFkb3dCbHVyT3V0ZXIxJyByZXN1bHQ9J3NoYWRvd01hdHJpeE91dGVyMSc+PC9mZUNvbG9yTWF0cml4PlxuXHRcdFx0XHRcdCAgICAgICAgICAgIDxmZU1lcmdlPlxuXHRcdFx0XHRcdCAgICAgICAgICAgICAgICA8ZmVNZXJnZU5vZGUgaW49J3NoYWRvd01hdHJpeE91dGVyMSc+PC9mZU1lcmdlTm9kZT5cblx0XHRcdFx0XHQgICAgICAgICAgICAgICAgPGZlTWVyZ2VOb2RlIGluPSdTb3VyY2VHcmFwaGljJz48L2ZlTWVyZ2VOb2RlPlxuXHRcdFx0XHRcdCAgICAgICAgICAgIDwvZmVNZXJnZT5cblx0XHRcdFx0XHQgICAgICAgIDwvZmlsdGVyPlxuXHRcdFx0XHRcdCAgICAgICAgPHBhdGggZD0nTTEuMzQxNzMyMzEsNDAuOTM5MTcwMSBDMC41MTc0NjYxMjgsNDAuMjA1ODkgMCwzOS4xMzc0MjUxIDAsMzcuOTQ3NzYzNSBMMCw0LjAwMzQ1NTk4IEMwLDEuNzg5MTcxMzYgMS43OTUyODI0OCwwIDQuMDA5ODc1NjYsMCBMNDQuOTkwMTI0MywwIEM0Ny4yMTI1NjA4LDAgNDksMS43OTI0MDgzIDQ5LDQuMDAzNDU1OTggTDQ5LDM3Ljk0Nzc2MzUgQzQ5LDM4LjkxMjQwNTEgNDguNjU5Mjc5OCwzOS43OTYzNjU5IDQ4LjA5MTYwNDEsNDAuNDg2ODY2NSBDNDguMDQxNDIzMyw0MC45MDMyMjg5IDQ3LjcxMTE4ODgsNDEuNDA3NDY3MiA0Ny4wODI1OTA4LDQxLjk1MjI1IEM0Ny4wODI1OTA4LDQxLjk1MjI1IDM4LjUyOTkxNDUsNDkuMDY0MzM2MiAzOC41Mjk5MTQ1LDUxLjE1MjY0MjQgQzM4LjUyOTkxNDUsNjEuNjQ5NzU2MSAzOC4xNzcwMDk5LDgyLjAwMjU0MDYgMzguMTc3MDA5OSw4Mi4wMDI1NDA2IEMzOC4xNDEyMzA0LDg0LjIwMjQzNTQgMzYuMzIxMDI4NCw4NiAzNC4xMTI4NDk1LDg2IEwxNS4zMDU5NTM5LDg2IEMxMy4xMDc5Niw4NiAxMS4yNzgxODg0LDg0LjIxMDA3ODkgMTEuMjQxNzkzNiw4Mi4wMDIwOTkzIEMxMS4yNDE3OTM2LDgyLjAwMjA5OTMgMTAuODg4ODg4OSw2MS42NDcwODUyIDEwLjg4ODg4ODksNTEuMTQ4NjM2MSBDMTAuODg4ODg4OSw0OS4wNjE2NjU0IDIuMzQxNDM2NjIsNDIuMjM4NjU1IDIuMzQxNDM2NjIsNDIuMjM4NjU1IEMxLjc3ODI3MzExLDQxLjc2NDEzNjUgMS40NDg4MTM1NCw0MS4zMjA0MjM3IDEuMzQxNzMyMzEsNDAuOTM5MTcwMSBaJyBpZD0ncGF0aC0yJz48L3BhdGg+XG5cdFx0XHRcdFx0ICAgICAgICA8bWFzayBpZD0nbWFzay0zJyBtYXNrQ29udGVudFVuaXRzPSd1c2VyU3BhY2VPblVzZScgbWFza1VuaXRzPSdvYmplY3RCb3VuZGluZ0JveCcgeD0nMCcgeT0nMCcgd2lkdGg9JzQ5JyBoZWlnaHQ9Jzg2JyBmaWxsPSd3aGl0ZSc+XG5cdFx0XHRcdFx0ICAgICAgICAgICAgPHVzZSB4bGluazpocmVmPScjcGF0aC0yJz48L3VzZT5cblx0XHRcdFx0XHQgICAgICAgIDwvbWFzaz5cblx0XHRcdFx0XHQgICAgPC9kZWZzPlxuXHRcdFx0XHRcdCAgICA8ZyBpZD0nUG9wb3ZlcicgZmlsdGVyPSd1cmwoI2ZpbHRlci0xKScgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCcgdHJhbnNmb3JtPSd0cmFuc2xhdGUoNTYuMDAwMDAwLCAzMTguMDAwMDAwKSc+XG5cdFx0XHRcdFx0ICAgICAgICA8dXNlIGlkPSdSZWN0YW5nbGUtMTQnIHN0cm9rZT0nIzYzNjM2MycgbWFzaz0ndXJsKCNtYXNrLTMpJyBmaWxsPScjNjM2MzYzJyB4bGluazpocmVmPScjcGF0aC0yJz48L3VzZT5cblx0XHRcdFx0XHQgICAgPC9nPlxuXHRcdFx0XHRcdDwvc3ZnPlwiXG5cdFx0XHRcImlwaG9uZS02c1wiIDogXCI8c3ZnIHdpZHRoPSc2NHB4JyBoZWlnaHQ9JzEwN3B4JyB2aWV3Qm94PScyNCAzODcgNjQgMTA3JyB2ZXJzaW9uPScxLjEnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgeG1sbnM6eGxpbms9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnPlxuXHRcdFx0XHRcdCAgICA8IS0tIEdlbmVyYXRvcjogU2tldGNoIDMuNy4yICgyODI3NikgLSBodHRwOi8vd3d3LmJvaGVtaWFuY29kaW5nLmNvbS9za2V0Y2ggLS0+XG5cdFx0XHRcdFx0ICAgIDxkZXNjPkNyZWF0ZWQgd2l0aCBTa2V0Y2guPC9kZXNjPlxuXHRcdFx0XHRcdCAgICA8ZGVmcz5cblx0XHRcdFx0XHQgICAgICAgIDxmaWx0ZXIgeD0nLTUwJScgeT0nLTUwJScgd2lkdGg9JzIwMCUnIGhlaWdodD0nMjAwJScgZmlsdGVyVW5pdHM9J29iamVjdEJvdW5kaW5nQm94JyBpZD0nZmlsdGVyLTEnPlxuXHRcdFx0XHRcdCAgICAgICAgICAgIDxmZU9mZnNldCBkeD0nMCcgZHk9JzEnIGluPSdTb3VyY2VBbHBoYScgcmVzdWx0PSdzaGFkb3dPZmZzZXRPdXRlcjEnPjwvZmVPZmZzZXQ+XG5cdFx0XHRcdFx0ICAgICAgICAgICAgPGZlR2F1c3NpYW5CbHVyIHN0ZERldmlhdGlvbj0nMS41JyBpbj0nc2hhZG93T2Zmc2V0T3V0ZXIxJyByZXN1bHQ9J3NoYWRvd0JsdXJPdXRlcjEnPjwvZmVHYXVzc2lhbkJsdXI+XG5cdFx0XHRcdFx0ICAgICAgICAgICAgPGZlQ29sb3JNYXRyaXggdmFsdWVzPScwIDAgMCAwIDAgICAwIDAgMCAwIDAgICAwIDAgMCAwIDAgIDAgMCAwIDAuNCAwJyB0eXBlPSdtYXRyaXgnIGluPSdzaGFkb3dCbHVyT3V0ZXIxJyByZXN1bHQ9J3NoYWRvd01hdHJpeE91dGVyMSc+PC9mZUNvbG9yTWF0cml4PlxuXHRcdFx0XHRcdCAgICAgICAgICAgIDxmZU1lcmdlPlxuXHRcdFx0XHRcdCAgICAgICAgICAgICAgICA8ZmVNZXJnZU5vZGUgaW49J3NoYWRvd01hdHJpeE91dGVyMSc+PC9mZU1lcmdlTm9kZT5cblx0XHRcdFx0XHQgICAgICAgICAgICAgICAgPGZlTWVyZ2VOb2RlIGluPSdTb3VyY2VHcmFwaGljJz48L2ZlTWVyZ2VOb2RlPlxuXHRcdFx0XHRcdCAgICAgICAgICAgIDwvZmVNZXJnZT5cblx0XHRcdFx0XHQgICAgICAgIDwvZmlsdGVyPlxuXHRcdFx0XHRcdCAgICAgICAgPHBhdGggZD0nTTEuNDg2NDc2NDYsNDguMzc3OTk0NyBDMC41ODAyNjY0OSw0Ny42NDY0Mjk2IDAsNDYuNTI5NTg3IDAsNDUuMjc4MTk0OCBMMCwzLjk5MDA5Nzg3IEMwLDEuNzgyNTkxMiAxLjc5NTA5NTc3LDAgNC4wMDk0NTg2MiwwIEw1My45OTA1NDE0LDAgQzU2LjIwMDU3NDYsMCA1OCwxLjc4NjQyNzY3IDU4LDMuOTkwMDk3ODcgTDU4LDQ1LjI3ODE5NDggQzU4LDQ2LjE4MzMwMDQgNTcuNjk4MjI1OCw0Ny4wMTY5NzMzIDU3LjE4OTUwOTcsNDcuNjg1NjMyNSBDNTcuMDM5Njg2NSw0OC4wMjEyNDk3IDU2LjczNjAwOTgsNDguMzk3MjgzNCA1Ni4yNzE4MzYzLDQ4Ljc5NTA2NjEgQzU2LjI3MTgzNjMsNDguNzk1MDY2MSA0NS42MDY4Mzc2LDU3LjYyMjA2OTMgNDUuNjA2ODM3Niw2MC4wNzQ2MTQ5IEM0NS42MDY4Mzc2LDcyLjQwMjYyMDUgNDUuMTc3OTY3LDk2Ljk5MjMxNjQgNDUuMTc3OTY3LDk2Ljk5MjMxNjQgQzQ1LjE0MTM3NDgsOTkuMjEyMjIxNCA0My4zMTkzMDY1LDEwMSA0MS4xMDkwMDM1LDEwMSBMMTcuMzg2NzIzLDEwMSBDMTUuMTgxMjcyMiwxMDEgMTMuMzU0NjgzLDk5LjIwNTUwMDkgMTMuMzE3NzU5NSw5Ni45OTE4NzQxIEMxMy4zMTc3NTk1LDk2Ljk5MTg3NDEgMTIuODg4ODg4OSw3Mi4zOTk0ODM4IDEyLjg4ODg4ODksNjAuMDY5OTA5OSBDMTIuODg4ODg4OSw1Ny42MTg5MzI2IDIuMjI2NzM0MzcsNDkuMTQ2MjkzNiAyLjIyNjczNDM3LDQ5LjE0NjI5MzYgQzEuOTA1MjQwODcsNDguODc4ODMyNyAxLjY1OTExNjU1LDQ4LjYyMDczMyAxLjQ4NjQ3NjQ2LDQ4LjM3Nzk5NDcgWicgaWQ9J3BhdGgtMic+PC9wYXRoPlxuXHRcdFx0XHRcdCAgICAgICAgPG1hc2sgaWQ9J21hc2stMycgbWFza0NvbnRlbnRVbml0cz0ndXNlclNwYWNlT25Vc2UnIG1hc2tVbml0cz0nb2JqZWN0Qm91bmRpbmdCb3gnIHg9JzAnIHk9JzAnIHdpZHRoPSc1OCcgaGVpZ2h0PScxMDEnIGZpbGw9J3doaXRlJz5cblx0XHRcdFx0XHQgICAgICAgICAgICA8dXNlIHhsaW5rOmhyZWY9JyNwYXRoLTInPjwvdXNlPlxuXHRcdFx0XHRcdCAgICAgICAgPC9tYXNrPlxuXHRcdFx0XHRcdCAgICA8L2RlZnM+XG5cdFx0XHRcdFx0ICAgIDxnIGlkPSdQb3BvdmVyJyBmaWx0ZXI9J3VybCgjZmlsdGVyLTEpJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgyNy4wMDAwMDAsIDM4OS4wMDAwMDApJz5cblx0XHRcdFx0XHQgICAgICAgIDx1c2UgaWQ9J1JlY3RhbmdsZS0xNCcgc3Ryb2tlPScjIzYzNjM2MycgbWFzaz0ndXJsKCNtYXNrLTMpJyBmaWxsPScjNjM2MzYzJyB4bGluazpocmVmPScjcGF0aC0yJz48L3VzZT5cblx0XHRcdFx0XHQgICAgPC9nPlxuXHRcdFx0XHRcdDwvc3ZnPlwiXG5cdFx0XHRcImlwaG9uZS02cy1wbHVzXCIgOiBcIjxzdmcgd2lkdGg9JzcwcHgnIGhlaWdodD0nMTE5cHgnIHZpZXdCb3g9JzI4IDQ1MCA3MCAxMTknIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+XG5cdFx0XHRcdFx0ICAgIDwhLS0gR2VuZXJhdG9yOiBTa2V0Y2ggMy43LjIgKDI4Mjc2KSAtIGh0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaCAtLT5cblx0XHRcdFx0XHQgICAgPGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+XG5cdFx0XHRcdFx0ICAgIDxkZWZzPlxuXHRcdFx0XHRcdCAgICAgICAgPGZpbHRlciB4PSctNTAlJyB5PSctNTAlJyB3aWR0aD0nMjAwJScgaGVpZ2h0PScyMDAlJyBmaWx0ZXJVbml0cz0nb2JqZWN0Qm91bmRpbmdCb3gnIGlkPSdmaWx0ZXItMSc+XG5cdFx0XHRcdFx0ICAgICAgICAgICAgPGZlT2Zmc2V0IGR4PScwJyBkeT0nMScgaW49J1NvdXJjZUFscGhhJyByZXN1bHQ9J3NoYWRvd09mZnNldE91dGVyMSc+PC9mZU9mZnNldD5cblx0XHRcdFx0XHQgICAgICAgICAgICA8ZmVHYXVzc2lhbkJsdXIgc3RkRGV2aWF0aW9uPScxLjUnIGluPSdzaGFkb3dPZmZzZXRPdXRlcjEnIHJlc3VsdD0nc2hhZG93Qmx1ck91dGVyMSc+PC9mZUdhdXNzaWFuQmx1cj5cblx0XHRcdFx0XHQgICAgICAgICAgICA8ZmVDb2xvck1hdHJpeCB2YWx1ZXM9JzAgMCAwIDAgMCAgIDAgMCAwIDAgMCAgIDAgMCAwIDAgMCAgMCAwIDAgMC40IDAnIHR5cGU9J21hdHJpeCcgaW49J3NoYWRvd0JsdXJPdXRlcjEnIHJlc3VsdD0nc2hhZG93TWF0cml4T3V0ZXIxJz48L2ZlQ29sb3JNYXRyaXg+XG5cdFx0XHRcdFx0ICAgICAgICAgICAgPGZlTWVyZ2U+XG5cdFx0XHRcdFx0ICAgICAgICAgICAgICAgIDxmZU1lcmdlTm9kZSBpbj0nc2hhZG93TWF0cml4T3V0ZXIxJz48L2ZlTWVyZ2VOb2RlPlxuXHRcdFx0XHRcdCAgICAgICAgICAgICAgICA8ZmVNZXJnZU5vZGUgaW49J1NvdXJjZUdyYXBoaWMnPjwvZmVNZXJnZU5vZGU+XG5cdFx0XHRcdFx0ICAgICAgICAgICAgPC9mZU1lcmdlPlxuXHRcdFx0XHRcdCAgICAgICAgPC9maWx0ZXI+XG5cdFx0XHRcdFx0ICAgICAgICA8cGF0aCBkPSdNMS45NTcyOTM5NSw1NC4wNzI4MzA0IEMwLjc4NTkxMTEzMiw1My4zNzU3Njk5IDAsNTIuMDk4Nzc2IDAsNTAuNjM4OTAyMiBMMCwzLjk5NTI0NDE5IEMwLDEuNzg2NzE0MjggMS43OTI0MjIwMiwwIDQuMDAzNDg2NjMsMCBMNTkuOTk2NTEzNCwwIEM2Mi4yMDQ2MjM1LDAgNjQsMS43ODg3MzE3NSA2NCwzLjk5NTI0NDE5IEw2NCw1MC42Mzg5MDIyIEM2NCw1MS45MjMzNjg2IDYzLjM5MzcxMTYsNTMuMDY1MTU1NiA2Mi40NTEzOTEsNTMuNzk1NzU0IEM2Mi40NDI3NzUyLDUzLjgwMzI0MzMgNjIuNDM0MTAxOSw1My44MTA3NDA0IDYyLjQyNTM3MDksNTMuODE4MjQ1NCBDNjIuNDI1MzcwOSw1My44MTgyNDU0IDUwLjMyNDc4NjMsNjMuODk3NzQwMiA1MC4zMjQ3ODYzLDY2LjYxNzM5NDcgQzUwLjMyNDc4NjMsODAuMjg4MDU0NCA0OS44NDQzMDQ5LDEwOC4wMDIwMDcgNDkuODQ0MzA0OSwxMDguMDAyMDA3IEM0OS44MDc5NjY1LDExMC4yMTAyMzQgNDcuOTg3NDIzMiwxMTIgNDUuNzc4OTA4OSwxMTIgTDE4Ljc2ODA5OTcsMTEyIEMxNi41NTM0Mzk3LDExMiAxNC43Mzk0NDU2LDExMC4yMDk4NCAxNC43MDI3MDM3LDEwOC4wMDE1NjYgQzE0LjcwMjcwMzcsMTA4LjAwMTU2NiAxNC4yMjIyMjIyLDgwLjI4NDU3NjEgMTQuMjIyMjIyMiw2Ni42MTIxNzczIEMxNC4yMjIyMjIyLDYzLjg5NDI2MTkgMi4xNDA4MTQyMiw1NC4yMzIxMzM3IDIuMTQwODE0MjIsNTQuMjMyMTMzNyBDMi4wNzY2NDkxMyw1NC4xNzg2Mjk4IDIuMDE1NDgxMTEsNTQuMTI1NTEzNCAxLjk1NzI5Mzk1LDU0LjA3MjgzMDQgWicgaWQ9J3BhdGgtMic+PC9wYXRoPlxuXHRcdFx0XHRcdCAgICAgICAgPG1hc2sgaWQ9J21hc2stMycgbWFza0NvbnRlbnRVbml0cz0ndXNlclNwYWNlT25Vc2UnIG1hc2tVbml0cz0nb2JqZWN0Qm91bmRpbmdCb3gnIHg9JzAnIHk9JzAnIHdpZHRoPSc2NCcgaGVpZ2h0PScxMTInIGZpbGw9J3doaXRlJz5cblx0XHRcdFx0XHQgICAgICAgICAgICA8dXNlIHhsaW5rOmhyZWY9JyNwYXRoLTInPjwvdXNlPlxuXHRcdFx0XHRcdCAgICAgICAgPC9tYXNrPlxuXHRcdFx0XHRcdCAgICA8L2RlZnM+XG5cdFx0XHRcdFx0ICAgIDxnIGlkPSdQb3BvdmVyJyBmaWx0ZXI9J3VybCgjZmlsdGVyLTEpJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgzMS4wMDAwMDAsIDQ1Mi4wMDAwMDApJz5cblx0XHRcdFx0XHQgICAgICAgIDx1c2UgaWQ9J1JlY3RhbmdsZS0xNCcgc3Ryb2tlPScjNjM2MzYzJyBtYXNrPSd1cmwoI21hc2stMyknIGZpbGw9JyM2MzYzNjMnIHhsaW5rOmhyZWY9JyNwYXRoLTInPjwvdXNlPlxuXHRcdFx0XHRcdCAgICA8L2c+XG5cdFx0XHRcdFx0PC9zdmc+XCJcblxuXHRvYmplY3RzIDpcblx0XHRcIjw/eG1sIHZlcnNpb249JzEuMCcgZW5jb2Rpbmc9J1VURi04JyBzdGFuZGFsb25lPSdubyc/PlxuXHRcdFx0XHQ8c3ZnIHdpZHRoPScxMXB4JyBoZWlnaHQ9JzE2cHgnIHZpZXdCb3g9JzAgMCAxMSAxNicgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJyB4bWxuczpza2V0Y2g9J2h0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaC9ucyc+XG5cdFx0XHRcdDwhLS0gR2VuZXJhdG9yOiBTa2V0Y2ggMy41LjIgKDI1MjM1KSAtIGh0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaCAtLT5cblx0XHRcdFx0PHRpdGxlPkxpZ2h0YnVsYjwvdGl0bGU+XG5cdFx0XHRcdDxkZXNjPkNyZWF0ZWQgd2l0aCBTa2V0Y2guPC9kZXNjPlxuXHRcdFx0XHQ8ZGVmcz48L2RlZnM+XG5cdFx0XHRcdDxnIGlkPSdQYWdlLTEnIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnIHNrZXRjaDp0eXBlPSdNU1BhZ2UnPlxuXHRcdFx0XHRcdDxnIGlkPSdpUGhvbmUtNicgc2tldGNoOnR5cGU9J01TQXJ0Ym9hcmRHcm91cCcgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTI0NC4wMDAwMDAsIC02MzkuMDAwMDAwKScgc3Ryb2tlPScjNEE1MzYxJz5cblx0XHRcdFx0XHRcdDxnIGlkPSdMaWdodGJ1bGInIHNrZXRjaDp0eXBlPSdNU0xheWVyR3JvdXAnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDI0NC4wMDAwMDAsIDYzOS4wMDAwMDApJz5cblx0XHRcdFx0XHRcdFx0PHBhdGggZD0nTTgsMTAuNDAwMjkwNCBDOS43ODA4Mzc5NSw5LjQ4OTkzNDkxIDExLDcuNjM3MzQyNzMgMTEsNS41IEMxMSwyLjQ2MjQzMzg4IDguNTM3NTY2MTIsMCA1LjUsMCBDMi40NjI0MzM4OCwwIDAsMi40NjI0MzM4OCAwLDUuNSBDMCw3LjYzNzM0MjczIDEuMjE5MTYyMDUsOS40ODk5MzQ5MSAzLDEwLjQwMDI5MDQgTDMsMTQuMDAyMDg2OSBDMywxNS4xMDE3Mzk0IDMuODk3NjE2MDIsMTYgNS4wMDQ4ODE1LDE2IEw1Ljk5NTExODUsMTYgQzcuMTA2MTAwMiwxNiA4LDE1LjEwNTUwMzggOCwxNC4wMDIwODY5IEw4LDEwLjQwMDI5MDQgWicgaWQ9J092YWwtMTcnIHNrZXRjaDp0eXBlPSdNU1NoYXBlR3JvdXAnPjwvcGF0aD5cblx0XHRcdFx0XHRcdFx0PHJlY3QgaWQ9J1JlY3RhbmdsZS01MCcgc2tldGNoOnR5cGU9J01TU2hhcGVHcm91cCcgeD0nMycgeT0nMTInIHdpZHRoPSc1JyBoZWlnaHQ9JzEnPjwvcmVjdD5cblx0XHRcdFx0XHRcdFx0PHJlY3QgaWQ9J1JlY3RhbmdsZS01MScgc2tldGNoOnR5cGU9J01TU2hhcGVHcm91cCcgeD0nNCcgeT0nMTMuNScgd2lkdGg9JzEuNScgaGVpZ2h0PScxJz48L3JlY3Q+XG5cdFx0XHRcdFx0XHRcdDxwYXRoIGQ9J001LDguNSBDNSw4LjUgMy40OTk5OTk5OSw3LjUwMDAwMDAxIDQsNyBDNC41MDAwMDAwMSw2LjQ5OTk5OTk5IDUsNy42NjY2NjY2NyA1LjUsOCBDNS41LDggNi41LDYuNTAwMDAwMDEgNyw3IEM3LjUsNy40OTk5OTk5OSA2LDguNSA2LDguNSBMNiwxMSBMNSwxMSBMNSw4LjUgWicgaWQ9J1JlY3RhbmdsZS01Micgc2tldGNoOnR5cGU9J01TU2hhcGVHcm91cCc+PC9wYXRoPlxuXHRcdFx0XHRcdFx0PC9nPlxuXHRcdFx0XHRcdDwvZz5cblx0XHRcdFx0PC9nPlxuXHRcdFx0PC9zdmc+XCJcblx0c2hpZnQgOiB7XG5cdFx0b24gOiBcIjw/eG1sIHZlcnNpb249JzEuMCcgZW5jb2Rpbmc9J1VURi04JyBzdGFuZGFsb25lPSdubyc/PlxuXHRcdFx0XHQ8c3ZnIHdpZHRoPScyMHB4JyBoZWlnaHQ9JzE4cHgnIHZpZXdCb3g9JzAgMCAyMCAxNycgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJyB4bWxuczpza2V0Y2g9J2h0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaC9ucyc+XG5cdFx0XHRcdFx0PCEtLSBHZW5lcmF0b3I6IFNrZXRjaCAzLjUuMiAoMjUyMzUpIC0gaHR0cDovL3d3dy5ib2hlbWlhbmNvZGluZy5jb20vc2tldGNoIC0tPlxuXHRcdFx0XHRcdDx0aXRsZT5TaGlmdDwvdGl0bGU+XG5cdFx0XHRcdFx0PGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+XG5cdFx0XHRcdFx0PGRlZnM+PC9kZWZzPlxuXHRcdFx0XHRcdDxnIGlkPSdQYWdlLTEnIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnIHNrZXRjaDp0eXBlPSdNU1BhZ2UnPlxuXHRcdFx0XHRcdFx0PGcgaWQ9J0tleWJvYXJkL0xpZ2h0L1VwcGVyJyBza2V0Y2g6dHlwZT0nTVNMYXllckdyb3VwJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtMTQuMDAwMDAwLCAtMTMwLjAwMDAwMCknIGZpbGw9JyMwMzAzMDMnPlxuXHRcdFx0XHRcdFx0XHQ8ZyBpZD0nVGhpcmQtUm93JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgzLjAwMDAwMCwgMTE4LjAwMDAwMCknIHNrZXRjaDp0eXBlPSdNU1NoYXBlR3JvdXAnPlxuXHRcdFx0XHRcdFx0XHRcdDxwYXRoIGQ9J00yMS43MDUyMzg4LDEzLjIwNTIzODggQzIxLjMxNTc0NjIsMTIuODE1NzQ2MiAyMC42ODU3NTU5LDEyLjgxNDI0NDEgMjAuMjk0NzYxMiwxMy4yMDUyMzg4IEwxMS45MTYwNzY3LDIxLjU4MzkyMzMgQzExLjEzMzk5OTEsMjIuMzY2MDAwOSAxMS4zOTgyNjA2LDIzIDEyLjQ5NzkxMzEsMjMgTDE2LjUsMjMgTDE2LjUsMjguMDA5MjIyIEMxNi41LDI4LjU1NjQxMzYgMTYuOTQ2MzExNCwyOSAxNy40OTc1NDQ2LDI5IEwyNC41MDI0NTU0LDI5IEMyNS4wNTMzODQsMjkgMjUuNSwyOC41NDkwMjQ4IDI1LjUsMjguMDA5MjIyIEwyNS41LDIzIEwyOS41MDIwODY5LDIzIEMzMC42MDU1MDM4LDIzIDMwLjg2NjgyNCwyMi4zNjY4MjQgMzAuMDgzOTIzMywyMS41ODM5MjMzIEwyMS43MDUyMzg4LDEzLjIwNTIzODggWicgaWQ9J1NoaWZ0Jz48L3BhdGg+XG5cdFx0XHRcdFx0XHRcdDwvZz5cblx0XHRcdFx0XHRcdDwvZz5cblx0XHRcdFx0XHQ8L2c+XG5cdFx0XHRcdDwvc3ZnPlwiXG5cdFx0b2ZmIDogXCI8P3htbCB2ZXJzaW9uPScxLjAnIGVuY29kaW5nPSdVVEYtOCcgc3RhbmRhbG9uZT0nbm8nPz5cblx0XHQ8c3ZnIHdpZHRoPScyMHB4JyBoZWlnaHQ9JzE4cHgnIHZpZXdCb3g9JzAgMCAyMCAxOScgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJyB4bWxuczpza2V0Y2g9J2h0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaC9ucyc+XG5cdFx0XHQ8IS0tIEdlbmVyYXRvcjogU2tldGNoIDMuNS4yICgyNTIzNSkgLSBodHRwOi8vd3d3LmJvaGVtaWFuY29kaW5nLmNvbS9za2V0Y2ggLS0+XG5cdFx0XHQ8dGl0bGU+U2hpZnQ8L3RpdGxlPlxuXHRcdFx0PGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+XG5cdFx0XHQ8ZGVmcz48L2RlZnM+XG5cdFx0XHQ8ZyBpZD0nUGFnZS0xJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJyBza2V0Y2g6dHlwZT0nTVNQYWdlJz5cblx0XHRcdFx0PGcgaWQ9J0tleWJvYXJkL0xpZ2h0L0xvd2VyJyBza2V0Y2g6dHlwZT0nTVNMYXllckdyb3VwJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtMTQuMDAwMDAwLCAtMTI5LjAwMDAwMCknIGZpbGw9JyMwMzAzMDMnPlxuXHRcdFx0XHRcdDxnIGlkPSdUaGlyZC1Sb3cnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDMuMDAwMDAwLCAxMTguMDAwMDAwKScgc2tldGNoOnR5cGU9J01TU2hhcGVHcm91cCc+XG5cdFx0XHRcdFx0XHQ8cGF0aCBkPSdNMjEuNjcxOTAwOCwxMi4yMzI1ODk4IEMyMS4zMDEwMzIsMTEuODI3OTkxNiAyMC42OTQ2ODkyLDExLjgzMzQ3MzEgMjAuMzI4ODE5NSwxMi4yMzI1ODk4IEwxMS42OTQ3MDIzLDIxLjY1MTI5ODMgQzEwLjc1ODc0NDEsMjIuNjcyMzA4IDExLjEyODU1NDEsMjMuNSAxMi41MDk3NzUxLDIzLjUgTDE1Ljk5OTk5OTksMjMuNTAwMDAwMiBMMTUuOTk5OTk5OSwyOC4wMDE0MjQxIEMxNS45OTk5OTk5LDI4LjgyOTA2NDggMTYuNjcxNjU1OSwyOS41MDAwMDAxIDE3LjQ5NzEwMSwyOS41MDAwMDAxIEwyNC41MDI4OTkyLDI5LjUwMDAwMDEgQzI1LjMyOTcyNTMsMjkuNTAwMDAwMSAyNi4wMDAwMDAzLDI4LjgzNDk3MDMgMjYuMDAwMDAwMywyOC4wMDE0MjQxIEwyNi4wMDAwMDAzLDIzLjUwMDAwMDEgTDI5LjQ5MDIyNTEsMjMuNTAwMDAwMiBDMzAuODc2MzM1NywyMy41MDAwMDAyIDMxLjI0Mzk1MjEsMjIuNjc1MTkxNiAzMC4zMDU0MTYxLDIxLjY1MTI5ODUgTDIxLjY3MTkwMDgsMTIuMjMyNTg5OCBaIE0yMS4zNDE3NDgsMTQuMzY0NTMxNiBDMjEuMTUzMDA1NiwxNC4xNjMyMDY0IDIwLjg0MzM1MTUsMTQuMTY3MDkxNCAyMC42NTgyNTE0LDE0LjM2NDUzMTYgTDEzLjUsMjEuOTk5OTk5OCBMMTcuNTAwMDAwMSwyMS45OTk5OTk5IEwxNy41MDAwMDAyLDI3LjUwODk5NTYgQzE3LjUwMDAwMDIsMjcuNzgwMTcwMyAxNy43MzI5MDI3LDI4LjAwMDAwMDggMTguMDAzNDIyOSwyOC4wMDAwMDA4IEwyMy45OTY1NzcsMjguMDAwMDAwOCBDMjQuMjc0NjA5NywyOC4wMDAwMDA4IDI0LjQ5OTk5OTcsMjcuNzcyMTIwMyAyNC40OTk5OTk3LDI3LjUwODk5NTYgTDI0LjQ5OTk5OTcsMjEuOTk5OTk5OSBMMjguNSwyMS45OTk5OTk5IEwyMS4zNDE3NDgsMTQuMzY0NTMxNiBaJyBpZD0nU2hpZnQnPjwvcGF0aD5cblx0XHRcdFx0XHQ8L2c+XG5cdFx0XHRcdDwvZz5cblx0XHRcdDwvZz5cblx0XHQ8L3N2Zz5cIlxuXHR9XG5cdG1lc3NhZ2VzX2FwcDpcIjw/eG1sIHZlcnNpb249JzEuMCcgZW5jb2Rpbmc9J1VURi04JyBzdGFuZGFsb25lPSdubyc/PlxuXHQ8c3ZnIHdpZHRoPSc2MHB4JyBoZWlnaHQ9JzYwcHgnIHZpZXdCb3g9JzAgMCA2MCA2MCcgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJz5cblx0ICAgIDwhLS0gR2VuZXJhdG9yOiBTa2V0Y2ggMzkuMSAoMzE3MjApIC0gaHR0cDovL3d3dy5ib2hlbWlhbmNvZGluZy5jb20vc2tldGNoIC0tPlxuXHQgICAgPHRpdGxlPk1lc3NhZ2VzIENvcHk8L3RpdGxlPlxuXHQgICAgPGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+XG5cdCAgICA8ZGVmcz5cblx0ICAgICAgICA8bGluZWFyR3JhZGllbnQgeDE9JzUwJScgeTE9JzAlJyB4Mj0nNTAlJyB5Mj0nMTAwJScgaWQ9J2xpbmVhckdyYWRpZW50LTEnPlxuXHQgICAgICAgICAgICA8c3RvcCBzdG9wLWNvbG9yPScjNjZGRDdGJyBvZmZzZXQ9JzAlJz48L3N0b3A+XG5cdCAgICAgICAgICAgIDxzdG9wIHN0b3AtY29sb3I9JyMwOUI4MjYnIG9mZnNldD0nMTAwJSc+PC9zdG9wPlxuXHQgICAgICAgIDwvbGluZWFyR3JhZGllbnQ+XG5cdCAgICA8L2RlZnM+XG5cdCAgICA8ZyBpZD0naU9TLUtpdCcgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCc+XG5cdCAgICAgICAgPGcgaWQ9J0hvbWUtU2NyZWVuJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtMTQ1Mi4wMDAwMDAsIC04NTMuMDAwMDAwKSc+XG5cdCAgICAgICAgICAgIDxnIGlkPSdIb21lLVNjcmVlbi3igKItaVBob25lLTZzLVBsdXMnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDE0MTcuMDAwMDAwLCA4MTIuMDAwMDAwKSc+XG5cdCAgICAgICAgICAgICAgICA8ZyBpZD0nTWVzc2FnZXMtQ29weScgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMzUuMDAwMDAwLCA0MS4wMDAwMDApJz5cblx0ICAgICAgICAgICAgICAgICAgICA8cmVjdCBpZD0nQkcnIGZpbGw9J3VybCgjbGluZWFyR3JhZGllbnQtMSknIHg9JzAnIHk9JzAnIHdpZHRoPSc2MCcgaGVpZ2h0PSc2MCcgcng9JzE0Jz48L3JlY3Q+XG5cdCAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0nTTE5LjQyMjM5NzYsNDQuMzA4ODAwNiBDMTMuMTY2NDIyOCw0MS4xMzQ4OTQ5IDksMzUuNDY1NTQyMSA5LDI5IEM5LDE5LjA1ODg3NDUgMTguODQ5NzM1NSwxMSAzMSwxMSBDNDMuMTUwMjY0NSwxMSA1MywxOS4wNTg4NzQ1IDUzLDI5IEM1MywzOC45NDExMjU1IDQzLjE1MDI2NDUsNDcgMzEsNDcgQzI4LjY5OTQ1ODgsNDcgMjYuNDgxMzkxNCw0Ni43MTEwODk3IDI0LjM5NzA0MDksNDYuMTc1MTk1MyBDMjMuOTQ0MjY1Myw0Ni44ODM4MTQzIDIxLjkwNjUzNzcsNDkuNSAxNi41LDQ5LjUgQzE1LjYxNTAxODcsNDkuNSAxNy4xODM0NzQ5LDQ4LjU5MTU5MjEgMTgsNDcuNSBDMTguNzg5NDI4Niw0Ni40NDQ2MzI2IDE5LjI1MDU2MjUsNDQuOTQ4MDM2MiAxOS40MjIzOTc2LDQ0LjMwODgwMDYgWicgaWQ9J0J1YmJsZScgZmlsbD0nI0ZGRkZGRic+PC9wYXRoPlxuXHQgICAgICAgICAgICAgICAgPC9nPlxuXHQgICAgICAgICAgICA8L2c+XG5cdCAgICAgICAgPC9nPlxuXHQgICAgPC9nPlxuXHQ8L3N2Zz5cIlxuXHRjYWxlbmRhcl9hcHA6XCI8P3htbCB2ZXJzaW9uPScxLjAnIGVuY29kaW5nPSdVVEYtOCcgc3RhbmRhbG9uZT0nbm8nPz5cblx0PHN2ZyB3aWR0aD0nNjBweCcgaGVpZ2h0PSc2MHB4JyB2aWV3Qm94PScwIDAgNjAgNjAnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+XG5cdCAgICA8IS0tIEdlbmVyYXRvcjogU2tldGNoIDM5LjEgKDMxNzIwKSAtIGh0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaCAtLT5cblx0ICAgIDx0aXRsZT5DYWxlbmRhcjwvdGl0bGU+XG5cdCAgICA8ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz5cblx0ICAgIDxkZWZzPjwvZGVmcz5cblx0ICAgIDxnIGlkPSdQYWdlLTEnIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnPlxuXHQgICAgICAgIDxnIGlkPSdIb21lLVNjcmVlbi3igKItaVBob25lLVNFJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtOTIuMDAwMDAwLCAtMjcuMDAwMDAwKSc+XG5cdCAgICAgICAgICAgIDxnIGlkPSdIb21lLVNjcmVlbi3igKItaVBob25lLTZzLUNvcHknIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDAuMDAwMDAwLCAyNy4wMDAwMDApJz5cblx0ICAgICAgICAgICAgICAgIDxnIGlkPSdDYWxlbmRhcicgdHJhbnNmb3JtPSd0cmFuc2xhdGUoOTIuMDAwMDAwLCAwLjAwMDAwMCknPlxuXHQgICAgICAgICAgICAgICAgICAgIDxyZWN0IGlkPSdCRycgZmlsbD0nI0ZGRkZGRicgeD0nMCcgeT0nMCcgd2lkdGg9JzYwJyBoZWlnaHQ9JzYwJyByeD0nMTQnPjwvcmVjdD5cblx0ICAgICAgICAgICAgICAgICAgICA8dGV4dCBpZD0nMjUnIGZvbnQtZmFtaWx5PSdTRlVJRGlzcGxheS1VbHRyYWxpZ2h0LCBTRiBVSSBEaXNwbGF5JyBmb250LXNpemU9JzQwJyBmb250LXdlaWdodD0nMjAwJyBsZXR0ZXItc3BhY2luZz0nMC4zNzk5OTk5OTUnIGZpbGw9JyMwMDAwMDAnPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICA8dHNwYW4geD0nNy4xMDgyODEyNScgeT0nNDknPjI1PC90c3Bhbj5cblx0ICAgICAgICAgICAgICAgICAgICA8L3RleHQ+XG5cdCAgICAgICAgICAgICAgICAgICAgPHRleHQgaWQ9J01vbmRheScgZm9udC1mYW1pbHk9J1NGVUlEaXNwbGF5LU1lZGl1bSwgU0YgVUkgRGlzcGxheScgZm9udC1zaXplPScxMScgZm9udC13ZWlnaHQ9JzQwMCcgbGV0dGVyLXNwYWNpbmc9JzAuMzc5OTk5OTk1JyBmaWxsPScjRkYzQjMwJz5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgPHRzcGFuIHg9JzkuMDI5OTIxODknIHk9JzE1Jz5Nb25kYXk8L3RzcGFuPlxuXHQgICAgICAgICAgICAgICAgICAgIDwvdGV4dD5cblx0ICAgICAgICAgICAgICAgIDwvZz5cblx0ICAgICAgICAgICAgPC9nPlxuXHQgICAgICAgIDwvZz5cblx0ICAgIDwvZz5cblx0PC9zdmc+XCJcblx0cGhvdG9zX2FwcDpcIjw/eG1sIHZlcnNpb249JzEuMCcgZW5jb2Rpbmc9J1VURi04JyBzdGFuZGFsb25lPSdubyc/PlxuXHQ8c3ZnIHdpZHRoPSc2MHB4JyBoZWlnaHQ9JzYwcHgnIHZpZXdCb3g9JzAgMCA2MCA2MCcgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJz5cblx0ICAgIDwhLS0gR2VuZXJhdG9yOiBTa2V0Y2ggMzkuMSAoMzE3MjApIC0gaHR0cDovL3d3dy5ib2hlbWlhbmNvZGluZy5jb20vc2tldGNoIC0tPlxuXHQgICAgPHRpdGxlPlBob3RvczwvdGl0bGU+XG5cdCAgICA8ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz5cblx0ICAgIDxkZWZzPjwvZGVmcz5cblx0ICAgIDxnIGlkPSdQYWdlLTEnIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnPlxuXHQgICAgICAgIDxnIGlkPSdIb21lLVNjcmVlbi3igKItaVBob25lLVNFJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtMTY4LjAwMDAwMCwgLTI3LjAwMDAwMCknPlxuXHQgICAgICAgICAgICA8ZyBpZD0nSG9tZS1TY3JlZW4t4oCiLWlQaG9uZS02cy1Db3B5JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgwLjAwMDAwMCwgMjcuMDAwMDAwKSc+XG5cdCAgICAgICAgICAgICAgICA8ZyBpZD0nUGhvdG9zJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgxNjguMDAwMDAwLCAwLjAwMDAwMCknPlxuXHQgICAgICAgICAgICAgICAgICAgIDxyZWN0IGlkPSdCRycgZmlsbD0nI0ZGRkZGRicgeD0nMCcgeT0nMCcgd2lkdGg9JzYwJyBoZWlnaHQ9JzYwJyByeD0nMTQnPjwvcmVjdD5cblx0ICAgICAgICAgICAgICAgICAgICA8cmVjdCBpZD0nUGVkYWwnIGZpbGw9JyNGMjZFNjQnIHN0eWxlPSdtaXgtYmxlbmQtbW9kZTogbXVsdGlwbHk7JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgyMC4xNDIxMzYsIDIwLjE0MjEzNikgcm90YXRlKDQ1LjAwMDAwMCkgdHJhbnNsYXRlKC0yMC4xNDIxMzYsIC0yMC4xNDIxMzYpICcgeD0nOC4xNDIxMzU2MicgeT0nMTIuMTQyMTM1Nicgd2lkdGg9JzI0JyBoZWlnaHQ9JzE2JyByeD0nOCc+PC9yZWN0PlxuXHQgICAgICAgICAgICAgICAgICAgIDxyZWN0IGlkPSdQZWRhbCcgZmlsbD0nI0YwRTIyQScgc3R5bGU9J21peC1ibGVuZC1tb2RlOiBtdWx0aXBseTsnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDM5LjE0MjEzNiwgMTkuMTQyMTM2KSByb3RhdGUoMTM1LjAwMDAwMCkgdHJhbnNsYXRlKC0zOS4xNDIxMzYsIC0xOS4xNDIxMzYpICcgeD0nMjcuMTQyMTM1NicgeT0nMTEuMTQyMTM1Nicgd2lkdGg9JzI0JyBoZWlnaHQ9JzE2JyByeD0nOCc+PC9yZWN0PlxuXHQgICAgICAgICAgICAgICAgICAgIDxyZWN0IGlkPSdQZWRhbCcgZmlsbD0nI0QyODhCMScgc3R5bGU9J21peC1ibGVuZC1tb2RlOiBtdWx0aXBseTsnIHg9JzQnIHk9JzIyJyB3aWR0aD0nMjQnIGhlaWdodD0nMTYnIHJ4PSc4Jz48L3JlY3Q+XG5cdCAgICAgICAgICAgICAgICAgICAgPHJlY3QgaWQ9J1BlZGFsJyBmaWxsPScjRkJBRDMxJyBzdHlsZT0nbWl4LWJsZW5kLW1vZGU6IG11bHRpcGx5OycgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMzAuMDAwMDAwLCAxNi4wMDAwMDApIHJvdGF0ZSg5MC4wMDAwMDApIHRyYW5zbGF0ZSgtMzAuMDAwMDAwLCAtMTYuMDAwMDAwKSAnIHg9JzE4JyB5PSc4JyB3aWR0aD0nMjQnIGhlaWdodD0nMTYnIHJ4PSc4Jz48L3JlY3Q+XG5cdCAgICAgICAgICAgICAgICAgICAgPHJlY3QgaWQ9J1BlZGFsJyBmaWxsPScjQTU4RUMyJyBzdHlsZT0nbWl4LWJsZW5kLW1vZGU6IG11bHRpcGx5OycgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMjAuMTQyMTM2LCA0MC4xNDIxMzYpIHNjYWxlKDEsIC0xKSByb3RhdGUoNDUuMDAwMDAwKSB0cmFuc2xhdGUoLTIwLjE0MjEzNiwgLTQwLjE0MjEzNikgJyB4PSc4LjE0MjEzNTYyJyB5PSczMi4xNDIxMzU2JyB3aWR0aD0nMjQnIGhlaWdodD0nMTYnIHJ4PSc4Jz48L3JlY3Q+XG5cdCAgICAgICAgICAgICAgICAgICAgPHJlY3QgaWQ9J1BlZGFsJyBmaWxsPScjNkNDMTk5JyBzdHlsZT0nbWl4LWJsZW5kLW1vZGU6IG11bHRpcGx5OycgdHJhbnNmb3JtPSd0cmFuc2xhdGUoNDAuMTQyMTM2LCA0MC4xNDIxMzYpIHNjYWxlKDEsIC0xKSByb3RhdGUoMTM1LjAwMDAwMCkgdHJhbnNsYXRlKC00MC4xNDIxMzYsIC00MC4xNDIxMzYpICcgeD0nMjguMTQyMTM1NicgeT0nMzIuMTQyMTM1Nicgd2lkdGg9JzI0JyBoZWlnaHQ9JzE2JyByeD0nOCc+PC9yZWN0PlxuXHQgICAgICAgICAgICAgICAgICAgIDxyZWN0IGlkPSdQZWRhbCcgZmlsbD0nIzc3QUVERCcgc3R5bGU9J21peC1ibGVuZC1tb2RlOiBtdWx0aXBseTsnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDMwLjAwMDAwMCwgNDQuMDAwMDAwKSBzY2FsZSgxLCAtMSkgcm90YXRlKDkwLjAwMDAwMCkgdHJhbnNsYXRlKC0zMC4wMDAwMDAsIC00NC4wMDAwMDApICcgeD0nMTgnIHk9JzM2JyB3aWR0aD0nMjQnIGhlaWdodD0nMTYnIHJ4PSc4Jz48L3JlY3Q+XG5cdCAgICAgICAgICAgICAgICAgICAgPHJlY3QgaWQ9J1BlZGFsJyBmaWxsPScjQjVENjU1JyBzdHlsZT0nbWl4LWJsZW5kLW1vZGU6IG11bHRpcGx5OycgdHJhbnNmb3JtPSd0cmFuc2xhdGUoNDQuMDAwMDAwLCAzMC4wMDAwMDApIHJvdGF0ZSgxODAuMDAwMDAwKSB0cmFuc2xhdGUoLTQ0LjAwMDAwMCwgLTMwLjAwMDAwMCkgJyB4PSczMicgeT0nMjInIHdpZHRoPScyNCcgaGVpZ2h0PScxNicgcng9JzgnPjwvcmVjdD5cblx0ICAgICAgICAgICAgICAgIDwvZz5cblx0ICAgICAgICAgICAgPC9nPlxuXHQgICAgICAgIDwvZz5cblx0ICAgIDwvZz5cblx0PC9zdmc+XCJcblx0Y2FtZXJhX2FwcDpcIjw/eG1sIHZlcnNpb249JzEuMCcgZW5jb2Rpbmc9J1VURi04JyBzdGFuZGFsb25lPSdubyc/PlxuXHQ8c3ZnIHdpZHRoPSc2MHB4JyBoZWlnaHQ9JzYwcHgnIHZpZXdCb3g9JzAgMCA2MCA2MCcgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJz5cblx0ICAgIDwhLS0gR2VuZXJhdG9yOiBTa2V0Y2ggMzkuMSAoMzE3MjApIC0gaHR0cDovL3d3dy5ib2hlbWlhbmNvZGluZy5jb20vc2tldGNoIC0tPlxuXHQgICAgPHRpdGxlPkNhbWVyYTwvdGl0bGU+XG5cdCAgICA8ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz5cblx0ICAgIDxkZWZzPlxuXHQgICAgICAgIDxsaW5lYXJHcmFkaWVudCB4MT0nNTAlJyB5MT0nMCUnIHgyPSc1MCUnIHkyPScxMDAlJyBpZD0nbGluZWFyR3JhZGllbnQtMSc+XG5cdCAgICAgICAgICAgIDxzdG9wIHN0b3AtY29sb3I9JyNEQkREREUnIG9mZnNldD0nMCUnPjwvc3RvcD5cblx0ICAgICAgICAgICAgPHN0b3Agc3RvcC1jb2xvcj0nIzg5OEI5MScgb2Zmc2V0PScxMDAlJz48L3N0b3A+XG5cdCAgICAgICAgPC9saW5lYXJHcmFkaWVudD5cblx0ICAgICAgICA8bGluZWFyR3JhZGllbnQgeDE9JzUwJScgeTE9JzAlJyB4Mj0nNTAlJyB5Mj0nMTAwJScgaWQ9J2xpbmVhckdyYWRpZW50LTInPlxuXHQgICAgICAgICAgICA8c3RvcCBzdG9wLWNvbG9yPScjNDc0NzQ3JyBvZmZzZXQ9JzAlJz48L3N0b3A+XG5cdCAgICAgICAgICAgIDxzdG9wIHN0b3AtY29sb3I9JyMyQjJCMkInIG9mZnNldD0nMTAwJSc+PC9zdG9wPlxuXHQgICAgICAgIDwvbGluZWFyR3JhZGllbnQ+XG5cdCAgICAgICAgPHBhdGggZD0nTTksMjAgTDUxLDIwIEw1MSw0MiBMOSw0MiBMOSwyMCBaIE05LDQyLjk5NzU3MjIgQzksNDQuMzc5NTg3NyAxMC4xMTk5NjUzLDQ1LjUgMTEuNTAxNTEyNSw0NS41IEw0OC40OTg0ODc1LDQ1LjUgQzQ5Ljg3NjYwMTUsNDUuNSA1MSw0NC4zNzk2MjQ5IDUxLDQyLjk5NzU3MjIgTDUxLDQyLjUgTDksNDIuNSBMOSw0Mi45OTc1NzIyIFogTTksMTkuNSBMOSwxOS4wMDI0Mjc4IEM5LDE3LjYyMDM3NTEgMTAuMTIzMzk4NSwxNi41IDExLjUwMTUxMjUsMTYuNSBMMTcuNTMwNDQ5NiwxNi41IEMxOC40NTcyMDExLDE2LjQxODAxODYgMTkuMzIxODIwOCwxNi4yNDE2MzEzIDE5LjkyMDUzMjIsMTUuODkwMjU4OCBDMjEuODMyNjQyNSwxNC43NjgwNzcyIDIxLjk2NDExMTMsMTEuNSAyNC45OTYyMDUsMTEuNSBMMzAuMDI2MDgzLDExLjUgTDM1LjA1NTk2MTEsMTEuNSBDMzguMDg4MDU0OCwxMS41IDM4LjIxOTUyMzYsMTQuNzY4MDc3MiA0MC4xMzE2MzM5LDE1Ljg5MDI1ODggQzQwLjczMDM0NTMsMTYuMjQxNjMxMyA0MS41OTQ5NjUsMTYuNDE4MDE4NiA0Mi41MjE3MTY1LDE2LjUgTDQ4LjQ5ODQ4NzUsMTYuNSBDNDkuODgwMDM0NywxNi41IDUxLDE3LjYyMDQxMjMgNTEsMTkuMDAyNDI3OCBMNTEsMTkuNSBMOSwxOS41IEw5LDE5LjUgWiBNMzkuMjUsMzEgQzM5LjI1LDI1Ljg5MTM2NjEgMzUuMTA4NjMzOSwyMS43NSAzMCwyMS43NSBDMjQuODkxMzY2MSwyMS43NSAyMC43NSwyNS44OTEzNjYxIDIwLjc1LDMxIEMyMC43NSwzNi4xMDg2MzM5IDI0Ljg5MTM2NjEsNDAuMjUgMzAsNDAuMjUgQzM1LjEwODYzMzksNDAuMjUgMzkuMjUsMzYuMTA4NjMzOSAzOS4yNSwzMSBMMzkuMjUsMzEgWiBNMjIuMjUsMzEgQzIyLjI1LDI2LjcxOTc5MzIgMjUuNzE5NzkzMiwyMy4yNSAzMCwyMy4yNSBDMzQuMjgwMjA2OCwyMy4yNSAzNy43NSwyNi43MTk3OTMyIDM3Ljc1LDMxIEMzNy43NSwzNS4yODAyMDY4IDM0LjI4MDIwNjgsMzguNzUgMzAsMzguNzUgQzI1LjcxOTc5MzIsMzguNzUgMjIuMjUsMzUuMjgwMjA2OCAyMi4yNSwzMSBMMjIuMjUsMzEgWicgaWQ9J3BhdGgtMyc+PC9wYXRoPlxuXHQgICAgICAgIDxmaWx0ZXIgeD0nLTUwJScgeT0nLTUwJScgd2lkdGg9JzIwMCUnIGhlaWdodD0nMjAwJScgZmlsdGVyVW5pdHM9J29iamVjdEJvdW5kaW5nQm94JyBpZD0nZmlsdGVyLTQnPlxuXHQgICAgICAgICAgICA8ZmVPZmZzZXQgZHg9JzAnIGR5PScxJyBpbj0nU291cmNlQWxwaGEnIHJlc3VsdD0nc2hhZG93T2Zmc2V0T3V0ZXIxJz48L2ZlT2Zmc2V0PlxuXHQgICAgICAgICAgICA8ZmVDb2xvck1hdHJpeCB2YWx1ZXM9JzAgMCAwIDAgMSAgIDAgMCAwIDAgMSAgIDAgMCAwIDAgMSAgMCAwIDAgMC41IDAnIHR5cGU9J21hdHJpeCcgaW49J3NoYWRvd09mZnNldE91dGVyMSc+PC9mZUNvbG9yTWF0cml4PlxuXHQgICAgICAgIDwvZmlsdGVyPlxuXHQgICAgICAgIDxmaWx0ZXIgeD0nLTUwJScgeT0nLTUwJScgd2lkdGg9JzIwMCUnIGhlaWdodD0nMjAwJScgZmlsdGVyVW5pdHM9J29iamVjdEJvdW5kaW5nQm94JyBpZD0nZmlsdGVyLTUnPlxuXHQgICAgICAgICAgICA8ZmVHYXVzc2lhbkJsdXIgc3RkRGV2aWF0aW9uPScxJyBpbj0nU291cmNlQWxwaGEnIHJlc3VsdD0nc2hhZG93Qmx1cklubmVyMSc+PC9mZUdhdXNzaWFuQmx1cj5cblx0ICAgICAgICAgICAgPGZlT2Zmc2V0IGR4PScwJyBkeT0nMScgaW49J3NoYWRvd0JsdXJJbm5lcjEnIHJlc3VsdD0nc2hhZG93T2Zmc2V0SW5uZXIxJz48L2ZlT2Zmc2V0PlxuXHQgICAgICAgICAgICA8ZmVDb21wb3NpdGUgaW49J3NoYWRvd09mZnNldElubmVyMScgaW4yPSdTb3VyY2VBbHBoYScgb3BlcmF0b3I9J2FyaXRobWV0aWMnIGsyPSctMScgazM9JzEnIHJlc3VsdD0nc2hhZG93SW5uZXJJbm5lcjEnPjwvZmVDb21wb3NpdGU+XG5cdCAgICAgICAgICAgIDxmZUNvbG9yTWF0cml4IHZhbHVlcz0nMCAwIDAgMCAwICAgMCAwIDAgMCAwICAgMCAwIDAgMCAwICAwIDAgMCAwLjMgMCcgdHlwZT0nbWF0cml4JyBpbj0nc2hhZG93SW5uZXJJbm5lcjEnIHJlc3VsdD0nc2hhZG93TWF0cml4SW5uZXIxJz48L2ZlQ29sb3JNYXRyaXg+XG5cdCAgICAgICAgICAgIDxmZUdhdXNzaWFuQmx1ciBzdGREZXZpYXRpb249JzAuNScgaW49J1NvdXJjZUFscGhhJyByZXN1bHQ9J3NoYWRvd0JsdXJJbm5lcjInPjwvZmVHYXVzc2lhbkJsdXI+XG5cdCAgICAgICAgICAgIDxmZU9mZnNldCBkeD0nMCcgZHk9JzEnIGluPSdzaGFkb3dCbHVySW5uZXIyJyByZXN1bHQ9J3NoYWRvd09mZnNldElubmVyMic+PC9mZU9mZnNldD5cblx0ICAgICAgICAgICAgPGZlQ29tcG9zaXRlIGluPSdzaGFkb3dPZmZzZXRJbm5lcjInIGluMj0nU291cmNlQWxwaGEnIG9wZXJhdG9yPSdhcml0aG1ldGljJyBrMj0nLTEnIGszPScxJyByZXN1bHQ9J3NoYWRvd0lubmVySW5uZXIyJz48L2ZlQ29tcG9zaXRlPlxuXHQgICAgICAgICAgICA8ZmVDb2xvck1hdHJpeCB2YWx1ZXM9JzAgMCAwIDAgMCAgIDAgMCAwIDAgMCAgIDAgMCAwIDAgMCAgMCAwIDAgMC4zIDAnIHR5cGU9J21hdHJpeCcgaW49J3NoYWRvd0lubmVySW5uZXIyJyByZXN1bHQ9J3NoYWRvd01hdHJpeElubmVyMic+PC9mZUNvbG9yTWF0cml4PlxuXHQgICAgICAgICAgICA8ZmVHYXVzc2lhbkJsdXIgc3RkRGV2aWF0aW9uPScwLjUnIGluPSdTb3VyY2VBbHBoYScgcmVzdWx0PSdzaGFkb3dCbHVySW5uZXIzJz48L2ZlR2F1c3NpYW5CbHVyPlxuXHQgICAgICAgICAgICA8ZmVPZmZzZXQgZHg9JzAnIGR5PScwJyBpbj0nc2hhZG93Qmx1cklubmVyMycgcmVzdWx0PSdzaGFkb3dPZmZzZXRJbm5lcjMnPjwvZmVPZmZzZXQ+XG5cdCAgICAgICAgICAgIDxmZUNvbXBvc2l0ZSBpbj0nc2hhZG93T2Zmc2V0SW5uZXIzJyBpbjI9J1NvdXJjZUFscGhhJyBvcGVyYXRvcj0nYXJpdGhtZXRpYycgazI9Jy0xJyBrMz0nMScgcmVzdWx0PSdzaGFkb3dJbm5lcklubmVyMyc+PC9mZUNvbXBvc2l0ZT5cblx0ICAgICAgICAgICAgPGZlQ29sb3JNYXRyaXggdmFsdWVzPScwIDAgMCAwIDAgICAwIDAgMCAwIDAgICAwIDAgMCAwIDAgIDAgMCAwIDAuMyAwJyB0eXBlPSdtYXRyaXgnIGluPSdzaGFkb3dJbm5lcklubmVyMycgcmVzdWx0PSdzaGFkb3dNYXRyaXhJbm5lcjMnPjwvZmVDb2xvck1hdHJpeD5cblx0ICAgICAgICAgICAgPGZlR2F1c3NpYW5CbHVyIHN0ZERldmlhdGlvbj0nMC41JyBpbj0nU291cmNlQWxwaGEnIHJlc3VsdD0nc2hhZG93Qmx1cklubmVyNCc+PC9mZUdhdXNzaWFuQmx1cj5cblx0ICAgICAgICAgICAgPGZlT2Zmc2V0IGR4PSctMCcgZHk9JzAnIGluPSdzaGFkb3dCbHVySW5uZXI0JyByZXN1bHQ9J3NoYWRvd09mZnNldElubmVyNCc+PC9mZU9mZnNldD5cblx0ICAgICAgICAgICAgPGZlQ29tcG9zaXRlIGluPSdzaGFkb3dPZmZzZXRJbm5lcjQnIGluMj0nU291cmNlQWxwaGEnIG9wZXJhdG9yPSdhcml0aG1ldGljJyBrMj0nLTEnIGszPScxJyByZXN1bHQ9J3NoYWRvd0lubmVySW5uZXI0Jz48L2ZlQ29tcG9zaXRlPlxuXHQgICAgICAgICAgICA8ZmVDb2xvck1hdHJpeCB2YWx1ZXM9JzAgMCAwIDAgMCAgIDAgMCAwIDAgMCAgIDAgMCAwIDAgMCAgMCAwIDAgMC4zIDAnIHR5cGU9J21hdHJpeCcgaW49J3NoYWRvd0lubmVySW5uZXI0JyByZXN1bHQ9J3NoYWRvd01hdHJpeElubmVyNCc+PC9mZUNvbG9yTWF0cml4PlxuXHQgICAgICAgICAgICA8ZmVNZXJnZT5cblx0ICAgICAgICAgICAgICAgIDxmZU1lcmdlTm9kZSBpbj0nc2hhZG93TWF0cml4SW5uZXIxJz48L2ZlTWVyZ2VOb2RlPlxuXHQgICAgICAgICAgICAgICAgPGZlTWVyZ2VOb2RlIGluPSdzaGFkb3dNYXRyaXhJbm5lcjInPjwvZmVNZXJnZU5vZGU+XG5cdCAgICAgICAgICAgICAgICA8ZmVNZXJnZU5vZGUgaW49J3NoYWRvd01hdHJpeElubmVyMyc+PC9mZU1lcmdlTm9kZT5cblx0ICAgICAgICAgICAgICAgIDxmZU1lcmdlTm9kZSBpbj0nc2hhZG93TWF0cml4SW5uZXI0Jz48L2ZlTWVyZ2VOb2RlPlxuXHQgICAgICAgICAgICA8L2ZlTWVyZ2U+XG5cdCAgICAgICAgPC9maWx0ZXI+XG5cdCAgICAgICAgPHBhdGggZD0nTTEzLDE1LjI1IEMxMywxNC44MzU3ODY0IDEzLjMzNTU5NDcsMTQuNSAxMy43NTA4Mzc4LDE0LjUgTDE1Ljc0OTE2MjIsMTQuNSBDMTYuMTYzODM4NSwxNC41IDE2LjUsMTQuODMyODk4NiAxNi41LDE1LjI1IEwxNi41LDE2IEwxMywxNiBMMTMsMTUuMjUgTDEzLDE1LjI1IFonIGlkPSdwYXRoLTYnPjwvcGF0aD5cblx0ICAgICAgICA8ZmlsdGVyIHg9Jy01MCUnIHk9Jy01MCUnIHdpZHRoPScyMDAlJyBoZWlnaHQ9JzIwMCUnIGZpbHRlclVuaXRzPSdvYmplY3RCb3VuZGluZ0JveCcgaWQ9J2ZpbHRlci03Jz5cblx0ICAgICAgICAgICAgPGZlT2Zmc2V0IGR4PScwJyBkeT0nMCcgaW49J1NvdXJjZUFscGhhJyByZXN1bHQ9J3NoYWRvd09mZnNldE91dGVyMSc+PC9mZU9mZnNldD5cblx0ICAgICAgICAgICAgPGZlQ29sb3JNYXRyaXggdmFsdWVzPScwIDAgMCAwIDEgICAwIDAgMCAwIDEgICAwIDAgMCAwIDEgIDAgMCAwIDAuNSAwJyB0eXBlPSdtYXRyaXgnIGluPSdzaGFkb3dPZmZzZXRPdXRlcjEnPjwvZmVDb2xvck1hdHJpeD5cblx0ICAgICAgICA8L2ZpbHRlcj5cblx0ICAgICAgICA8ZmlsdGVyIHg9Jy01MCUnIHk9Jy01MCUnIHdpZHRoPScyMDAlJyBoZWlnaHQ9JzIwMCUnIGZpbHRlclVuaXRzPSdvYmplY3RCb3VuZGluZ0JveCcgaWQ9J2ZpbHRlci04Jz5cblx0ICAgICAgICAgICAgPGZlT2Zmc2V0IGR4PScwJyBkeT0nMScgaW49J1NvdXJjZUFscGhhJyByZXN1bHQ9J3NoYWRvd09mZnNldElubmVyMSc+PC9mZU9mZnNldD5cblx0ICAgICAgICAgICAgPGZlQ29tcG9zaXRlIGluPSdzaGFkb3dPZmZzZXRJbm5lcjEnIGluMj0nU291cmNlQWxwaGEnIG9wZXJhdG9yPSdhcml0aG1ldGljJyBrMj0nLTEnIGszPScxJyByZXN1bHQ9J3NoYWRvd0lubmVySW5uZXIxJz48L2ZlQ29tcG9zaXRlPlxuXHQgICAgICAgICAgICA8ZmVDb2xvck1hdHJpeCB2YWx1ZXM9JzAgMCAwIDAgMCAgIDAgMCAwIDAgMCAgIDAgMCAwIDAgMCAgMCAwIDAgMC41IDAnIHR5cGU9J21hdHJpeCcgaW49J3NoYWRvd0lubmVySW5uZXIxJz48L2ZlQ29sb3JNYXRyaXg+XG5cdCAgICAgICAgPC9maWx0ZXI+XG5cdCAgICAgICAgPGNpcmNsZSBpZD0ncGF0aC05JyBjeD0nMzkuNScgY3k9JzIzJyByPScxJz48L2NpcmNsZT5cblx0ICAgICAgICA8ZmlsdGVyIHg9Jy01MCUnIHk9Jy01MCUnIHdpZHRoPScyMDAlJyBoZWlnaHQ9JzIwMCUnIGZpbHRlclVuaXRzPSdvYmplY3RCb3VuZGluZ0JveCcgaWQ9J2ZpbHRlci0xMCc+XG5cdCAgICAgICAgICAgIDxmZU9mZnNldCBkeD0nMCcgZHk9JzAnIGluPSdTb3VyY2VBbHBoYScgcmVzdWx0PSdzaGFkb3dPZmZzZXRPdXRlcjEnPjwvZmVPZmZzZXQ+XG5cdCAgICAgICAgICAgIDxmZUNvbG9yTWF0cml4IHZhbHVlcz0nMCAwIDAgMCAwICAgMCAwIDAgMCAwICAgMCAwIDAgMCAwICAwIDAgMCAwLjUgMCcgdHlwZT0nbWF0cml4JyBpbj0nc2hhZG93T2Zmc2V0T3V0ZXIxJz48L2ZlQ29sb3JNYXRyaXg+XG5cdCAgICAgICAgPC9maWx0ZXI+XG5cdCAgICAgICAgPGZpbHRlciB4PSctNTAlJyB5PSctNTAlJyB3aWR0aD0nMjAwJScgaGVpZ2h0PScyMDAlJyBmaWx0ZXJVbml0cz0nb2JqZWN0Qm91bmRpbmdCb3gnIGlkPSdmaWx0ZXItMTEnPlxuXHQgICAgICAgICAgICA8ZmVHYXVzc2lhbkJsdXIgc3RkRGV2aWF0aW9uPScwLjUnIGluPSdTb3VyY2VBbHBoYScgcmVzdWx0PSdzaGFkb3dCbHVySW5uZXIxJz48L2ZlR2F1c3NpYW5CbHVyPlxuXHQgICAgICAgICAgICA8ZmVPZmZzZXQgZHg9JzAnIGR5PScwJyBpbj0nc2hhZG93Qmx1cklubmVyMScgcmVzdWx0PSdzaGFkb3dPZmZzZXRJbm5lcjEnPjwvZmVPZmZzZXQ+XG5cdCAgICAgICAgICAgIDxmZUNvbXBvc2l0ZSBpbj0nc2hhZG93T2Zmc2V0SW5uZXIxJyBpbjI9J1NvdXJjZUFscGhhJyBvcGVyYXRvcj0nYXJpdGhtZXRpYycgazI9Jy0xJyBrMz0nMScgcmVzdWx0PSdzaGFkb3dJbm5lcklubmVyMSc+PC9mZUNvbXBvc2l0ZT5cblx0ICAgICAgICAgICAgPGZlQ29sb3JNYXRyaXggdmFsdWVzPScwIDAgMCAwIDAgICAwIDAgMCAwIDAgICAwIDAgMCAwIDAgIDAgMCAwIDAuMyAwJyB0eXBlPSdtYXRyaXgnIGluPSdzaGFkb3dJbm5lcklubmVyMSc+PC9mZUNvbG9yTWF0cml4PlxuXHQgICAgICAgIDwvZmlsdGVyPlxuXHQgICAgPC9kZWZzPlxuXHQgICAgPGcgaWQ9J1BhZ2UtMScgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCc+XG5cdCAgICAgICAgPGcgaWQ9J0hvbWUtU2NyZWVuLeKAoi1pUGhvbmUtU0UnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKC0yNDQuMDAwMDAwLCAtMjcuMDAwMDAwKSc+XG5cdCAgICAgICAgICAgIDxnIGlkPSdIb21lLVNjcmVlbi3igKItaVBob25lLTZzLUNvcHknIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDAuMDAwMDAwLCAyNy4wMDAwMDApJz5cblx0ICAgICAgICAgICAgICAgIDxnIGlkPSdDYW1lcmEnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDI0NC4wMDAwMDAsIDAuMDAwMDAwKSc+XG5cdCAgICAgICAgICAgICAgICAgICAgPGcgaWQ9J2ljb24nPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSdNMzkuMDgxNSwwIEM0NS4xMDUsMCA0OC4xMTYsMCA1MS4zNTg1LDEuMDI1IEM1NC44OTg1LDIuMzEzNSA1Ny42ODY1LDUuMTAxNSA1OC45NzUsOC42NDE1IEM2MCwxMS44ODM1IDYwLDE0Ljg5NTUgNjAsMjAuOTE4NSBMNjAsMzkuMDgxNSBDNjAsNDUuMTA1IDYwLDQ4LjExNiA1OC45NzUsNTEuMzU4NSBDNTcuNjg2NSw1NC44OTg1IDU0Ljg5ODUsNTcuNjg2NSA1MS4zNTg1LDU4Ljk3NDUgQzQ4LjExNiw2MCA0NS4xMDUsNjAgMzkuMDgxNSw2MCBMMjAuOTE4NSw2MCBDMTQuODk1LDYwIDExLjg4MzUsNjAgOC42NDE1LDU4Ljk3NDUgQzUuMTAxNSw1Ny42ODY1IDIuMzEzNSw1NC44OTg1IDEuMDI1LDUxLjM1ODUgQzAsNDguMTE2IDAsNDUuMTA1IDAsMzkuMDgxNSBMMCwyMC45MTg1IEMwLDE0Ljg5NTUgMCwxMS44ODM1IDEuMDI1LDguNjQxNSBDMi4zMTM1LDUuMTAxNSA1LjEwMTUsMi4zMTM1IDguNjQxNSwxLjAyNSBDMTEuODgzNSwwIDE0Ljg5NSwwIDIwLjkxODUsMCBMMzkuMDgxNSwwIFonIGlkPSdJY29uJyBmaWxsPSd1cmwoI2xpbmVhckdyYWRpZW50LTEpJz48L3BhdGg+XG5cdCAgICAgICAgICAgICAgICAgICAgICAgIDxnIGlkPSdDYW1lcmEnPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVzZSBmaWxsPSdibGFjaycgZmlsbC1vcGFjaXR5PScxJyBmaWx0ZXI9J3VybCgjZmlsdGVyLTQpJyB4bGluazpocmVmPScjcGF0aC0zJz48L3VzZT5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1c2UgZmlsbD0ndXJsKCNsaW5lYXJHcmFkaWVudC0yKScgZmlsbC1ydWxlPSdldmVub2RkJyB4bGluazpocmVmPScjcGF0aC0zJz48L3VzZT5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1c2UgZmlsbD0nYmxhY2snIGZpbGwtb3BhY2l0eT0nMScgZmlsdGVyPSd1cmwoI2ZpbHRlci01KScgeGxpbms6aHJlZj0nI3BhdGgtMyc+PC91c2U+XG5cdCAgICAgICAgICAgICAgICAgICAgICAgIDwvZz5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgPGcgaWQ9J1BhdGgnPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVzZSBmaWxsPSdibGFjaycgZmlsbC1vcGFjaXR5PScxJyBmaWx0ZXI9J3VybCgjZmlsdGVyLTcpJyB4bGluazpocmVmPScjcGF0aC02Jz48L3VzZT5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1c2UgZmlsbD0ndXJsKCNsaW5lYXJHcmFkaWVudC0yKScgZmlsbC1ydWxlPSdldmVub2RkJyB4bGluazpocmVmPScjcGF0aC02Jz48L3VzZT5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1c2UgZmlsbD0nYmxhY2snIGZpbGwtb3BhY2l0eT0nMScgZmlsdGVyPSd1cmwoI2ZpbHRlci04KScgeGxpbms6aHJlZj0nI3BhdGgtNic+PC91c2U+XG5cdCAgICAgICAgICAgICAgICAgICAgICAgIDwvZz5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgPGcgaWQ9J092YWwtMTYnPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVzZSBmaWxsPSdibGFjaycgZmlsbC1vcGFjaXR5PScxJyBmaWx0ZXI9J3VybCgjZmlsdGVyLTEwKScgeGxpbms6aHJlZj0nI3BhdGgtOSc+PC91c2U+XG5cdCAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dXNlIGZpbGw9JyNGRkMyMDknIGZpbGwtcnVsZT0nZXZlbm9kZCcgeGxpbms6aHJlZj0nI3BhdGgtOSc+PC91c2U+XG5cdCAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dXNlIGZpbGw9J2JsYWNrJyBmaWxsLW9wYWNpdHk9JzEnIGZpbHRlcj0ndXJsKCNmaWx0ZXItMTEpJyB4bGluazpocmVmPScjcGF0aC05Jz48L3VzZT5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgPC9nPlxuXHQgICAgICAgICAgICAgICAgICAgIDwvZz5cblx0ICAgICAgICAgICAgICAgIDwvZz5cblx0ICAgICAgICAgICAgPC9nPlxuXHQgICAgICAgIDwvZz5cblx0ICAgIDwvZz5cblx0PC9zdmc+XCJcblx0d2VhdGhlcl9hcHA6XCI8P3htbCB2ZXJzaW9uPScxLjAnIGVuY29kaW5nPSdVVEYtOCcgc3RhbmRhbG9uZT0nbm8nPz5cblx0PHN2ZyB3aWR0aD0nNjBweCcgaGVpZ2h0PSc2MHB4JyB2aWV3Qm94PScwIDAgNjAgNjAnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+XG5cdCAgICA8IS0tIEdlbmVyYXRvcjogU2tldGNoIDM5LjEgKDMxNzIwKSAtIGh0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaCAtLT5cblx0ICAgIDx0aXRsZT5XZWFsdGhlcjwvdGl0bGU+XG5cdCAgICA8ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz5cblx0ICAgIDxkZWZzPlxuXHQgICAgICAgIDxsaW5lYXJHcmFkaWVudCB4MT0nNTAlJyB5MT0nMCUnIHgyPSc1MCUnIHkyPScxMDAlJyBpZD0nbGluZWFyR3JhZGllbnQtMSc+XG5cdCAgICAgICAgICAgIDxzdG9wIHN0b3AtY29sb3I9JyMxRDYyRjAnIG9mZnNldD0nMCUnPjwvc3RvcD5cblx0ICAgICAgICAgICAgPHN0b3Agc3RvcC1jb2xvcj0nIzE5RDVGRCcgb2Zmc2V0PScxMDAlJz48L3N0b3A+XG5cdCAgICAgICAgPC9saW5lYXJHcmFkaWVudD5cblx0ICAgIDwvZGVmcz5cblx0ICAgIDxnIGlkPSdQYWdlLTEnIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnPlxuXHQgICAgICAgIDxnIGlkPSdIb21lLVNjcmVlbi3igKItaVBob25lLVNFJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtMTYuMDAwMDAwLCAtMTE1LjAwMDAwMCknPlxuXHQgICAgICAgICAgICA8ZyBpZD0nSG9tZS1TY3JlZW4t4oCiLWlQaG9uZS02cy1Db3B5JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgwLjAwMDAwMCwgMjcuMDAwMDAwKSc+XG5cdCAgICAgICAgICAgICAgICA8ZyBpZD0nV2VhbHRoZXInIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDE2LjAwMDAwMCwgODguMDAwMDAwKSc+XG5cdCAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0nTTM5LjA4MTUsMCBDNDUuMTA1LDAgNDguMTE2LDAgNTEuMzU4NSwxLjAyNSBDNTQuODk4NSwyLjMxMzUgNTcuNjg2NSw1LjEwMTUgNTguOTc1LDguNjQxNSBDNjAsMTEuODgzNSA2MCwxNC44OTU1IDYwLDIwLjkxODUgTDYwLDM5LjA4MTUgQzYwLDQ1LjEwNSA2MCw0OC4xMTYgNTguOTc1LDUxLjM1ODUgQzU3LjY4NjUsNTQuODk4NSA1NC44OTg1LDU3LjY4NjUgNTEuMzU4NSw1OC45NzQ1IEM0OC4xMTYsNjAgNDUuMTA1LDYwIDM5LjA4MTUsNjAgTDIwLjkxODUsNjAgQzE0Ljg5NSw2MCAxMS44ODM1LDYwIDguNjQxNSw1OC45NzQ1IEM1LjEwMTUsNTcuNjg2NSAyLjMxMzUsNTQuODk4NSAxLjAyNSw1MS4zNTg1IEMwLDQ4LjExNiAwLDQ1LjEwNSAwLDM5LjA4MTUgTDAsMjAuOTE4NSBDMCwxNC44OTU1IDAsMTEuODgzNSAxLjAyNSw4LjY0MTUgQzIuMzEzNSw1LjEwMTUgNS4xMDE1LDIuMzEzNSA4LjY0MTUsMS4wMjUgQzExLjg4MzUsMCAxNC44OTUsMCAyMC45MTg1LDAgTDM5LjA4MTUsMCBaJyBpZD0nQkcnIGZpbGw9J3VybCgjbGluZWFyR3JhZGllbnQtMSknPjwvcGF0aD5cblx0ICAgICAgICAgICAgICAgICAgICA8Y2lyY2xlIGlkPSdTdW4nIGZpbGw9JyNGRkQ4MDAnIGN4PScxOS43NScgY3k9JzI0LjI1JyByPScxMS4yNSc+PC9jaXJjbGU+XG5cdCAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0nTTQxLjUsNDMuOTk2Njg3IEM0Ni40OTMwNjI1LDQzLjg2NDIwMzUgNTAuNSwzOS43NzUwMzcgNTAuNSwzNC43NSBDNTAuNSwyOS42NDEzNjYxIDQ2LjM1ODYzMzksMjUuNSA0MS4yNSwyNS41IEM0MS4wNTc0NTQ5LDI1LjUgNDAuODY2MjgzOCwyNS41MDU4ODMgNDAuNjc2NjU2NywyNS41MTc0NzkxIEMzOS4wMDQzMzUzLDIxLjQwMTg4ODkgMzQuOTY2MDUzOSwxOC41IDMwLjI1LDE4LjUgQzI0LjAzNjc5NjYsMTguNSAxOSwyMy41MzY3OTY2IDE5LDI5Ljc1IEMxOSwzMC4wMzkxOTE1IDE5LjAxMDkxMTcsMzAuMzI1ODM0NCAxOS4wMzIzNDYsMzAuNjA5NTM5NSBDMTUuODg1NjI0NCwzMS4xODI4MTU3IDEzLjUsMzMuOTM3ODExNiAxMy41LDM3LjI1IEMxMy41LDQwLjg5NDIyNDIgMTYuMzg3OTAwMiw0My44NjM5NDMxIDIwLDQzLjk5NTQ1NjIgTDIwLDQ0IEw0MS41LDQ0IEw0MS41LDQzLjk5NjY4NyBMNDEuNSw0My45OTY2ODcgWicgaWQ9J0Nsb3VkJyBmaWxsPScjRkZGRkZGJyBvcGFjaXR5PScwLjkwMDUzNjM4MSc+PC9wYXRoPlxuXHQgICAgICAgICAgICAgICAgPC9nPlxuXHQgICAgICAgICAgICA8L2c+XG5cdCAgICAgICAgPC9nPlxuXHQgICAgPC9nPlxuXHQ8L3N2Zz5cIlxuXHRjbG9ja19hcHA6XCI8P3htbCB2ZXJzaW9uPScxLjAnIGVuY29kaW5nPSdVVEYtOCcgc3RhbmRhbG9uZT0nbm8nPz5cblx0PHN2ZyB3aWR0aD0nNjBweCcgaGVpZ2h0PSc2MHB4JyB2aWV3Qm94PScwIDAgNjAgNjAnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+XG5cdCAgICA8IS0tIEdlbmVyYXRvcjogU2tldGNoIDM5LjEgKDMxNzIwKSAtIGh0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaCAtLT5cblx0ICAgIDx0aXRsZT5DbG9jazwvdGl0bGU+XG5cdCAgICA8ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz5cblx0ICAgIDxkZWZzPlxuXHQgICAgICAgIDxsaW5lYXJHcmFkaWVudCB4MT0nNTAlJyB5MT0nMCUnIHgyPSc1MCUnIHkyPScxMDAlJyBpZD0nbGluZWFyR3JhZGllbnQtMSc+XG5cdCAgICAgICAgICAgIDxzdG9wIHN0b3AtY29sb3I9JyNGMUYxRjEnIG9mZnNldD0nMCUnPjwvc3RvcD5cblx0ICAgICAgICAgICAgPHN0b3Agc3RvcC1jb2xvcj0nI0VFRUVFRScgb2Zmc2V0PScxMDAlJz48L3N0b3A+XG5cdCAgICAgICAgPC9saW5lYXJHcmFkaWVudD5cblx0ICAgIDwvZGVmcz5cblx0ICAgIDxnIGlkPSdQYWdlLTEnIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnPlxuXHQgICAgICAgIDxnIGlkPSdIb21lLVNjcmVlbi3igKItaVBob25lLVNFJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtOTIuMDAwMDAwLCAtMTE1LjAwMDAwMCknPlxuXHQgICAgICAgICAgICA8ZyBpZD0nSG9tZS1TY3JlZW4t4oCiLWlQaG9uZS02cy1Db3B5JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgwLjAwMDAwMCwgMjcuMDAwMDAwKSc+XG5cdCAgICAgICAgICAgICAgICA8ZyBpZD0nQ2xvY2snIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDkyLjAwMDAwMCwgODguMDAwMDAwKSc+XG5cdCAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0nTTM5LjA4MTUsMCBDNDUuMTA1LDAgNDguMTE2LDAgNTEuMzU4NSwxLjAyNSBDNTQuODk4NSwyLjMxMzUgNTcuNjg2NSw1LjEwMTUgNTguOTc1LDguNjQxNSBDNjAsMTEuODgzNSA2MCwxNC44OTU1IDYwLDIwLjkxODUgTDYwLDM5LjA4MTUgQzYwLDQ1LjEwNSA2MCw0OC4xMTYgNTguOTc1LDUxLjM1ODUgQzU3LjY4NjUsNTQuODk4NSA1NC44OTg1LDU3LjY4NjUgNTEuMzU4NSw1OC45NzQ1IEM0OC4xMTYsNjAgNDUuMTA1LDYwIDM5LjA4MTUsNjAgTDIwLjkxODUsNjAgQzE0Ljg5NSw2MCAxMS44ODM1LDYwIDguNjQxNSw1OC45NzQ1IEM1LjEwMTUsNTcuNjg2NSAyLjMxMzUsNTQuODk4NSAxLjAyNSw1MS4zNTg1IEMwLDQ4LjExNiAwLDQ1LjEwNSAwLDM5LjA4MTUgTDAsMjAuOTE4NSBDMCwxNC44OTU1IDAsMTEuODgzNSAxLjAyNSw4LjY0MTUgQzIuMzEzNSw1LjEwMTUgNS4xMDE1LDIuMzEzNSA4LjY0MTUsMS4wMjUgQzExLjg4MzUsMCAxNC44OTUsMCAyMC45MTg1LDAgTDM5LjA4MTUsMCBaJyBpZD0nSWNvbicgZmlsbD0nIzFFMUUxRic+PC9wYXRoPlxuXHQgICAgICAgICAgICAgICAgICAgIDxjaXJjbGUgaWQ9J092YWwtMTInIGZpbGw9J3VybCgjbGluZWFyR3JhZGllbnQtMSknIGN4PSczMCcgY3k9JzMwJyByPScyNic+PC9jaXJjbGU+XG5cdCAgICAgICAgICAgICAgICAgICAgPGcgaWQ9J0RpZ2l0cycgdHJhbnNmb3JtPSd0cmFuc2xhdGUoOC4wMDAwMDAsIDcuMDAwMDAwKScgZmlsbD0nIzYxNjE2MSc+XG5cdCAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9J00zMi40NjgsOCBMMzIuNDY4LDMuNzQ2IEwzMi4wNzgsMy43NDYgQzMyLjA0OTk5OTksMy45MDYwMDA4IDMxLjk5ODAwMDQsNC4wMzc5OTk0OCAzMS45MjIsNC4xNDIgQzMxLjg0NTk5OTYsNC4yNDYwMDA1MiAzMS43NTMwMDA1LDQuMzI3OTk5NyAzMS42NDMsNC4zODggQzMxLjUzMjk5OTQsNC40NDgwMDAzIDMxLjQxMDAwMDcsNC40ODg5OTk4OSAzMS4yNzQsNC41MTEgQzMxLjEzNzk5OTMsNC41MzMwMDAxMSAzMC45OTgwMDA3LDQuNTQ0IDMwLjg1NCw0LjU0NCBMMzAuODU0LDQuOTUyIEwzMS45NTgsNC45NTIgTDMxLjk1OCw4IEwzMi40NjgsOCBaJyBpZD0nMSc+PC9wYXRoPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSdNMzguMDk2LDEyLjc1MiBMMzguNjA2LDEyLjc1MiBDMzguNjAyLDEyLjYyMzk5OTQgMzguNjE0OTk5OSwxMi40OTcwMDA2IDM4LjY0NSwxMi4zNzEgQzM4LjY3NTAwMDIsMTIuMjQ0OTk5NCAzOC43MjM5OTk3LDEyLjEzMjAwMDUgMzguNzkyLDEyLjAzMiBDMzguODYwMDAwMywxMS45MzE5OTk1IDM4Ljk0Njk5OTUsMTEuODUxMDAwMyAzOS4wNTMsMTEuNzg5IEMzOS4xNTkwMDA1LDExLjcyNjk5OTcgMzkuMjg1OTk5MywxMS42OTYgMzkuNDM0LDExLjY5NiBDMzkuNTQ2MDAwNiwxMS42OTYgMzkuNjUxOTk5NSwxMS43MTM5OTk4IDM5Ljc1MiwxMS43NSBDMzkuODUyMDAwNSwxMS43ODYwMDAyIDM5LjkzODk5OTYsMTEuODM3OTk5NyA0MC4wMTMsMTEuOTA2IEM0MC4wODcwMDA0LDExLjk3NDAwMDMgNDAuMTQ1OTk5OCwxMi4wNTQ5OTk1IDQwLjE5LDEyLjE0OSBDNDAuMjM0MDAwMiwxMi4yNDMwMDA1IDQwLjI1NiwxMi4zNDc5OTk0IDQwLjI1NiwxMi40NjQgQzQwLjI1NiwxMi42MTIwMDA3IDQwLjIzMzAwMDIsMTIuNzQxOTk5NCA0MC4xODcsMTIuODU0IEM0MC4xNDA5OTk4LDEyLjk2NjAwMDYgNDAuMDczMDAwNSwxMy4wNjk5OTk1IDM5Ljk4MywxMy4xNjYgQzM5Ljg5Mjk5OTYsMTMuMjYyMDAwNSAzOS43ODAwMDA3LDEzLjM1Njk5OTUgMzkuNjQ0LDEzLjQ1MSBDMzkuNTA3OTk5MywxMy41NDUwMDA1IDM5LjM1MDAwMDksMTMuNjQ3OTk5NCAzOS4xNywxMy43NiBDMzkuMDIxOTk5MywxMy44NDgwMDA0IDM4Ljg4MDAwMDcsMTMuOTQxOTk5NSAzOC43NDQsMTQuMDQyIEMzOC42MDc5OTkzLDE0LjE0MjAwMDUgMzguNDg2MDAwNSwxNC4yNTc5OTkzIDM4LjM3OCwxNC4zOSBDMzguMjY5OTk5NSwxNC41MjIwMDA3IDM4LjE4MTAwMDQsMTQuNjc2OTk5MSAzOC4xMTEsMTQuODU1IEMzOC4wNDA5OTk3LDE1LjAzMzAwMDkgMzcuOTk2MDAwMSwxNS4yNDc5OTg3IDM3Ljk3NiwxNS41IEw0MC43NTQsMTUuNSBMNDAuNzU0LDE1LjA1IEwzOC41NywxNS4wNSBDMzguNTk0MDAwMSwxNC45MTc5OTkzIDM4LjY0NDk5OTYsMTQuODAxMDAwNSAzOC43MjMsMTQuNjk5IEMzOC44MDEwMDA0LDE0LjU5Njk5OTUgMzguODk0OTk5NSwxNC41MDIwMDA0IDM5LjAwNSwxNC40MTQgQzM5LjExNTAwMDYsMTQuMzI1OTk5NiAzOS4yMzU5OTkzLDE0LjI0MzAwMDQgMzkuMzY4LDE0LjE2NSBDMzkuNTAwMDAwNywxNC4wODY5OTk2IDM5LjYzMTk5OTMsMTQuMDA4MDAwNCAzOS43NjQsMTMuOTI4IEMzOS44OTYwMDA3LDEzLjg0Mzk5OTYgNDAuMDIzOTk5NCwxMy43NTYwMDA1IDQwLjE0OCwxMy42NjQgQzQwLjI3MjAwMDYsMTMuNTcxOTk5NSA0MC4zODE5OTk1LDEzLjQ2OTAwMDYgNDAuNDc4LDEzLjM1NSBDNDAuNTc0MDAwNSwxMy4yNDA5OTk0IDQwLjY1MDk5OTcsMTMuMTEyMDAwNyA0MC43MDksMTIuOTY4IEM0MC43NjcwMDAzLDEyLjgyMzk5OTMgNDAuNzk2LDEyLjY1ODAwMDkgNDAuNzk2LDEyLjQ3IEM0MC43OTYsMTIuMjY5OTk5IDQwLjc2MTAwMDQsMTIuMDk0MDAwOCA0MC42OTEsMTEuOTQyIEM0MC42MjA5OTk3LDExLjc4OTk5OTIgNDAuNTI2MDAwNiwxMS42NjMwMDA1IDQwLjQwNiwxMS41NjEgQzQwLjI4NTk5OTQsMTEuNDU4OTk5NSA0MC4xNDUwMDA4LDExLjM4MTAwMDMgMzkuOTgzLDExLjMyNyBDMzkuODIwOTk5MiwxMS4yNzI5OTk3IDM5LjY0ODAwMDksMTEuMjQ2IDM5LjQ2NCwxMS4yNDYgQzM5LjIzOTk5ODksMTEuMjQ2IDM5LjA0MDAwMDksMTEuMjgzOTk5NiAzOC44NjQsMTEuMzYgQzM4LjY4Nzk5OTEsMTEuNDM2MDAwNCAzOC41NDEwMDA2LDExLjU0MDk5OTMgMzguNDIzLDExLjY3NSBDMzguMzA0OTk5NCwxMS44MDkwMDA3IDM4LjIxODAwMDMsMTEuOTY3OTk5MSAzOC4xNjIsMTIuMTUyIEMzOC4xMDU5OTk3LDEyLjMzNjAwMDkgMzguMDgzOTk5OSwxMi41MzU5OTg5IDM4LjA5NiwxMi43NTIgTDM4LjA5NiwxMi43NTIgWicgaWQ9JzInPjwvcGF0aD5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0nTTQyLjE0LDIyLjU3IEw0Mi4xNCwyMy4wMDIgQzQyLjIzNjAwMDUsMjIuOTg5OTk5OSA0Mi4zMzc5OTk1LDIyLjk4NCA0Mi40NDYsMjIuOTg0IEM0Mi41NzQwMDA2LDIyLjk4NCA0Mi42OTI5OTk1LDIzLjAwMDk5OTggNDIuODAzLDIzLjAzNSBDNDIuOTEzMDAwNiwyMy4wNjkwMDAyIDQzLjAwNzk5OTYsMjMuMTIwOTk5NyA0My4wODgsMjMuMTkxIEM0My4xNjgwMDA0LDIzLjI2MTAwMDQgNDMuMjMxOTk5OCwyMy4zNDY5OTk1IDQzLjI4LDIzLjQ0OSBDNDMuMzI4MDAwMiwyMy41NTEwMDA1IDQzLjM1MiwyMy42Njc5OTkzIDQzLjM1MiwyMy44IEM0My4zNTIsMjMuOTI4MDAwNiA0My4zMjcwMDAzLDI0LjA0Mjk5OTUgNDMuMjc3LDI0LjE0NSBDNDMuMjI2OTk5OCwyNC4yNDcwMDA1IDQzLjE2MDAwMDQsMjQuMzMyOTk5NyA0My4wNzYsMjQuNDAzIEM0Mi45OTE5OTk2LDI0LjQ3MzAwMDQgNDIuODk0MDAwNiwyNC41MjY5OTk4IDQyLjc4MiwyNC41NjUgQzQyLjY2OTk5OTQsMjQuNjAzMDAwMiA0Mi41NTIwMDA2LDI0LjYyMiA0Mi40MjgsMjQuNjIyIEM0Mi4xMzU5OTg1LDI0LjYyMiA0MS45MTQwMDA4LDI0LjUzNTAwMDkgNDEuNzYyLDI0LjM2MSBDNDEuNjA5OTk5MiwyNC4xODY5OTkxIDQxLjUzLDIzLjk2MjAwMTQgNDEuNTIyLDIzLjY4NiBMNDEuMDEyLDIzLjY4NiBDNDEuMDA4LDIzLjkwNjAwMTEgNDEuMDM4OTk5NywyNC4xMDE5OTkxIDQxLjEwNSwyNC4yNzQgQzQxLjE3MTAwMDMsMjQuNDQ2MDAwOSA0MS4yNjU5OTk0LDI0LjU5MDk5OTQgNDEuMzksMjQuNzA5IEM0MS41MTQwMDA2LDI0LjgyNzAwMDYgNDEuNjYzOTk5MSwyNC45MTU5OTk3IDQxLjg0LDI0Ljk3NiBDNDIuMDE2MDAwOSwyNS4wMzYwMDAzIDQyLjIxMTk5ODksMjUuMDY2IDQyLjQyOCwyNS4wNjYgQzQyLjYyODAwMSwyNS4wNjYgNDIuODE2OTk5MSwyNS4wMzkwMDAzIDQyLjk5NSwyNC45ODUgQzQzLjE3MzAwMDksMjQuOTMwOTk5NyA0My4zMjc5OTkzLDI0Ljg1MDAwMDUgNDMuNDYsMjQuNzQyIEM0My41OTIwMDA3LDI0LjYzMzk5OTUgNDMuNjk2OTk5NiwyNC40OTkwMDA4IDQzLjc3NSwyNC4zMzcgQzQzLjg1MzAwMDQsMjQuMTc0OTk5MiA0My44OTIsMjMuOTg4MDAxMSA0My44OTIsMjMuNzc2IEM0My44OTIsMjMuNTE5OTk4NyA0My44MjkwMDA2LDIzLjI5ODAwMDkgNDMuNzAzLDIzLjExIEM0My41NzY5OTk0LDIyLjkyMTk5OTEgNDMuMzg0MDAxMywyMi44MDAwMDAzIDQzLjEyNCwyMi43NDQgTDQzLjEyNCwyMi43MzIgQzQzLjI5MjAwMDgsMjIuNjU1OTk5NiA0My40MzE5OTk0LDIyLjU0NDAwMDcgNDMuNTQ0LDIyLjM5NiBDNDMuNjU2MDAwNiwyMi4yNDc5OTkzIDQzLjcxMiwyMi4wNzgwMDEgNDMuNzEyLDIxLjg4NiBDNDMuNzEyLDIxLjY4OTk5OSA0My42NzkwMDAzLDIxLjUyMDAwMDcgNDMuNjEzLDIxLjM3NiBDNDMuNTQ2OTk5NywyMS4yMzE5OTkzIDQzLjQ1NjAwMDYsMjEuMTE0MDAwNSA0My4zNCwyMS4wMjIgQzQzLjIyMzk5OTQsMjAuOTI5OTk5NSA0My4wODcwMDA4LDIwLjg2MTAwMDIgNDIuOTI5LDIwLjgxNSBDNDIuNzcwOTk5MiwyMC43Njg5OTk4IDQyLjYwMDAwMDksMjAuNzQ2IDQyLjQxNiwyMC43NDYgQzQyLjIwMzk5ODksMjAuNzQ2IDQyLjAxNzAwMDgsMjAuNzc5OTk5NyA0MS44NTUsMjAuODQ4IEM0MS42OTI5OTkyLDIwLjkxNjAwMDMgNDEuNTU4MDAwNSwyMS4wMDk5OTk0IDQxLjQ1LDIxLjEzIEM0MS4zNDE5OTk1LDIxLjI1MDAwMDYgNDEuMjU5MDAwMywyMS4zOTM5OTkyIDQxLjIwMSwyMS41NjIgQzQxLjE0Mjk5OTcsMjEuNzMwMDAwOCA0MS4xMSwyMS45MTU5OTkgNDEuMTAyLDIyLjEyIEw0MS42MTIsMjIuMTIgQzQxLjYxMiwyMS45OTU5OTk0IDQxLjYyNzk5OTgsMjEuODc4MDAwNiA0MS42NiwyMS43NjYgQzQxLjY5MjAwMDIsMjEuNjUzOTk5NCA0MS43NDA5OTk3LDIxLjU1NjAwMDQgNDEuODA3LDIxLjQ3MiBDNDEuODczMDAwMywyMS4zODc5OTk2IDQxLjk1Njk5OTUsMjEuMzIxMDAwMyA0Mi4wNTksMjEuMjcxIEM0Mi4xNjEwMDA1LDIxLjIyMDk5OTggNDIuMjc5OTk5MywyMS4xOTYgNDIuNDE2LDIxLjE5NiBDNDIuNjMyMDAxMSwyMS4xOTYgNDIuODExOTk5MywyMS4yNTI5OTk0IDQyLjk1NiwyMS4zNjcgQzQzLjEwMDAwMDcsMjEuNDgxMDAwNiA0My4xNzIsMjEuNjUxOTk4OSA0My4xNzIsMjEuODggQzQzLjE3MiwyMS45OTIwMDA2IDQzLjE1MDAwMDIsMjIuMDkxOTk5NiA0My4xMDYsMjIuMTggQzQzLjA2MTk5OTgsMjIuMjY4MDAwNCA0My4wMDMwMDA0LDIyLjM0MDk5OTcgNDIuOTI5LDIyLjM5OSBDNDIuODU0OTk5NiwyMi40NTcwMDAzIDQyLjc2OTAwMDUsMjIuNTAwOTk5OSA0Mi42NzEsMjIuNTMxIEM0Mi41NzI5OTk1LDIyLjU2MTAwMDIgNDIuNDcwMDAwNSwyMi41NzYgNDIuMzYyLDIyLjU3NiBMNDIuMjU0LDIyLjU3NiBMNDIuMTk0LDIyLjU3NiBDNDIuMTc3OTk5OSwyMi41NzYgNDIuMTYwMDAwMSwyMi41NzQgNDIuMTQsMjIuNTcgTDQyLjE0LDIyLjU3IFonIGlkPSczJz48L3BhdGg+XG5cdCAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9J000MC4zNjYsMzQuMDU0IEwzOC45MzgsMzQuMDU0IEw0MC4zNTQsMzEuOTcyIEw0MC4zNjYsMzEuOTcyIEw0MC4zNjYsMzQuMDU0IFogTTQwLjg0NiwzNC4wNTQgTDQwLjg0NiwzMS4yNDYgTDQwLjQzOCwzMS4yNDYgTDM4LjUsMzQuMDEyIEwzOC41LDM0LjUwNCBMNDAuMzY2LDM0LjUwNCBMNDAuMzY2LDM1LjUgTDQwLjg0NiwzNS41IEw0MC44NDYsMzQuNTA0IEw0MS40MjIsMzQuNTA0IEw0MS40MjIsMzQuMDU0IEw0MC44NDYsMzQuMDU0IFonIGlkPSc0Jz48L3BhdGg+XG5cdCAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9J00zMy42NTIsMzguNzY4IEwzMy42NTIsMzguMzE4IEwzMS41NTIsMzguMzE4IEwzMS4xNTYsNDAuNTI2IEwzMS41OTQsNDAuNTUgQzMxLjY5NDAwMDUsNDAuNDI5OTk5NCAzMS44MDg5OTkzLDQwLjMzMzAwMDQgMzEuOTM5LDQwLjI1OSBDMzIuMDY5MDAwNiw0MC4xODQ5OTk2IDMyLjIxNzk5OTIsNDAuMTQ4IDMyLjM4Niw0MC4xNDggQzMyLjUzMDAwMDcsNDAuMTQ4IDMyLjY2MDk5OTQsNDAuMTcxOTk5OCAzMi43NzksNDAuMjIgQzMyLjg5NzAwMDYsNDAuMjY4MDAwMiAzMi45OTc5OTk2LDQwLjMzNDk5OTYgMzMuMDgyLDQwLjQyMSBDMzMuMTY2MDAwNCw0MC41MDcwMDA0IDMzLjIzMDk5OTgsNDAuNjA4OTk5NCAzMy4yNzcsNDAuNzI3IEMzMy4zMjMwMDAyLDQwLjg0NTAwMDYgMzMuMzQ2LDQwLjk3Mzk5OTMgMzMuMzQ2LDQxLjExNCBDMzMuMzQ2LDQxLjI4MjAwMDggMzMuMzIyMDAwMiw0MS40Mjg5OTk0IDMzLjI3NCw0MS41NTUgQzMzLjIyNTk5OTgsNDEuNjgxMDAwNiAzMy4xNjEwMDA0LDQxLjc4NTk5OTYgMzMuMDc5LDQxLjg3IEMzMi45OTY5OTk2LDQxLjk1NDAwMDQgMzIuOTAxMDAwNSw0Mi4wMTY5OTk4IDMyLjc5MSw0Mi4wNTkgQzMyLjY4MDk5OTQsNDIuMTAxMDAwMiAzMi41NjYwMDA2LDQyLjEyMiAzMi40NDYsNDIuMTIyIEMzMi4zMTc5OTk0LDQyLjEyMiAzMi4yMDEwMDA1LDQyLjEwMzAwMDIgMzIuMDk1LDQyLjA2NSBDMzEuOTg4OTk5NSw0Mi4wMjY5OTk4IDMxLjg5NzAwMDQsNDEuOTczMDAwNCAzMS44MTksNDEuOTAzIEMzMS43NDA5OTk2LDQxLjgzMjk5OTcgMzEuNjc5MDAwMiw0MS43NTEwMDA1IDMxLjYzMyw0MS42NTcgQzMxLjU4Njk5OTgsNDEuNTYyOTk5NSAzMS41Niw0MS40NjIwMDA1IDMxLjU1Miw0MS4zNTQgTDMxLjA0Miw0MS4zNTQgQzMxLjA0Niw0MS41NDYwMDEgMzEuMDgzOTk5Niw0MS43MTc5OTkyIDMxLjE1Niw0MS44NyBDMzEuMjI4MDAwNCw0Mi4wMjIwMDA4IDMxLjMyNTk5OTQsNDIuMTQ4OTk5NSAzMS40NSw0Mi4yNTEgQzMxLjU3NDAwMDYsNDIuMzUzMDAwNSAzMS43MTY5OTkyLDQyLjQzMDk5OTcgMzEuODc5LDQyLjQ4NSBDMzIuMDQxMDAwOCw0Mi41MzkwMDAzIDMyLjIxMzk5OTEsNDIuNTY2IDMyLjM5OCw0Mi41NjYgQzMyLjY0NjAwMTIsNDIuNTY2IDMyLjg2Mjk5OTEsNDIuNTI3MDAwNCAzMy4wNDksNDIuNDQ5IEMzMy4yMzUwMDA5LDQyLjM3MDk5OTYgMzMuMzg5OTk5NCw0Mi4yNjYwMDA3IDMzLjUxNCw0Mi4xMzQgQzMzLjYzODAwMDYsNDIuMDAxOTk5MyAzMy43MzA5OTk3LDQxLjg1MTAwMDkgMzMuNzkzLDQxLjY4MSBDMzMuODU1MDAwMyw0MS41MTA5OTkyIDMzLjg4Niw0MS4zMzYwMDA5IDMzLjg4Niw0MS4xNTYgQzMzLjg4Niw0MC45MTE5OTg4IDMzLjg1MDAwMDQsNDAuNjk5MDAwOSAzMy43NzgsNDAuNTE3IEMzMy43MDU5OTk2LDQwLjMzNDk5OTEgMzMuNjA4MDAwNiw0MC4xODMwMDA2IDMzLjQ4NCw0MC4wNjEgQzMzLjM1OTk5OTQsMzkuOTM4OTk5NCAzMy4yMTQwMDA4LDM5Ljg0ODAwMDMgMzMuMDQ2LDM5Ljc4OCBDMzIuODc3OTk5MiwzOS43Mjc5OTk3IDMyLjcwMDAwMDksMzkuNjk4IDMyLjUxMiwzOS42OTggQzMyLjM2Nzk5OTMsMzkuNjk4IDMyLjIyMzAwMDcsMzkuNzIyOTk5OCAzMi4wNzcsMzkuNzczIEMzMS45MzA5OTkzLDM5LjgyMzAwMDMgMzEuODEyMDAwNSwzOS44OTk5OTk1IDMxLjcyLDQwLjAwNCBMMzEuNzA4LDM5Ljk5MiBMMzEuOTM2LDM4Ljc2OCBMMzMuNjUyLDM4Ljc2OCBaJyBpZD0nNSc+PC9wYXRoPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSdNMjIuODE2LDQyLjMzMiBMMjMuMzI2LDQyLjMzMiBDMjMuMjkzOTk5OCw0MS45Nzk5OTgyIDIzLjE3NDAwMSw0MS43MTEwMDA5IDIyLjk2Niw0MS41MjUgQzIyLjc1Nzk5OSw0MS4zMzg5OTkxIDIyLjQ3ODAwMTgsNDEuMjQ2IDIyLjEyNiw0MS4yNDYgQzIxLjgyMTk5ODUsNDEuMjQ2IDIxLjU3MDAwMSw0MS4zMDk5OTk0IDIxLjM3LDQxLjQzOCBDMjEuMTY5OTk5LDQxLjU2NjAwMDYgMjEuMDEwMDAwNiw0MS43MzU5OTg5IDIwLjg5LDQxLjk0OCBDMjAuNzY5OTk5NCw0Mi4xNjAwMDExIDIwLjY4NTAwMDIsNDIuNDAyOTk4NiAyMC42MzUsNDIuNjc3IEMyMC41ODQ5OTk3LDQyLjk1MTAwMTQgMjAuNTYsNDMuMjMzOTk4NSAyMC41Niw0My41MjYgQzIwLjU2LDQzLjc1MDAwMTEgMjAuNTc2OTk5OCw0My45ODE5OTg4IDIwLjYxMSw0NC4yMjIgQzIwLjY0NTAwMDIsNDQuNDYyMDAxMiAyMC43MTM5OTk1LDQ0LjY4MTk5OSAyMC44MTgsNDQuODgyIEMyMC45MjIwMDA1LDQ1LjA4MjAwMSAyMS4wNjk5OTksNDUuMjQ1OTk5NCAyMS4yNjIsNDUuMzc0IEMyMS40NTQwMDEsNDUuNTAyMDAwNiAyMS43MDc5OTg0LDQ1LjU2NiAyMi4wMjQsNDUuNTY2IEMyMi4yOTIwMDEzLDQ1LjU2NiAyMi41MTY5OTkxLDQ1LjUyMTAwMDUgMjIuNjk5LDQ1LjQzMSBDMjIuODgxMDAwOSw0NS4zNDA5OTk2IDIzLjAyNjk5OTQsNDUuMjI3MDAwNyAyMy4xMzcsNDUuMDg5IEMyMy4yNDcwMDA1LDQ0Ljk1MDk5OTMgMjMuMzI1OTk5OCw0NC43OTgwMDA4IDIzLjM3NCw0NC42MyBDMjMuNDIyMDAwMiw0NC40NjE5OTkyIDIzLjQ0Niw0NC4zMDAwMDA4IDIzLjQ0Niw0NC4xNDQgQzIzLjQ0Niw0My45NDc5OTkgMjMuNDE2MDAwMyw0My43NjYwMDA4IDIzLjM1Niw0My41OTggQzIzLjI5NTk5OTcsNDMuNDI5OTk5MiAyMy4yMTEwMDA1LDQzLjI4NDAwMDYgMjMuMTAxLDQzLjE2IEMyMi45OTA5OTk0LDQzLjAzNTk5OTQgMjIuODU1MDAwOCw0Mi45MzkwMDA0IDIyLjY5Myw0Mi44NjkgQzIyLjUzMDk5OTIsNDIuNzk4OTk5NyAyMi4zNDgwMDEsNDIuNzY0IDIyLjE0NCw0Mi43NjQgQzIxLjkxMTk5ODgsNDIuNzY0IDIxLjcwNzAwMDksNDIuODA3OTk5NiAyMS41MjksNDIuODk2IEMyMS4zNTA5OTkxLDQyLjk4NDAwMDQgMjEuMjAyMDAwNiw0My4xMjU5OTkgMjEuMDgyLDQzLjMyMiBMMjEuMDcsNDMuMzEgQzIxLjA3NCw0My4xNDU5OTkyIDIxLjA4OTk5OTksNDIuOTcwMDAwOSAyMS4xMTgsNDIuNzgyIEMyMS4xNDYwMDAxLDQyLjU5Mzk5OTEgMjEuMTk2OTk5Niw0Mi40MTkwMDA4IDIxLjI3MSw0Mi4yNTcgQzIxLjM0NTAwMDQsNDIuMDk0OTk5MiAyMS40NDc5OTkzLDQxLjk2MTAwMDUgMjEuNTgsNDEuODU1IEMyMS43MTIwMDA3LDQxLjc0ODk5OTUgMjEuODg1OTk4OSw0MS42OTYgMjIuMTAyLDQxLjY5NiBDMjIuMzA2MDAxLDQxLjY5NiAyMi40Njk5OTk0LDQxLjc1Mzk5OTQgMjIuNTk0LDQxLjg3IEMyMi43MTgwMDA2LDQxLjk4NjAwMDYgMjIuNzkxOTk5OSw0Mi4xMzk5OTkgMjIuODE2LDQyLjMzMiBMMjIuODE2LDQyLjMzMiBaIE0yMi4wNDgsNDMuMjE0IEMyMi4xOTIwMDA3LDQzLjIxNCAyMi4zMTc5OTk1LDQzLjIzOTk5OTcgMjIuNDI2LDQzLjI5MiBDMjIuNTM0MDAwNSw0My4zNDQwMDAzIDIyLjYyMzk5OTYsNDMuNDEyOTk5NiAyMi42OTYsNDMuNDk5IEMyMi43NjgwMDA0LDQzLjU4NTAwMDQgMjIuODIwOTk5OCw0My42ODY5OTk0IDIyLjg1NSw0My44MDUgQzIyLjg4OTAwMDIsNDMuOTIzMDAwNiAyMi45MDYsNDQuMDQ3OTk5MyAyMi45MDYsNDQuMTggQzIyLjkwNiw0NC4zMDQwMDA2IDIyLjg4NzAwMDIsNDQuNDIyOTk5NCAyMi44NDksNDQuNTM3IEMyMi44MTA5OTk4LDQ0LjY1MTAwMDYgMjIuNzU2MDAwNCw0NC43NTE5OTk2IDIyLjY4NCw0NC44NCBDMjIuNjExOTk5Niw0NC45MjgwMDA0IDIyLjUyMzAwMDUsNDQuOTk2OTk5OCAyMi40MTcsNDUuMDQ3IEMyMi4zMTA5OTk1LDQ1LjA5NzAwMDMgMjIuMTg4MDAwNyw0NS4xMjIgMjIuMDQ4LDQ1LjEyMiBDMjEuOTA3OTk5Myw0NS4xMjIgMjEuNzgzMDAwNSw0NS4wOTcwMDAzIDIxLjY3Myw0NS4wNDcgQzIxLjU2Mjk5OTQsNDQuOTk2OTk5OCAyMS40NzEwMDA0LDQ0LjkzMDAwMDQgMjEuMzk3LDQ0Ljg0NiBDMjEuMzIyOTk5Niw0NC43NjE5OTk2IDIxLjI2NjAwMDIsNDQuNjYyMDAwNiAyMS4yMjYsNDQuNTQ2IEMyMS4xODU5OTk4LDQ0LjQyOTk5OTQgMjEuMTY2LDQ0LjMwNjAwMDcgMjEuMTY2LDQ0LjE3NCBDMjEuMTY2LDQ0LjA0MTk5OTMgMjEuMTg0OTk5OCw0My45MTcwMDA2IDIxLjIyMyw0My43OTkgQzIxLjI2MTAwMDIsNDMuNjgwOTk5NCAyMS4zMTc5OTk2LDQzLjU3OTAwMDQgMjEuMzk0LDQzLjQ5MyBDMjEuNDcwMDAwNCw0My40MDY5OTk2IDIxLjU2MTk5OTUsNDMuMzM5MDAwMyAyMS42Nyw0My4yODkgQzIxLjc3ODAwMDUsNDMuMjM4OTk5OCAyMS45MDM5OTkzLDQzLjIxNCAyMi4wNDgsNDMuMjE0IEwyMi4wNDgsNDMuMjE0IFonIGlkPSc2Jz48L3BhdGg+XG5cdCAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9J00xMi44ODYsMzguNzU2IEwxMi44ODYsMzguMzE4IEwxMC4xMzIsMzguMzE4IEwxMC4xMzIsMzguNzk4IEwxMi4zNjQsMzguNzk4IEMxMi4xMzk5OTg5LDM5LjAzNDAwMTIgMTEuOTMxMDAxLDM5LjI5MTk5ODYgMTEuNzM3LDM5LjU3MiBDMTEuNTQyOTk5LDM5Ljg1MjAwMTQgMTEuMzcyMDAwNyw0MC4xNDg5OTg0IDExLjIyNCw0MC40NjMgQzExLjA3NTk5OTMsNDAuNzc3MDAxNiAxMC45NTUwMDA1LDQxLjEwNDk5ODMgMTAuODYxLDQxLjQ0NyBDMTAuNzY2OTk5NSw0MS43ODkwMDE3IDEwLjcwODAwMDEsNDIuMTM5OTk4MiAxMC42ODQsNDIuNSBMMTEuMjU0LDQyLjUgQzExLjI3NDAwMDEsNDIuMTY3OTk4MyAxMS4zMjk5OTk1LDQxLjgyNjAwMTggMTEuNDIyLDQxLjQ3NCBDMTEuNTE0MDAwNSw0MS4xMjE5OTgyIDExLjYzMjk5OTMsNDAuNzgwMDAxNyAxMS43NzksNDAuNDQ4IEMxMS45MjUwMDA3LDQwLjExNTk5ODMgMTIuMDkxOTk5MSwzOS44MDQwMDE1IDEyLjI4LDM5LjUxMiBDMTIuNDY4MDAwOSwzOS4yMTk5OTg1IDEyLjY2OTk5ODksMzguOTY4MDAxMSAxMi44ODYsMzguNzU2IEwxMi44ODYsMzguNzU2IFonIGlkPSc3Jz48L3BhdGg+XG5cdCAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9J00zLjI2MiwzMi4zNSBDMy4yNjIsMzIuMjQxOTk5NSAzLjI4MTk5OTgsMzIuMTQ4MDAwNCAzLjMyMiwzMi4wNjggQzMuMzYyMDAwMiwzMS45ODc5OTk2IDMuNDE0OTk5NjcsMzEuOTIwMDAwMyAzLjQ4MSwzMS44NjQgQzMuNTQ3MDAwMzMsMzEuODA3OTk5NyAzLjYyNTk5OTU0LDMxLjc2NjAwMDEgMy43MTgsMzEuNzM4IEMzLjgxMDAwMDQ2LDMxLjcwOTk5OTkgMy45MDU5OTk1LDMxLjY5NiA0LjAwNiwzMS42OTYgQzQuMjE0MDAxMDQsMzEuNjk2IDQuMzg0OTk5MzMsMzEuNzUwOTk5NSA0LjUxOSwzMS44NjEgQzQuNjUzMDAwNjcsMzEuOTcxMDAwNiA0LjcyLDMyLjEzMzk5ODkgNC43MiwzMi4zNSBDNC43MiwzMi41NjYwMDExIDQuNjU0MDAwNjYsMzIuNzMzOTk5NCA0LjUyMiwzMi44NTQgQzQuMzg5OTk5MzQsMzIuOTc0MDAwNiA0LjIyMjAwMTAyLDMzLjAzNCA0LjAxOCwzMy4wMzQgQzMuOTEzOTk5NDgsMzMuMDM0IDMuODE2MDAwNDYsMzMuMDIwMDAwMSAzLjcyNCwzMi45OTIgQzMuNjMxOTk5NTQsMzIuOTYzOTk5OSAzLjU1MjAwMDM0LDMyLjkyMjAwMDMgMy40ODQsMzIuODY2IEMzLjQxNTk5OTY2LDMyLjgwOTk5OTcgMy4zNjIwMDAyLDMyLjczOTAwMDQgMy4zMjIsMzIuNjUzIEMzLjI4MTk5OTgsMzIuNTY2OTk5NiAzLjI2MiwzMi40NjYwMDA2IDMuMjYyLDMyLjM1IEwzLjI2MiwzMi4zNSBaIE0yLjcyMiwzMi4zMzIgQzIuNzIyLDMyLjUyNDAwMSAyLjc3NTk5OTQ2LDMyLjcwMDk5OTIgMi44ODQsMzIuODYzIEMyLjk5MjAwMDU0LDMzLjAyNTAwMDggMy4xMzU5OTkxLDMzLjE0MTk5OTYgMy4zMTYsMzMuMjE0IEMzLjA3NTk5ODgsMzMuMjk4MDAwNCAyLjg5MjAwMDY0LDMzLjQzMjk5OTEgMi43NjQsMzMuNjE5IEMyLjYzNTk5OTM2LDMzLjgwNTAwMDkgMi41NzIsMzQuMDIzOTk4NyAyLjU3MiwzNC4yNzYgQzIuNTcyLDM0LjQ5MjAwMTEgMi42MDg5OTk2MywzNC42ODA5OTkyIDIuNjgzLDM0Ljg0MyBDMi43NTcwMDAzNywzNS4wMDUwMDA4IDIuODU4OTk5MzUsMzUuMTM5OTk5NSAyLjk4OSwzNS4yNDggQzMuMTE5MDAwNjUsMzUuMzU2MDAwNSAzLjI3MTk5OTEyLDM1LjQzNTk5OTcgMy40NDgsMzUuNDg4IEMzLjYyNDAwMDg4LDM1LjU0MDAwMDMgMy44MTM5OTg5OCwzNS41NjYgNC4wMTgsMzUuNTY2IEM0LjIxNDAwMDk4LDM1LjU2NiA0LjM5Nzk5OTE0LDM1LjUzODAwMDMgNC41NywzNS40ODIgQzQuNzQyMDAwODYsMzUuNDI1OTk5NyA0Ljg5MDk5OTM3LDM1LjM0MzAwMDYgNS4wMTcsMzUuMjMzIEM1LjE0MzAwMDYzLDM1LjEyMjk5OTUgNS4yNDI5OTk2MywzNC45ODgwMDA4IDUuMzE3LDM0LjgyOCBDNS4zOTEwMDAzNywzNC42Njc5OTkyIDUuNDI4LDM0LjQ4NDAwMSA1LjQyOCwzNC4yNzYgQzUuNDI4LDM0LjAxMTk5ODcgNS4zNjYwMDA2MiwzMy43ODkwMDA5IDUuMjQyLDMzLjYwNyBDNS4xMTc5OTkzOCwzMy40MjQ5OTkxIDQuOTI4MDAxMjgsMzMuMjk0MDAwNCA0LjY3MiwzMy4yMTQgQzQuODUyMDAwOSwzMy4xMzM5OTk2IDQuOTk0OTk5NDcsMzMuMDE1MDAwOCA1LjEwMSwzMi44NTcgQzUuMjA3MDAwNTMsMzIuNjk4OTk5MiA1LjI2LDMyLjUyNDAwMSA1LjI2LDMyLjMzMiBDNS4yNiwzMi4xOTU5OTkzIDUuMjM2MDAwMjQsMzIuMDYzMDAwNyA1LjE4OCwzMS45MzMgQzUuMTM5OTk5NzYsMzEuODAyOTk5NCA1LjA2NTAwMDUxLDMxLjY4NzAwMDUgNC45NjMsMzEuNTg1IEM0Ljg2MDk5OTQ5LDMxLjQ4Mjk5OTUgNC43MjgwMDA4MiwzMS40MDEwMDAzIDQuNTY0LDMxLjMzOSBDNC4zOTk5OTkxOCwzMS4yNzY5OTk3IDQuMjAyMDAxMTYsMzEuMjQ2IDMuOTcsMzEuMjQ2IEMzLjgwNTk5OTE4LDMxLjI0NiAzLjY0OTAwMDc1LDMxLjI2OTk5OTggMy40OTksMzEuMzE4IEMzLjM0ODk5OTI1LDMxLjM2NjAwMDIgMy4yMTYwMDA1OCwzMS40MzU5OTk1IDMuMSwzMS41MjggQzIuOTgzOTk5NDIsMzEuNjIwMDAwNSAyLjg5MjAwMDM0LDMxLjczMjk5OTMgMi44MjQsMzEuODY3IEMyLjc1NTk5OTY2LDMyLjAwMTAwMDcgMi43MjIsMzIuMTU1OTk5MSAyLjcyMiwzMi4zMzIgTDIuNzIyLDMyLjMzMiBaIE0zLjExMiwzNC4zIEMzLjExMiwzNC4xNzU5OTk0IDMuMTM0OTk5NzcsMzQuMDY0MDAwNSAzLjE4MSwzMy45NjQgQzMuMjI3MDAwMjMsMzMuODYzOTk5NSAzLjI5MDk5OTU5LDMzLjc3ODAwMDQgMy4zNzMsMzMuNzA2IEMzLjQ1NTAwMDQxLDMzLjYzMzk5OTYgMy41NTA5OTk0NSwzMy41NzkwMDAyIDMuNjYxLDMzLjU0MSBDMy43NzEwMDA1NSwzMy41MDI5OTk4IDMuODg3OTk5MzgsMzMuNDg0IDQuMDEyLDMzLjQ4NCBDNC4xMzIwMDA2LDMzLjQ4NCA0LjI0NDk5OTQ3LDMzLjUwNDk5OTggNC4zNTEsMzMuNTQ3IEM0LjQ1NzAwMDUzLDMzLjU4OTAwMDIgNC41NDk5OTk2LDMzLjY0NTk5OTYgNC42MywzMy43MTggQzQuNzEwMDAwNCwzMy43OTAwMDA0IDQuNzcyOTk5NzcsMzMuODc0OTk5NSA0LjgxOSwzMy45NzMgQzQuODY1MDAwMjMsMzQuMDcxMDAwNSA0Ljg4OCwzNC4xNzc5OTk0IDQuODg4LDM0LjI5NCBDNC44ODgsMzQuNDE0MDAwNiA0Ljg2NzAwMDIxLDM0LjUyMzk5OTUgNC44MjUsMzQuNjI0IEM0Ljc4Mjk5OTc5LDM0LjcyNDAwMDUgNC43MjMwMDAzOSwzNC44MTA5OTk2IDQuNjQ1LDM0Ljg4NSBDNC41NjY5OTk2MSwzNC45NTkwMDA0IDQuNDc1MDAwNTMsMzUuMDE2OTk5OCA0LjM2OSwzNS4wNTkgQzQuMjYyOTk5NDcsMzUuMTAxMDAwMiA0LjE0NjAwMDY0LDM1LjEyMiA0LjAxOCwzNS4xMjIgQzMuNzUzOTk4NjgsMzUuMTIyIDMuNTM3MDAwODUsMzUuMDQ5MDAwNyAzLjM2NywzNC45MDMgQzMuMTk2OTk5MTUsMzQuNzU2OTk5MyAzLjExMiwzNC41NTYwMDEzIDMuMTEyLDM0LjMgTDMuMTEyLDM0LjMgWicgaWQ9JzgnPjwvcGF0aD5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0nTTEuMTM2LDIzLjk3NCBMMC42MjYsMjMuOTc0IEMwLjY1ODAwMDE2LDI0LjM0MjAwMTggMC43OTE5OTg4MiwyNC42MTU5OTkxIDEuMDI4LDI0Ljc5NiBDMS4yNjQwMDExOCwyNC45NzYwMDA5IDEuNTU5OTk4MjIsMjUuMDY2IDEuOTE2LDI1LjA2NiBDMi40MzIwMDI1OCwyNS4wNjYgMi44MDY5OTg4MywyNC44NjkwMDIgMy4wNDEsMjQuNDc1IEMzLjI3NTAwMTE3LDI0LjA4MDk5OCAzLjM5MiwyMy41MTYwMDM3IDMuMzkyLDIyLjc4IEMzLjM5MiwyMi4zNzU5OTggMy4zNTMwMDAzOSwyMi4wNDMwMDEzIDMuMjc1LDIxLjc4MSBDMy4xOTY5OTk2MSwyMS41MTg5OTg3IDMuMDkyMDAwNjYsMjEuMzEyMDAwOCAyLjk2LDIxLjE2IEMyLjgyNzk5OTM0LDIxLjAwNzk5OTIgMi42NzQwMDA4OCwyMC45MDEwMDAzIDIuNDk4LDIwLjgzOSBDMi4zMjE5OTkxMiwyMC43NzY5OTk3IDIuMTM0MDAxLDIwLjc0NiAxLjkzNCwyMC43NDYgQzEuNzI5OTk4OTgsMjAuNzQ2IDEuNTQyMDAwODYsMjAuNzc5OTk5NyAxLjM3LDIwLjg0OCBDMS4xOTc5OTkxNCwyMC45MTYwMDAzIDEuMDUwMDAwNjIsMjEuMDEwOTk5NCAwLjkyNiwyMS4xMzMgQzAuODAxOTk5MzgsMjEuMjU1MDAwNiAwLjcwNjAwMDM0LDIxLjQwMDk5OTIgMC42MzgsMjEuNTcxIEMwLjU2OTk5OTY2LDIxLjc0MTAwMDkgMC41MzYsMjEuOTI3OTk5IDAuNTM2LDIyLjEzMiBDMC41MzYsMjIuMzQwMDAxIDAuNTY0OTk5NzEsMjIuNTMxOTk5MSAwLjYyMywyMi43MDggQzAuNjgxMDAwMjksMjIuODg0MDAwOSAwLjc2Njk5OTQzLDIzLjAzMzk5OTQgMC44ODEsMjMuMTU4IEMwLjk5NTAwMDU3LDIzLjI4MjAwMDYgMS4xMzU5OTkxNiwyMy4zNzg5OTk3IDEuMzA0LDIzLjQ0OSBDMS40NzIwMDA4NCwyMy41MTkwMDA0IDEuNjYzOTk4OTIsMjMuNTU0IDEuODgsMjMuNTU0IEMyLjA4ODAwMTA0LDIzLjU1NCAyLjI3OTk5OTEyLDIzLjUwMTAwMDUgMi40NTYsMjMuMzk1IEMyLjYzMjAwMDg4LDIzLjI4ODk5OTUgMi43Njc5OTk1MiwyMy4xNDYwMDA5IDIuODY0LDIyLjk2NiBMMi44NzYsMjIuOTc4IEMyLjg1OTk5OTkyLDIzLjUzNDAwMjggMi43NzQwMDA3OCwyMy45NDY5OTg3IDIuNjE4LDI0LjIxNyBDMi40NjE5OTkyMiwyNC40ODcwMDE0IDIuMjI4MDAxNTYsMjQuNjIyIDEuOTE2LDI0LjYyMiBDMS43MTE5OTg5OCwyNC42MjIgMS41MzYwMDA3NCwyNC41NjYwMDA2IDEuMzg4LDI0LjQ1NCBDMS4yMzk5OTkyNiwyNC4zNDE5OTk0IDEuMTU2MDAwMSwyNC4xODIwMDEgMS4xMzYsMjMuOTc0IEwxLjEzNiwyMy45NzQgWiBNMi43ODYsMjIuMTY4IEMyLjc4NiwyMi4yOTIwMDA2IDIuNzY2MDAwMiwyMi40MTA5OTk0IDIuNzI2LDIyLjUyNSBDMi42ODU5OTk4LDIyLjYzOTAwMDYgMi42MjgwMDAzOCwyMi43Mzg5OTk2IDIuNTUyLDIyLjgyNSBDMi40NzU5OTk2MiwyMi45MTEwMDA0IDIuMzg0MDAwNTQsMjIuOTc4OTk5OCAyLjI3NiwyMy4wMjkgQzIuMTY3OTk5NDYsMjMuMDc5MDAwMyAyLjA0ODAwMDY2LDIzLjEwNCAxLjkxNiwyMy4xMDQgQzEuNzkxOTk5MzgsMjMuMTA0IDEuNjc5MDAwNTEsMjMuMDc5MDAwMyAxLjU3NywyMy4wMjkgQzEuNDc0OTk5NDksMjIuOTc4OTk5OCAxLjM4NzAwMDM3LDIyLjkxMjAwMDQgMS4zMTMsMjIuODI4IEMxLjIzODk5OTYzLDIyLjc0Mzk5OTYgMS4xODEwMDAyMSwyMi42NDgwMDA1IDEuMTM5LDIyLjU0IEMxLjA5Njk5OTc5LDIyLjQzMTk5OTUgMS4wNzYsMjIuMzIwMDAwNiAxLjA3NiwyMi4yMDQgQzEuMDc2LDIyLjA3MTk5OTMgMS4wOTA5OTk4NSwyMS45NDYwMDA2IDEuMTIxLDIxLjgyNiBDMS4xNTEwMDAxNSwyMS43MDU5OTk0IDEuMTk4OTk5NjcsMjEuNTk5MDAwNSAxLjI2NSwyMS41MDUgQzEuMzMxMDAwMzMsMjEuNDEwOTk5NSAxLjQxNjk5OTQ3LDIxLjMzNjAwMDMgMS41MjMsMjEuMjggQzEuNjI5MDAwNTMsMjEuMjIzOTk5NyAxLjc1Nzk5OTI0LDIxLjE5NiAxLjkxLDIxLjE5NiBDMi4wNTQwMDA3MiwyMS4xOTYgMi4xNzk5OTk0NiwyMS4yMjE5OTk3IDIuMjg4LDIxLjI3NCBDMi4zOTYwMDA1NCwyMS4zMjYwMDAzIDIuNDg2OTk5NjMsMjEuMzk2OTk5NiAyLjU2MSwyMS40ODcgQzIuNjM1MDAwMzcsMjEuNTc3MDAwNSAyLjY5MDk5OTgxLDIxLjY3OTk5OTQgMi43MjksMjEuNzk2IEMyLjc2NzAwMDE5LDIxLjkxMjAwMDYgMi43ODYsMjIuMDM1OTk5MyAyLjc4NiwyMi4xNjggTDIuNzg2LDIyLjE2OCBaJyBpZD0nOSc+PC9wYXRoPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSdNMi44LDE1LjUgTDIuOCwxMS4yNDYgTDIuNDEsMTEuMjQ2IEMyLjM4MTk5OTg2LDExLjQwNjAwMDggMi4zMzAwMDAzOCwxMS41Mzc5OTk1IDIuMjU0LDExLjY0MiBDMi4xNzc5OTk2MiwxMS43NDYwMDA1IDIuMDg1MDAwNTUsMTEuODI3OTk5NyAxLjk3NSwxMS44ODggQzEuODY0OTk5NDUsMTEuOTQ4MDAwMyAxLjc0MjAwMDY4LDExLjk4ODk5OTkgMS42MDYsMTIuMDExIEMxLjQ2OTk5OTMyLDEyLjAzMzAwMDEgMS4zMzAwMDA3MiwxMi4wNDQgMS4xODYsMTIuMDQ0IEwxLjE4NiwxMi40NTIgTDIuMjksMTIuNDUyIEwyLjI5LDE1LjUgTDIuOCwxNS41IFogTTQuNzkyLDEzLjQwNiBDNC43OTIsMTMuMzAxOTk5NSA0Ljc5Mjk5OTk5LDEzLjE4NzAwMDYgNC43OTUsMTMuMDYxIEM0Ljc5NzAwMDAxLDEyLjkzNDk5OTQgNC44MDY5OTk5MSwxMi44MDkwMDA2IDQuODI1LDEyLjY4MyBDNC44NDMwMDAwOSwxMi41NTY5OTk0IDQuODY4OTk5ODMsMTIuNDM0MDAwNiA0LjkwMywxMi4zMTQgQzQuOTM3MDAwMTcsMTIuMTkzOTk5NCA0Ljk4Njk5OTY3LDEyLjA4OTAwMDUgNS4wNTMsMTEuOTk5IEM1LjExOTAwMDMzLDExLjkwODk5OTYgNS4yMDE5OTk1LDExLjgzNjAwMDMgNS4zMDIsMTEuNzggQzUuNDAyMDAwNSwxMS43MjM5OTk3IDUuNTIzOTk5MjgsMTEuNjk2IDUuNjY4LDExLjY5NiBDNS44MTIwMDA3MiwxMS42OTYgNS45MzM5OTk1LDExLjcyMzk5OTcgNi4wMzQsMTEuNzggQzYuMTM0MDAwNSwxMS44MzYwMDAzIDYuMjE2OTk5NjcsMTEuOTA4OTk5NiA2LjI4MywxMS45OTkgQzYuMzQ5MDAwMzMsMTIuMDg5MDAwNSA2LjM5ODk5OTgzLDEyLjE5Mzk5OTQgNi40MzMsMTIuMzE0IEM2LjQ2NzAwMDE3LDEyLjQzNDAwMDYgNi40OTI5OTk5MSwxMi41NTY5OTk0IDYuNTExLDEyLjY4MyBDNi41MjkwMDAwOSwxMi44MDkwMDA2IDYuNTM4OTk5OTksMTIuOTM0OTk5NCA2LjU0MSwxMy4wNjEgQzYuNTQzMDAwMDEsMTMuMTg3MDAwNiA2LjU0NCwxMy4zMDE5OTk1IDYuNTQ0LDEzLjQwNiBDNi41NDQsMTMuNTY2MDAwOCA2LjUzOTAwMDA1LDEzLjc0NDk5OSA2LjUyOSwxMy45NDMgQzYuNTE4OTk5OTUsMTQuMTQxMDAxIDYuNDg3MDAwMjcsMTQuMzI2OTk5MSA2LjQzMywxNC41MDEgQzYuMzc4OTk5NzMsMTQuNjc1MDAwOSA2LjI5MjAwMDYsMTQuODIxOTk5NCA2LjE3MiwxNC45NDIgQzYuMDUxOTk5NCwxNS4wNjIwMDA2IDUuODg0MDAxMDgsMTUuMTIyIDUuNjY4LDE1LjEyMiBDNS40NTE5OTg5MiwxNS4xMjIgNS4yODQwMDA2LDE1LjA2MjAwMDYgNS4xNjQsMTQuOTQyIEM1LjA0Mzk5OTQsMTQuODIxOTk5NCA0Ljk1NzAwMDI3LDE0LjY3NTAwMDkgNC45MDMsMTQuNTAxIEM0Ljg0ODk5OTczLDE0LjMyNjk5OTEgNC44MTcwMDAwNSwxNC4xNDEwMDEgNC44MDcsMTMuOTQzIEM0Ljc5Njk5OTk1LDEzLjc0NDk5OSA0Ljc5MiwxMy41NjYwMDA4IDQuNzkyLDEzLjQwNiBMNC43OTIsMTMuNDA2IFogTTQuMjUyLDEzLjQxMiBDNC4yNTIsMTMuNTY4MDAwOCA0LjI1NTk5OTk2LDEzLjcyOTk5OTIgNC4yNjQsMTMuODk4IEM0LjI3MjAwMDA0LDE0LjA2NjAwMDggNC4yOTE5OTk4NCwxNC4yMjk5OTkyIDQuMzI0LDE0LjM5IEM0LjM1NjAwMDE2LDE0LjU1MDAwMDggNC40MDE5OTk3LDE0LjcwMDk5OTMgNC40NjIsMTQuODQzIEM0LjUyMjAwMDMsMTQuOTg1MDAwNyA0LjYwMzk5OTQ4LDE1LjEwOTk5OTUgNC43MDgsMTUuMjE4IEM0LjgxMjAwMDUyLDE1LjMyNjAwMDUgNC45NDI5OTkyMSwxNS40MTA5OTk3IDUuMTAxLDE1LjQ3MyBDNS4yNTkwMDA3OSwxNS41MzUwMDAzIDUuNDQ3OTk4OSwxNS41NjYgNS42NjgsMTUuNTY2IEM1Ljg5MjAwMTEyLDE1LjU2NiA2LjA4MTk5OTIyLDE1LjUzNTAwMDMgNi4yMzgsMTUuNDczIEM2LjM5NDAwMDc4LDE1LjQxMDk5OTcgNi41MjM5OTk0OCwxNS4zMjYwMDA1IDYuNjI4LDE1LjIxOCBDNi43MzIwMDA1MiwxNS4xMDk5OTk1IDYuODEzOTk5NywxNC45ODUwMDA3IDYuODc0LDE0Ljg0MyBDNi45MzQwMDAzLDE0LjcwMDk5OTMgNi45Nzk5OTk4NCwxNC41NTAwMDA4IDcuMDEyLDE0LjM5IEM3LjA0NDAwMDE2LDE0LjIyOTk5OTIgNy4wNjM5OTk5NiwxNC4wNjYwMDA4IDcuMDcyLDEzLjg5OCBDNy4wODAwMDAwNCwxMy43Mjk5OTkyIDcuMDg0LDEzLjU2ODAwMDggNy4wODQsMTMuNDEyIEM3LjA4NCwxMy4yNTU5OTkyIDcuMDgwMDAwMDQsMTMuMDk0MDAwOCA3LjA3MiwxMi45MjYgQzcuMDYzOTk5OTYsMTIuNzU3OTk5MiA3LjA0NDAwMDE2LDEyLjU5NDAwMDggNy4wMTIsMTIuNDM0IEM2Ljk3OTk5OTg0LDEyLjI3Mzk5OTIgNi45MzQwMDAzLDEyLjEyMjAwMDcgNi44NzQsMTEuOTc4IEM2LjgxMzk5OTcsMTEuODMzOTk5MyA2LjczMjAwMDUyLDExLjcwODAwMDUgNi42MjgsMTEuNiBDNi41MjM5OTk0OCwxMS40OTE5OTk1IDYuMzkzMDAwNzksMTEuNDA2MDAwMyA2LjIzNSwxMS4zNDIgQzYuMDc2OTk5MjEsMTEuMjc3OTk5NyA1Ljg4ODAwMTEsMTEuMjQ2IDUuNjY4LDExLjI0NiBDNS40NDc5OTg5LDExLjI0NiA1LjI1OTAwMDc5LDExLjI3Nzk5OTcgNS4xMDEsMTEuMzQyIEM0Ljk0Mjk5OTIxLDExLjQwNjAwMDMgNC44MTIwMDA1MiwxMS40OTE5OTk1IDQuNzA4LDExLjYgQzQuNjAzOTk5NDgsMTEuNzA4MDAwNSA0LjUyMjAwMDMsMTEuODMzOTk5MyA0LjQ2MiwxMS45NzggQzQuNDAxOTk5NywxMi4xMjIwMDA3IDQuMzU2MDAwMTYsMTIuMjczOTk5MiA0LjMyNCwxMi40MzQgQzQuMjkxOTk5ODQsMTIuNTk0MDAwOCA0LjI3MjAwMDA0LDEyLjc1Nzk5OTIgNC4yNjQsMTIuOTI2IEM0LjI1NTk5OTk2LDEzLjA5NDAwMDggNC4yNTIsMTMuMjU1OTk5MiA0LjI1MiwxMy40MTIgTDQuMjUyLDEzLjQxMiBaJyBpZD0nMTAnPjwvcGF0aD5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0nTTEwLjgsOCBMMTAuOCwzLjc0NiBMMTAuNDEsMy43NDYgQzEwLjM4MTk5OTksMy45MDYwMDA4IDEwLjMzMDAwMDQsNC4wMzc5OTk0OCAxMC4yNTQsNC4xNDIgQzEwLjE3Nzk5OTYsNC4yNDYwMDA1MiAxMC4wODUwMDA1LDQuMzI3OTk5NyA5Ljk3NSw0LjM4OCBDOS44NjQ5OTk0NSw0LjQ0ODAwMDMgOS43NDIwMDA2OCw0LjQ4ODk5OTg5IDkuNjA2LDQuNTExIEM5LjQ2OTk5OTMyLDQuNTMzMDAwMTEgOS4zMzAwMDA3Miw0LjU0NCA5LjE4Niw0LjU0NCBMOS4xODYsNC45NTIgTDEwLjI5LDQuOTUyIEwxMC4yOSw4IEwxMC44LDggWiBNMTQuMTM2LDggTDE0LjEzNiwzLjc0NiBMMTMuNzQ2LDMuNzQ2IEMxMy43MTc5OTk5LDMuOTA2MDAwOCAxMy42NjYwMDA0LDQuMDM3OTk5NDggMTMuNTksNC4xNDIgQzEzLjUxMzk5OTYsNC4yNDYwMDA1MiAxMy40MjEwMDA1LDQuMzI3OTk5NyAxMy4zMTEsNC4zODggQzEzLjIwMDk5OTQsNC40NDgwMDAzIDEzLjA3ODAwMDcsNC40ODg5OTk4OSAxMi45NDIsNC41MTEgQzEyLjgwNTk5OTMsNC41MzMwMDAxMSAxMi42NjYwMDA3LDQuNTQ0IDEyLjUyMiw0LjU0NCBMMTIuNTIyLDQuOTUyIEwxMy42MjYsNC45NTIgTDEzLjYyNiw4IEwxNC4xMzYsOCBaJyBpZD0nMTEnPjwvcGF0aD5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0nTTIwLjgsNSBMMjAuOCwwLjc0NiBMMjAuNDEsMC43NDYgQzIwLjM4MTk5OTksMC45MDYwMDA4IDIwLjMzMDAwMDQsMS4wMzc5OTk0OCAyMC4yNTQsMS4xNDIgQzIwLjE3Nzk5OTYsMS4yNDYwMDA1MiAyMC4wODUwMDA1LDEuMzI3OTk5NyAxOS45NzUsMS4zODggQzE5Ljg2NDk5OTQsMS40NDgwMDAzIDE5Ljc0MjAwMDcsMS40ODg5OTk4OSAxOS42MDYsMS41MTEgQzE5LjQ2OTk5OTMsMS41MzMwMDAxMSAxOS4zMzAwMDA3LDEuNTQ0IDE5LjE4NiwxLjU0NCBMMTkuMTg2LDEuOTUyIEwyMC4yOSwxLjk1MiBMMjAuMjksNSBMMjAuOCw1IFogTTIyLjI2NCwyLjI1MiBMMjIuNzc0LDIuMjUyIEMyMi43NywyLjEyMzk5OTM2IDIyLjc4Mjk5OTgsMS45OTcwMDA2MyAyMi44MTMsMS44NzEgQzIyLjg0MzAwMDEsMS43NDQ5OTkzNyAyMi44OTE5OTk3LDEuNjMyMDAwNSAyMi45NiwxLjUzMiBDMjMuMDI4MDAwMywxLjQzMTk5OTUgMjMuMTE0OTk5NSwxLjM1MTAwMDMxIDIzLjIyMSwxLjI4OSBDMjMuMzI3MDAwNSwxLjIyNjk5OTY5IDIzLjQ1Mzk5OTMsMS4xOTYgMjMuNjAyLDEuMTk2IEMyMy43MTQwMDA2LDEuMTk2IDIzLjgxOTk5OTUsMS4yMTM5OTk4MiAyMy45MiwxLjI1IEMyNC4wMjAwMDA1LDEuMjg2MDAwMTggMjQuMTA2OTk5NiwxLjMzNzk5OTY2IDI0LjE4MSwxLjQwNiBDMjQuMjU1MDAwNCwxLjQ3NDAwMDM0IDI0LjMxMzk5OTgsMS41NTQ5OTk1MyAyNC4zNTgsMS42NDkgQzI0LjQwMjAwMDIsMS43NDMwMDA0NyAyNC40MjQsMS44NDc5OTk0MiAyNC40MjQsMS45NjQgQzI0LjQyNCwyLjExMjAwMDc0IDI0LjQwMTAwMDIsMi4yNDE5OTk0NCAyNC4zNTUsMi4zNTQgQzI0LjMwODk5OTgsMi40NjYwMDA1NiAyNC4yNDEwMDA0LDIuNTY5OTk5NTIgMjQuMTUxLDIuNjY2IEMyNC4wNjA5OTk1LDIuNzYyMDAwNDggMjMuOTQ4MDAwNywyLjg1Njk5OTUzIDIzLjgxMiwyLjk1MSBDMjMuNjc1OTk5MywzLjA0NTAwMDQ3IDIzLjUxODAwMDksMy4xNDc5OTk0NCAyMy4zMzgsMy4yNiBDMjMuMTg5OTk5MywzLjM0ODAwMDQ0IDIzLjA0ODAwMDcsMy40NDE5OTk1IDIyLjkxMiwzLjU0MiBDMjIuNzc1OTk5MywzLjY0MjAwMDUgMjIuNjU0MDAwNSwzLjc1Nzk5OTM0IDIyLjU0NiwzLjg5IEMyMi40Mzc5OTk1LDQuMDIyMDAwNjYgMjIuMzQ5MDAwMyw0LjE3Njk5OTExIDIyLjI3OSw0LjM1NSBDMjIuMjA4OTk5Niw0LjUzMzAwMDg5IDIyLjE2NDAwMDEsNC43NDc5OTg3NCAyMi4xNDQsNSBMMjQuOTIyLDUgTDI0LjkyMiw0LjU1IEwyMi43MzgsNC41NSBDMjIuNzYyMDAwMSw0LjQxNzk5OTM0IDIyLjgxMjk5OTYsNC4zMDEwMDA1MSAyMi44OTEsNC4xOTkgQzIyLjk2OTAwMDQsNC4wOTY5OTk0OSAyMy4wNjI5OTk0LDQuMDAyMDAwNDQgMjMuMTczLDMuOTE0IEMyMy4yODMwMDA1LDMuODI1OTk5NTYgMjMuNDAzOTk5MywzLjc0MzAwMDM5IDIzLjUzNiwzLjY2NSBDMjMuNjY4MDAwNywzLjU4Njk5OTYxIDIzLjc5OTk5OTMsMy41MDgwMDA0IDIzLjkzMiwzLjQyOCBDMjQuMDY0MDAwNywzLjM0Mzk5OTU4IDI0LjE5MTk5OTQsMy4yNTYwMDA0NiAyNC4zMTYsMy4xNjQgQzI0LjQ0MDAwMDYsMy4wNzE5OTk1NCAyNC41NDk5OTk1LDIuOTY5MDAwNTcgMjQuNjQ2LDIuODU1IEMyNC43NDIwMDA1LDIuNzQwOTk5NDMgMjQuODE4OTk5NywyLjYxMjAwMDcyIDI0Ljg3NywyLjQ2OCBDMjQuOTM1MDAwMywyLjMyMzk5OTI4IDI0Ljk2NCwyLjE1ODAwMDk0IDI0Ljk2NCwxLjk3IEMyNC45NjQsMS43Njk5OTkgMjQuOTI5MDAwMywxLjU5NDAwMDc2IDI0Ljg1OSwxLjQ0MiBDMjQuNzg4OTk5NiwxLjI4OTk5OTI0IDI0LjY5NDAwMDYsMS4xNjMwMDA1MSAyNC41NzQsMS4wNjEgQzI0LjQ1Mzk5OTQsMC45NTg5OTk0OSAyNC4zMTMwMDA4LDAuODgxMDAwMjcgMjQuMTUxLDAuODI3IEMyMy45ODg5OTkyLDAuNzcyOTk5NzMgMjMuODE2MDAwOSwwLjc0NiAyMy42MzIsMC43NDYgQzIzLjQwNzk5ODksMC43NDYgMjMuMjA4MDAwOSwwLjc4Mzk5OTYyIDIzLjAzMiwwLjg2IEMyMi44NTU5OTkxLDAuOTM2MDAwMzggMjIuNzA5MDAwNiwxLjA0MDk5OTMzIDIyLjU5MSwxLjE3NSBDMjIuNDcyOTk5NCwxLjMwOTAwMDY3IDIyLjM4NjAwMDMsMS40Njc5OTkwOCAyMi4zMywxLjY1MiBDMjIuMjczOTk5NywxLjgzNjAwMDkyIDIyLjI1MTk5OTksMi4wMzU5OTg5MiAyMi4yNjQsMi4yNTIgTDIyLjI2NCwyLjI1MiBaJyBpZD0nMTInPjwvcGF0aD5cblx0ICAgICAgICAgICAgICAgICAgICA8L2c+XG5cdCAgICAgICAgICAgICAgICAgICAgPHBvbHlnb24gaWQ9J0hvdXInIGZpbGw9JyMyQTI5MjknIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDI1LjMxOTI5NywgMjMuNjExOTE3KSByb3RhdGUoLTM4LjAwMDAwMCkgdHJhbnNsYXRlKC0yNS4zMTkyOTcsIC0yMy42MTE5MTcpICcgcG9pbnRzPScyNC44MTkyOTcyIDE1LjYxMTkxNjggMjUuODE5Mjk3MiAxNS42MTE5MTY4IDI1LjgxOTI5NzIgMzEuNjExOTE2OCAyNC44MTkyOTcyIDMxLjYxMTkxNjgnPjwvcG9seWdvbj5cblx0ICAgICAgICAgICAgICAgICAgICA8cG9seWdvbiBpZD0nTWludXRlJyBmaWxsPScjMkEyOTI5JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgxOS4zMjk5NDksIDM1LjczMDAyOCkgcm90YXRlKDYyLjAwMDAwMCkgdHJhbnNsYXRlKC0xOS4zMjk5NDksIC0zNS43MzAwMjgpICcgcG9pbnRzPScxOS4wNDk0MzIxIDI0LjI5ODY5OTEgMTkuOTE4NDM2MyAyNC4yOTg2OTkxIDE5Ljc4NzQ0MDQgNDcuMjk4Njk5MSAxOC45MTg0MzYzIDQ3LjI5ODY5OTEnPjwvcG9seWdvbj5cblx0ICAgICAgICAgICAgICAgICAgICA8cG9seWdvbiBpZD0nU2Vjb25kJyBmaWxsPScjREQ0NTI0JyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgzOS42NDQ2MjEsIDMyLjEyOTQ4MCkgcm90YXRlKC03Ni4wMDAwMDApIHRyYW5zbGF0ZSgtMzkuNjQ0NjIxLCAtMzIuMTI5NDgwKSAnIHBvaW50cz0nMzguOTUyMzU2NSAxOC4yNDgyMzE1IDM5LjkyMjExMzggMTguMjQ4MjMxNSAzOS45NTIzNTY1IDQ2LjI0ODIzMTUgMzguOTgyNTk5MiA0Ni4yNDgyMzE1Jz48L3BvbHlnb24+XG5cdCAgICAgICAgICAgICAgICAgICAgPGNpcmNsZSBpZD0nT3ZhbC0xMycgZmlsbD0nIzJBMjkyOScgY3g9JzMwJyBjeT0nMzAnIHI9JzEuMjUnPjwvY2lyY2xlPlxuXHQgICAgICAgICAgICAgICAgICAgIDxjaXJjbGUgaWQ9J092YWwtMTQnIGZpbGw9JyNERDQ1MjQnIGN4PSczMCcgY3k9JzMwJyByPScwLjc1Jz48L2NpcmNsZT5cblx0ICAgICAgICAgICAgICAgIDwvZz5cblx0ICAgICAgICAgICAgPC9nPlxuXHQgICAgICAgIDwvZz5cblx0ICAgIDwvZz5cblx0PC9zdmc+XCJcblx0bWFwc19hcHA6XCI8P3htbCB2ZXJzaW9uPScxLjAnIGVuY29kaW5nPSdVVEYtOCcgc3RhbmRhbG9uZT0nbm8nPz5cblx0PHN2ZyB3aWR0aD0nNjBweCcgaGVpZ2h0PSc2MHB4JyB2aWV3Qm94PScwIDAgNjAgNjAnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+XG5cdCAgICA8IS0tIEdlbmVyYXRvcjogU2tldGNoIDM5LjEgKDMxNzIwKSAtIGh0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaCAtLT5cblx0ICAgIDx0aXRsZT5NYXBzPC90aXRsZT5cblx0ICAgIDxkZXNjPkNyZWF0ZWQgd2l0aCBTa2V0Y2guPC9kZXNjPlxuXHQgICAgPGRlZnM+XG5cdCAgICAgICAgPHBhdGggZD0nTTM5LjA4MTUsMCBDNDUuMTA1LDAgNDguMTE2LDAgNTEuMzU4NSwxLjAyNSBDNTQuODk4NSwyLjMxMzUgNTcuNjg2NSw1LjEwMTUgNTguOTc1LDguNjQxNSBDNjAsMTEuODgzNSA2MCwxNC44OTU1IDYwLDIwLjkxODUgTDYwLDM5LjA4MTUgQzYwLDQ1LjEwNSA2MCw0OC4xMTYgNTguOTc1LDUxLjM1ODUgQzU3LjY4NjUsNTQuODk4NSA1NC44OTg1LDU3LjY4NjUgNTEuMzU4NSw1OC45NzQ1IEM0OC4xMTYsNjAgNDUuMTA1LDYwIDM5LjA4MTUsNjAgTDIwLjkxODUsNjAgQzE0Ljg5NSw2MCAxMS44ODM1LDYwIDguNjQxNSw1OC45NzQ1IEM1LjEwMTUsNTcuNjg2NSAyLjMxMzUsNTQuODk4NSAxLjAyNSw1MS4zNTg1IEMwLDQ4LjExNiAwLDQ1LjEwNSAwLDM5LjA4MTUgTDAsMjAuOTE4NSBDMCwxNC44OTU1IDAsMTEuODgzNSAxLjAyNSw4LjY0MTUgQzIuMzEzNSw1LjEwMTUgNS4xMDE1LDIuMzEzNSA4LjY0MTUsMS4wMjUgQzExLjg4MzUsMCAxNC44OTUsMCAyMC45MTg1LDAgTDM5LjA4MTUsMCBaJyBpZD0ncGF0aC0xJz48L3BhdGg+XG5cdCAgICAgICAgPHBhdGggZD0nTS00LjUsMzAgQy00LjUsMzAgLTQuNDc0NjI2MjUsMzAuNDk2NzgwNyAtNC40MjUxMTY5NSwzMC40OTEyNDAxIEMtMy40NDIyOTA1NSwzMC4zODEyNTA2IDkuMTA0NDU2OTYsMjguNDk0NjkyMyAxNy41MDc1Njg0LDM0LjUwOTI3NzMgQzIzLjI2ODMxMDUsMzguNjMyNTY4NCAyNi40MjA3OCw0My43NDkwMDg3IDMxLDQ4LjE4NDgxNDUgQzM2Ljc5MTk5MjIsNTMuNzk1NDEwMiA0NC4zMzE0MDQyLDU1LjY2ODA2NjQgNTAuNDA1ODE0NCw1Ni4yNTAyOTMgQzU2LjQ4MDIyNDYsNTYuODMyNTE5NSA2NSw1NiA2NSw1NiBMNjUsNjYgQzY1LDY2IDUzLjU0ODk2MzMsNjUuMzc2OTM4NSA0Ny44MjM0ODYzLDY0LjY3ODQ2NjggQzQyLjA5ODAwOTMsNjMuOTc5OTk1MSAzMy4yNDcwNzAzLDYyLjAyNjEyMyAyNy4zOTIzMzQsNTcuOTI3MDAyIEMxNy45OTA5NjY4LDUwLjE3Mjg1MTYgMTkuMjc3ODc0LDQ3LjgxOTM3NjMgMTIuMjkxNzQ4LDQzLjIyNDYwOTQgQzUuMjQwNzIyNjYsMzguNTg3MTU4MiAtNC41LDQwLjUgLTQuNSw0MC41IEwtNC41LDMwIFonIGlkPSdwYXRoLTMnPjwvcGF0aD5cblx0ICAgICAgICA8bWFzayBpZD0nbWFzay00JyBtYXNrQ29udGVudFVuaXRzPSd1c2VyU3BhY2VPblVzZScgbWFza1VuaXRzPSdvYmplY3RCb3VuZGluZ0JveCcgeD0nLTAuNScgeT0nLTAuNScgd2lkdGg9JzcwLjUnIGhlaWdodD0nMzcnPlxuXHQgICAgICAgICAgICA8cmVjdCB4PSctNScgeT0nMjkuNScgd2lkdGg9JzcwLjUnIGhlaWdodD0nMzcnIGZpbGw9J3doaXRlJz48L3JlY3Q+XG5cdCAgICAgICAgICAgIDx1c2UgeGxpbms6aHJlZj0nI3BhdGgtMycgZmlsbD0nYmxhY2snPjwvdXNlPlxuXHQgICAgICAgIDwvbWFzaz5cblx0ICAgICAgICA8cG9seWdvbiBpZD0ncGF0aC01JyBwb2ludHM9JzUwLjUgNjAgNDEuNSA2MCA0MS41IDE4Ljg0Mjk3NTIgMCAxOC44NDI5NzUyIDAgOS45MTczNTUzNyA0MS41IDkuOTE3MzU1MzcgNDEuNSAwIDUwLjUgMCA1MC41IDkuOTE3MzU1MzcgNjAgOS45MTczNTUzNyA2MCAxOC44NDI5NzUyIDUwLjUgMTguODQyOTc1MiA1MC41IDM2LjY5NDIxNDkgNjAgMzYuNjk0MjE0OSA2MCA0NS42MTk4MzQ3IDUwLjUgNDUuNjE5ODM0Nyc+PC9wb2x5Z29uPlxuXHQgICAgICAgIDxtYXNrIGlkPSdtYXNrLTYnIG1hc2tDb250ZW50VW5pdHM9J3VzZXJTcGFjZU9uVXNlJyBtYXNrVW5pdHM9J29iamVjdEJvdW5kaW5nQm94JyB4PSctMC41JyB5PSctMC41JyB3aWR0aD0nNjEnIGhlaWdodD0nNjEnPlxuXHQgICAgICAgICAgICA8cmVjdCB4PSctMC41JyB5PSctMC41JyB3aWR0aD0nNjEnIGhlaWdodD0nNjEnIGZpbGw9J3doaXRlJz48L3JlY3Q+XG5cdCAgICAgICAgICAgIDx1c2UgeGxpbms6aHJlZj0nI3BhdGgtNScgZmlsbD0nYmxhY2snPjwvdXNlPlxuXHQgICAgICAgIDwvbWFzaz5cblx0ICAgICAgICA8cGF0aCBkPSdNMC41LDcuNSBDMC44MTQ5NjE1NDgsMTMuODQ1OTA1MSA1LjAzNjc5NjU2LDE5LjUgMTIuNzUsMTkuNSBDMjAuNDYzMjAzNCwxOS41IDI0LjYzMTQ3NTUsMTMuODQzOTM4MSAyNSw3LjUgQzI1LjEyMzUzNTIsNS4zNzM0MTMwOSAyNC4zNjc0MzE2LDIuNTY1NTUxNzYgMjMuNTA2ODEzMSwxLjI3MTAxNDIgQzIyLjQ1NDk1NjUsMi4wMjU5OTI4NSAyMC40MzczNTYyLDIuNSAxOC43NSwyLjUgQzE2LjE1OTY2MzEsMi41IDEzLjQ2OTM4NDgsMS44ODI5MjEwNiAxMi43NSwwLjM0NzEzMzc5OSBDMTIuMDMwNjE1MiwxLjg4MjkyMTA2IDkuMzQwMzM2ODksMi41IDYuNzUsMi41IEM1LjA2MjY0MzgzLDIuNSAzLjA0NTA0MzQ2LDIuMDI1OTkyODUgMS45OTMxODY4NiwxLjI3MTAxNDIgQzEuMTMyOTM0NTcsMi43NjQxNjAxNiAwLjM5MjA4OTg0NCw1LjMyNTgwNTY2IDAuNSw3LjUgWicgaWQ9J3BhdGgtNyc+PC9wYXRoPlxuXHQgICAgICAgIDxtYXNrIGlkPSdtYXNrLTgnIG1hc2tDb250ZW50VW5pdHM9J3VzZXJTcGFjZU9uVXNlJyBtYXNrVW5pdHM9J29iamVjdEJvdW5kaW5nQm94JyB4PScwJyB5PScwJyB3aWR0aD0nMjQuNTIzNzc4NycgaGVpZ2h0PScxOS4xNTI4NjYyJyBmaWxsPSd3aGl0ZSc+XG5cdCAgICAgICAgICAgIDx1c2UgeGxpbms6aHJlZj0nI3BhdGgtNyc+PC91c2U+XG5cdCAgICAgICAgPC9tYXNrPlxuXHQgICAgICAgIDxtYXNrIGlkPSdtYXNrLTEwJyBtYXNrQ29udGVudFVuaXRzPSd1c2VyU3BhY2VPblVzZScgbWFza1VuaXRzPSdvYmplY3RCb3VuZGluZ0JveCcgeD0nMCcgeT0nMCcgd2lkdGg9JzI0LjUyMzc3ODcnIGhlaWdodD0nMTkuMTUyODY2MicgZmlsbD0nd2hpdGUnPlxuXHQgICAgICAgICAgICA8dXNlIHhsaW5rOmhyZWY9JyNwYXRoLTcnPjwvdXNlPlxuXHQgICAgICAgIDwvbWFzaz5cblx0ICAgICAgICA8cmVjdCBpZD0ncGF0aC0xMScgeD0nMCcgeT0nMC41JyB3aWR0aD0nMjUnIGhlaWdodD0nNSc+PC9yZWN0PlxuXHQgICAgICAgIDxmaWx0ZXIgeD0nLTUwJScgeT0nLTUwJScgd2lkdGg9JzIwMCUnIGhlaWdodD0nMjAwJScgZmlsdGVyVW5pdHM9J29iamVjdEJvdW5kaW5nQm94JyBpZD0nZmlsdGVyLTEyJz5cblx0ICAgICAgICAgICAgPGZlT2Zmc2V0IGR4PScwJyBkeT0nMScgaW49J1NvdXJjZUFscGhhJyByZXN1bHQ9J3NoYWRvd09mZnNldE91dGVyMSc+PC9mZU9mZnNldD5cblx0ICAgICAgICAgICAgPGZlQ29sb3JNYXRyaXggdmFsdWVzPScwIDAgMCAwIDEgICAwIDAgMCAwIDEgICAwIDAgMCAwIDEgIDAgMCAwIDEgMCcgdHlwZT0nbWF0cml4JyBpbj0nc2hhZG93T2Zmc2V0T3V0ZXIxJz48L2ZlQ29sb3JNYXRyaXg+XG5cdCAgICAgICAgPC9maWx0ZXI+XG5cdCAgICAgICAgPHBhdGggZD0nTTAuNSw3LjUgQzAuODE0OTYxNTQ4LDEzLjg0NTkwNTEgNS4wMzY3OTY1NiwxOS41IDEyLjc1LDE5LjUgQzIwLjQ2MzIwMzQsMTkuNSAyNC42MzE0NzU1LDEzLjg0MzkzODEgMjUsNy41IEMyNS4xMjM1MzUyLDUuMzczNDEzMDkgMjQuMzY3NDMxNiwyLjU2NTU1MTc2IDIzLjUwNjgxMzEsMS4yNzEwMTQyIEMyMi40NTQ5NTY1LDIuMDI1OTkyODUgMjAuNDM3MzU2MiwyLjUgMTguNzUsMi41IEMxNi4xNTk2NjMxLDIuNSAxMy40NjkzODQ4LDEuODgyOTIxMDYgMTIuNzUsMC4zNDcxMzM3OTkgQzEyLjAzMDYxNTIsMS44ODI5MjEwNiA5LjM0MDMzNjg5LDIuNSA2Ljc1LDIuNSBDNS4wNjI2NDM4MywyLjUgMy4wNDUwNDM0NiwyLjAyNTk5Mjg1IDEuOTkzMTg2ODYsMS4yNzEwMTQyIEMxLjEzMjkzNDU3LDIuNzY0MTYwMTYgMC4zOTIwODk4NDQsNS4zMjU4MDU2NiAwLjUsNy41IFonIGlkPSdwYXRoLTEzJz48L3BhdGg+XG5cdCAgICAgICAgPG1hc2sgaWQ9J21hc2stMTQnIG1hc2tDb250ZW50VW5pdHM9J3VzZXJTcGFjZU9uVXNlJyBtYXNrVW5pdHM9J29iamVjdEJvdW5kaW5nQm94JyB4PScwJyB5PScwJyB3aWR0aD0nMjQuNTIzNzc4NycgaGVpZ2h0PScxOS4xNTI4NjYyJyBmaWxsPSd3aGl0ZSc+XG5cdCAgICAgICAgICAgIDx1c2UgeGxpbms6aHJlZj0nI3BhdGgtMTMnPjwvdXNlPlxuXHQgICAgICAgIDwvbWFzaz5cblx0ICAgIDwvZGVmcz5cblx0ICAgIDxnIGlkPSdQYWdlLTEnIHN0cm9rZT0nbm9uZScgc3Ryb2tlLXdpZHRoPScxJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnPlxuXHQgICAgICAgIDxnIGlkPSdIb21lLVNjcmVlbi3igKItaVBob25lLVNFJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtMTY4LjAwMDAwMCwgLTExNS4wMDAwMDApJz5cblx0ICAgICAgICAgICAgPGcgaWQ9J0hvbWUtU2NyZWVuLeKAoi1pUGhvbmUtNnMtQ29weScgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMC4wMDAwMDAsIDI3LjAwMDAwMCknPlxuXHQgICAgICAgICAgICAgICAgPGcgaWQ9J01hcHMnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDE2OC4wMDAwMDAsIDg4LjAwMDAwMCknPlxuXHQgICAgICAgICAgICAgICAgICAgIDxtYXNrIGlkPSdtYXNrLTInIGZpbGw9J3doaXRlJz5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgPHVzZSB4bGluazpocmVmPScjcGF0aC0xJz48L3VzZT5cblx0ICAgICAgICAgICAgICAgICAgICA8L21hc2s+XG5cdCAgICAgICAgICAgICAgICAgICAgPHVzZSBpZD0nQkcnIGZpbGw9JyNFNEREQzknIHhsaW5rOmhyZWY9JyNwYXRoLTEnPjwvdXNlPlxuXHQgICAgICAgICAgICAgICAgICAgIDxyZWN0IGlkPSdCbG9jaycgZmlsbD0nIzc2QzYzQicgbWFzaz0ndXJsKCNtYXNrLTIpJyB4PScwJyB5PScwJyB3aWR0aD0nNDInIGhlaWdodD0nMTAnPjwvcmVjdD5cblx0ICAgICAgICAgICAgICAgICAgICA8cmVjdCBpZD0nQmxvY2snIGZpbGw9JyNGQkM2RDEnIG1hc2s9J3VybCgjbWFzay0yKScgeD0nNDUnIHk9JzAuNScgd2lkdGg9JzE1JyBoZWlnaHQ9JzEwJz48L3JlY3Q+XG5cdCAgICAgICAgICAgICAgICAgICAgPGcgaWQ9J0hpZ2h3YXknIG1hc2s9J3VybCgjbWFzay0yKSc+XG5cdCAgICAgICAgICAgICAgICAgICAgICAgIDx1c2UgZmlsbD0nI0ZGREUwMicgZmlsbC1ydWxlPSdldmVub2RkJyB4bGluazpocmVmPScjcGF0aC0zJz48L3VzZT5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgPHVzZSBzdHJva2U9JyNGRUIzMTInIG1hc2s9J3VybCgjbWFzay00KScgc3Ryb2tlLXdpZHRoPScxJyB4bGluazpocmVmPScjcGF0aC0zJz48L3VzZT5cblx0ICAgICAgICAgICAgICAgICAgICA8L2c+XG5cdCAgICAgICAgICAgICAgICAgICAgPGcgaWQ9J01hcCcgbWFzaz0ndXJsKCNtYXNrLTIpJz5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgPHVzZSBmaWxsPScjRkZGRkZGJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnIHhsaW5rOmhyZWY9JyNwYXRoLTUnPjwvdXNlPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICA8dXNlIHN0cm9rZS1vcGFjaXR5PScwLjEnIHN0cm9rZT0nIzAwMDAwMCcgbWFzaz0ndXJsKCNtYXNrLTYpJyBzdHJva2Utd2lkdGg9JzEnIHhsaW5rOmhyZWY9JyNwYXRoLTUnPjwvdXNlPlxuXHQgICAgICAgICAgICAgICAgICAgIDwvZz5cblx0ICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSdNNDMuNjU2NTkxNCwzNS41IEw0My40NDg5Nzk2LDM1LjUgTDQzLjQ0ODk3OTYsMTcgTC0xLDE3IEwtMSwxMiBMNDguNSwxMiBMNDguNSwxNC41IEw0OC41LDE0LjUgTDQ4LjUsMzUuNSBMNDguMjkyMzg4MiwzNS41IEM0Ny41ODY4OTksMzUuMTc4OTk2IDQ2LjgwMTgxMSwzNSA0NS45NzQ0ODk4LDM1IEM0NS4xNDcxNjg1LDM1IDQ0LjM2MjA4MDYsMzUuMTc4OTk2IDQzLjY1NjU5MTQsMzUuNSBMNDMuNjU2NTkxNCwzNS41IFonIGlkPSdSb3V0ZScgZmlsbD0nIzQwOUJGRicgbWFzaz0ndXJsKCNtYXNrLTIpJz48L3BhdGg+XG5cdCAgICAgICAgICAgICAgICAgICAgPGcgaWQ9J0luZGljYXRvcicgbWFzaz0ndXJsKCNtYXNrLTIpJz5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgPGcgdHJhbnNmb3JtPSd0cmFuc2xhdGUoNDAuNTAwMDAwLCAzNS41MDAwMDApJz5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjaXJjbGUgaWQ9J0NpcmNsZScgZmlsbD0nIzAwN0FGRicgY3g9JzUuNScgY3k9JzUuNScgcj0nNS41Jz48L2NpcmNsZT5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwb2x5Z29uIGlkPSdBcnJvdycgZmlsbD0nI0ZGRkZGRicgcG9pbnRzPSc3Ljc1IDguNzUgNS41IDEuNjUzODA1OTIgMy4yNSA4Ljc1IDUuNSA2LjY1MzgwNTkyJz48L3BvbHlnb24+XG5cdCAgICAgICAgICAgICAgICAgICAgICAgIDwvZz5cblx0ICAgICAgICAgICAgICAgICAgICA8L2c+XG5cdCAgICAgICAgICAgICAgICAgICAgPGcgaWQ9JzI4MCcgbWFzaz0ndXJsKCNtYXNrLTIpJz5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgPGcgdHJhbnNmb3JtPSd0cmFuc2xhdGUoOC4wMDAwMDAsIDIyLjUwMDAwMCknPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG1hc2sgaWQ9J21hc2stOScgZmlsbD0nd2hpdGUnPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1c2UgeGxpbms6aHJlZj0nI3BhdGgtNyc+PC91c2U+XG5cdCAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L21hc2s+XG5cdCAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZyBpZD0nT3ZhbC0yMCcgc3Ryb2tlPScjRkZGRkZGJyBtYXNrPSd1cmwoI21hc2stOCknIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nIzAwN0FGRicgZmlsbC1ydWxlPSdldmVub2RkJz5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dXNlIG1hc2s9J3VybCgjbWFzay0xMCknIHhsaW5rOmhyZWY9JyNwYXRoLTcnPjwvdXNlPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9nPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGcgaWQ9J1RvcCcgc3Ryb2tlPSdub25lJyBmaWxsPSdub25lJyBtYXNrPSd1cmwoI21hc2stOSknPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1c2UgZmlsbD0nYmxhY2snIGZpbGwtb3BhY2l0eT0nMScgZmlsdGVyPSd1cmwoI2ZpbHRlci0xMiknIHhsaW5rOmhyZWY9JyNwYXRoLTExJz48L3VzZT5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dXNlIGZpbGw9JyNERTFEMjYnIGZpbGwtcnVsZT0nZXZlbm9kZCcgeGxpbms6aHJlZj0nI3BhdGgtMTEnPjwvdXNlPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9nPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGcgaWQ9J1NoaWVsZCcgc3Ryb2tlPSdub25lJyBmaWxsPSdub25lJyBtYXNrPSd1cmwoI21hc2stOSknIHN0cm9rZS13aWR0aD0nMS41Jz5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dXNlIHN0cm9rZT0nI0ZGRkZGRicgbWFzaz0ndXJsKCNtYXNrLTE0KScgeGxpbms6aHJlZj0nI3BhdGgtMTMnPjwvdXNlPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9nPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0nTTUuNjQsOS4zNzggTDYuNDA1LDkuMzc4IEM2LjM5ODk5OTk3LDkuMTg1OTk5MDQgNi40MTg0OTk3OCw4Ljk5NTUwMDk1IDYuNDYzNSw4LjgwNjUgQzYuNTA4NTAwMjMsOC42MTc0OTkwNiA2LjU4MTk5OTQ5LDguNDQ4MDAwNzUgNi42ODQsOC4yOTggQzYuNzg2MDAwNTEsOC4xNDc5OTkyNSA2LjkxNjQ5OTIxLDguMDI2NTAwNDcgNy4wNzU1LDcuOTMzNSBDNy4yMzQ1MDA4LDcuODQwNDk5NTQgNy40MjQ5OTg4OSw3Ljc5NCA3LjY0Nyw3Ljc5NCBDNy44MTUwMDA4NCw3Ljc5NCA3Ljk3Mzk5OTI1LDcuODIwOTk5NzMgOC4xMjQsNy44NzUgQzguMjc0MDAwNzUsNy45MjkwMDAyNyA4LjQwNDQ5OTQ1LDguMDA2OTk5NDkgOC41MTU1LDguMTA5IEM4LjYyNjUwMDU2LDguMjExMDAwNTEgOC43MTQ5OTk2Nyw4LjMzMjQ5OTMgOC43ODEsOC40NzM1IEM4Ljg0NzAwMDMzLDguNjE0NTAwNzEgOC44OCw4Ljc3MTk5OTEzIDguODgsOC45NDYgQzguODgsOS4xNjgwMDExMSA4Ljg0NTUwMDM1LDkuMzYyOTk5MTYgOC43NzY1LDkuNTMxIEM4LjcwNzQ5OTY2LDkuNjk5MDAwODQgOC42MDU1MDA2OCw5Ljg1NDk5OTI4IDguNDcwNSw5Ljk5OSBDOC4zMzU0OTkzMywxMC4xNDMwMDA3IDguMTY2MDAxMDIsMTAuMjg1NDk5MyA3Ljk2MiwxMC40MjY1IEM3Ljc1Nzk5ODk4LDEwLjU2NzUwMDcgNy41MjEwMDEzNSwxMC43MjE5OTkyIDcuMjUxLDEwLjg5IEM3LjAyODk5ODg5LDExLjAyMjAwMDcgNi44MTYwMDEwMiwxMS4xNjI5OTkzIDYuNjEyLDExLjMxMyBDNi40MDc5OTg5OCwxMS40NjMwMDA4IDYuMjI1MDAwODEsMTEuNjM2OTk5IDYuMDYzLDExLjgzNSBDNS45MDA5OTkxOSwxMi4wMzMwMDEgNS43Njc1MDA1MywxMi4yNjU0OTg3IDUuNjYyNSwxMi41MzI1IEM1LjU1NzQ5OTQ4LDEyLjc5OTUwMTMgNS40OTAwMDAxNSwxMy4xMjE5OTgxIDUuNDYsMTMuNSBMOS42MjcsMTMuNSBMOS42MjcsMTIuODI1IEw2LjM1MSwxMi44MjUgQzYuMzg3MDAwMTgsMTIuNjI2OTk5IDYuNDYzNDk5NDIsMTIuNDUxNTAwOCA2LjU4MDUsMTIuMjk4NSBDNi42OTc1MDA1OSwxMi4xNDU0OTkyIDYuODM4NDk5MTgsMTIuMDAzMDAwNyA3LjAwMzUsMTEuODcxIEM3LjE2ODUwMDgzLDExLjczODk5OTMgNy4zNDk5OTkwMSwxMS42MTQ1MDA2IDcuNTQ4LDExLjQ5NzUgQzcuNzQ2MDAwOTksMTEuMzgwNDk5NCA3Ljk0Mzk5OTAxLDExLjI2MjAwMDYgOC4xNDIsMTEuMTQyIEM4LjM0MDAwMDk5LDExLjAxNTk5OTQgOC41MzE5OTkwNywxMC44ODQwMDA3IDguNzE4LDEwLjc0NiBDOC45MDQwMDA5MywxMC42MDc5OTkzIDkuMDY4OTk5MjgsMTAuNDUzNTAwOSA5LjIxMywxMC4yODI1IEM5LjM1NzAwMDcyLDEwLjExMTQ5OTEgOS40NzI0OTk1Nyw5LjkxODAwMTA4IDkuNTU5NSw5LjcwMiBDOS42NDY1MDA0NCw5LjQ4NTk5ODkyIDkuNjksOS4yMzcwMDE0MSA5LjY5LDguOTU1IEM5LjY5LDguNjU0OTk4NSA5LjYzNzUwMDUzLDguMzkxMDAxMTQgOS41MzI1LDguMTYzIEM5LjQyNzQ5OTQ4LDcuOTM0OTk4ODYgOS4yODUwMDA5LDcuNzQ0NTAwNzcgOS4xMDUsNy41OTE1IEM4LjkyNDk5OTEsNy40Mzg0OTkyNCA4LjcxMzUwMTIyLDcuMzIxNTAwNDEgOC40NzA1LDcuMjQwNSBDOC4yMjc0OTg3OSw3LjE1OTQ5OTYgNy45NjgwMDEzOCw3LjExOSA3LjY5Miw3LjExOSBDNy4zNTU5OTgzMiw3LjExOSA3LjA1NjAwMTMyLDcuMTc1OTk5NDMgNi43OTIsNy4yOSBDNi41Mjc5OTg2OCw3LjQwNDAwMDU3IDYuMzA3NTAwODksNy41NjE0OTkgNi4xMzA1LDcuNzYyNSBDNS45NTM0OTkxMiw3Ljk2MzUwMTAxIDUuODIzMDAwNDIsOC4yMDE5OTg2MiA1LjczOSw4LjQ3OCBDNS42NTQ5OTk1OCw4Ljc1NDAwMTM4IDUuNjIxOTk5OTEsOS4wNTM5OTgzOCA1LjY0LDkuMzc4IEw1LjY0LDkuMzc4IFogTTExLjY0Myw4Ljc3NSBDMTEuNjQzLDguNjEyOTk5MTkgMTEuNjcyOTk5Nyw4LjQ3MjAwMDYgMTEuNzMzLDguMzUyIEMxMS43OTMwMDAzLDguMjMxOTk5NCAxMS44NzI0OTk1LDguMTMwMDAwNDIgMTEuOTcxNSw4LjA0NiBDMTIuMDcwNTAwNSw3Ljk2MTk5OTU4IDEyLjE4ODk5OTMsNy44OTkwMDAyMSAxMi4zMjcsNy44NTcgQzEyLjQ2NTAwMDcsNy44MTQ5OTk3OSAxMi42MDg5OTkzLDcuNzk0IDEyLjc1OSw3Ljc5NCBDMTMuMDcxMDAxNiw3Ljc5NCAxMy4zMjc0OTksNy44NzY0OTkxOCAxMy41Mjg1LDguMDQxNSBDMTMuNzI5NTAxLDguMjA2NTAwODMgMTMuODMsOC40NTA5OTgzOCAxMy44Myw4Ljc3NSBDMTMuODMsOS4wOTkwMDE2MiAxMy43MzEwMDEsOS4zNTA5OTkxIDEzLjUzMyw5LjUzMSBDMTMuMzM0OTk5LDkuNzExMDAwOSAxMy4wODMwMDE1LDkuODAxIDEyLjc3Nyw5LjgwMSBDMTIuNjIwOTk5Miw5LjgwMSAxMi40NzQwMDA3LDkuNzgwMDAwMjEgMTIuMzM2LDkuNzM4IEMxMi4xOTc5OTkzLDkuNjk1OTk5NzkgMTIuMDc4MDAwNSw5LjYzMzAwMDQyIDExLjk3Niw5LjU0OSBDMTEuODczOTk5NSw5LjQ2NDk5OTU4IDExLjc5MzAwMDMsOS4zNTg1MDA2NSAxMS43MzMsOS4yMjk1IEMxMS42NzI5OTk3LDkuMTAwNDk5MzYgMTEuNjQzLDguOTQ5MDAwODcgMTEuNjQzLDguNzc1IEwxMS42NDMsOC43NzUgWiBNMTAuODMzLDguNzQ4IEMxMC44MzMsOS4wMzYwMDE0NCAxMC45MTM5OTkyLDkuMzAxNDk4NzkgMTEuMDc2LDkuNTQ0NSBDMTEuMjM4MDAwOCw5Ljc4NzUwMTIyIDExLjQ1Mzk5ODcsOS45NjI5OTk0NiAxMS43MjQsMTAuMDcxIEMxMS4zNjM5OTgyLDEwLjE5NzAwMDYgMTEuMDg4MDAxLDEwLjM5OTQ5ODYgMTAuODk2LDEwLjY3ODUgQzEwLjcwMzk5OSwxMC45NTc1MDE0IDEwLjYwOCwxMS4yODU5OTgxIDEwLjYwOCwxMS42NjQgQzEwLjYwOCwxMS45ODgwMDE2IDEwLjY2MzQ5OTQsMTIuMjcxNDk4OCAxMC43NzQ1LDEyLjUxNDUgQzEwLjg4NTUwMDYsMTIuNzU3NTAxMiAxMS4wMzg0OTksMTIuOTU5OTk5MiAxMS4yMzM1LDEzLjEyMiBDMTEuNDI4NTAxLDEzLjI4NDAwMDggMTEuNjU3OTk4NywxMy40MDM5OTk2IDExLjkyMiwxMy40ODIgQzEyLjE4NjAwMTMsMTMuNTYwMDAwNCAxMi40NzA5OTg1LDEzLjU5OSAxMi43NzcsMTMuNTk5IEMxMy4wNzEwMDE1LDEzLjU5OSAxMy4zNDY5OTg3LDEzLjU1NzAwMDQgMTMuNjA1LDEzLjQ3MyBDMTMuODYzMDAxMywxMy4zODg5OTk2IDE0LjA4NjQ5OTEsMTMuMjY0NTAwOCAxNC4yNzU1LDEzLjA5OTUgQzE0LjQ2NDUwMDksMTIuOTM0NDk5MiAxNC42MTQ0OTk0LDEyLjczMjAwMTIgMTQuNzI1NSwxMi40OTIgQzE0LjgzNjUwMDYsMTIuMjUxOTk4OCAxNC44OTIsMTEuOTc2MDAxNiAxNC44OTIsMTEuNjY0IEMxNC44OTIsMTEuMjY3OTk4IDE0Ljc5OTAwMDksMTAuOTMzNTAxNCAxNC42MTMsMTAuNjYwNSBDMTQuNDI2OTk5MSwxMC4zODc0OTg2IDE0LjE0MjAwMTksMTAuMTkxMDAwNiAxMy43NTgsMTAuMDcxIEMxNC4wMjgwMDE0LDkuOTUwOTk5NCAxNC4yNDI0OTkyLDkuNzcyNTAxMTkgMTQuNDAxNSw5LjUzNTUgQzE0LjU2MDUwMDgsOS4yOTg0OTg4MiAxNC42NCw5LjAzNjAwMTQ0IDE0LjY0LDguNzQ4IEMxNC42NCw4LjU0Mzk5ODk4IDE0LjYwNDAwMDQsOC4zNDQ1MDA5OCAxNC41MzIsOC4xNDk1IEMxNC40NTk5OTk2LDcuOTU0NDk5MDMgMTQuMzQ3NTAwOCw3Ljc4MDUwMDc3IDE0LjE5NDUsNy42Mjc1IEMxNC4wNDE0OTkyLDcuNDc0NDk5MjQgMTMuODQyMDAxMiw3LjM1MTUwMDQ3IDEzLjU5Niw3LjI1ODUgQzEzLjM0OTk5ODgsNy4xNjU0OTk1NCAxMy4wNTMwMDE3LDcuMTE5IDEyLjcwNSw3LjExOSBDMTIuNDU4OTk4OCw3LjExOSAxMi4yMjM1MDExLDcuMTU0OTk5NjQgMTEuOTk4NSw3LjIyNyBDMTEuNzczNDk4OSw3LjI5OTAwMDM2IDExLjU3NDAwMDksNy40MDM5OTkzMSAxMS40LDcuNTQyIEMxMS4yMjU5OTkxLDcuNjgwMDAwNjkgMTEuMDg4MDAwNSw3Ljg0OTQ5OSAxMC45ODYsOC4wNTA1IEMxMC44ODM5OTk1LDguMjUxNTAxMDEgMTAuODMzLDguNDgzOTk4NjggMTAuODMzLDguNzQ4IEwxMC44MzMsOC43NDggWiBNMTEuNDE4LDExLjcgQzExLjQxOCwxMS41MTM5OTkxIDExLjQ1MjQ5OTcsMTEuMzQ2MDAwOCAxMS41MjE1LDExLjE5NiBDMTEuNTkwNTAwMywxMS4wNDU5OTkzIDExLjY4NjQ5OTQsMTAuOTE3MDAwNSAxMS44MDk1LDEwLjgwOSBDMTEuOTMyNTAwNiwxMC43MDA5OTk1IDEyLjA3NjQ5OTIsMTAuNjE4NTAwMyAxMi4yNDE1LDEwLjU2MTUgQzEyLjQwNjUwMDgsMTAuNTA0NDk5NyAxMi41ODE5OTkxLDEwLjQ3NiAxMi43NjgsMTAuNDc2IEMxMi45NDgwMDA5LDEwLjQ3NiAxMy4xMTc0OTkyLDEwLjUwNzQ5OTcgMTMuMjc2NSwxMC41NzA1IEMxMy40MzU1MDA4LDEwLjYzMzUwMDMgMTMuNTc0OTk5NCwxMC43MTg5OTk1IDEzLjY5NSwxMC44MjcgQzEzLjgxNTAwMDYsMTAuOTM1MDAwNSAxMy45MDk0OTk3LDExLjA2MjQ5OTMgMTMuOTc4NSwxMS4yMDk1IEMxNC4wNDc1MDAzLDExLjM1NjUwMDcgMTQuMDgyLDExLjUxNjk5OTEgMTQuMDgyLDExLjY5MSBDMTQuMDgyLDExLjg3MTAwMDkgMTQuMDUwNTAwMywxMi4wMzU5OTkzIDEzLjk4NzUsMTIuMTg2IEMxMy45MjQ0OTk3LDEyLjMzNjAwMDggMTMuODM0NTAwNiwxMi40NjY0OTk0IDEzLjcxNzUsMTIuNTc3NSBDMTMuNjAwNDk5NCwxMi42ODg1MDA2IDEzLjQ2MjUwMDgsMTIuNzc1NDk5NyAxMy4zMDM1LDEyLjgzODUgQzEzLjE0NDQ5OTIsMTIuOTAxNTAwMyAxMi45NjkwMDEsMTIuOTMzIDEyLjc3NywxMi45MzMgQzEyLjM4MDk5OCwxMi45MzMgMTIuMDU1NTAxMywxMi44MjM1MDExIDExLjgwMDUsMTIuNjA0NSBDMTEuNTQ1NDk4NywxMi4zODU0OTg5IDExLjQxOCwxMi4wODQwMDE5IDExLjQxOCwxMS43IEwxMS40MTgsMTEuNyBaIE0xNi40NCwxMC4zNTkgQzE2LjQ0LDEwLjIwMjk5OTIgMTYuNDQxNSwxMC4wMzA1MDA5IDE2LjQ0NDUsOS44NDE1IEMxNi40NDc1LDkuNjUyNDk5MDYgMTYuNDYyNDk5OSw5LjQ2MzUwMDk1IDE2LjQ4OTUsOS4yNzQ1IEMxNi41MTY1MDAxLDkuMDg1NDk5MDYgMTYuNTU1NDk5Nyw4LjkwMTAwMDkgMTYuNjA2NSw4LjcyMSBDMTYuNjU3NTAwMyw4LjU0MDk5OTEgMTYuNzMyNDk5NSw4LjM4MzUwMDY4IDE2LjgzMTUsOC4yNDg1IEMxNi45MzA1MDA1LDguMTEzNDk5MzMgMTcuMDU0OTk5Myw4LjAwNDAwMDQyIDE3LjIwNSw3LjkyIEMxNy4zNTUwMDA4LDcuODM1OTk5NTggMTcuNTM3OTk4OSw3Ljc5NCAxNy43NTQsNy43OTQgQzE3Ljk3MDAwMTEsNy43OTQgMTguMTUyOTk5Myw3LjgzNTk5OTU4IDE4LjMwMyw3LjkyIEMxOC40NTMwMDA4LDguMDA0MDAwNDIgMTguNTc3NDk5NSw4LjExMzQ5OTMzIDE4LjY3NjUsOC4yNDg1IEMxOC43NzU1MDA1LDguMzgzNTAwNjggMTguODUwNDk5Nyw4LjU0MDk5OTEgMTguOTAxNSw4LjcyMSBDMTguOTUyNTAwMyw4LjkwMTAwMDkgMTguOTkxNDk5OSw5LjA4NTQ5OTA2IDE5LjAxODUsOS4yNzQ1IEMxOS4wNDU1MDAxLDkuNDYzNTAwOTUgMTkuMDYwNSw5LjY1MjQ5OTA2IDE5LjA2MzUsOS44NDE1IEMxOS4wNjY1LDEwLjAzMDUwMDkgMTkuMDY4LDEwLjIwMjk5OTIgMTkuMDY4LDEwLjM1OSBDMTkuMDY4LDEwLjU5OTAwMTIgMTkuMDYwNTAwMSwxMC44Njc0OTg1IDE5LjA0NTUsMTEuMTY0NSBDMTkuMDMwNDk5OSwxMS40NjE1MDE1IDE4Ljk4MjUwMDQsMTEuNzQwNDk4NyAxOC45MDE1LDEyLjAwMTUgQzE4LjgyMDQ5OTYsMTIuMjYyNTAxMyAxOC42OTAwMDA5LDEyLjQ4Mjk5OTEgMTguNTEsMTIuNjYzIEMxOC4zMjk5OTkxLDEyLjg0MzAwMDkgMTguMDc4MDAxNiwxMi45MzMgMTcuNzU0LDEyLjkzMyBDMTcuNDI5OTk4NCwxMi45MzMgMTcuMTc4MDAwOSwxMi44NDMwMDA5IDE2Ljk5OCwxMi42NjMgQzE2LjgxNzk5OTEsMTIuNDgyOTk5MSAxNi42ODc1MDA0LDEyLjI2MjUwMTMgMTYuNjA2NSwxMi4wMDE1IEMxNi41MjU0OTk2LDExLjc0MDQ5ODcgMTYuNDc3NTAwMSwxMS40NjE1MDE1IDE2LjQ2MjUsMTEuMTY0NSBDMTYuNDQ3NDk5OSwxMC44Njc0OTg1IDE2LjQ0LDEwLjU5OTAwMTIgMTYuNDQsMTAuMzU5IEwxNi40NCwxMC4zNTkgWiBNMTUuNjMsMTAuMzY4IEMxNS42MywxMC42MDIwMDEyIDE1LjYzNTk5OTksMTAuODQ0OTk4NyAxNS42NDgsMTEuMDk3IEMxNS42NjAwMDAxLDExLjM0OTAwMTMgMTUuNjg5OTk5OCwxMS41OTQ5OTg4IDE1LjczOCwxMS44MzUgQzE1Ljc4NjAwMDIsMTIuMDc1MDAxMiAxNS44NTQ5OTk2LDEyLjMwMTQ5ODkgMTUuOTQ1LDEyLjUxNDUgQzE2LjAzNTAwMDUsMTIuNzI3NTAxMSAxNi4xNTc5OTkyLDEyLjkxNDk5OTIgMTYuMzE0LDEzLjA3NyBDMTYuNDcwMDAwOCwxMy4yMzkwMDA4IDE2LjY2NjQ5ODgsMTMuMzY2NDk5NSAxNi45MDM1LDEzLjQ1OTUgQzE3LjE0MDUwMTIsMTMuNTUyNTAwNSAxNy40MjM5OTg0LDEzLjU5OSAxNy43NTQsMTMuNTk5IEMxOC4wOTAwMDE3LDEzLjU5OSAxOC4zNzQ5OTg4LDEzLjU1MjUwMDUgMTguNjA5LDEzLjQ1OTUgQzE4Ljg0MzAwMTIsMTMuMzY2NDk5NSAxOS4wMzc5OTkyLDEzLjIzOTAwMDggMTkuMTk0LDEzLjA3NyBDMTkuMzUwMDAwOCwxMi45MTQ5OTkyIDE5LjQ3Mjk5OTYsMTIuNzI3NTAxMSAxOS41NjMsMTIuNTE0NSBDMTkuNjUzMDAwNSwxMi4zMDE0OTg5IDE5LjcyMTk5OTgsMTIuMDc1MDAxMiAxOS43NywxMS44MzUgQzE5LjgxODAwMDIsMTEuNTk0OTk4OCAxOS44NDc5OTk5LDExLjM0OTAwMTMgMTkuODYsMTEuMDk3IEMxOS44NzIwMDAxLDEwLjg0NDk5ODcgMTkuODc4LDEwLjYwMjAwMTIgMTkuODc4LDEwLjM2OCBDMTkuODc4LDEwLjEzMzk5ODggMTkuODcyMDAwMSw5Ljg5MTAwMTI2IDE5Ljg2LDkuNjM5IEMxOS44NDc5OTk5LDkuMzg2OTk4NzQgMTkuODE4MDAwMiw5LjE0MTAwMTIgMTkuNzcsOC45MDEgQzE5LjcyMTk5OTgsOC42NjA5OTg4IDE5LjY1MzAwMDUsOC40MzMwMDEwOCAxOS41NjMsOC4yMTcgQzE5LjQ3Mjk5OTYsOC4wMDA5OTg5MiAxOS4zNTAwMDA4LDcuODEyMDAwODEgMTkuMTk0LDcuNjUgQzE5LjAzNzk5OTIsNy40ODc5OTkxOSAxOC44NDE1MDEyLDcuMzU5MDAwNDggMTguNjA0NSw3LjI2MyBDMTguMzY3NDk4OCw3LjE2Njk5OTUyIDE4LjA4NDAwMTcsNy4xMTkgMTcuNzU0LDcuMTE5IEMxNy40MjM5OTg0LDcuMTE5IDE3LjE0MDUwMTIsNy4xNjY5OTk1MiAxNi45MDM1LDcuMjYzIEMxNi42NjY0OTg4LDcuMzU5MDAwNDggMTYuNDcwMDAwOCw3LjQ4Nzk5OTE5IDE2LjMxNCw3LjY1IEMxNi4xNTc5OTkyLDcuODEyMDAwODEgMTYuMDM1MDAwNSw4LjAwMDk5ODkyIDE1Ljk0NSw4LjIxNyBDMTUuODU0OTk5Niw4LjQzMzAwMTA4IDE1Ljc4NjAwMDIsOC42NjA5OTg4IDE1LjczOCw4LjkwMSBDMTUuNjg5OTk5OCw5LjE0MTAwMTIgMTUuNjYwMDAwMSw5LjM4Njk5ODc0IDE1LjY0OCw5LjYzOSBDMTUuNjM1OTk5OSw5Ljg5MTAwMTI2IDE1LjYzLDEwLjEzMzk5ODggMTUuNjMsMTAuMzY4IEwxNS42MywxMC4zNjggWicgaWQ9JzI4MCcgc3Ryb2tlPSdub25lJyBmaWxsPScjRkZGRkZGJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnIG1hc2s9J3VybCgjbWFzay05KSc+PC9wYXRoPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICA8L2c+XG5cdCAgICAgICAgICAgICAgICAgICAgPC9nPlxuXHQgICAgICAgICAgICAgICAgPC9nPlxuXHQgICAgICAgICAgICA8L2c+XG5cdCAgICAgICAgPC9nPlxuXHQgICAgPC9nPlxuXHQ8L3N2Zz5cIlxuXHRuZXdzX2FwcDpcIjw/eG1sIHZlcnNpb249JzEuMCcgZW5jb2Rpbmc9J1VURi04JyBzdGFuZGFsb25lPSdubyc/PlxuXHQ8c3ZnIHdpZHRoPSc2MHB4JyBoZWlnaHQ9JzYwcHgnIHZpZXdCb3g9JzAgMCA2MCA2MCcgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJz5cblx0ICAgIDwhLS0gR2VuZXJhdG9yOiBTa2V0Y2ggMzkuMSAoMzE3MjApIC0gaHR0cDovL3d3dy5ib2hlbWlhbmNvZGluZy5jb20vc2tldGNoIC0tPlxuXHQgICAgPHRpdGxlPk5ld3M8L3RpdGxlPlxuXHQgICAgPGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+XG5cdCAgICA8ZGVmcz5cblx0ICAgICAgICA8bGluZWFyR3JhZGllbnQgeDE9JzUwJScgeTE9JzAlJyB4Mj0nNTAlJyB5Mj0nMTAwJScgaWQ9J2xpbmVhckdyYWRpZW50LTEnPlxuXHQgICAgICAgICAgICA8c3RvcCBzdG9wLWNvbG9yPScjRkM1MzYzJyBvZmZzZXQ9JzAlJz48L3N0b3A+XG5cdCAgICAgICAgICAgIDxzdG9wIHN0b3AtY29sb3I9JyNGQzMzNTknIG9mZnNldD0nMTAwJSc+PC9zdG9wPlxuXHQgICAgICAgIDwvbGluZWFyR3JhZGllbnQ+XG5cdCAgICAgICAgPHBhdGggZD0nTTEwLjEzNjYyNCw0Ny4zODIzODUzIEMxMSw0Ny4zODIzODUzIDExLDQ2LjUgMTEsNDYuNSBMMTEsMTIuMDA1MjYxNyBDMTEsMTEuNDUwMDcxIDExLjQ1MzIzMDMsMTEgMTEuOTk2ODc1NCwxMSBMNDguMDAzMTI0NiwxMSBDNDguNTUzNjgzNywxMSA0OSwxMS40NDEzMDMyIDQ5LDEyLjAwODg0OTggTDQ5LDQ2Ljk5MTE1MDIgQzQ5LDQ3LjU0ODMyMjYgNDguNTQzOTI1LDQ4LjAwMjkwMzQgNDcuOTk2NDA3Niw0OC4wMDYyNzgyIEM0Ny45OTY0MDc2LDQ4LjAwNjI3ODIgMTguNjA4NDgzMSw0OC4xOTk3NTQ0IDExLjAwMDAwMDEsNDggQzEwLjExNzQxMTMsNDcuOTc2ODI4NCA5LjQxNjYyNTk4LDQ3LjY2ODQ1NyA5LjA1NzU1NjE1LDQ3LjM4MjM4NTMgQzguNjk4NDg2MzMsNDcuMDk2MzEzNSA4LjM2MzA5ODE1LDQ2LjcxMTY0NjIgOC4zNjMwOTgxNCw0Ni42NjA3MDU2IEM4LjM2MzA5ODE0LDQ2LjQ1NzQ3MiA5LjI3MzI0Nzk2LDQ3LjM4MjM4NTMgMTAuMTM2NjI0LDQ3LjM4MjM4NTMgWicgaWQ9J3BhdGgtMic+PC9wYXRoPlxuXHQgICAgICAgIDxmaWx0ZXIgeD0nLTUwJScgeT0nLTUwJScgd2lkdGg9JzIwMCUnIGhlaWdodD0nMjAwJScgZmlsdGVyVW5pdHM9J29iamVjdEJvdW5kaW5nQm94JyBpZD0nZmlsdGVyLTQnPlxuXHQgICAgICAgICAgICA8ZmVPZmZzZXQgZHg9Jy0xJyBkeT0nMCcgaW49J1NvdXJjZUFscGhhJyByZXN1bHQ9J3NoYWRvd09mZnNldE91dGVyMSc+PC9mZU9mZnNldD5cblx0ICAgICAgICAgICAgPGZlR2F1c3NpYW5CbHVyIHN0ZERldmlhdGlvbj0nMScgaW49J3NoYWRvd09mZnNldE91dGVyMScgcmVzdWx0PSdzaGFkb3dCbHVyT3V0ZXIxJz48L2ZlR2F1c3NpYW5CbHVyPlxuXHQgICAgICAgICAgICA8ZmVDb2xvck1hdHJpeCB2YWx1ZXM9JzAgMCAwIDAgMCAgIDAgMCAwIDAgMCAgIDAgMCAwIDAgMCAgMCAwIDAgMC4yNSAwJyB0eXBlPSdtYXRyaXgnIGluPSdzaGFkb3dCbHVyT3V0ZXIxJz48L2ZlQ29sb3JNYXRyaXg+XG5cdCAgICAgICAgPC9maWx0ZXI+XG5cdCAgICA8L2RlZnM+XG5cdCAgICA8ZyBpZD0nUGFnZS0xJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJz5cblx0ICAgICAgICA8ZyBpZD0nSG9tZS1TY3JlZW4t4oCiLWlQaG9uZS1TRScgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTI0NC4wMDAwMDAsIC0xMTUuMDAwMDAwKSc+XG5cdCAgICAgICAgICAgIDxnIGlkPSdIb21lLVNjcmVlbi3igKItaVBob25lLTZzLUNvcHknIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDAuMDAwMDAwLCAyNy4wMDAwMDApJz5cblx0ICAgICAgICAgICAgICAgIDxnIGlkPSdOZXdzJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgyNDQuMDAwMDAwLCA4OC4wMDAwMDApJz5cblx0ICAgICAgICAgICAgICAgICAgICA8cmVjdCBpZD0nQkcnIGZpbGw9J3VybCgjbGluZWFyR3JhZGllbnQtMSknIHg9JzAnIHk9JzAnIHdpZHRoPSc2MCcgaGVpZ2h0PSc2MCcgcng9JzE0Jz48L3JlY3Q+XG5cdCAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0nTTgsNDUuOTE2NTI2MiBMOCwxNi45OTUzNzY0IEM4LDE2LjQ0NTY0NTIgOC40NTUyNjI4OCwxNiA4Ljk5NTQ1NzAzLDE2IEwzMi4wMDQ1NDMsMTYgQzMyLjU1NDMxODcsMTYgMzMsMTYuNDUyMzYyMSAzMywxNi45OTI3ODY0IEwzMyw0Ny4wMDcyMTM2IEMzMyw0Ny41NTU1MTQ0IDMyLjU0NDczNzEsNDggMzIuMDA0NTQzLDQ4IEwxMC45OTA3NTIyLDQ4IEM5LjMzOTAwNTM4LDQ4IDgsNDYuNjU2OTQ3NSA4LDQ1LjkxNjUyNjIgTDgsNDUuOTE2NTI2MiBaJyBpZD0nRm9sZCcgZmlsbD0nI0ZGRkZGRic+PC9wYXRoPlxuXHQgICAgICAgICAgICAgICAgICAgIDxtYXNrIGlkPSdtYXNrLTMnIGZpbGw9J3doaXRlJz5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgPHVzZSB4bGluazpocmVmPScjcGF0aC0yJz48L3VzZT5cblx0ICAgICAgICAgICAgICAgICAgICA8L21hc2s+XG5cdCAgICAgICAgICAgICAgICAgICAgPGcgaWQ9J01hc2snPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICA8dXNlIGZpbGw9J2JsYWNrJyBmaWxsLW9wYWNpdHk9JzEnIGZpbHRlcj0ndXJsKCNmaWx0ZXItNCknIHhsaW5rOmhyZWY9JyNwYXRoLTInPjwvdXNlPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICA8dXNlIGZpbGw9JyNGRkZGRkYnIGZpbGwtcnVsZT0nZXZlbm9kZCcgeGxpbms6aHJlZj0nI3BhdGgtMic+PC91c2U+XG5cdCAgICAgICAgICAgICAgICAgICAgPC9nPlxuXHQgICAgICAgICAgICAgICAgICAgIDxyZWN0IGlkPSdsaW5lcycgZmlsbD0nI0JEQkRCRCcgbWFzaz0ndXJsKCNtYXNrLTMpJyB4PScxNycgeT0nMzUnIHdpZHRoPSczMycgaGVpZ2h0PScyJyByeD0nMSc+PC9yZWN0PlxuXHQgICAgICAgICAgICAgICAgICAgIDxyZWN0IGlkPSdsaW5lcycgZmlsbD0nI0JEQkRCRCcgbWFzaz0ndXJsKCNtYXNrLTMpJyB4PScxNycgeT0nMzknIHdpZHRoPSczMycgaGVpZ2h0PScyJyByeD0nMSc+PC9yZWN0PlxuXHQgICAgICAgICAgICAgICAgICAgIDxyZWN0IGlkPSdsaW5lcycgZmlsbD0nI0JEQkRCRCcgbWFzaz0ndXJsKCNtYXNrLTMpJyB4PScxNycgeT0nNDMnIHdpZHRoPSczMycgaGVpZ2h0PScyJyByeD0nMSc+PC9yZWN0PlxuXHQgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9J00xNiwyMC4xMjEzMjAzIEwxNiwxNi45OTc2NTY3IEMxNiwxNi40NDY2NjYxIDE2LjQ0MTA1MzUsMTYgMTYuOTk3NjU2NywxNiBMMjAuMTIxMzIwMywxNiBMMjAsMTYuMTIxMzIwMyBMMzEsMjcuMTIxMzIwMyBMMzEsMzAuMDAxMTQzNiBDMzEsMzAuNTUyNzk2OCAzMC41NTUwNjYxLDMxIDMwLjAwMTE0MzYsMzEgTDI3LjEyMTMyMDMsMzEgTDE2LjEyMTMyMDMsMjAgTDE2LDIwLjEyMTMyMDMgTDE2LDIwLjEyMTMyMDMgWiBNMTYsMjkuOTk5NzgwOSBDMTYsMzAuNTUyMTg2NyAxNi40NTEzMjk0LDMxIDE3LjAwMDIxOTEsMzEgTDIxLjg3ODQ2MDYsMzEgQzIyLjQzMDg2NjMsMzEgMjIuNTY1MjQyNywzMC42ODY1NjMxIDIyLjE2ODQ0ODQsMzAuMjg5NzY4OCBMMTYuNzEwMjMxMiwyNC44MzE1NTE2IEMxNi4zMTc5ODE0LDI0LjQzOTMwMTcgMTYsMjQuNTcyNjQ5NyAxNiwyNS4xMjE1Mzk0IEwxNiwyOS45OTk3ODA5IFogTTI5Ljk5OTc4MDksMTYgQzMwLjU1MjE4NjcsMTYgMzEsMTYuNDUxMzI5NCAzMSwxNy4wMDAyMTkxIEwzMSwyMS44Nzg0NjA2IEMzMSwyMi40MzA4NjYzIDMwLjY4NzM4NTUsMjIuNTY2MDY1MiAzMC4yOTU2OTg5LDIyLjE3NDM3ODUgTDI5LjU5MTM5NzcsMjEuNDcwMDc3NCBMMjQuODI1MjM5LDE2LjcwMzkxODYgQzI0LjQzNjQ3NTQsMTYuMzE1MTU1MSAyNC41NzI2NDk3LDE2IDI1LjEyMTUzOTQsMTYgTDI5Ljk5OTc4MDksMTYgWicgaWQ9J0xvZ28nIGZpbGw9JyNGRDRDNjEnIG1hc2s9J3VybCgjbWFzay0zKSc+PC9wYXRoPlxuXHQgICAgICAgICAgICAgICAgPC9nPlxuXHQgICAgICAgICAgICA8L2c+XG5cdCAgICAgICAgPC9nPlxuXHQgICAgPC9nPlxuXHQ8L3N2Zz5cIlxuXHR3YWxsZXRfYXBwOlwiPD94bWwgdmVyc2lvbj0nMS4wJyBlbmNvZGluZz0nVVRGLTgnIHN0YW5kYWxvbmU9J25vJz8+XG5cdDxzdmcgd2lkdGg9JzYwcHgnIGhlaWdodD0nNjBweCcgdmlld0JveD0nMCAwIDYwIDYwJyB2ZXJzaW9uPScxLjEnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgeG1sbnM6eGxpbms9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnPlxuXHQgICAgPCEtLSBHZW5lcmF0b3I6IFNrZXRjaCAzOS4xICgzMTcyMCkgLSBodHRwOi8vd3d3LmJvaGVtaWFuY29kaW5nLmNvbS9za2V0Y2ggLS0+XG5cdCAgICA8dGl0bGU+V2FsbGV0PC90aXRsZT5cblx0ICAgIDxkZXNjPkNyZWF0ZWQgd2l0aCBTa2V0Y2guPC9kZXNjPlxuXHQgICAgPGRlZnM+XG5cdCAgICAgICAgPGxpbmVhckdyYWRpZW50IHgxPSc1MCUnIHkxPScwJScgeDI9JzUwJScgeTI9JzEwMCUnIGlkPSdsaW5lYXJHcmFkaWVudC0xJz5cblx0ICAgICAgICAgICAgPHN0b3Agc3RvcC1jb2xvcj0nIzFFMUUxRicgb2Zmc2V0PScwJSc+PC9zdG9wPlxuXHQgICAgICAgICAgICA8c3RvcCBzdG9wLWNvbG9yPScjMUUxRTFGJyBvZmZzZXQ9JzEwMCUnPjwvc3RvcD5cblx0ICAgICAgICA8L2xpbmVhckdyYWRpZW50PlxuXHQgICAgICAgIDxyZWN0IGlkPSdwYXRoLTInIHg9JzknIHk9JzE1JyB3aWR0aD0nNDInIGhlaWdodD0nMTMnIHJ4PScyJz48L3JlY3Q+XG5cdCAgICAgICAgPGZpbHRlciB4PSctNTAlJyB5PSctNTAlJyB3aWR0aD0nMjAwJScgaGVpZ2h0PScyMDAlJyBmaWx0ZXJVbml0cz0nb2JqZWN0Qm91bmRpbmdCb3gnIGlkPSdmaWx0ZXItMyc+XG5cdCAgICAgICAgICAgIDxmZU9mZnNldCBkeD0nMCcgZHk9JzAnIGluPSdTb3VyY2VBbHBoYScgcmVzdWx0PSdzaGFkb3dPZmZzZXRPdXRlcjEnPjwvZmVPZmZzZXQ+XG5cdCAgICAgICAgICAgIDxmZUdhdXNzaWFuQmx1ciBzdGREZXZpYXRpb249JzAuNScgaW49J3NoYWRvd09mZnNldE91dGVyMScgcmVzdWx0PSdzaGFkb3dCbHVyT3V0ZXIxJz48L2ZlR2F1c3NpYW5CbHVyPlxuXHQgICAgICAgICAgICA8ZmVDb2xvck1hdHJpeCB2YWx1ZXM9JzAgMCAwIDAgMCAgIDAgMCAwIDAgMCAgIDAgMCAwIDAgMCAgMCAwIDAgMC4xIDAnIHR5cGU9J21hdHJpeCcgaW49J3NoYWRvd0JsdXJPdXRlcjEnPjwvZmVDb2xvck1hdHJpeD5cblx0ICAgICAgICA8L2ZpbHRlcj5cblx0ICAgICAgICA8cmVjdCBpZD0ncGF0aC00JyB4PSc5JyB5PScxOCcgd2lkdGg9JzQyJyBoZWlnaHQ9JzEzJyByeD0nMic+PC9yZWN0PlxuXHQgICAgICAgIDxmaWx0ZXIgeD0nLTUwJScgeT0nLTUwJScgd2lkdGg9JzIwMCUnIGhlaWdodD0nMjAwJScgZmlsdGVyVW5pdHM9J29iamVjdEJvdW5kaW5nQm94JyBpZD0nZmlsdGVyLTUnPlxuXHQgICAgICAgICAgICA8ZmVPZmZzZXQgZHg9JzAnIGR5PScwJyBpbj0nU291cmNlQWxwaGEnIHJlc3VsdD0nc2hhZG93T2Zmc2V0T3V0ZXIxJz48L2ZlT2Zmc2V0PlxuXHQgICAgICAgICAgICA8ZmVHYXVzc2lhbkJsdXIgc3RkRGV2aWF0aW9uPScwLjUnIGluPSdzaGFkb3dPZmZzZXRPdXRlcjEnIHJlc3VsdD0nc2hhZG93Qmx1ck91dGVyMSc+PC9mZUdhdXNzaWFuQmx1cj5cblx0ICAgICAgICAgICAgPGZlQ29sb3JNYXRyaXggdmFsdWVzPScwIDAgMCAwIDAgICAwIDAgMCAwIDAgICAwIDAgMCAwIDAgIDAgMCAwIDAuMSAwJyB0eXBlPSdtYXRyaXgnIGluPSdzaGFkb3dCbHVyT3V0ZXIxJz48L2ZlQ29sb3JNYXRyaXg+XG5cdCAgICAgICAgPC9maWx0ZXI+XG5cdCAgICAgICAgPHJlY3QgaWQ9J3BhdGgtNicgeD0nOScgeT0nMjEnIHdpZHRoPSc0MicgaGVpZ2h0PScxMycgcng9JzInPjwvcmVjdD5cblx0ICAgICAgICA8ZmlsdGVyIHg9Jy01MCUnIHk9Jy01MCUnIHdpZHRoPScyMDAlJyBoZWlnaHQ9JzIwMCUnIGZpbHRlclVuaXRzPSdvYmplY3RCb3VuZGluZ0JveCcgaWQ9J2ZpbHRlci03Jz5cblx0ICAgICAgICAgICAgPGZlT2Zmc2V0IGR4PScwJyBkeT0nMCcgaW49J1NvdXJjZUFscGhhJyByZXN1bHQ9J3NoYWRvd09mZnNldE91dGVyMSc+PC9mZU9mZnNldD5cblx0ICAgICAgICAgICAgPGZlR2F1c3NpYW5CbHVyIHN0ZERldmlhdGlvbj0nMC41JyBpbj0nc2hhZG93T2Zmc2V0T3V0ZXIxJyByZXN1bHQ9J3NoYWRvd0JsdXJPdXRlcjEnPjwvZmVHYXVzc2lhbkJsdXI+XG5cdCAgICAgICAgICAgIDxmZUNvbG9yTWF0cml4IHZhbHVlcz0nMCAwIDAgMCAwICAgMCAwIDAgMCAwICAgMCAwIDAgMCAwICAwIDAgMCAwLjEgMCcgdHlwZT0nbWF0cml4JyBpbj0nc2hhZG93Qmx1ck91dGVyMSc+PC9mZUNvbG9yTWF0cml4PlxuXHQgICAgICAgIDwvZmlsdGVyPlxuXHQgICAgICAgIDxyZWN0IGlkPSdwYXRoLTgnIHg9JzknIHk9JzI1JyB3aWR0aD0nNDInIGhlaWdodD0nMTMnIHJ4PScyJz48L3JlY3Q+XG5cdCAgICAgICAgPGZpbHRlciB4PSctNTAlJyB5PSctNTAlJyB3aWR0aD0nMjAwJScgaGVpZ2h0PScyMDAlJyBmaWx0ZXJVbml0cz0nb2JqZWN0Qm91bmRpbmdCb3gnIGlkPSdmaWx0ZXItOSc+XG5cdCAgICAgICAgICAgIDxmZU9mZnNldCBkeD0nMCcgZHk9JzAnIGluPSdTb3VyY2VBbHBoYScgcmVzdWx0PSdzaGFkb3dPZmZzZXRPdXRlcjEnPjwvZmVPZmZzZXQ+XG5cdCAgICAgICAgICAgIDxmZUdhdXNzaWFuQmx1ciBzdGREZXZpYXRpb249JzAuNScgaW49J3NoYWRvd09mZnNldE91dGVyMScgcmVzdWx0PSdzaGFkb3dCbHVyT3V0ZXIxJz48L2ZlR2F1c3NpYW5CbHVyPlxuXHQgICAgICAgICAgICA8ZmVDb2xvck1hdHJpeCB2YWx1ZXM9JzAgMCAwIDAgMCAgIDAgMCAwIDAgMCAgIDAgMCAwIDAgMCAgMCAwIDAgMC4xIDAnIHR5cGU9J21hdHJpeCcgaW49J3NoYWRvd0JsdXJPdXRlcjEnPjwvZmVDb2xvck1hdHJpeD5cblx0ICAgICAgICA8L2ZpbHRlcj5cblx0ICAgICAgICA8cGF0aCBkPSdNNywyOCBMNyw0MiBMNTMsNDIgTDUzLDI4IEwzOC45MDY1MDczLDI4IEMzNy43OTgzMzM5LDI4IDM2LjMwNTc1NTgsMjguNjcyMjIyOSAzNS41NTAxMjM3LDI5LjQ3ODQ4ODIgQzM1LjU1MDEyMzcsMjkuNDc4NDg4MiAzMi40MTg5NTc5LDMzLjMwNzY5MjMgMzAsMzMuMzA3NjkyMyBDMjcuNTgxMDQyMSwzMy4zMDc2OTIzIDI0LjQ0OTg3NjMsMjkuNDc4NDg4MiAyNC40NDk4NzYzLDI5LjQ3ODQ4ODIgQzIzLjcwNDM3MDIsMjguNjYxOTQxNyAyMi4yMTE0NzgxLDI4IDIxLjA5MzQ5MjcsMjggTDcsMjggWicgaWQ9J3BhdGgtMTAnPjwvcGF0aD5cblx0ICAgICAgICA8ZmlsdGVyIHg9Jy01MCUnIHk9Jy01MCUnIHdpZHRoPScyMDAlJyBoZWlnaHQ9JzIwMCUnIGZpbHRlclVuaXRzPSdvYmplY3RCb3VuZGluZ0JveCcgaWQ9J2ZpbHRlci0xMSc+XG5cdCAgICAgICAgICAgIDxmZU9mZnNldCBkeD0nMCcgZHk9Jy0xJyBpbj0nU291cmNlQWxwaGEnIHJlc3VsdD0nc2hhZG93T2Zmc2V0T3V0ZXIxJz48L2ZlT2Zmc2V0PlxuXHQgICAgICAgICAgICA8ZmVHYXVzc2lhbkJsdXIgc3RkRGV2aWF0aW9uPScxJyBpbj0nc2hhZG93T2Zmc2V0T3V0ZXIxJyByZXN1bHQ9J3NoYWRvd0JsdXJPdXRlcjEnPjwvZmVHYXVzc2lhbkJsdXI+XG5cdCAgICAgICAgICAgIDxmZUNvbG9yTWF0cml4IHZhbHVlcz0nMCAwIDAgMCAwICAgMCAwIDAgMCAwICAgMCAwIDAgMCAwICAwIDAgMCAwLjEgMCcgdHlwZT0nbWF0cml4JyBpbj0nc2hhZG93Qmx1ck91dGVyMSc+PC9mZUNvbG9yTWF0cml4PlxuXHQgICAgICAgIDwvZmlsdGVyPlxuXHQgICAgPC9kZWZzPlxuXHQgICAgPGcgaWQ9J1BhZ2UtMScgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCc+XG5cdCAgICAgICAgPGcgaWQ9J0hvbWUtU2NyZWVuLeKAoi1pUGhvbmUtU0UnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKC0xNi4wMDAwMDAsIC0yMDMuMDAwMDAwKSc+XG5cdCAgICAgICAgICAgIDxnIGlkPSdIb21lLVNjcmVlbi3igKItaVBob25lLTZzLUNvcHknIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDAuMDAwMDAwLCAyNy4wMDAwMDApJz5cblx0ICAgICAgICAgICAgICAgIDxnIGlkPSdXYWxsZXQnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDE2LjAwMDAwMCwgMTc2LjAwMDAwMCknPlxuXHQgICAgICAgICAgICAgICAgICAgIDxyZWN0IGlkPSdCRycgZmlsbD0ndXJsKCNsaW5lYXJHcmFkaWVudC0xKScgeD0nMCcgeT0nMCcgd2lkdGg9JzYwJyBoZWlnaHQ9JzYwJyByeD0nMTQnPjwvcmVjdD5cblx0ICAgICAgICAgICAgICAgICAgICA8cmVjdCBpZD0nd2FsbGV0JyBmaWxsPScjRDlENkNDJyB4PSc3JyB5PScxMicgd2lkdGg9JzQ2JyBoZWlnaHQ9JzM0JyByeD0nNCc+PC9yZWN0PlxuXHQgICAgICAgICAgICAgICAgICAgIDxnIGlkPSdjYXJkcyc+XG5cdCAgICAgICAgICAgICAgICAgICAgICAgIDx1c2UgZmlsbD0nYmxhY2snIGZpbGwtb3BhY2l0eT0nMScgZmlsdGVyPSd1cmwoI2ZpbHRlci0zKScgeGxpbms6aHJlZj0nI3BhdGgtMic+PC91c2U+XG5cdCAgICAgICAgICAgICAgICAgICAgICAgIDx1c2UgZmlsbD0nIzNCOTlDOScgZmlsbC1ydWxlPSdldmVub2RkJyB4bGluazpocmVmPScjcGF0aC0yJz48L3VzZT5cblx0ICAgICAgICAgICAgICAgICAgICA8L2c+XG5cdCAgICAgICAgICAgICAgICAgICAgPGcgaWQ9J2NhcmRzJz5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgPHVzZSBmaWxsPSdibGFjaycgZmlsbC1vcGFjaXR5PScxJyBmaWx0ZXI9J3VybCgjZmlsdGVyLTUpJyB4bGluazpocmVmPScjcGF0aC00Jz48L3VzZT5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgPHVzZSBmaWxsPScjRkZCMDAzJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnIHhsaW5rOmhyZWY9JyNwYXRoLTQnPjwvdXNlPlxuXHQgICAgICAgICAgICAgICAgICAgIDwvZz5cblx0ICAgICAgICAgICAgICAgICAgICA8ZyBpZD0nY2FyZHMnPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICA8dXNlIGZpbGw9J2JsYWNrJyBmaWxsLW9wYWNpdHk9JzEnIGZpbHRlcj0ndXJsKCNmaWx0ZXItNyknIHhsaW5rOmhyZWY9JyNwYXRoLTYnPjwvdXNlPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICA8dXNlIGZpbGw9JyM1MEJFM0QnIGZpbGwtcnVsZT0nZXZlbm9kZCcgeGxpbms6aHJlZj0nI3BhdGgtNic+PC91c2U+XG5cdCAgICAgICAgICAgICAgICAgICAgPC9nPlxuXHQgICAgICAgICAgICAgICAgICAgIDxnIGlkPSdjYXJkcyc+XG5cdCAgICAgICAgICAgICAgICAgICAgICAgIDx1c2UgZmlsbD0nYmxhY2snIGZpbGwtb3BhY2l0eT0nMScgZmlsdGVyPSd1cmwoI2ZpbHRlci05KScgeGxpbms6aHJlZj0nI3BhdGgtOCc+PC91c2U+XG5cdCAgICAgICAgICAgICAgICAgICAgICAgIDx1c2UgZmlsbD0nI0YxNkM1RScgZmlsbC1ydWxlPSdldmVub2RkJyB4bGluazpocmVmPScjcGF0aC04Jz48L3VzZT5cblx0ICAgICAgICAgICAgICAgICAgICA8L2c+XG5cdCAgICAgICAgICAgICAgICAgICAgPGcgaWQ9J0NvbWJpbmVkLVNoYXBlJz5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgPHVzZSBmaWxsPSdibGFjaycgZmlsbC1vcGFjaXR5PScxJyBmaWx0ZXI9J3VybCgjZmlsdGVyLTExKScgeGxpbms6aHJlZj0nI3BhdGgtMTAnPjwvdXNlPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICA8dXNlIGZpbGw9JyNEOUQ2Q0MnIGZpbGwtcnVsZT0nZXZlbm9kZCcgeGxpbms6aHJlZj0nI3BhdGgtMTAnPjwvdXNlPlxuXHQgICAgICAgICAgICAgICAgICAgIDwvZz5cblx0ICAgICAgICAgICAgICAgIDwvZz5cblx0ICAgICAgICAgICAgPC9nPlxuXHQgICAgICAgIDwvZz5cblx0ICAgIDwvZz5cblx0PC9zdmc+XCJcblx0bm90ZXNfYXBwOlwiPD94bWwgdmVyc2lvbj0nMS4wJyBlbmNvZGluZz0nVVRGLTgnIHN0YW5kYWxvbmU9J25vJz8+XG5cdDxzdmcgd2lkdGg9JzYwcHgnIGhlaWdodD0nNjBweCcgdmlld0JveD0nMCAwIDYwIDYwJyB2ZXJzaW9uPScxLjEnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgeG1sbnM6eGxpbms9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnPlxuXHQgICAgPCEtLSBHZW5lcmF0b3I6IFNrZXRjaCAzOS4xICgzMTcyMCkgLSBodHRwOi8vd3d3LmJvaGVtaWFuY29kaW5nLmNvbS9za2V0Y2ggLS0+XG5cdCAgICA8dGl0bGU+Tm90ZXM8L3RpdGxlPlxuXHQgICAgPGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+XG5cdCAgICA8ZGVmcz5cblx0ICAgICAgICA8bGluZWFyR3JhZGllbnQgeDE9JzUwJScgeTE9JzAlJyB4Mj0nNTAlJyB5Mj0nMTAwJScgaWQ9J2xpbmVhckdyYWRpZW50LTEnPlxuXHQgICAgICAgICAgICA8c3RvcCBzdG9wLWNvbG9yPScjRjhGOEY4JyBvZmZzZXQ9JzAlJz48L3N0b3A+XG5cdCAgICAgICAgICAgIDxzdG9wIHN0b3AtY29sb3I9JyNFREVERUQnIG9mZnNldD0nMTAwJSc+PC9zdG9wPlxuXHQgICAgICAgIDwvbGluZWFyR3JhZGllbnQ+XG5cdCAgICAgICAgPHBhdGggZD0nTTM5LjA4MTUsMCBDNDUuMTA1LDAgNDguMTE2LDAgNTEuMzU4NSwxLjAyNSBDNTQuODk4NSwyLjMxMzUgNTcuNjg2NSw1LjEwMTUgNTguOTc1LDguNjQxNSBDNjAsMTEuODgzNSA2MCwxNC44OTU1IDYwLDIwLjkxODUgTDYwLDM5LjA4MTUgQzYwLDQ1LjEwNSA2MCw0OC4xMTYgNTguOTc1LDUxLjM1ODUgQzU3LjY4NjUsNTQuODk4NSA1NC44OTg1LDU3LjY4NjUgNTEuMzU4NSw1OC45NzQ1IEM0OC4xMTYsNjAgNDUuMTA1LDYwIDM5LjA4MTUsNjAgTDIwLjkxODUsNjAgQzE0Ljg5NSw2MCAxMS44ODM1LDYwIDguNjQxNSw1OC45NzQ1IEM1LjEwMTUsNTcuNjg2NSAyLjMxMzUsNTQuODk4NSAxLjAyNSw1MS4zNTg1IEMwLDQ4LjExNiAwLDQ1LjEwNSAwLDM5LjA4MTUgTDAsMjAuOTE4NSBDMCwxNC44OTU1IDAsMTEuODgzNSAxLjAyNSw4LjY0MTUgQzIuMzEzNSw1LjEwMTUgNS4xMDE1LDIuMzEzNSA4LjY0MTUsMS4wMjUgQzExLjg4MzUsMCAxNC44OTUsMCAyMC45MTg1LDAgTDM5LjA4MTUsMCBaJyBpZD0ncGF0aC0yJz48L3BhdGg+XG5cdCAgICAgICAgPGxpbmVhckdyYWRpZW50IHgxPSc1MCUnIHkxPScwJScgeDI9JzUwJScgeTI9JzEwMCUnIGlkPSdsaW5lYXJHcmFkaWVudC00Jz5cblx0ICAgICAgICAgICAgPHN0b3Agc3RvcC1jb2xvcj0nI0ZGREY2Mycgb2Zmc2V0PScwJSc+PC9zdG9wPlxuXHQgICAgICAgICAgICA8c3RvcCBzdG9wLWNvbG9yPScjRkZDRDAyJyBvZmZzZXQ9JzEwMCUnPjwvc3RvcD5cblx0ICAgICAgICA8L2xpbmVhckdyYWRpZW50PlxuXHQgICAgICAgIDxyZWN0IGlkPSdwYXRoLTUnIHg9JzAnIHk9Jy0xJyB3aWR0aD0nNjAnIGhlaWdodD0nMjAnPjwvcmVjdD5cblx0ICAgICAgICA8ZmlsdGVyIHg9Jy01MCUnIHk9Jy01MCUnIHdpZHRoPScyMDAlJyBoZWlnaHQ9JzIwMCUnIGZpbHRlclVuaXRzPSdvYmplY3RCb3VuZGluZ0JveCcgaWQ9J2ZpbHRlci02Jz5cblx0ICAgICAgICAgICAgPGZlT2Zmc2V0IGR4PScwJyBkeT0nMC41JyBpbj0nU291cmNlQWxwaGEnIHJlc3VsdD0nc2hhZG93T2Zmc2V0T3V0ZXIxJz48L2ZlT2Zmc2V0PlxuXHQgICAgICAgICAgICA8ZmVHYXVzc2lhbkJsdXIgc3RkRGV2aWF0aW9uPScwLjUnIGluPSdzaGFkb3dPZmZzZXRPdXRlcjEnIHJlc3VsdD0nc2hhZG93Qmx1ck91dGVyMSc+PC9mZUdhdXNzaWFuQmx1cj5cblx0ICAgICAgICAgICAgPGZlQ29sb3JNYXRyaXggdmFsdWVzPScwIDAgMCAwIDAgICAwIDAgMCAwIDAgICAwIDAgMCAwIDAgIDAgMCAwIDAuMyAwJyB0eXBlPSdtYXRyaXgnIGluPSdzaGFkb3dCbHVyT3V0ZXIxJz48L2ZlQ29sb3JNYXRyaXg+XG5cdCAgICAgICAgPC9maWx0ZXI+XG5cdCAgICAgICAgPGZpbHRlciB4PSctNTAlJyB5PSctNTAlJyB3aWR0aD0nMjAwJScgaGVpZ2h0PScyMDAlJyBmaWx0ZXJVbml0cz0nb2JqZWN0Qm91bmRpbmdCb3gnIGlkPSdmaWx0ZXItNyc+XG5cdCAgICAgICAgICAgIDxmZU9mZnNldCBkeD0nMCcgZHk9Jy0wLjUnIGluPSdTb3VyY2VBbHBoYScgcmVzdWx0PSdzaGFkb3dPZmZzZXRJbm5lcjEnPjwvZmVPZmZzZXQ+XG5cdCAgICAgICAgICAgIDxmZUNvbXBvc2l0ZSBpbj0nc2hhZG93T2Zmc2V0SW5uZXIxJyBpbjI9J1NvdXJjZUFscGhhJyBvcGVyYXRvcj0nYXJpdGhtZXRpYycgazI9Jy0xJyBrMz0nMScgcmVzdWx0PSdzaGFkb3dJbm5lcklubmVyMSc+PC9mZUNvbXBvc2l0ZT5cblx0ICAgICAgICAgICAgPGZlQ29sb3JNYXRyaXggdmFsdWVzPScwIDAgMCAwIDAgICAwIDAgMCAwIDAgICAwIDAgMCAwIDAgIDAgMCAwIDAuMiAwJyB0eXBlPSdtYXRyaXgnIGluPSdzaGFkb3dJbm5lcklubmVyMSc+PC9mZUNvbG9yTWF0cml4PlxuXHQgICAgICAgIDwvZmlsdGVyPlxuXHQgICAgPC9kZWZzPlxuXHQgICAgPGcgaWQ9J1BhZ2UtMScgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCc+XG5cdCAgICAgICAgPGcgaWQ9J0hvbWUtU2NyZWVuLeKAoi1pUGhvbmUtU0UnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKC05Mi4wMDAwMDAsIC0yMDMuMDAwMDAwKSc+XG5cdCAgICAgICAgICAgIDxnIGlkPSdIb21lLVNjcmVlbi3igKItaVBob25lLTZzLUNvcHknIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDAuMDAwMDAwLCAyNy4wMDAwMDApJz5cblx0ICAgICAgICAgICAgICAgIDxnIGlkPSdOb3RlcycgdHJhbnNmb3JtPSd0cmFuc2xhdGUoOTIuMDAwMDAwLCAxNzYuMDAwMDAwKSc+XG5cdCAgICAgICAgICAgICAgICAgICAgPG1hc2sgaWQ9J21hc2stMycgZmlsbD0nd2hpdGUnPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICA8dXNlIHhsaW5rOmhyZWY9JyNwYXRoLTInPjwvdXNlPlxuXHQgICAgICAgICAgICAgICAgICAgIDwvbWFzaz5cblx0ICAgICAgICAgICAgICAgICAgICA8dXNlIGlkPSdCRycgZmlsbD0ndXJsKCNsaW5lYXJHcmFkaWVudC0xKScgeGxpbms6aHJlZj0nI3BhdGgtMic+PC91c2U+XG5cdCAgICAgICAgICAgICAgICAgICAgPGcgaWQ9J2hlYWRlcicgbWFzaz0ndXJsKCNtYXNrLTMpJz5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgPHVzZSBmaWxsPSdibGFjaycgZmlsbC1vcGFjaXR5PScxJyBmaWx0ZXI9J3VybCgjZmlsdGVyLTYpJyB4bGluazpocmVmPScjcGF0aC01Jz48L3VzZT5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgPHVzZSBmaWxsPSd1cmwoI2xpbmVhckdyYWRpZW50LTQpJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnIHhsaW5rOmhyZWY9JyNwYXRoLTUnPjwvdXNlPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICA8dXNlIGZpbGw9J2JsYWNrJyBmaWxsLW9wYWNpdHk9JzEnIGZpbHRlcj0ndXJsKCNmaWx0ZXItNyknIHhsaW5rOmhyZWY9JyNwYXRoLTUnPjwvdXNlPlxuXHQgICAgICAgICAgICAgICAgICAgIDwvZz5cblx0ICAgICAgICAgICAgICAgICAgICA8cG9seWdvbiBpZD0nbGluZScgZmlsbD0nI0I3QjdCNycgbWFzaz0ndXJsKCNtYXNrLTMpJyBwb2ludHM9JzU5Ljc1IDMwLjUgNjAgMzAuNSA2MCAzMCA1OS43NSAzMCAtMC4yNSAzMCAtMC41IDMwIC0wLjUgMzAuNSAtMC4yNSAzMC41Jz48L3BvbHlnb24+XG5cdCAgICAgICAgICAgICAgICAgICAgPHBvbHlnb24gaWQ9J2xpbmUnIGZpbGw9JyNCN0I3QjcnIG1hc2s9J3VybCgjbWFzay0zKScgcG9pbnRzPSc1OS43NSA0MS41IDYwIDQxLjUgNjAgNDEgNTkuNzUgNDEgLTAuMjUgNDEgLTAuNSA0MSAtMC41IDQxLjUgLTAuMjUgNDEuNSc+PC9wb2x5Z29uPlxuXHQgICAgICAgICAgICAgICAgICAgIDxwb2x5Z29uIGlkPSdsaW5lJyBmaWxsPScjQjdCN0I3JyBtYXNrPSd1cmwoI21hc2stMyknIHBvaW50cz0nNTkuNzUgNTMgNjAgNTMgNjAgNTIuNSA1OS43NSA1Mi41IC0wLjI1IDUyLjUgLTAuNSA1Mi41IC0wLjUgNTMgLTAuMjUgNTMnPjwvcG9seWdvbj5cblx0ICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSdNNTguNSwyMiBMNTkuNSwyMiBMNTkuNSwyMyBMNTguNSwyMyBMNTguNSwyMiBMNTguNSwyMiBaIE01Ni41LDIyIEw1Ny41LDIyIEw1Ny41LDIzIEw1Ni41LDIzIEw1Ni41LDIyIEw1Ni41LDIyIFogTTU0LjUsMjIgTDU1LjUsMjIgTDU1LjUsMjMgTDU0LjUsMjMgTDU0LjUsMjIgTDU0LjUsMjIgWiBNNTIuNSwyMiBMNTMuNSwyMiBMNTMuNSwyMyBMNTIuNSwyMyBMNTIuNSwyMiBMNTIuNSwyMiBaIE01MC41LDIyIEw1MS41LDIyIEw1MS41LDIzIEw1MC41LDIzIEw1MC41LDIyIEw1MC41LDIyIFogTTQ4LjUsMjIgTDQ5LjUsMjIgTDQ5LjUsMjMgTDQ4LjUsMjMgTDQ4LjUsMjIgTDQ4LjUsMjIgWiBNNDYuNSwyMiBMNDcuNSwyMiBMNDcuNSwyMyBMNDYuNSwyMyBMNDYuNSwyMiBMNDYuNSwyMiBaIE00NC41LDIyIEw0NS41LDIyIEw0NS41LDIzIEw0NC41LDIzIEw0NC41LDIyIEw0NC41LDIyIFogTTQyLjUsMjIgTDQzLjUsMjIgTDQzLjUsMjMgTDQyLjUsMjMgTDQyLjUsMjIgTDQyLjUsMjIgWiBNNDAuNSwyMiBMNDEuNSwyMiBMNDEuNSwyMyBMNDAuNSwyMyBMNDAuNSwyMiBMNDAuNSwyMiBaIE0zOC41LDIyIEwzOS41LDIyIEwzOS41LDIzIEwzOC41LDIzIEwzOC41LDIyIEwzOC41LDIyIFogTTM2LjUsMjIgTDM3LjUsMjIgTDM3LjUsMjMgTDM2LjUsMjMgTDM2LjUsMjIgTDM2LjUsMjIgWiBNMzQuNSwyMiBMMzUuNSwyMiBMMzUuNSwyMyBMMzQuNSwyMyBMMzQuNSwyMiBMMzQuNSwyMiBaIE0zMi41LDIyIEwzMy41LDIyIEwzMy41LDIzIEwzMi41LDIzIEwzMi41LDIyIEwzMi41LDIyIFogTTMwLjUsMjIgTDMxLjUsMjIgTDMxLjUsMjMgTDMwLjUsMjMgTDMwLjUsMjIgTDMwLjUsMjIgWiBNMjguNSwyMiBMMjkuNSwyMiBMMjkuNSwyMyBMMjguNSwyMyBMMjguNSwyMiBMMjguNSwyMiBaIE0yNi41LDIyIEwyNy41LDIyIEwyNy41LDIzIEwyNi41LDIzIEwyNi41LDIyIEwyNi41LDIyIFogTTI0LjUsMjIgTDI1LjUsMjIgTDI1LjUsMjMgTDI0LjUsMjMgTDI0LjUsMjIgTDI0LjUsMjIgWiBNMjIuNSwyMiBMMjMuNSwyMiBMMjMuNSwyMyBMMjIuNSwyMyBMMjIuNSwyMiBMMjIuNSwyMiBaIE0yMC41LDIyIEwyMS41LDIyIEwyMS41LDIzIEwyMC41LDIzIEwyMC41LDIyIEwyMC41LDIyIFogTTE4LjUsMjIgTDE5LjUsMjIgTDE5LjUsMjMgTDE4LjUsMjMgTDE4LjUsMjIgTDE4LjUsMjIgWiBNMTYuNSwyMiBMMTcuNSwyMiBMMTcuNSwyMyBMMTYuNSwyMyBMMTYuNSwyMiBMMTYuNSwyMiBaIE0xNC41LDIyIEwxNS41LDIyIEwxNS41LDIzIEwxNC41LDIzIEwxNC41LDIyIEwxNC41LDIyIFogTTEyLjUsMjIgTDEzLjUsMjIgTDEzLjUsMjMgTDEyLjUsMjMgTDEyLjUsMjIgTDEyLjUsMjIgWiBNMTAuNSwyMiBMMTEuNSwyMiBMMTEuNSwyMyBMMTAuNSwyMyBMMTAuNSwyMiBMMTAuNSwyMiBaIE04LjUsMjIgTDkuNSwyMiBMOS41LDIzIEw4LjUsMjMgTDguNSwyMiBMOC41LDIyIFogTTYuNSwyMiBMNy41LDIyIEw3LjUsMjMgTDYuNSwyMyBMNi41LDIyIEw2LjUsMjIgWiBNNC41LDIyIEw1LjUsMjIgTDUuNSwyMyBMNC41LDIzIEw0LjUsMjIgTDQuNSwyMiBaIE0yLjUsMjIgTDMuNSwyMiBMMy41LDIzIEwyLjUsMjMgTDIuNSwyMiBMMi41LDIyIFogTTAuNSwyMiBMMS41LDIyIEwxLjUsMjMgTDAuNSwyMyBMMC41LDIyIEwwLjUsMjIgWicgaWQ9J1JlY3RhbmdsZS0zNycgZmlsbD0nI0FBQUFBQScgbWFzaz0ndXJsKCNtYXNrLTMpJz48L3BhdGg+XG5cdCAgICAgICAgICAgICAgICA8L2c+XG5cdCAgICAgICAgICAgIDwvZz5cblx0ICAgICAgICA8L2c+XG5cdCAgICA8L2c+XG5cdDwvc3ZnPlwiXG5cdHJlbWluZGVyc19hcHA6XCI8P3htbCB2ZXJzaW9uPScxLjAnIGVuY29kaW5nPSdVVEYtOCcgc3RhbmRhbG9uZT0nbm8nPz5cblx0PHN2ZyB3aWR0aD0nNjBweCcgaGVpZ2h0PSc2MHB4JyB2aWV3Qm94PScwIDAgNjAgNjAnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+XG5cdCAgICA8IS0tIEdlbmVyYXRvcjogU2tldGNoIDM5LjEgKDMxNzIwKSAtIGh0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaCAtLT5cblx0ICAgIDx0aXRsZT5taW48L3RpdGxlPlxuXHQgICAgPGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+XG5cdCAgICA8ZGVmcz5cblx0ICAgICAgICA8cmVjdCBpZD0ncGF0aC0xJyB4PScwJyB5PScwJyB3aWR0aD0nNjAnIGhlaWdodD0nNjAnIHJ4PScxNCc+PC9yZWN0PlxuXHQgICAgICAgIDxjaXJjbGUgaWQ9J3BhdGgtMycgY3g9JzEwJyBjeT0nMTInIHI9JzQnPjwvY2lyY2xlPlxuXHQgICAgICAgIDxtYXNrIGlkPSdtYXNrLTQnIG1hc2tDb250ZW50VW5pdHM9J3VzZXJTcGFjZU9uVXNlJyBtYXNrVW5pdHM9J29iamVjdEJvdW5kaW5nQm94JyB4PScwJyB5PScwJyB3aWR0aD0nOCcgaGVpZ2h0PSc4JyBmaWxsPSd3aGl0ZSc+XG5cdCAgICAgICAgICAgIDx1c2UgeGxpbms6aHJlZj0nI3BhdGgtMyc+PC91c2U+XG5cdCAgICAgICAgPC9tYXNrPlxuXHQgICAgICAgIDxtYXNrIGlkPSdtYXNrLTUnIG1hc2tDb250ZW50VW5pdHM9J3VzZXJTcGFjZU9uVXNlJyBtYXNrVW5pdHM9J29iamVjdEJvdW5kaW5nQm94JyB4PSctMC41JyB5PSctMC41JyB3aWR0aD0nOScgaGVpZ2h0PSc5Jz5cblx0ICAgICAgICAgICAgPHJlY3QgeD0nNS41JyB5PSc3LjUnIHdpZHRoPSc5JyBoZWlnaHQ9JzknIGZpbGw9J3doaXRlJz48L3JlY3Q+XG5cdCAgICAgICAgICAgIDx1c2UgeGxpbms6aHJlZj0nI3BhdGgtMycgZmlsbD0nYmxhY2snPjwvdXNlPlxuXHQgICAgICAgIDwvbWFzaz5cblx0ICAgICAgICA8Y2lyY2xlIGlkPSdwYXRoLTYnIGN4PScxMCcgY3k9JzIzJyByPSc0Jz48L2NpcmNsZT5cblx0ICAgICAgICA8bWFzayBpZD0nbWFzay03JyBtYXNrQ29udGVudFVuaXRzPSd1c2VyU3BhY2VPblVzZScgbWFza1VuaXRzPSdvYmplY3RCb3VuZGluZ0JveCcgeD0nMCcgeT0nMCcgd2lkdGg9JzgnIGhlaWdodD0nOCcgZmlsbD0nd2hpdGUnPlxuXHQgICAgICAgICAgICA8dXNlIHhsaW5rOmhyZWY9JyNwYXRoLTYnPjwvdXNlPlxuXHQgICAgICAgIDwvbWFzaz5cblx0ICAgICAgICA8bWFzayBpZD0nbWFzay04JyBtYXNrQ29udGVudFVuaXRzPSd1c2VyU3BhY2VPblVzZScgbWFza1VuaXRzPSdvYmplY3RCb3VuZGluZ0JveCcgeD0nLTAuNScgeT0nLTAuNScgd2lkdGg9JzknIGhlaWdodD0nOSc+XG5cdCAgICAgICAgICAgIDxyZWN0IHg9JzUuNScgeT0nMTguNScgd2lkdGg9JzknIGhlaWdodD0nOScgZmlsbD0nd2hpdGUnPjwvcmVjdD5cblx0ICAgICAgICAgICAgPHVzZSB4bGluazpocmVmPScjcGF0aC02JyBmaWxsPSdibGFjayc+PC91c2U+XG5cdCAgICAgICAgPC9tYXNrPlxuXHQgICAgICAgIDxjaXJjbGUgaWQ9J3BhdGgtOScgY3g9JzEwJyBjeT0nMzUnIHI9JzQnPjwvY2lyY2xlPlxuXHQgICAgICAgIDxtYXNrIGlkPSdtYXNrLTEwJyBtYXNrQ29udGVudFVuaXRzPSd1c2VyU3BhY2VPblVzZScgbWFza1VuaXRzPSdvYmplY3RCb3VuZGluZ0JveCcgeD0nMCcgeT0nMCcgd2lkdGg9JzgnIGhlaWdodD0nOCcgZmlsbD0nd2hpdGUnPlxuXHQgICAgICAgICAgICA8dXNlIHhsaW5rOmhyZWY9JyNwYXRoLTknPjwvdXNlPlxuXHQgICAgICAgIDwvbWFzaz5cblx0ICAgICAgICA8bWFzayBpZD0nbWFzay0xMScgbWFza0NvbnRlbnRVbml0cz0ndXNlclNwYWNlT25Vc2UnIG1hc2tVbml0cz0nb2JqZWN0Qm91bmRpbmdCb3gnIHg9Jy0wLjUnIHk9Jy0wLjUnIHdpZHRoPSc5JyBoZWlnaHQ9JzknPlxuXHQgICAgICAgICAgICA8cmVjdCB4PSc1LjUnIHk9JzMwLjUnIHdpZHRoPSc5JyBoZWlnaHQ9JzknIGZpbGw9J3doaXRlJz48L3JlY3Q+XG5cdCAgICAgICAgICAgIDx1c2UgeGxpbms6aHJlZj0nI3BhdGgtOScgZmlsbD0nYmxhY2snPjwvdXNlPlxuXHQgICAgICAgIDwvbWFzaz5cblx0ICAgICAgICA8Y2lyY2xlIGlkPSdwYXRoLTEyJyBjeD0nMTAnIGN5PSc0Nicgcj0nNCc+PC9jaXJjbGU+XG5cdCAgICAgICAgPG1hc2sgaWQ9J21hc2stMTMnIG1hc2tDb250ZW50VW5pdHM9J3VzZXJTcGFjZU9uVXNlJyBtYXNrVW5pdHM9J29iamVjdEJvdW5kaW5nQm94JyB4PScwJyB5PScwJyB3aWR0aD0nOCcgaGVpZ2h0PSc4JyBmaWxsPSd3aGl0ZSc+XG5cdCAgICAgICAgICAgIDx1c2UgeGxpbms6aHJlZj0nI3BhdGgtMTInPjwvdXNlPlxuXHQgICAgICAgIDwvbWFzaz5cblx0ICAgICAgICA8bWFzayBpZD0nbWFzay0xNCcgbWFza0NvbnRlbnRVbml0cz0ndXNlclNwYWNlT25Vc2UnIG1hc2tVbml0cz0nb2JqZWN0Qm91bmRpbmdCb3gnIHg9Jy0wLjUnIHk9Jy0wLjUnIHdpZHRoPSc5JyBoZWlnaHQ9JzknPlxuXHQgICAgICAgICAgICA8cmVjdCB4PSc1LjUnIHk9JzQxLjUnIHdpZHRoPSc5JyBoZWlnaHQ9JzknIGZpbGw9J3doaXRlJz48L3JlY3Q+XG5cdCAgICAgICAgICAgIDx1c2UgeGxpbms6aHJlZj0nI3BhdGgtMTInIGZpbGw9J2JsYWNrJz48L3VzZT5cblx0ICAgICAgICA8L21hc2s+XG5cdCAgICA8L2RlZnM+XG5cdCAgICA8ZyBpZD0nUGFnZS0xJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJz5cblx0ICAgICAgICA8ZyBpZD0nSG9tZS1TY3JlZW4t4oCiLWlQaG9uZS1TRScgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTE2OC4wMDAwMDAsIC0yMDMuMDAwMDAwKSc+XG5cdCAgICAgICAgICAgIDxnIGlkPSdIb21lLVNjcmVlbi3igKItaVBob25lLTZzLUNvcHknIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDAuMDAwMDAwLCAyNy4wMDAwMDApJz5cblx0ICAgICAgICAgICAgICAgIDxnIGlkPSdtaW4nIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDE2OC4wMDAwMDAsIDE3Ni4wMDAwMDApJz5cblx0ICAgICAgICAgICAgICAgICAgICA8bWFzayBpZD0nbWFzay0yJyBmaWxsPSd3aGl0ZSc+XG5cdCAgICAgICAgICAgICAgICAgICAgICAgIDx1c2UgeGxpbms6aHJlZj0nI3BhdGgtMSc+PC91c2U+XG5cdCAgICAgICAgICAgICAgICAgICAgPC9tYXNrPlxuXHQgICAgICAgICAgICAgICAgICAgIDx1c2UgaWQ9J0JHJyBmaWxsPScjRkZGRkZGJyB4bGluazpocmVmPScjcGF0aC0xJz48L3VzZT5cblx0ICAgICAgICAgICAgICAgICAgICA8ZyBpZD0nY2lyY2xlJyBtYXNrPSd1cmwoI21hc2stMiknPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICA8dXNlIHN0cm9rZT0nI0ZGRkZGRicgbWFzaz0ndXJsKCNtYXNrLTQpJyBmaWxsPScjRkY5NTAwJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnIHhsaW5rOmhyZWY9JyNwYXRoLTMnPjwvdXNlPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICA8dXNlIHN0cm9rZT0nI0ZGOTUwMCcgbWFzaz0ndXJsKCNtYXNrLTUpJyB4bGluazpocmVmPScjcGF0aC0zJz48L3VzZT5cblx0ICAgICAgICAgICAgICAgICAgICA8L2c+XG5cdCAgICAgICAgICAgICAgICAgICAgPGcgaWQ9J2NpcmNsZScgbWFzaz0ndXJsKCNtYXNrLTIpJz5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgPHVzZSBzdHJva2U9JyNGRkZGRkYnIG1hc2s9J3VybCgjbWFzay03KScgZmlsbD0nIzFCQURGOCcgZmlsbC1ydWxlPSdldmVub2RkJyB4bGluazpocmVmPScjcGF0aC02Jz48L3VzZT5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgPHVzZSBzdHJva2U9JyMxQkFERjgnIG1hc2s9J3VybCgjbWFzay04KScgeGxpbms6aHJlZj0nI3BhdGgtNic+PC91c2U+XG5cdCAgICAgICAgICAgICAgICAgICAgPC9nPlxuXHQgICAgICAgICAgICAgICAgICAgIDxnIGlkPSdjaXJjbGUnIG1hc2s9J3VybCgjbWFzay0yKSc+XG5cdCAgICAgICAgICAgICAgICAgICAgICAgIDx1c2Ugc3Ryb2tlPScjRkZGRkZGJyBtYXNrPSd1cmwoI21hc2stMTApJyBmaWxsPScjNjNEQTM4JyBmaWxsLXJ1bGU9J2V2ZW5vZGQnIHhsaW5rOmhyZWY9JyNwYXRoLTknPjwvdXNlPlxuXHQgICAgICAgICAgICAgICAgICAgICAgICA8dXNlIHN0cm9rZT0nIzYzREEzOCcgbWFzaz0ndXJsKCNtYXNrLTExKScgeGxpbms6aHJlZj0nI3BhdGgtOSc+PC91c2U+XG5cdCAgICAgICAgICAgICAgICAgICAgPC9nPlxuXHQgICAgICAgICAgICAgICAgICAgIDxnIGlkPSdjaXJjbGUnIG1hc2s9J3VybCgjbWFzay0yKSc+XG5cdCAgICAgICAgICAgICAgICAgICAgICAgIDx1c2Ugc3Ryb2tlPScjRkZGRkZGJyBtYXNrPSd1cmwoI21hc2stMTMpJyBmaWxsPScjQ0M3M0UxJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnIHhsaW5rOmhyZWY9JyNwYXRoLTEyJz48L3VzZT5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgPHVzZSBzdHJva2U9JyNDQzczRTEnIG1hc2s9J3VybCgjbWFzay0xNCknIHhsaW5rOmhyZWY9JyNwYXRoLTEyJz48L3VzZT5cblx0ICAgICAgICAgICAgICAgICAgICA8L2c+XG5cdCAgICAgICAgICAgICAgICAgICAgPHJlY3QgaWQ9J2xpbmUnIGZpbGw9JyNBRUFFQUUnIG1hc2s9J3VybCgjbWFzay0yKScgeD0nMTknIHk9JzE3LjUnIHdpZHRoPSc0MScgaGVpZ2h0PScwLjUnPjwvcmVjdD5cblx0ICAgICAgICAgICAgICAgICAgICA8cmVjdCBpZD0nbGluZScgZmlsbD0nI0FFQUVBRScgbWFzaz0ndXJsKCNtYXNrLTIpJyB4PScxOScgeT0nNicgd2lkdGg9JzQxJyBoZWlnaHQ9JzAuNSc+PC9yZWN0PlxuXHQgICAgICAgICAgICAgICAgICAgIDxyZWN0IGlkPSdsaW5lJyBmaWxsPScjQUVBRUFFJyBtYXNrPSd1cmwoI21hc2stMiknIHg9JzE5JyB5PScyOScgd2lkdGg9JzQxJyBoZWlnaHQ9JzAuNSc+PC9yZWN0PlxuXHQgICAgICAgICAgICAgICAgICAgIDxyZWN0IGlkPSdsaW5lJyBmaWxsPScjQUVBRUFFJyBtYXNrPSd1cmwoI21hc2stMiknIHg9JzE5JyB5PSc0MCcgd2lkdGg9JzQxJyBoZWlnaHQ9JzAuNSc+PC9yZWN0PlxuXHQgICAgICAgICAgICAgICAgICAgIDxyZWN0IGlkPSdsaW5lJyBmaWxsPScjQUVBRUFFJyBtYXNrPSd1cmwoI21hc2stMiknIHg9JzE5JyB5PSc1MS41JyB3aWR0aD0nNDEnIGhlaWdodD0nMC41Jz48L3JlY3Q+XG5cdCAgICAgICAgICAgICAgICA8L2c+XG5cdCAgICAgICAgICAgIDwvZz5cblx0ICAgICAgICA8L2c+XG5cdCAgICA8L2c+XG5cdDwvc3ZnPlwiXG5cdHN0b2Nrc19hcHA6XCI8P3htbCB2ZXJzaW9uPScxLjAnIGVuY29kaW5nPSdVVEYtOCcgc3RhbmRhbG9uZT0nbm8nPz5cblx0PHN2ZyB3aWR0aD0nNjBweCcgaGVpZ2h0PSc2MHB4JyB2aWV3Qm94PScwIDAgNjAgNjAnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc+XG5cdCAgICA8IS0tIEdlbmVyYXRvcjogU2tldGNoIDM5LjEgKDMxNzIwKSAtIGh0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaCAtLT5cblx0ICAgIDx0aXRsZT5TdG9ja3M8L3RpdGxlPlxuXHQgICAgPGRlc2M+Q3JlYXRlZCB3aXRoIFNrZXRjaC48L2Rlc2M+XG5cdCAgICA8ZGVmcz5cblx0ICAgICAgICA8cGF0aCBkPSdNMzkuMDgxNSwwIEM0NS4xMDUsMCA0OC4xMTYsMCA1MS4zNTg1LDEuMDI1IEM1NC44OTg1LDIuMzEzNSA1Ny42ODY1LDUuMTAxNSA1OC45NzUsOC42NDE1IEM2MCwxMS44ODM1IDYwLDE0Ljg5NTUgNjAsMjAuOTE4NSBMNjAsMzkuMDgxNSBDNjAsNDUuMTA1IDYwLDQ4LjExNiA1OC45NzUsNTEuMzU4NSBDNTcuNjg2NSw1NC44OTg1IDU0Ljg5ODUsNTcuNjg2NSA1MS4zNTg1LDU4Ljk3NDUgQzQ4LjExNiw2MCA0NS4xMDUsNjAgMzkuMDgxNSw2MCBMMjAuOTE4NSw2MCBDMTQuODk1LDYwIDExLjg4MzUsNjAgOC42NDE1LDU4Ljk3NDUgQzUuMTAxNSw1Ny42ODY1IDIuMzEzNSw1NC44OTg1IDEuMDI1LDUxLjM1ODUgQzAsNDguMTE2IDAsNDUuMTA1IDAsMzkuMDgxNSBMMCwyMC45MTg1IEMwLDE0Ljg5NTUgMCwxMS44ODM1IDEuMDI1LDguNjQxNSBDMi4zMTM1LDUuMTAxNSA1LjEwMTUsMi4zMTM1IDguNjQxNSwxLjAyNSBDMTEuODgzNSwwIDE0Ljg5NSwwIDIwLjkxODUsMCBMMzkuMDgxNSwwIFonIGlkPSdwYXRoLTEnPjwvcGF0aD5cblx0ICAgICAgICA8bGluZWFyR3JhZGllbnQgeDE9JzUwJScgeTE9JzAlJyB4Mj0nNTAlJyB5Mj0nMTAwJScgaWQ9J2xpbmVhckdyYWRpZW50LTMnPlxuXHQgICAgICAgICAgICA8c3RvcCBzdG9wLWNvbG9yPScjNDU0NTQ1JyBvZmZzZXQ9JzAlJz48L3N0b3A+XG5cdCAgICAgICAgICAgIDxzdG9wIHN0b3AtY29sb3I9JyMxMTExMTInIG9mZnNldD0nMTAwJSc+PC9zdG9wPlxuXHQgICAgICAgIDwvbGluZWFyR3JhZGllbnQ+XG5cdCAgICAgICAgPHBhdGggZD0nTTQxLjUsMTYuMDExMjEwOCBMNDEuNSwtMS41IEw0MSwtMS41IEw0MSwxNi4wMTEyMTA4IEM0MS4wODIzNDA1LDE2LjAwMzc5MDcgNDEuMTY1NzI3NiwxNiA0MS4yNSwxNiBDNDEuMzM0MjcyNCwxNiA0MS40MTc2NTk1LDE2LjAwMzc5MDcgNDEuNSwxNi4wMTEyMTA4IFogTTQxLjUsMjEuNDg4Nzg5MiBMNDEuNSw2MyBMNDEsNjMgTDQxLDIxLjQ4ODc4OTIgQzQxLjA4MjM0MDUsMjEuNDk2MjA5MyA0MS4xNjU3Mjc2LDIxLjUgNDEuMjUsMjEuNSBDNDEuMzM0MjcyNCwyMS41IDQxLjQxNzY1OTUsMjEuNDk2MjA5MyA0MS41LDIxLjQ4ODc4OTIgWiBNNDEuMjUsMjEgQzQyLjQ5MjY0MDcsMjEgNDMuNSwxOS45OTI2NDA3IDQzLjUsMTguNzUgQzQzLjUsMTcuNTA3MzU5MyA0Mi40OTI2NDA3LDE2LjUgNDEuMjUsMTYuNSBDNDAuMDA3MzU5MywxNi41IDM5LDE3LjUwNzM1OTMgMzksMTguNzUgQzM5LDE5Ljk5MjY0MDcgNDAuMDA3MzU5MywyMSA0MS4yNSwyMSBaJyBpZD0ncGF0aC00Jz48L3BhdGg+XG5cdCAgICAgICAgPGZpbHRlciB4PSctNTAlJyB5PSctNTAlJyB3aWR0aD0nMjAwJScgaGVpZ2h0PScyMDAlJyBmaWx0ZXJVbml0cz0nb2JqZWN0Qm91bmRpbmdCb3gnIGlkPSdmaWx0ZXItNSc+XG5cdCAgICAgICAgICAgIDxmZU9mZnNldCBkeD0nMCcgZHk9JzEnIGluPSdTb3VyY2VBbHBoYScgcmVzdWx0PSdzaGFkb3dPZmZzZXRPdXRlcjEnPjwvZmVPZmZzZXQ+XG5cdCAgICAgICAgICAgIDxmZUNvbG9yTWF0cml4IHZhbHVlcz0nMCAwIDAgMCAwICAgMCAwIDAgMCAwICAgMCAwIDAgMCAwICAwIDAgMCAwLjUgMCcgdHlwZT0nbWF0cml4JyBpbj0nc2hhZG93T2Zmc2V0T3V0ZXIxJz48L2ZlQ29sb3JNYXRyaXg+XG5cdCAgICAgICAgPC9maWx0ZXI+XG5cdCAgICA8L2RlZnM+XG5cdCAgICA8ZyBpZD0nUGFnZS0xJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJz5cblx0ICAgICAgICA8ZyBpZD0nSG9tZS1TY3JlZW4t4oCiLWlQaG9uZS1TRScgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTI0NC4wMDAwMDAsIC0yMDMuMDAwMDAwKSc+XG5cdCAgICAgICAgICAgIDxnIGlkPSdIb21lLVNjcmVlbi3igKItaVBob25lLTZzLUNvcHknIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDAuMDAwMDAwLCAyNy4wMDAwMDApJz5cblx0ICAgICAgICAgICAgICAgIDxnIGlkPSdTdG9ja3MnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDI0NC4wMDAwMDAsIDE3Ni4wMDAwMDApJz5cblx0ICAgICAgICAgICAgICAgICAgICA8bWFzayBpZD0nbWFzay0yJyBmaWxsPSd3aGl0ZSc+XG5cdCAgICAgICAgICAgICAgICAgICAgICAgIDx1c2UgeGxpbms6aHJlZj0nI3BhdGgtMSc+PC91c2U+XG5cdCAgICAgICAgICAgICAgICAgICAgPC9tYXNrPlxuXHQgICAgICAgICAgICAgICAgICAgIDx1c2UgaWQ9J0JHJyBmaWxsPScjMTQxNDE2JyB4bGluazpocmVmPScjcGF0aC0xJz48L3VzZT5cblx0ICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSdNLTAuNDg0ODYzMjgxLDM0LjA1MzcxMDkgQy0wLjQ4NDg2MzI4MSwzNC4wNTM3MTA5IDEuMjcyMzkyMTEsMzQuMDY0NDY4NiAzLjExOTM4NDc3LDM0LjYzMjA4MDEgQzQuNzA3OTQ0OTUsMzUuMTIwMjcxIDYuMzAwOTgxNzYsMzYuMjUyMzc4NiA3LjIzMzg4NjcyLDM2LjE5NDU4MDEgQzkuMjUxNDY0ODQsMzYuMDY5NTgwMSAxMS4zMzQ0NzI3LDM1LjM3NTk3NjYgMTEuMzM0NDcyNywzNS4zNzU5NzY2IEwxNS4xMjA4NDk2LDMwLjQ0NTA2ODQgTDE4LjcyNzUzOTEsMzMuNTI2MzY3MiBMMjIuNDk0MTQwNiwyNC42MjQ1MTE3IEwyNi4xMTk2Mjg5LDM0LjMzNjkxNDEgTDMwLjI1LDM2Ljg2NTk2NjggTDMzLjk0Njc3NzMsMzAuMjA4NDk2MSBMMzcuNTM4NTc0MiwyOS4yNzYxMjMgTDQxLjQzMTY0MDYsMTguMTMyMzI0MiBMNDUuMTQ3NDYwOSwyNy4yMDMzNjkxIEw0OC45NDM4NDc3LDI0LjY2NTUyNzMgTDUyLjc3MzQzNzUsMzEuOTkzNjUyMyBMNTYuMzQyMjg1MiwyMy44MTczODI4IEw2MC4zNDU3MDMxLDE5LjY1NjI1IEw2MC4zNDU3MDMxLDYwLjQ3OTExNjYgTC0wLjMwNDk4OTMyNSw2MC40NzkxMTY2IEwtMC40ODQ4NjMyODEsMzQuMDUzNzEwOSBaJyBpZD0nZ3JhcGgnIHN0cm9rZT0nI0ZGRkZGRicgc3Ryb2tlLXdpZHRoPScwLjc1JyBmaWxsPSd1cmwoI2xpbmVhckdyYWRpZW50LTMpJyBtYXNrPSd1cmwoI21hc2stMiknPjwvcGF0aD5cblx0ICAgICAgICAgICAgICAgICAgICA8ZyBpZD0nbWFyaycgbWFzaz0ndXJsKCNtYXNrLTIpJz5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgPHVzZSBmaWxsPSdibGFjaycgZmlsbC1vcGFjaXR5PScxJyBmaWx0ZXI9J3VybCgjZmlsdGVyLTUpJyB4bGluazpocmVmPScjcGF0aC00Jz48L3VzZT5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgPHVzZSBmaWxsPScjMDFBNkYxJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnIHhsaW5rOmhyZWY9JyNwYXRoLTQnPjwvdXNlPlxuXHQgICAgICAgICAgICAgICAgICAgIDwvZz5cblx0ICAgICAgICAgICAgICAgICAgICA8ZyBpZD0nU3BhcmstbGluZScgbWFzaz0ndXJsKCNtYXNrLTIpJyBmaWxsPScjNzc3Nzc4Jz5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgPGcgdHJhbnNmb3JtPSd0cmFuc2xhdGUoNy4wMDAwMDAsIC0xLjUwMDAwMCknIGlkPSdtYXJrJz5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxyZWN0IHg9JzAnIHk9JzAnIHdpZHRoPScwLjUnIGhlaWdodD0nNjQuNSc+PC9yZWN0PlxuXHQgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHJlY3QgeD0nMTEuNScgeT0nMCcgd2lkdGg9JzAuNScgaGVpZ2h0PSc2NC41Jz48L3JlY3Q+XG5cdCAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmVjdCB4PScyMycgeT0nMCcgd2lkdGg9JzAuNScgaGVpZ2h0PSc2NC41Jz48L3JlY3Q+XG5cdCAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmVjdCB4PSc0NS41JyB5PScwJyB3aWR0aD0nMC41JyBoZWlnaHQ9JzY0LjUnPjwvcmVjdD5cblx0ICAgICAgICAgICAgICAgICAgICAgICAgPC9nPlxuXHQgICAgICAgICAgICAgICAgICAgIDwvZz5cblx0ICAgICAgICAgICAgICAgIDwvZz5cblx0ICAgICAgICAgICAgPC9nPlxuXHQgICAgICAgIDwvZz5cblx0ICAgIDwvZz5cblx0PC9zdmc+XCJcbn1cblxuIyBEZXZpY2UgZnJhbWVzXG5leHBvcnRzLmZyYW1lcyA9ICB7XG5cbiMgRnVsbHNjcmVlblxuXHRcImZ1bGxzY3JlZW5cIiA6IHsgaGVpZ2h0OiB3aW5kb3cuaW5uZXJIZWlnaHQsIHdpZHRoOiB3aW5kb3cuaW5uZXJXaWR0aCxcdHNjYWxlOjEsIG1vYmlsZTpmYWxzZSwgcGxhdGZvcm06XCJ3ZWJcIn1cblxuXHQjIGlQaG9uZXNcblx0IyMgNVNcblx0XCJhcHBsZS1pcGhvbmUtNXMtc3BhY2UtZ3JheVwiOiB7IGhlaWdodDogMTEzNiwgd2lkdGg6IDY0MCxcdHNjYWxlOiAyLCBtb2JpbGU6dHJ1ZSwgcGxhdGZvcm06XCJpT1NcIn1cblx0XCJhcHBsZS1pcGhvbmUtNXMtc2lsdmVyXCI6IHsgaGVpZ2h0OiAxMTM2LCB3aWR0aDogNjQwLFx0c2NhbGU6IDIsIG1vYmlsZTp0cnVlLCBwbGF0Zm9ybTpcImlPU1wifVxuXHRcImFwcGxlLWlwaG9uZS01cy1nb2xkXCI6IHsgaGVpZ2h0OiAxMTM2LCB3aWR0aDogNjQwLFx0c2NhbGU6IDIsIG1vYmlsZTp0cnVlLCBwbGF0Zm9ybTpcImlPU1wifVxuXG5cdCMjIDVjXG5cdFwiYXBwbGUtaXBob25lLTVjLWdyZWVuXCI6IHsgaGVpZ2h0OiAxMTM2LCB3aWR0aDogNjQwLHNjYWxlOiAyLCBtb2JpbGU6dHJ1ZSwgcGxhdGZvcm06XCJpT1NcIn1cblx0XCJhcHBsZS1pcGhvbmUtNWMtYmx1ZVwiOiB7IGhlaWdodDogMTEzNiwgd2lkdGg6IDY0MCxcdHNjYWxlOiAyLCBtb2JpbGU6dHJ1ZSwgcGxhdGZvcm06XCJpT1NcIn1cblx0XCJhcHBsZS1pcGhvbmUtNWMtcmVkXCI6IHsgaGVpZ2h0OiAxMTM2LCB3aWR0aDogNjQwLFx0c2NhbGU6IDIsIG1vYmlsZTp0cnVlLCBwbGF0Zm9ybTpcImlPU1wifVxuXHRcImFwcGxlLWlwaG9uZS01Yy13aGl0ZVwiOiB7IGhlaWdodDogMTEzNiwgd2lkdGg6IDY0MCxzY2FsZTogMiwgbW9iaWxlOnRydWUsIHBsYXRmb3JtOlwiaU9TXCJ9XG5cdFwiYXBwbGUtaXBob25lLTVjLXllbGxvd1wiOiB7IGhlaWdodDogMTEzNiwgd2lkdGg6IDY0MCxzY2FsZTogMiwgbW9iaWxlOnRydWUsIHBsYXRmb3JtOlwiaU9TXCJ9XG5cdFwiYXBwbGUtaXBob25lLTVjLXBpbmtcIjogeyBoZWlnaHQ6IDExMzYsIHdpZHRoOiA2NDAsXHRzY2FsZTogMiwgbW9iaWxlOnRydWUsIHBsYXRmb3JtOlwiaU9TXCJ9XG5cblx0IyMgNnNcblx0XCJhcHBsZS1pcGhvbmUtNnMtc3BhY2UtZ3JheVwiIDogeyBoZWlnaHQ6IDEzMzQsIHdpZHRoOiA3NTAsXHRzY2FsZTogMiwgbW9iaWxlOnRydWUsIHBsYXRmb3JtOlwiaU9TXCJ9XG5cdFwiYXBwbGUtaXBob25lLTZzLXNpbHZlclwiOiB7IGhlaWdodDogMTMzNCwgd2lkdGg6IDc1MCxcdHNjYWxlOiAyLCBtb2JpbGU6dHJ1ZSwgcGxhdGZvcm06XCJpT1NcIn1cblx0XCJhcHBsZS1pcGhvbmUtNnMtZ29sZFwiOiB7IGhlaWdodDogMTMzNCwgd2lkdGg6IDc1MCxcdHNjYWxlOiAyLCBtb2JpbGU6dHJ1ZSwgcGxhdGZvcm06XCJpT1NcIn1cblx0XCJhcHBsZS1pcGhvbmUtNnMtcm9zZS1nb2xkXCI6IHsgaGVpZ2h0OiAxMzM0LCB3aWR0aDogNzUwLFx0c2NhbGU6IDIsIG1vYmlsZTp0cnVlLCBwbGF0Zm9ybTpcImlPU1wifVxuXG5cdCMjIDZzIHBsdXNcblx0XCJhcHBsZS1pcGhvbmUtNnMtcGx1cy1nb2xkXCI6IHsgaGVpZ2h0OiAyMjA4LCB3aWR0aDogMTI0Miwgc2NhbGU6IDMsIG1vYmlsZTp0cnVlLCBwbGF0Zm9ybTpcImlPU1wifVxuXHRcImFwcGxlLWlwaG9uZS02cy1wbHVzLXNpbHZlclwiOiB7IGhlaWdodDogMjIwOCwgd2lkdGg6IDEyNDIsXHRzY2FsZTogMywgbW9iaWxlOnRydWUsIHBsYXRmb3JtOlwiaU9TXCJ9XG5cdFwiYXBwbGUtaXBob25lLTZzLXBsdXMtc3BhY2UtZ3JheVwiOiB7IGhlaWdodDogMjIwOCwgd2lkdGg6IDEyNDIsXHRzY2FsZTogMywgbW9iaWxlOnRydWUsIHBsYXRmb3JtOlwiaU9TXCJ9XG5cdFwiYXBwbGUtaXBob25lLTZzLXBsdXNcIjogeyBoZWlnaHQ6IDIyMDgsIHdpZHRoOiAxMjQyLFx0c2NhbGU6IDMsIG1vYmlsZTp0cnVlLCBwbGF0Zm9ybTpcImlPU1wifVxuXHRcImFwcGxlLWlwaG9uZS02cy1wbHVzLXJvc2UtZ29sZFwiOiB7IGhlaWdodDogMjIwOCwgd2lkdGg6IDEyNDIsXHRzY2FsZTogMywgbW9iaWxlOnRydWUsIHBsYXRmb3JtOlwiaU9TXCJ9XG5cblx0IyBpUGFkc1xuXG5cdCMjIEFpclxuXHRcImFwcGxlLWlwYWQtYWlyLTItZ29sZFwiOiB7IGhlaWdodDogMjA0OCwgd2lkdGg6IDE1MzYsXHRzY2FsZTogMiwgbW9iaWxlOnRydWUsIHBsYXRmb3JtOlwiaU9TXCJ9XG5cdFwiYXBwbGUtaXBhZC1haXItMi1zaWx2ZXJcIjogeyBoZWlnaHQ6IDIwNDgsIHdpZHRoOiAxNTM2LFx0c2NhbGU6IDIsIG1vYmlsZTp0cnVlLCBwbGF0Zm9ybTpcImlPU1wifVxuXHRcImFwcGxlLWlwYWQtYWlyLTItc3BhY2UtZ3JheVwiOiB7IGhlaWdodDogMjA0OCwgd2lkdGg6IDE1MzYsXHRzY2FsZTogMiwgbW9iaWxlOnRydWUsIHBsYXRmb3JtOlwiaU9TXCJ9XG5cblx0IyMgTWluaVxuXHRcImFwcGxlLWlwYWQtbWluaS00LWdvbGRcIjogeyBoZWlnaHQ6IDIwNDgsIHdpZHRoOiAxNTM2LFx0c2NhbGU6IDIsIG1vYmlsZTp0cnVlLCBwbGF0Zm9ybTpcImlPU1wifVxuXHRcImFwcGxlLWlwYWQtbWluaS00LXNwYWNlLWdyYXlcIjogeyBoZWlnaHQ6IDIwNDgsIHdpZHRoOiAxNTM2LFx0c2NhbGU6IDIsIG1vYmlsZTp0cnVlLCBwbGF0Zm9ybTpcImlPU1wifVxuXHRcImFwcGxlLWlwYWQtbWluaS00LXNpbHZlclwiOnsgaGVpZ2h0OiAyMDQ4LCB3aWR0aDogMTUzNiwgc2NhbGU6IDIsIG1vYmlsZTp0cnVlLCBwbGF0Zm9ybTpcImlPU1wifVxuXG5cdCMjIFByb1xuXHRcImFwcGxlLWlwYWQtcHJvLWdvbGRcIjogeyBoZWlnaHQ6IDI3MzIsIHdpZHRoOiAyMDQ4LCBzY2FsZTogMiwgbW9iaWxlOnRydWUsIHBsYXRmb3JtOlwiaU9TXCJ9XG5cdFwiYXBwbGUtaXBhZC1wcm8tc2lsdmVyXCI6IHsgaGVpZ2h0OiAyNzMyLCB3aWR0aDogMjA0OCwgc2NhbGU6IDIsIG1vYmlsZTp0cnVlLCBwbGF0Zm9ybTpcImlPU1wifVxuXHRcImFwcGxlLWlwYWQtcHJvLXNwYWNlLWdyYXlcIiA6IHsgaGVpZ2h0OiAyNzMyLCB3aWR0aDogMjA0OCwgc2NhbGU6IDIsIG1vYmlsZTp0cnVlLCBwbGF0Zm9ybTpcImlPU1wifVxufVxuZXhwb3J0cy5mcmFtZXJGcmFtZXMgPVxuXHQ2NDA6MlxuXHQ3NTA6MlxuXHQ3Njg6MlxuXHQxMDgwOjNcblx0MTI0MjozXG5cdDE0NDA6NFxuXHQxNTM2OjJcblxuIyBEZXZpY2UgZnJhbWVzXG5leHBvcnRzLnJlYWxEZXZpY2VzID1cblx0MzIwOlxuXHRcdDQ4MDpcblx0XHRcdG5hbWU6XCJpcGhvbmVcIlxuXHRcdFx0ZGlzcGxheV9uYW1lOlwiaVBob25lXCJcblx0XHRcdHdpZHRoOjMyMFxuXHRcdFx0aGVpZ2h0OjQ4MFxuXHRcdFx0c2NhbGU6MVxuXHQ0ODA6XG5cdFx0ODU0OlxuXHRcdFx0bmFtZTpcIkFuZHJvaWQgT25lXCJcblx0XHRcdHdpZHRoOjQ4MFxuXHRcdFx0aGVpZ2h0Ojg1NFxuXHRcdFx0c2NhbGU6MS41XG5cblx0NjQwOlxuXHRcdDk2MDpcblx0XHRcdG5hbWU6XCJpcGhvbmUtNVwiXG5cdFx0XHRkaXNwbGF5X25hbWU6XCJpUGhvbmUgNFwiXG5cdFx0XHR3aWR0aDo2NDBcblx0XHRcdGhlaWdodDo5NjBcblx0XHRcdHNjYWxlOjJcblx0XHQxMTM2OlxuXHRcdFx0bmFtZTpcImlwaG9uZS01XCJcblx0XHRcdGRpc3BsYXlfbmFtZTpcImlQaG9uZSA1XCJcblx0XHRcdHdpZHRoOjY0MFxuXHRcdFx0aGVpZ2h0OjExMzZcblx0XHRcdHNjYWxlOjJcblx0NzIwOlxuXHRcdDEyODA6XG5cdFx0XHRuYW1lOlwiWEhEUElcIlxuXHRcdFx0d2lkdGg6NzIwXG5cdFx0XHRoZWlnaHQ6MTI4MFxuXHRcdFx0c2NhbGU6MlxuXHQ3NTA6XG5cdFx0MTExODpcblx0XHRcdG5hbWU6XCJpcGhvbmUtNnNcIlxuXHRcdFx0ZGlzcGxheV9uYW1lOlwiaVBob25lIDZzXCJcblx0XHRcdHdpZHRoOjc1MFxuXHRcdFx0aGVpZ2h0OjExMThcblx0XHRcdHNjYWxlOjJcblx0XHQxMzM0OlxuXHRcdFx0bmFtZTpcImlwaG9uZS02c1wiXG5cdFx0XHRkaXNwbGF5X25hbWU6XCJpUGhvbmUgNnNcIlxuXHRcdFx0d2lkdGg6NzUwXG5cdFx0XHRoZWlnaHQ6MTMzNFxuXHRcdFx0c2NhbGU6MlxuXHQ3Njg6XG5cdFx0MTAyNDpcblx0XHRcdG5hbWU6XCJpcGFkXCJcblx0XHRcdGRpc3BsYXlfbmFtZTpcImlQYWRcIlxuXHRcdFx0d2lkdGg6NzY4XG5cdFx0XHRoZWlnaHQ6MTAyNFxuXHRcdFx0c2NhbGU6MVxuXHRcdDEyODA6XG5cdFx0XHRuYW1lOlwiTmV4dXMgNFwiXG5cdFx0XHR3aWR0aDo3Njhcblx0XHRcdGhlaWdodDoxMjgwXG5cdFx0XHRzY2FsZToyXG5cdDgwMDpcblx0XHQxMjgwOlxuXHRcdFx0bmFtZTpcIk5leHVzIDdcIlxuXHRcdFx0d2lkdGg6ODAwXG5cdFx0XHRoZWlnaHQ6MTI4MFxuXHRcdFx0c2NhbGU6MVxuXHQxMDgwOlxuXHRcdDE5MjA6XG5cdFx0XHRuYW1lOlwiWFhIRFBJXCJcblx0XHRcdHdpZHRoOjEwODBcblx0XHRcdGhlaWdodDoxOTIwXG5cdFx0XHRzY2FsZTozXG5cdDEyMDA6XG5cdFx0MTkyMDpcblx0XHRcdG5hbWU6XCJOZXh1cyA3XCJcblx0XHRcdHdpZHRoOjEyMDBcblx0XHRcdGhlaWdodDoxOTIwXG5cdFx0XHRzY2FsZToyXG5cdDEyNDI6XG5cdFx0MjIwODpcblx0XHRcdG5hbWU6XCJpcGhvbmUtNnMtcGx1c1wiXG5cdFx0XHRkaXNwbGF5X25hbWU6XCJpUGhvbmUgNiBQbHVzXCJcblx0XHRcdHdpZHRoOjEyNDJcblx0XHRcdGhlaWdodDoyMjA4XG5cdFx0XHRzY2FsZTozXG5cdDEzMzQ6XG5cdFx0NzUwOlxuXHRcdFx0bmFtZTpcImlwaG9uZS02c1wiXG5cdFx0XHRkaXNwbGF5X25hbWU6XCJpUGhvbmUgNnNcIlxuXHRcdFx0d2lkdGg6NzUwXG5cdFx0XHRoZWlnaHQ6MTMzNFxuXHRcdFx0c2NhbGU6MlxuXHQxNDQwOlxuXHRcdDI1NjA6XG5cdFx0XHRuYW1lOlwiWFhYSERQSVwiXG5cdFx0XHR3aWR0aDoxNDQwXG5cdFx0XHRoZWlnaHQ6MjU2MFxuXHRcdFx0c2NhbGU6NFxuXHQxNDQxOlxuXHRcdDI1NjE6XG5cdFx0XHRuYW1lOlwiTmV4dXMgNlwiXG5cdFx0XHR3aWR0aDoxNDQwXG5cdFx0XHRoZWlnaHQ6MjU2MFxuXHRcdFx0c2NhbGU6NFxuXHQxNTM2OlxuXHRcdDIwNDg6XG5cdFx0XHRuYW1lOlwiaXBhZFwiXG5cdFx0XHRkaXNwbGF5X25hbWU6XCJpUGFkXCJcblx0XHRcdHdpZHRoOjE1MzZcblx0XHRcdGhlaWdodDoyMDQ4XG5cdFx0XHRzY2FsZToyXG5cdDE2MDA6XG5cdFx0MjA1Njpcblx0XHRcdG5hbWU6XCJOZXh1cyAxMFwiXG5cdFx0XHR3aWR0aDoxNjAwXG5cdFx0XHRoZWlnaHQ6MjA1NlxuXHRcdFx0c2NhbGU6MlxuXHQyMjA4OlxuXHRcdDEyNDI6XG5cdFx0XHRuYW1lOlwiaXBob25lLTZzLXBsdXNcIlxuXHRcdFx0ZGlzcGxheV9uYW1lOlwiaVBob25lIDYgUGx1c1wiXG5cdFx0XHR3aWR0aDoxMjQyXG5cdFx0XHRoZWlnaHQ6MjIwOFxuXHRcdFx0c2NhbGU6M1xuXHQyMDQ4OlxuXHRcdDE1MzY6XG5cdFx0XHRuYW1lOlwiTmV4dXMgOVwiXG5cdFx0XHR3aWR0aDoyMDQ4XG5cdFx0XHRoZWlnaHQ6MTUzNlxuXHRcdFx0c2NhbGU6MlxuXHRcdDI3MzI6XG5cdFx0XHRuYW1lOlwiaXBhZC1wcm9cIlxuXHRcdFx0ZGlzcGxheV9uYW1lOlwiaVBhZCBQcm9cIlxuXHRcdFx0d2lkdGg6MjA0OFxuXHRcdFx0aGVpZ2h0OjI3MzJcblx0XHRcdHNjYWxlOjJcblx0MjU2MDpcblx0XHQxNjAwOlxuXHRcdFx0bmFtZTpcIk5leHVzIDEwXCJcblx0XHRcdHdpZHRoOjI1NjBcblx0XHRcdGhlaWdodDoxNjAwXG5cdFx0XHRzY2FsZToyXG5cdDI3MzI6XG5cdFx0MjA0ODpcblx0XHRcdG5hbWU6XCJpcGFkLXByb1wiXG5cdFx0XHRkaXNwbGF5X25hbWU6XCJpUGFkIFByb1wiXG5cdFx0XHR3aWR0aDoyNzMyXG5cdFx0XHRoZWlnaHQ6MjA0OFxuXHRcdFx0c2NhbGU6MlxuIiwiIyBVdGlsc1xuXG5pb3MgPSByZXF1aXJlICdpb3Mta2l0J1xuXG5leHBvcnRzLmRlZmF1bHRzID0ge1xuXHRhbmltYXRpb25zOiB7XG5cdFx0dGFyZ2V0OnVuZGVmaW5lZFxuXHRcdGNvbnN0cmFpbnRzOiB1bmRlZmluZWRcblx0XHRjdXJ2ZSA6IFwiZWFzZS1pbi1vdXRcIlxuXHRcdGN1cnZlT3B0aW9uczogdW5kZWZpbmVkXG5cdFx0dGltZToxXG5cdFx0ZGVsYXk6MFxuXHRcdHJlcGVhdDp1bmRlZmluZWRcblx0XHRjb2xvck1vZGVsOnVuZGVmaW5lZFxuXHRcdHN0YWdnZXI6dW5kZWZpbmVkXG5cdFx0ZmFkZU91dDpmYWxzZVxuXHRcdGZhZGVJbjpmYWxzZVxuXHR9XG59XG5cbmxheW91dCA9IChhcnJheSkgLT5cblx0c2V0dXAgPSB7fVxuXHR0YXJnZXRMYXllcnMgPSBbXVxuXHRibHVlcHJpbnQgPSBbXVxuXHRpZiBhcnJheVxuXHRcdGZvciBpIGluIE9iamVjdC5rZXlzKGV4cG9ydHMuZGVmYXVsdHMuYW5pbWF0aW9ucylcblx0XHRcdGlmIGFycmF5W2ldXG5cdFx0XHRcdHNldHVwW2ldID0gYXJyYXlbaV1cblx0XHRcdGVsc2Vcblx0XHRcdFx0c2V0dXBbaV0gPSBleHBvcnRzLmRlZmF1bHRzLmFuaW1hdGlvbnNbaV1cblxuXHRpZiBzZXR1cC50YXJnZXRcblx0XHRpZiBzZXR1cC50YXJnZXQubGVuZ3RoXG5cdFx0XHR0YXJnZXRMYXllcnMgPSBzZXR1cC50YXJnZXRcblx0XHRlbHNlXG5cdFx0XHR0YXJnZXRMYXllcnMucHVzaCBzZXR1cC50YXJnZXRcblx0ZWxzZVxuXHRcdHRhcmdldExheWVycyA9IEZyYW1lci5DdXJyZW50Q29udGV4dC5sYXllcnNcblxuXHRpZiBzZXR1cC50YXJnZXRcblx0XHRpZiBzZXR1cC5jb25zdHJhaW50c1xuXHRcdFx0Zm9yIG5ld0NvbnN0cmFpbnQgaW4gT2JqZWN0LmtleXMoc2V0dXAuY29uc3RyYWludHMpXG5cdFx0XHRcdHNldHVwLnRhcmdldC5jb25zdHJhaW50c1tuZXdDb25zdHJhaW50XSA9IHNldHVwLmNvbnN0cmFpbnRzW25ld0NvbnN0cmFpbnRdXG5cblxuXHQjVHJhbnNsYXRlIG5ldyBjb25zdHJhaW50c1xuXHRmb3IgbGF5ZXIsIGluZGV4IGluIHRhcmdldExheWVyc1xuXHRcdGxheWVyLmNhbGN1bGF0ZWRQb3NpdGlvbiA9IHt9XG5cdFx0aWYgbGF5ZXIuY29uc3RyYWludHNcblxuXHRcdFx0cHJvcHMgPSB7fVxuXHRcdFx0bGF5ZXIuc3VwZXJGcmFtZSA9IHt9XG5cblx0XHRcdGlmIGxheWVyLnN1cGVyTGF5ZXJcblx0XHRcdFx0bGF5ZXIuc3VwZXJGcmFtZS5oZWlnaHQgPSBsYXllci5zdXBlckxheWVyLmhlaWdodFxuXHRcdFx0XHRsYXllci5zdXBlckZyYW1lLndpZHRoID0gbGF5ZXIuc3VwZXJMYXllci53aWR0aFxuXHRcdFx0ZWxzZVxuXHRcdFx0XHRsYXllci5zdXBlckZyYW1lLmhlaWdodCA9IGlvcy5kZXZpY2UuaGVpZ2h0XG5cdFx0XHRcdGxheWVyLnN1cGVyRnJhbWUud2lkdGggPSBpb3MuZGV2aWNlLndpZHRoXG5cblx0XHRcdGlmIGxheWVyLmNvbnN0cmFpbnRzLmxlYWRpbmcgIT0gdW5kZWZpbmVkICYmIGxheWVyLmNvbnN0cmFpbnRzLnRyYWlsaW5nICE9IHVuZGVmaW5lZFxuXHRcdFx0XHRsYXllci5jb25zdHJhaW50cy5hdXRvV2lkdGggPSB7fVxuXG5cdFx0XHRpZiBsYXllci5jb25zdHJhaW50cy50b3AgIT0gdW5kZWZpbmVkICYmIGxheWVyLmNvbnN0cmFpbnRzLmJvdHRvbSAhPSB1bmRlZmluZWRcblx0XHRcdFx0bGF5ZXIuY29uc3RyYWludHMuYXV0b0hlaWdodCA9IHt9XG5cblx0XHRcdCMgU2l6ZSBjb25zdHJhaW50c1xuXHRcdFx0aWYgbGF5ZXIuY29uc3RyYWludHMud2lkdGggIT0gdW5kZWZpbmVkXG5cdFx0XHRcdHByb3BzLndpZHRoID0gaW9zLnV0aWxzLnB4KGxheWVyLmNvbnN0cmFpbnRzLndpZHRoKVxuXHRcdFx0ZWxzZVxuXHRcdFx0XHRwcm9wcy53aWR0aCA9IGxheWVyLndpZHRoXG5cblx0XHRcdGlmIGxheWVyLmNvbnN0cmFpbnRzLmhlaWdodCAhPSB1bmRlZmluZWRcblx0XHRcdFx0cHJvcHMuaGVpZ2h0ID0gaW9zLnV0aWxzLnB4KGxheWVyLmNvbnN0cmFpbnRzLmhlaWdodClcblx0XHRcdGVsc2Vcblx0XHRcdFx0cHJvcHMuaGVpZ2h0ID0gbGF5ZXIuaGVpZ2h0XG5cblx0XHRcdCMgUG9zaXRpb25pbmcgY29uc3RyYWludHNcblx0XHRcdGlmIGxheWVyLmNvbnN0cmFpbnRzLmxlYWRpbmcgIT0gdW5kZWZpbmVkXG5cdFx0XHRcdCNJZiBpdCdzIGEgbnVtYmVyYFxuXHRcdFx0XHRpZiBsYXllci5jb25zdHJhaW50cy5sZWFkaW5nID09IHBhcnNlSW50KGxheWVyLmNvbnN0cmFpbnRzLmxlYWRpbmcsIDEwKVxuXHRcdFx0XHRcdHByb3BzLnggPSBpb3MudXRpbHMucHgobGF5ZXIuY29uc3RyYWludHMubGVhZGluZylcblx0XHRcdFx0ZWxzZVxuXHRcdFx0XHRcdCNJZiBpdCdzIGEgbGF5ZXJcblx0XHRcdFx0XHRpZiBsYXllci5jb25zdHJhaW50cy5sZWFkaW5nLmxlbmd0aCA9PSB1bmRlZmluZWRcblx0XHRcdFx0XHRcdHByb3BzLnggPSBsYXllci5jb25zdHJhaW50cy5sZWFkaW5nLmNhbGN1bGF0ZWRQb3NpdGlvbi54ICsgbGF5ZXIuY29uc3RyYWludHMubGVhZGluZy5jYWxjdWxhdGVkUG9zaXRpb24ud2lkdGhcblx0XHRcdFx0XHQjSWYgaXQncyBhIHJlbGF0aW9uc2hpcFxuXHRcdFx0XHRcdGVsc2Vcblx0XHRcdFx0XHRcdHByb3BzLnggPSBsYXllci5jb25zdHJhaW50cy5sZWFkaW5nWzBdLmNhbGN1bGF0ZWRQb3NpdGlvbi54ICsgbGF5ZXIuY29uc3RyYWludHMubGVhZGluZ1swXS5jYWxjdWxhdGVkUG9zaXRpb24ud2lkdGggKyBpb3MudXRpbHMucHgobGF5ZXIuY29uc3RyYWludHMubGVhZGluZ1sxXSlcblxuXHRcdFx0IyBPcHBvc2luZyBjb25zdHJhaW50cyBoYW5kbGVyXG5cdFx0XHRpZiBsYXllci5jb25zdHJhaW50cy5hdXRvV2lkdGggIT0gdW5kZWZpbmVkXG5cdFx0XHRcdGxheWVyLmNvbnN0cmFpbnRzLmF1dG9XaWR0aC5zdGFydFggPSBwcm9wcy54XG5cblx0XHRcdGlmIGxheWVyLmNvbnN0cmFpbnRzLnRyYWlsaW5nICE9IHVuZGVmaW5lZFxuXHRcdFx0XHQjSWYgaXQncyBhIG51bWJlclxuXHRcdFx0XHRpZiBsYXllci5jb25zdHJhaW50cy50cmFpbGluZyA9PSBwYXJzZUludChsYXllci5jb25zdHJhaW50cy50cmFpbGluZywgMTApXG5cdFx0XHRcdFx0cHJvcHMueCA9IGxheWVyLnN1cGVyRnJhbWUud2lkdGggLSBpb3MudXRpbHMucHgobGF5ZXIuY29uc3RyYWludHMudHJhaWxpbmcpIC0gcHJvcHMud2lkdGhcblx0XHRcdFx0ZWxzZVxuXHRcdFx0XHRcdCNJZiBpdCdzIGEgbGF5ZXJcblx0XHRcdFx0XHRpZiBsYXllci5jb25zdHJhaW50cy50cmFpbGluZy5sZW5ndGggPT0gdW5kZWZpbmVkXG5cdFx0XHRcdFx0XHRwcm9wcy54ID0gbGF5ZXIuY29uc3RyYWludHMudHJhaWxpbmcuY2FsY3VsYXRlZFBvc2l0aW9uLnggLSBwcm9wcy53aWR0aFxuXHRcdFx0XHRcdCNJZiBpdCdzIGEgcmVsYXRpb25zaGlwXG5cdFx0XHRcdFx0ZWxzZVxuXHRcdFx0XHRcdFx0cHJvcHMueCA9IGxheWVyLmNvbnN0cmFpbnRzLnRyYWlsaW5nWzBdLmNhbGN1bGF0ZWRQb3NpdGlvbi54IC0gaW9zLnV0aWxzLnB4KGxheWVyLmNvbnN0cmFpbnRzLnRyYWlsaW5nWzFdKSAtIHByb3BzLndpZHRoXG5cblx0XHRcdCMgT3Bwb3NpbmcgY29uc3RyYWludHMgaGFuZGxlclxuXHRcdFx0aWYgbGF5ZXIuY29uc3RyYWludHMuYXV0b1dpZHRoICE9IHVuZGVmaW5lZFxuXHRcdFx0XHRsYXllci5jb25zdHJhaW50cy5hdXRvV2lkdGguY2FsY3VsYXRlZFBvc2l0aW9uWCA9IHByb3BzLnhcblxuXHRcdFx0XHQjI3BlcmZvcm0gYXV0b3NpemVcblx0XHRcdFx0cHJvcHMueCA9IGxheWVyLmNvbnN0cmFpbnRzLmF1dG9XaWR0aC5zdGFydFhcblx0XHRcdFx0cHJvcHMud2lkdGggPSBsYXllci5jb25zdHJhaW50cy5hdXRvV2lkdGguY2FsY3VsYXRlZFBvc2l0aW9uWCAtIGxheWVyLmNvbnN0cmFpbnRzLmF1dG9XaWR0aC5zdGFydFggKyBwcm9wcy53aWR0aFxuXG5cdFx0XHRpZiBsYXllci5jb25zdHJhaW50cy50b3AgIT0gdW5kZWZpbmVkXG5cdFx0XHRcdCNJZiBpdCdzIGEgbnVtYmVyXG5cdFx0XHRcdGlmIGxheWVyLmNvbnN0cmFpbnRzLnRvcCA9PSBwYXJzZUludChsYXllci5jb25zdHJhaW50cy50b3AsIDEwKVxuXHRcdFx0XHRcdHByb3BzLnkgPSBpb3MudXRpbHMucHgobGF5ZXIuY29uc3RyYWludHMudG9wKVxuXHRcdFx0XHRlbHNlXG5cdFx0XHRcdFx0I0lmIGl0J3MgYSBsYXllclxuXHRcdFx0XHRcdGlmIGxheWVyLmNvbnN0cmFpbnRzLnRvcC5sZW5ndGggPT0gdW5kZWZpbmVkXG5cdFx0XHRcdFx0XHRwcm9wcy55ID0gbGF5ZXIuY29uc3RyYWludHMudG9wLmNhbGN1bGF0ZWRQb3NpdGlvbi55ICsgbGF5ZXIuY29uc3RyYWludHMudG9wLmNhbGN1bGF0ZWRQb3NpdGlvbi5oZWlnaHRcblx0XHRcdFx0XHQjSWYgaXQncyBhIHJlbGF0aW9uc2hpcFxuXHRcdFx0XHRcdGVsc2Vcblx0XHRcdFx0XHRcdHByb3BzLnkgPSBsYXllci5jb25zdHJhaW50cy50b3BbMF0uY2FsY3VsYXRlZFBvc2l0aW9uLnkgKyBsYXllci5jb25zdHJhaW50cy50b3BbMF0uY2FsY3VsYXRlZFBvc2l0aW9uLmhlaWdodCArIGlvcy51dGlscy5weChsYXllci5jb25zdHJhaW50cy50b3BbMV0pXG5cblx0XHRcdCMgT3Bwb3NpbmcgY29uc3RyYWludHMgaGFuZGxlclxuXHRcdFx0aWYgbGF5ZXIuY29uc3RyYWludHMuYXV0b0hlaWdodCAhPSB1bmRlZmluZWRcblx0XHRcdFx0bGF5ZXIuY29uc3RyYWludHMuYXV0b0hlaWdodC5zdGFydFkgPSBwcm9wcy55XG5cblxuXHRcdFx0aWYgbGF5ZXIuY29uc3RyYWludHMuYm90dG9tICE9IHVuZGVmaW5lZFxuXHRcdFx0XHQjSWYgaXQncyBhIG51bWJlclxuXHRcdFx0XHRpZiBsYXllci5jb25zdHJhaW50cy5ib3R0b20gPT0gcGFyc2VJbnQobGF5ZXIuY29uc3RyYWludHMuYm90dG9tLCAxMClcblx0XHRcdFx0XHRwcm9wcy55ID0gbGF5ZXIuc3VwZXJGcmFtZS5oZWlnaHQgLSBpb3MudXRpbHMucHgobGF5ZXIuY29uc3RyYWludHMuYm90dG9tKSAtIHByb3BzLmhlaWdodFxuXG5cdFx0XHRcdGVsc2Vcblx0XHRcdFx0XHQjSWYgaXQncyBhIGxheWVyXG5cdFx0XHRcdFx0aWYgbGF5ZXIuY29uc3RyYWludHMuYm90dG9tLmxlbmd0aCA9PSB1bmRlZmluZWRcblx0XHRcdFx0XHRcdHByb3BzLnkgPSBsYXllci5jb25zdHJhaW50cy5ib3R0b20uY2FsY3VsYXRlZFBvc2l0aW9uLnkgLSBwcm9wcy5oZWlnaHRcblx0XHRcdFx0XHQjSWYgaXQncyBhIHJlbGF0aW9uc2hpcFxuXHRcdFx0XHRcdGVsc2Vcblx0XHRcdFx0XHRcdHByb3BzLnkgPSBsYXllci5jb25zdHJhaW50cy5ib3R0b21bMF0uY2FsY3VsYXRlZFBvc2l0aW9uLnkgLSAgaW9zLnV0aWxzLnB4KGxheWVyLmNvbnN0cmFpbnRzLmJvdHRvbVsxXSkgLSBwcm9wcy5oZWlnaHRcblxuXHRcdFx0IyBPcHBvc2luZyBjb25zdHJhaW50cyBoYW5kbGVyXG5cdFx0XHRpZiBsYXllci5jb25zdHJhaW50cy5hdXRvSGVpZ2h0ICE9IHVuZGVmaW5lZFxuXHRcdFx0XHRsYXllci5jb25zdHJhaW50cy5hdXRvSGVpZ2h0LmNhbGN1bGF0ZWRQb3NpdGlvblkgPSBwcm9wcy55XG5cdFx0XHRcdCMjIHBlcmZvcm0gYXV0b3NpemVcblx0XHRcdFx0cHJvcHMuaGVpZ2h0ID0gbGF5ZXIuY29uc3RyYWludHMuYXV0b0hlaWdodC5jYWxjdWxhdGVkUG9zaXRpb25ZIC0gbGF5ZXIuY29uc3RyYWludHMuYXV0b0hlaWdodC5zdGFydFkgKyBwcm9wcy5oZWlnaHRcblx0XHRcdFx0cHJvcHMueSA9IGxheWVyLmNvbnN0cmFpbnRzLmF1dG9IZWlnaHQuc3RhcnRZXG5cblxuXHRcdFx0IyBBbGlnbm1lbnQgY29uc3RyYWludHNcblx0XHRcdGlmIGxheWVyLmNvbnN0cmFpbnRzLmFsaWduICE9IHVuZGVmaW5lZFxuXHRcdFx0XHQjU2V0IHRoZSBjZW50ZXJpbmcgZnJhbWVcblx0XHRcdFx0aWYgbGF5ZXIuY29uc3RyYWludHMuYWxpZ24gPT0gXCJob3Jpem9udGFsXCJcblx0XHRcdFx0XHRwcm9wcy54ID0gbGF5ZXIuc3VwZXJGcmFtZS53aWR0aCAvIDIgLSBwcm9wcy53aWR0aCAvIDJcblxuXHRcdFx0XHRpZiBsYXllci5jb25zdHJhaW50cy5hbGlnbiA9PSBcInZlcnRpY2FsXCJcblx0XHRcdFx0XHRwcm9wcy55ID0gbGF5ZXIuc3VwZXJGcmFtZS5oZWlnaHQgLyAyIC0gcHJvcHMuaGVpZ2h0IC8gMlxuXG5cdFx0XHRcdGlmIGxheWVyLmNvbnN0cmFpbnRzLmFsaWduID09IFwiY2VudGVyXCJcblx0XHRcdFx0XHRwcm9wcy54ID0gbGF5ZXIuc3VwZXJGcmFtZS53aWR0aCAvIDIgLSBwcm9wcy53aWR0aCAvIDJcblx0XHRcdFx0XHRwcm9wcy55ID0gbGF5ZXIuc3VwZXJGcmFtZS5oZWlnaHQgLyAyIC0gcHJvcHMuaGVpZ2h0IC8gMlxuXG5cblx0XHRcdCMgQ2VudGVyaW5nIGNvbnN0cmFpbnRzXG5cdFx0XHRpZiBsYXllci5jb25zdHJhaW50cy5ob3Jpem9udGFsQ2VudGVyICE9IHVuZGVmaW5lZFxuXHRcdFx0XHRwcm9wcy54ID0gbGF5ZXIuY29uc3RyYWludHMuaG9yaXpvbnRhbENlbnRlci5jYWxjdWxhdGVkUG9zaXRpb24ueCArIChsYXllci5jb25zdHJhaW50cy5ob3Jpem9udGFsQ2VudGVyLmNhbGN1bGF0ZWRQb3NpdGlvbi53aWR0aCAtIHByb3BzLndpZHRoKSAvIDJcblxuXHRcdFx0aWYgbGF5ZXIuY29uc3RyYWludHMudmVydGljYWxDZW50ZXIgIT0gdW5kZWZpbmVkXG5cdFx0XHRcdHByb3BzLnkgPSBsYXllci5jb25zdHJhaW50cy52ZXJ0aWNhbENlbnRlci5jYWxjdWxhdGVkUG9zaXRpb24ueSArIChsYXllci5jb25zdHJhaW50cy52ZXJ0aWNhbENlbnRlci5jYWxjdWxhdGVkUG9zaXRpb24uaGVpZ2h0IC0gcHJvcHMuaGVpZ2h0KSAvIDJcblxuXHRcdFx0aWYgbGF5ZXIuY29uc3RyYWludHMuY2VudGVyICE9IHVuZGVmaW5lZFxuXHRcdFx0XHRwcm9wcy54ID0gbGF5ZXIuY29uc3RyYWludHMuY2VudGVyLmNhbGN1bGF0ZWRQb3NpdGlvbi54ICsgKGxheWVyLmNvbnN0cmFpbnRzLmNlbnRlci5jYWxjdWxhdGVkUG9zaXRpb24ud2lkdGggLSBwcm9wcy53aWR0aCkgLyAyXG5cdFx0XHRcdHByb3BzLnkgPSBsYXllci5jb25zdHJhaW50cy5jZW50ZXIuY2FsY3VsYXRlZFBvc2l0aW9uLnkgKyAobGF5ZXIuY29uc3RyYWludHMuY2VudGVyLmNhbGN1bGF0ZWRQb3NpdGlvbi5oZWlnaHQgLSBwcm9wcy5oZWlnaHQpIC8gMlxuXG5cdFx0XHQjIEFsaWduaW5nIGNvbnN0cmFpbnRzXG5cdFx0XHRpZiBsYXllci5jb25zdHJhaW50cy5sZWFkaW5nRWRnZXMgIT0gdW5kZWZpbmVkXG5cdFx0XHRcdHByb3BzLnggPSBsYXllci5jb25zdHJhaW50cy5sZWFkaW5nRWRnZXMuY2FsY3VsYXRlZFBvc2l0aW9uLnhcblxuXHRcdFx0aWYgbGF5ZXIuY29uc3RyYWludHMudHJhaWxpbmdFZGdlcyAhPSB1bmRlZmluZWRcblx0XHRcdFx0cHJvcHMueCA9IGxheWVyLmNvbnN0cmFpbnRzLnRyYWlsaW5nRWRnZXMuY2FsY3VsYXRlZFBvc2l0aW9uLnggLSBwcm9wcy53aWR0aCArIGxheWVyLmNvbnN0cmFpbnRzLnRyYWlsaW5nRWRnZXMuY2FsY3VsYXRlZFBvc2l0aW9uLndpZHRoXG5cblxuXHRcdFx0aWYgbGF5ZXIuY29uc3RyYWludHMudG9wRWRnZXMgIT0gdW5kZWZpbmVkXG5cdFx0XHRcdHByb3BzLnkgPSBsYXllci5jb25zdHJhaW50cy50b3BFZGdlcy5jYWxjdWxhdGVkUG9zaXRpb24ueVxuXG5cdFx0XHRpZiBsYXllci5jb25zdHJhaW50cy5ib3R0b21FZGdlcyAhPSB1bmRlZmluZWRcblx0XHRcdFx0cHJvcHMueSA9IGxheWVyLmNvbnN0cmFpbnRzLmJvdHRvbUVkZ2VzLmNhbGN1bGF0ZWRQb3NpdGlvbi55IC0gcHJvcHMuaGVpZ2h0ICsgbGF5ZXIuY29uc3RyYWludHMuYm90dG9tRWRnZXMuY2FsY3VsYXRlZFBvc2l0aW9uLmhlaWdodFxuXG5cblx0XHRcdGxheWVyLmNhbGN1bGF0ZWRQb3NpdGlvbiA9IHByb3BzXG5cdFx0ZWxzZVxuXHRcdFx0bGF5ZXIuY2FsY3VsYXRlZFBvc2l0aW9uID0gbGF5ZXIucHJvcHNcblxuXHRcdGJsdWVwcmludC5wdXNoIGxheWVyXG5cblxuXHRyZXR1cm4gYmx1ZXByaW50XG5cbmV4cG9ydHMuc2V0ID0gKGFycmF5KSAtPlxuXHRzZXR1cCA9IHt9XG5cdHByb3BzID0ge31cblx0aWYgYXJyYXlcblx0XHRmb3IgaSBpbiBPYmplY3Qua2V5cyhleHBvcnRzLmRlZmF1bHRzLmFuaW1hdGlvbnMpXG5cdFx0XHRpZiBhcnJheVtpXVxuXHRcdFx0XHRzZXR1cFtpXSA9IGFycmF5W2ldXG5cdFx0XHRlbHNlXG5cdFx0XHRcdHNldHVwW2ldID0gZXhwb3J0cy5kZWZhdWx0cy5hbmltYXRpb25zW2ldXG5cblx0Ymx1ZXByaW50ID0gbGF5b3V0KGFycmF5KVxuXG5cdGZvciBsYXllciwgaW5kZXggaW4gYmx1ZXByaW50XG5cdFx0Zm9yIGtleSBpbiBPYmplY3Qua2V5cyhsYXllci5jYWxjdWxhdGVkUG9zaXRpb24pXG5cdFx0XHRsYXllcltrZXldID0gbGF5ZXIuY2FsY3VsYXRlZFBvc2l0aW9uW2tleV1cblxuZXhwb3J0cy5hbmltYXRlID0gKGFycmF5KSAtPlxuXHRzZXR1cCA9IHt9XG5cdHByb3BzID0ge31cblx0aWYgYXJyYXlcblx0XHRmb3IgaSBpbiBPYmplY3Qua2V5cyhleHBvcnRzLmRlZmF1bHRzLmFuaW1hdGlvbnMpXG5cdFx0XHRpZiBhcnJheVtpXVxuXHRcdFx0XHRzZXR1cFtpXSA9IGFycmF5W2ldXG5cdFx0XHRlbHNlXG5cdFx0XHRcdHNldHVwW2ldID0gZXhwb3J0cy5kZWZhdWx0cy5hbmltYXRpb25zW2ldXG5cblx0Ymx1ZXByaW50ID0gbGF5b3V0KGFycmF5KVxuXG5cdGZvciBsYXllciwgaW5kZXggaW4gYmx1ZXByaW50XG5cdFx0I1RpbWluZ1xuXHRcdGRlbGF5ID0gc2V0dXAuZGVsYXlcblx0XHRpZiBzZXR1cC5zdGFnZ2VyXG5cdFx0XHRzdGFnID0gc2V0dXAuc3RhZ2dlclxuXHRcdFx0ZGVsYXkgPSAoKGluZGV4KSAqIHN0YWcpICsgZGVsYXlcblxuXHRcdGlmIHNldHVwLmZhZGVPdXRcblx0XHRcdGlmIGxheWVyID09IHNldHVwLmZhZGVPdXRcblx0XHRcdFx0bGF5ZXIuY2FsY3VsYXRlZFBvc2l0aW9uLm9wYWNpdHkgPSAwXG5cblx0XHRpZiBzZXR1cC5mYWRlSW5cblx0XHRcdGxheWVyLmNhbGN1bGF0ZWRQb3NpdGlvbi5vcGFjaXR5ID0gMVxuXG5cdFx0bGF5ZXIuYW5pbWF0ZVxuXHRcdFx0cHJvcGVydGllczpsYXllci5jYWxjdWxhdGVkUG9zaXRpb25cblx0XHRcdHRpbWU6c2V0dXAudGltZVxuXHRcdFx0ZGVsYXk6ZGVsYXlcblx0XHRcdGN1cnZlOnNldHVwLmN1cnZlXG5cdFx0XHRyZXBlYXQ6c2V0dXAucmVwZWF0XG5cdFx0XHRjb2xvck1vZGVsOnNldHVwLmNvbG9yTW9kZWxcblx0XHRcdGN1cnZlT3B0aW9uczpzZXR1cC5jdXJ2ZU9wdGlvbnNcblxuXHRcdGxheWVyLmNhbGN1bGF0ZWRQb3NpdGlvbiA9IHByb3BzXG4iLCJpb3MgPSByZXF1aXJlICdpb3Mta2l0J1xuXG5cbmV4cG9ydHMuZGVmYXVsdHMgPVxuICBzdHlsZTpcImxpZ2h0XCJcbiAgc2hpZnQ6dHJ1ZVxuICBvdXRwdXQ6dW5kZWZpbmVkXG4gIHJldHVyblRleHQ6XCJyZXR1cm5cIlxuICBzdGF0ZTpcImxldHRlcnNcIlxuICBoaWRkZW46ZmFsc2VcbiAgcmV0dXJuQ29sb3I6XCJibHVlXCJcbiAgc3VwZXJMYXllcjp1bmRlZmluZWRcblxuXG4jUmVzcG9uc2FiaWxlIGZvciBrZXlib2FyZCBkaW1lbnNpb25zXG5kZXZpY2UgPVxuICBcImlwaG9uZS01XCI6XG4gICAgcG9wVXBDaGFyOjQwXG4gICAgcG9wVXBUb3A6NFxuICAgIGhlaWdodDoyMTVcbiAgICBsaW5lSGVpZ2h0OjM2XG4gICAgbGV0dGVyS2V5OlxuICAgICAga2V5VG9wOjZcbiAgICAgIGhlaWdodDozOVxuICAgICAgd2lkdGg6MjYuNVxuICAgICAgYm9yZGVyUmFkaXVzOjVcbiAgICAgIGZvbnRTaXplOjIyLjVcbiAgICBzcGVjaWFsS2V5V2lkdGg6MzguNVxuICAgIHNwZWNpYWxLZXlIZWlnaHQ6MzguNVxuICAgIHNwYWNlOjVcbiAgICByb3cxOlxuICAgICAgbGVhZGluZzowXG4gICAgICB0b3A6MFxuICAgIHJvdzI6XG4gICAgICBsZWFkaW5nOjE5XG4gICAgICB0b3A6MTZcbiAgICByb3czOlxuICAgICAgdG9wOjE2XG4gICAgICBsZWFkaW5nOjUxXG4gICAgYXJlYTpcbiAgICAgIHRvcDoxMVxuICAgICAgbGVhZGluZzozXG4gICAgICB0cmFpbGluZzozXG4gICAgICBib3R0b206NFxuICAgIHJldHVybldpZHRoOjc1XG4gICAgcG9wVXBPZmZzZXQ6XG4gICAgICB4OjRcbiAgICAgIHk6MzBcbiAgXCJpcGhvbmUtNnNcIjpcbiAgICBwb3BVcENoYXI6NDBcbiAgICBwb3BVcFRvcDo2XG4gICAgaGVpZ2h0OjIxOFxuICAgIGxpbmVIZWlnaHQ6NDBcbiAgICBsZXR0ZXJLZXk6XG4gICAgICBrZXlUb3A6MTBcbiAgICAgIGhlaWdodDo0MlxuICAgICAgd2lkdGg6MzEuNVxuICAgICAgYm9yZGVyUmFkaXVzOjVcbiAgICAgIGZvbnRTaXplOjIzXG4gICAgICB0b3A6MTBcbiAgICBzcGVjaWFsS2V5V2lkdGg6NDJcbiAgICBzcGVjaWFsS2V5SGVpZ2h0OjQyXG4gICAgc3BhY2U6NlxuICAgIHJvdzE6XG4gICAgICBsZWFkaW5nOjBcbiAgICAgIHRvcDowXG4gICAgcm93MjpcbiAgICAgIGxlYWRpbmc6MjJcbiAgICAgIHRvcDoxMlxuICAgIHJvdzM6XG4gICAgICB0b3A6MTJcbiAgICAgIGxlYWRpbmc6NTlcbiAgICBhcmVhOlxuICAgICAgdG9wOjEyXG4gICAgICBsZWFkaW5nOjNcbiAgICAgIHRyYWlsaW5nOjNcbiAgICAgIGJvdHRvbTo0XG4gICAgcmV0dXJuV2lkdGg6ODdcbiAgICBwb3BVcE9mZnNldDpcbiAgICAgIHg6NVxuICAgICAgeTozMlxuICBcImlwaG9uZS02cy1wbHVzXCI6XG4gICAgcG9wVXBDaGFyOjM4XG4gICAgcG9wVXBUb3A6NlxuICAgIGhlaWdodDoyMjZcbiAgICBsaW5lSGVpZ2h0OjQyXG4gICAgbGV0dGVyS2V5OlxuICAgICAga2V5VG9wOjEyXG4gICAgICBoZWlnaHQ6NDVcbiAgICAgIHdpZHRoOjM2XG4gICAgICBib3JkZXJSYWRpdXM6NVxuICAgICAgZm9udFNpemU6MjRcbiAgICAgIHRvcDoxMFxuICAgIHNwZWNpYWxLZXlXaWR0aDo0NVxuICAgIHNwZWNpYWxLZXlIZWlnaHQ6NDVcbiAgICBzcGFjZTo1XG4gICAgcm93MTpcbiAgICAgIGxlYWRpbmc6MFxuICAgICAgdG9wOjBcbiAgICByb3cyOlxuICAgICAgbGVhZGluZzoyMFxuICAgICAgdG9wOjExXG4gICAgcm93MzpcbiAgICAgIHRvcDoxMVxuICAgICAgbGVhZGluZzo2M1xuICAgIGFyZWE6XG4gICAgICB0b3A6OFxuICAgICAgbGVhZGluZzo0XG4gICAgICB0cmFpbGluZzo0XG4gICAgICBib3R0b206NVxuICAgIHJldHVybldpZHRoOjk3XG4gICAgcG9wVXBPZmZzZXQ6XG4gICAgICB4OjEwXG4gICAgICB5OjM4XG4gIFwiaXBhZFwiOlxuICAgIGhlaWdodDozMTNcbiAgICBsaW5lSGVpZ2h0OjU1XG4gICAgbGV0dGVyS2V5OlxuICAgICAgaGVpZ2h0OjU1XG4gICAgICB3aWR0aDo1NlxuICAgICAgYm9yZGVyUmFkaXVzOjVcbiAgICAgIGZvbnRTaXplOjIzXG4gICAgc3BlY2lhbEtleVdpZHRoOjU2XG4gICAgc3BlY2lhbEtleUhlaWdodDo1NVxuICAgIHNwYWNlOjEyXG4gICAgcmV0dXJuV2lkdGg6MTA2XG4gICAgcm93MTpcbiAgICAgIGxlYWRpbmc6MFxuICAgICAgdG9wOjBcbiAgICByb3cyOlxuICAgICAgbGVhZGluZzozMFxuICAgICAgdG9wOjlcbiAgICByb3czOlxuICAgICAgbGVhZGluZzo2OFxuICAgICAgdG9wOjlcbiAgICBhcmVhOlxuICAgICAgdG9wOjU1XG4gICAgICBsZWFkaW5nOjZcbiAgICAgIHRyYWlsaW5nOjZcbiAgICAgIGJvdHRvbTo4XG5cbiAgXCJpcGFkLXByb1wiOlxuICAgIGhlaWdodDozNzhcbiAgICBsaW5lSGVpZ2h0OjYxXG4gICAgbGV0dGVyS2V5OlxuICAgICAgaGVpZ2h0OjYxXG4gICAgICB3aWR0aDo2M1xuICAgICAgYm9yZGVyUmFkaXVzOjVcbiAgICAgIGZvbnRTaXplOjIzXG4gICAgc3BhY2U6N1xuICAgIHJldHVybldpZHRoOjEyMFxuICAgIHNwZWNpYWxLZXlIZWlnaHQ6NjFcbiAgICBzcGVjaWFsS2V5V2lkdGg6OTNcbiAgICByb3cxOlxuICAgICAgbGVhZGluZzoxMTFcbiAgICAgIHRvcDo1M1xuICAgIHJvdzI6XG4gICAgICBsZWFkaW5nOjEyNlxuICAgICAgdG9wOjdcbiAgICByb3czOlxuICAgICAgbGVhZGluZzoxNjFcbiAgICAgIHRvcDo3XG4gICAgYXJlYTpcbiAgICAgIHRvcDo1NlxuICAgICAgbGVhZGluZzo0XG4gICAgICB0cmFpbGluZzo0XG4gICAgICBib3R0b206NFxuXG5cblxuIyBNYXAgb2Yga2V5IGNvZGVzXG4jIENvZGVzIGZvciBhbGwga2V5c1xuY29kZU1hcCA9IHsgODonZGVsZXRlJywgOTondGFiJywgMTM6J3JldHVybicsIDE2OidzaGlmdCcsIDIwOidjYXBzJywgMzI6J3NwYWNlJywgMjc6XCJkaXNtaXNzXCIsIDMzOlwiIVwiLCAzNDpcIlxcXCJcIiwgMzU6XCIjXCIsIDM2OlwiJFwiLCAzNzpcIiVcIiwgMzg6XCImXCIsIDM5OlwiXFwnXCIsIDQwOlwiKFwiLCA0MTpcIilcIiwgNDI6XCIqXCIsIDQzOlwiK1wiLCA0NDpcIixcIiwgNDU6XCItXCIsIDQ3OlwiL1wiLCA0NjpcIi5cIiwgNDg6XCIwXCIsIDQ5OlwiIVwiLCA1MDpcIkBcIiwgNTE6XCIjXCIsIDUyOlwiJFwiLCA1MzpcIiVcIiwgNTQ6XCJeXCIsIDU1OlwiJlwiLCA1NjpcIipcIiwgNTc6XCIoXCIsIDQ4OlwiKVwiLCA1OTpcIl9cIiwgNjA6XCI8XCIsIDYxOlwiPVwiLCA2MjpcIj5cIiwgNjM6XCI/XCIsIDY0OlwiQFwiLCA2NTpcIkFcIiwgNjY6XCJCXCIsIDY3OlwiQ1wiLCA2ODpcIkRcIiwgNjk6XCJFXCIsIDcwOlwiRlwiLCA3MTpcIkdcIiwgNzI6XCJIXCIsIDczOlwiSVwiLCA3NDpcIkpcIiwgNzU6XCJLXCIsIDc2OlwiTFwiLCA3NzpcIk1cIiwgNzg6XCJOXCIsIDc5OlwiT1wiLCA4MDpcIlBcIiwgODE6XCJRXCIsIDgyOlwiUlwiLCA4MzpcIlNcIiwgODQ6XCJUXCIsIDg1OlwiVVwiLCA4NjpcIlZcIiwgODc6XCJXXCIsIDg4OlwiWFwiLCA4OTpcIllcIiwgOTA6XCJaXCIsIDkxOidjbWQnLCAyMTk6XCJbXCIsIDkyOlwiXFxcXFwiLCAyMjE6XCJdXCIsIDk0OlwiXlwiLCA5NTpcIl9cIiwgOTY6XCJgXCIsIDk3OlwiYVwiLCA5ODpcImJcIiwgOTk6XCJjXCIsIDEwMDpcImRcIiwgMTAxOlwiZVwiLCAxMDI6XCJmXCIsIDEwMzpcImdcIiwgMTA0OlwiaFwiLCAxMDU6XCJpXCIsIDEwNjpcImpcIiwgMTA3Olwia1wiLCAxMDg6XCJsXCIsIDEwOTpcIm1cIiwgMTEwOlwiblwiLCAxMTE6XCJvXCIsIDExMjpcInBcIiwgMTEzOlwicVwiLCAxMTQ6XCJyXCIsIDExNTpcInNcIiwgMTE2OlwidFwiLCAxMTc6XCJ1XCIsIDExODpcInZcIiwgMTE5Olwid1wiLCAxMjA6XCJ4XCIsIDEyMTpcInlcIiwgMTIyOlwielwiLCAxMjM6XCJ7XCIsIDEyNDpcInxcIiwgMTI1OlwifVwiLCAxMjY6XCJ+XCIsIDE4NjpcIjpcIiwgMTg3OlwiK1wiLCAxODg6XCI8XCIsIDE5MDpcIj5cIiwgMTkxOlwiP1wiLCAxODk6XCJfXCIsIDE5MjpcIn5cIiwgMjE5Olwie1wiLCAyMjA6XCJcXHxcIiwgMjIxOlwifVwiLCAyMjI6XCImcmRxdW87XCJ9XG5hcnJheU9mQ29kZXMgPSBPYmplY3Qua2V5cyhjb2RlTWFwKVxubGV0dGVycyA9IFtcInFcIiwgXCJ3XCIsIFwiZVwiLCBcInJcIiwgXCJ0XCIsIFwieVwiLCBcInVcIiwgXCJpXCIsIFwib1wiLCBcInBcIiwgXCJhXCIsIFwic1wiLCBcImRcIiwgXCJmXCIsIFwiZ1wiLCBcImhcIiwgXCJqXCIsIFwia1wiLCBcImxcIiwgXCJ6XCIsIFwieFwiLCBcImNcIiwgXCJ2XCIsICBcImJcIiwgXCJuXCIsIFwibVwiXVxubnVtYmVycyA9IFtcIjFcIiwgXCIyXCIsIFwiM1wiLCBcIjRcIiwgXCI1XCIsIFwiNlwiLCBcIjdcIiwgXCI4XCIsIFwiOVwiLCBcIjBcIiwgXCItXCIsIFwiL1wiLCBcIjpcIiwgXCI7XCIsIFwiKFwiLCBcIilcIiwgXCIkXCIsIFwiJlwiLCBcIkBcIiwgXCJcXFwiXCIsIFwiLlwiLCBcIixcIiwgXCI/XCIsIFwiIVwiLCBcIuKAslwiXVxuc3ltYm9scyA9IFtcIltcIiwgXCJdXCIsIFwie1wiLCBcIn1cIiwgXCIjXCIsIFwiJVwiLCBcIl5cIiwgXCIqXCIsIFwiK1wiLCBcIj1cIiwgXCJfXCIsIFwiXFxcXFwiLCBcInxcIiwgXCJ+XCIsIFwiPFwiLCBcIj5cIiwgXCLigqxcIiwgXCLCo1wiLCBcIsKlXCIsIFwi4oCiXCJdXG5cbmV4cG9ydHMuZGVmYXVsdHMucHJvcHMgPSBPYmplY3Qua2V5cyhleHBvcnRzLmRlZmF1bHRzKVxuXG5leHBvcnRzLmNyZWF0ZSA9IChvYmopIC0+XG4gIHNldHVwID0gaW9zLnV0aWxzLnNldHVwQ29tcG9uZW50KG9iaiwgZXhwb3J0cy5kZWZhdWx0cylcbiAgI1Jlc3BvbnNhYmlsZSBmb3IgY29sb3JzXG4gIHN0eWxlID1cbiAgICBsaWdodDpcbiAgICAgIGJhY2tncm91bmRDb2xvcjpcIiNEMUQ1REFcIlxuICAgICAgY29sb3I6XCIjMDAwXCJcbiAgICAgIHNwZWNpYWxLZXlCRzpcIiNBQ0IzQkRcIlxuICAgICAga2V5Qkc6XCIjRjdGN0Y3XCJcbiAgICAgIHNoYWRvd1k6IGlvcy5weCgxKVxuICAgICAgc2hhZG93Q29sb3I6XCIjODk4QjhGXCJcbiAgICAgIHJldHVybkJHOmlvcy5jb2xvcihzZXR1cC5yZXR1cm5Db2xvcilcbiAgICBkYXJrOlxuICAgICAgYmFja2dyb3VuZENvbG9yOlwicmdiYSgwLDAsMCwuNylcIlxuICAgICAgY29sb3I6XCIjRkZGXCJcbiAgICAgIHNwZWNpYWxLZXlCRzpcInJnYmEoNjcsNjcsNjcsLjgpXCJcbiAgICAgIGtleUJHOlwicmdiYSgxMDUsMTA1LDEwNSwuOClcIlxuICAgICAgc2hhZG93WTogaW9zLnB4KDEpXG4gICAgICBzaGFkb3dDb2xvcjpcInJnYmEoMCwwLDAsLjQpXCJcbiAgICAgIHJldHVybkJHOmlvcy5jb2xvcihzZXR1cC5yZXR1cm5Db2xvcilcblxuICBzcGVjcyA9IGRldmljZVtpb3MuZGV2aWNlLm5hbWVdXG4gIGNvbG9ycyA9IHN0eWxlW3NldHVwLnN0eWxlXVxuXG4gIGRldmljZVxuICBib2FyZCA9IG5ldyBpb3MuVmlld1xuICAgIG5hbWU6XCJLZXlib2FyZFwiXG4gICAgc3VwZXJMYXllcjpzZXR1cC5zdXBlckxheWVyXG4gICAgYmFja2dyb3VuZENvbG9yOnN0eWxlW3NldHVwLnN0eWxlXS5iYWNrZ3JvdW5kQ29sb3JcbiAgICB5Omlvcy5kZXZpY2UuaGVpZ2h0XG4gICAgY29uc3RyYWludHM6XG4gICAgICBsZWFkaW5nOjBcbiAgICAgIHRyYWlsaW5nOjBcbiAgICAgIGJvdHRvbTotMSAqIHNwZWNzLmhlaWdodFxuICAgICAgaGVpZ2h0OnNwZWNzLmhlaWdodFxuICBpb3MudXRpbHMuYmdCbHVyKGJvYXJkKVxuICBib2FyZC5vdXRwdXQgPSAob2JqKSAtPlxuICAgIGlmIGJvYXJkLnRhcmdldFxuICAgICAgaWYgYm9hcmQudGFyZ2V0LnR5cGUgPT0gJ2ZpZWxkJ1xuICAgICAgICBib2FyZC50YXJnZXQuYWN0aXZlID0gZmFsc2VcblxuICAgIGJvYXJkLnRhcmdldCA9IG9ialxuICAgIGlmIGJvYXJkLnRhcmdldFxuICAgICAgaWYgYm9hcmQudGFyZ2V0LnR5cGUgPT0gJ2ZpZWxkJ1xuICAgICAgICBib2FyZC50YXJnZXQuYWN0aXZlID0gdHJ1ZVxuICBib2FyZC5oaWRkZW4gPSBzZXR1cC5oaWRkZW5cblxuICBpZiBib2FyZC5oaWRkZW4gPT0gZmFsc2VcbiAgICBib2FyZC5jb25zdHJhaW50cy5ib3R0b20gPSAwXG4gICAgaW9zLmxheW91dC5zZXQoYm9hcmQpXG5cbiAgYm9hcmQuY2FsbCA9ICgpIC0+XG4gICAgYm9hcmQueSA9IGlvcy5kZXZpY2UuaGVpZ2h0XG4gICAgYm9hcmQuY29uc3RyYWludHMuYm90dG9tID0gMFxuICAgIGlmIGJvYXJkLmhpZGRlblxuICAgICAgYm9hcmQuaGlkZGVuID0gZmFsc2VcbiAgICAgIGlvcy5sYXlvdXQuYW5pbWF0ZVxuICAgICAgICB0YXJnZXQ6Ym9hcmRcbiAgICAgICAgdGltZTouNVxuICAgICAgICBjdXJ2ZTonZWFzZS1pbi1vdXQnXG5cbiAgICBib2FyZC5icmluZ1RvRnJvbnQoKVxuICBib2FyZC5kaXNtaXNzID0gKCkgLT5cbiAgICBib2FyZC5jb25zdHJhaW50cy5ib3R0b20gPSAtMSAqIGlvcy5wdChib2FyZC5oZWlnaHQpXG4gICAgYm9hcmQuaGlkZGVuID0gdHJ1ZVxuICAgIGJvYXJkLnRhcmdldC5hY3RpdmUgPSBmYWxzZVxuICAgIGlvcy5sYXlvdXQuYW5pbWF0ZVxuICAgICAgdGFyZ2V0OmJvYXJkXG4gICAgICB0aW1lOi41XG4gICAgICBjdXJ2ZTonZWFzZS1pbi1vdXQnXG5cbiAgYm9hcmQuZGVsZXRlID0gKCkgLT5cbiAgICBsYXllciA9IFwiXCJcbiAgICBpZiBib2FyZC50YXJnZXRcbiAgICAgIGlmIGJvYXJkLnRhcmdldC50eXBlID09ICdmaWVsZCdcbiAgICAgICAgbGF5ZXIgPSBib2FyZC50YXJnZXQudGV4dFxuICAgICAgZWxzZVxuICAgICAgICBsYXllciA9IGJvYXJkLnRhcmdldFxuXG4gICAgICBpc1NwYWNlID0gbGF5ZXIuaHRtbFtsYXllci5odG1sLmxlbmd0aCAtIDUuLmxheWVyLmh0bWwubGVuZ3RoIC0gMSBdXG5cbiAgICAgIGlmIGlzU3BhY2UgIT0gJ25ic3A7J1xuICAgICAgICB0ZXh0ID0gbGF5ZXIuaHRtbC5zbGljZSgwLCAtMSlcbiAgICAgICAgbGF5ZXIuaHRtbCA9IHRleHRcbiAgICAgIGVsc2VcbiAgICAgICAgdGV4dCA9IGxheWVyLmh0bWwuc2xpY2UoMCwgLTYpXG4gICAgICAgIGxheWVyLmh0bWwgPSB0ZXh0XG5cbiAgYm9hcmQuY2Fwc0xvY2sgPSAoKSAtPlxuICAgIGJvYXJkLmlzQ2Fwc0xvY2sgPSB0cnVlXG4gICAgYm9hcmQuaXNDYXBpdGFsID0gdHJ1ZVxuICAgIGJvYXJkLmtleXMuc2hpZnQuaWNvbi50b2dnbGUoJ29mZicpXG4gICAgaGFuZGxlS2V5Q29sb3IoYm9hcmQua2V5cy5zaGlmdClcbiAgICBpZiBpb3MuZGV2aWNlLm5hbWUgPT0gJ2lwYWQtcHJvJ1xuICAgICAgYm9hcmQua2V5cy5zaGlmdGFsdC5pY29uLnRvZ2dsZSgnb2ZmJylcbiAgICAgIGhhbmRsZUtleUNvbG9yKGJvYXJkLmtleXMuc2hpZnRhbHQpXG5cbiAgYm9hcmQub3V0cHV0KHNldHVwLm91dHB1dClcbiAgYm9hcmQua2V5c0FycmF5ID0gW11cbiAgYm9hcmQua2V5cyA9IHt9XG4gIGJvYXJkLmlzQ2FwaXRhbCA9IHNldHVwLnNoaWZ0XG4gIGJvYXJkLmFyZWEgPSBuZXcgaW9zLlZpZXdcbiAgICBuYW1lOlwiLmFyZWFcIlxuICAgIHN1cGVyTGF5ZXI6Ym9hcmRcbiAgICBjb25zdHJhaW50czogc3BlY3MuYXJlYVxuICAgIGJhY2tncm91bmRDb2xvcjpcInRyYW5zcGFyZW50XCJcblxuICBLZXkgPSAob2JqKSAtPlxuICAgIGtleSA9IG5ldyBpb3MuVmlld1xuICAgICAgbmFtZTpcIi5rZXlzLlwiICsgb2JqLm5hbWVcbiAgICAgIGNvbnN0cmFpbnRzOm9iai5jb25zdHJhaW50c1xuICAgICAgc3VwZXJMYXllcjpib2FyZC5hcmVhXG4gICAgICBib3JkZXJSYWRpdXM6aW9zLnB4KHNwZWNzLmxldHRlcktleS5ib3JkZXJSYWRpdXMpXG4gICAgICBzaGFkb3dZOmNvbG9ycy5zaGFkb3dZXG4gICAgICBzaGFkb3dDb2xvcjpjb2xvcnMuc2hhZG93Q29sb3JcbiAgICBrZXkuc3R5bGUuZm9udEZhbWlseSA9IFwiLWFwcGxlLXN5c3RlbSwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZlwiXG5cbiAgICAjRGlzYWJsZXMgWm9vbVxuICAgIGtleS5vbiBFdmVudHMuVG91Y2hTdGFydCwgKGV2ZW50KSAtPlxuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKVxuICAgIHJldHVybiBrZXlcblxuICBMZXR0ZXIgPSAob2JqKSAtPlxuICAgIGtleSA9IG5ldyBLZXkgb2JqXG4gICAga2V5LmJhY2tncm91bmRDb2xvciA9IGNvbG9ycy5rZXlCR1xuICAgIGtleS5odG1sID0gb2JqLmxldHRlclxuICAgIGtleS5jb2xvciA9IGNvbG9ycy5jb2xvclxuICAgIGtleS5zdHlsZS50ZXh0QWxpZ24gPSBcImNlbnRlclwiXG4gICAga2V5LnN0eWxlLmxpbmVIZWlnaHQgPSBpb3MucHgoc3BlY3MubGluZUhlaWdodCkgKyBcInB4XCJcbiAgICBrZXkuc3R5bGUuZm9udFNpemUgPSBpb3MucHgoc3BlY3MubGV0dGVyS2V5LmZvbnRTaXplKSArIFwicHhcIlxuICAgIGtleS52YWx1ZSA9IG9iai5sZXR0ZXJcblxuXG4gICAgaWYga2V5LnZhbHVlID09IFwic3BhY2VcIiB0aGVuIGtleS52YWx1ZSA9IFwiJm5ic3A7XCJcbiAgICBpZiBpb3MuaXNQYWQoKVxuICAgICAga2V5LmRvd24gPSAtPlxuICAgICAgICBrZXkuYmFja2dyb3VuZENvbG9yID0gY29sb3JzLnNwZWNpYWxLZXlCR1xuICAgICAgICBpZiBib2FyZC50YXJnZXQgdGhlbiBpb3MudXRpbHMud3JpdGUoYm9hcmQudGFyZ2V0LCBrZXkudmFsdWUpXG4gICAgICBrZXkudXAgPSAtPlxuICAgICAgICBrZXkuYmFja2dyb3VuZENvbG9yID0gY29sb3JzLmtleUJHXG4gICAgICAgIGlmIGJvYXJkLmlzQ2FwaXRhbCAmJiBib2FyZC5pc0NhcHNMb2NrICE9IHRydWVcbiAgICAgICAgICBib2FyZC5pc0NhcGl0YWwgPSBmYWxzZVxuICAgICAgICAgIGNhcGl0YWxpemVLZXlzKClcbiAgICAgICAgICBib2FyZC5rZXlzLnNoaWZ0LnVwKClcbiAgICAgICAgICBpZiBpb3MuaXNQYWQoKSB0aGVuIGJvYXJkLmtleXMuc2hpZnRhbHQudXAoKVxuICAgICAga2V5Lm9uIEV2ZW50cy5Ub3VjaFN0YXJ0LCAtPlxuICAgICAgICBrZXkuZG93bigpXG4gICAgICBrZXkub24gRXZlbnRzLlRvdWNoRW5kLCAtPlxuICAgICAgICBrZXkudXAoKVxuICAgIGVsc2VcbiAgICAgIGlmIGtleS52YWx1ZSAhPSAnJm5ic3A7J1xuICAgICAgICBrZXkuZG93biA9IC0+XG4gICAgICAgICAgYm9hcmQucG9wVXAudmlzaWJsZSA9IHRydWVcbiAgICAgICAgICBib2FyZC5icmluZ1RvRnJvbnQoKVxuICAgICAgICAgIGJvYXJkLnBvcFVwLmJyaW5nVG9Gcm9udCgpXG4gICAgICAgICAgYm9hcmQucG9wVXAubWlkWCA9IGtleS5taWRYXG4gICAgICAgICAgYm9hcmQucG9wVXAubWF4WSA9IGtleS5tYXhZXG4gICAgICAgICAgYm9hcmQucG9wVXAudGV4dC5odG1sID0ga2V5LnZhbHVlXG5cbiAgICAgICAgICBpZiBib2FyZC50YXJnZXQgdGhlbiBpb3MudXRpbHMud3JpdGUoYm9hcmQudGFyZ2V0LCBrZXkudmFsdWUpXG5cblxuICAgICAgICBrZXkudXAgPSAtPlxuICAgICAgICAgIGJvYXJkLnBvcFVwLnZpc2libGUgPSBmYWxzZVxuICAgICAgICAgIGlmIGJvYXJkLmlzQ2FwaXRhbCAmJiBib2FyZC5jYXBzTG9jayAhPSB0cnVlXG4gICAgICAgICAgICBib2FyZC5pc0NhcGl0YWwgPSBmYWxzZVxuICAgICAgICAgICAgY2FwaXRhbGl6ZUtleXMoKVxuICAgICAgICAgICAgYm9hcmQua2V5cy5zaGlmdC51cCgpXG5cbiAgICAgICAga2V5Lm9uIEV2ZW50cy5Ub3VjaFN0YXJ0LCAtPiBrZXkuZG93bigpXG4gICAgICAgIGtleS5vbiBFdmVudHMuVG91Y2hFbmQsIC0+IGtleS51cCgpXG4gICAgICBlbHNlXG5cbiAgICAgICAga2V5LmRvd24gPSAtPlxuICAgICAgICAgIGtleS5iYWNrZ3JvdW5kQ29sb3IgPSBjb2xvcnMuc3BlY2lhbEtleUJHXG4gICAgICAgICAgaWYgYm9hcmQudGFyZ2V0IHRoZW4gaW9zLnV0aWxzLndyaXRlKGJvYXJkLnRhcmdldCwga2V5LnZhbHVlKVxuICAgICAgICBrZXkudXAgPSAtPlxuICAgICAgICAgIGtleS5iYWNrZ3JvdW5kQ29sb3IgPSBjb2xvcnMua2V5QkdcbiAgICAgICAga2V5Lm9uIEV2ZW50cy5Ub3VjaFN0YXJ0LCAtPlxuICAgICAgICAgIGtleS5kb3duKClcbiAgICAgICAga2V5Lm9uIEV2ZW50cy5Ub3VjaEVuZCwgLT5cbiAgICAgICAgICBrZXkudXAoKVxuXG4gICAgcmV0dXJuIGtleVxuXG4gIFNwZWNpYWxLZXkgPSAob2JqKSAtPlxuICAgIGtleSA9IG5ldyBLZXkgb2JqXG4gICAga2V5LmJhY2tncm91bmRDb2xvciA9IGNvbG9ycy5zcGVjaWFsS2V5QkdcbiAgICBrZXkuY29sb3IgPSBjb2xvcnMuY29sb3JcbiAgICBrZXkuc3R5bGUudGV4dEFsaWduID0gXCJjZW50ZXJcIlxuICAgIGlmIGlvcy5kZXZpY2UubmFtZSA9PSAnaXBhZC1wcm8nXG4gICAgICBrZXkuc3R5bGUuZm9udFNpemUgPSBpb3MucHgoMTgpICsgXCJweFwiXG4gICAgZWxzZVxuICAgICAga2V5LnN0eWxlLmZvbnRTaXplID0gaW9zLnB4KDE2KSArIFwicHhcIlxuICAgIHJldHVybiBrZXlcblxuICBJY29uID0gKG9iaikgLT5cbiAgICBpY29uID0gbmV3IGlvcy5WaWV3XG4gICAgICBuYW1lOidpY29uJ1xuICAgICAgYmFja2dyb3VuZENvbG9yOlwidHJhbnNwYXJlbnRcIlxuICAgICAgc3VwZXJMYXllcjpvYmouc3VwZXJMYXllclxuICAgICAgY29uc3RyYWludHM6XG4gICAgICAgIGFsaWduOidjZW50ZXInXG5cbiAgICBpY29uLnByb3BzID0gKGhlaWdodDpvYmouaWNvbi5oZWlnaHQsIHdpZHRoOm9iai5pY29uLndpZHRoLCBodG1sOiBvYmouaWNvbi5zdmcpXG5cbiAgICBpb3MudXRpbHMuY2hhbmdlRmlsbChpY29uLCBjb2xvcnMuY29sb3IpXG4gICAgcmV0dXJuIGljb25cblxuICBJY29uV2l0aFN0YXRlID0gKG9iaikgLT5cbiAgICBpY29uID0gbmV3IGlvcy5WaWV3XG4gICAgICBuYW1lOidpY29uJ1xuICAgICAgYmFja2dyb3VuZENvbG9yOlwidHJhbnNwYXJlbnRcIlxuICAgICAgc3VwZXJMYXllcjpvYmouc3VwZXJMYXllclxuICAgICAgY29uc3RyYWludHM6XG4gICAgICAgIGFsaWduOidjZW50ZXInXG5cbiAgICBpY29uLnRvZ2dsZSA9IChzdGF0ZSkgLT5cbiAgICAgIGlmIHN0YXRlID09IHVuZGVmaW5lZFxuICAgICAgICBpZiBpY29uLnN0YXRlID09ICdvbicgdGhlbiBzdGF0ZSA9ICdvZmYnXG4gICAgICAgIGVsc2Ugc3RhdGUgPSAnb24nXG5cbiAgICAgIGlmIHN0YXRlID09IFwib25cIlxuICAgICAgICBpZiBpb3MuZGV2aWNlLm5hbWUgIT0gJ2lwYWQtcHJvJ1xuICAgICAgICAgIGljb24uaHRtbCA9IG9iai5vbi5zdmdcbiAgICAgICAgICBpY29uLndpZHRoID0gb2JqLm9uLndpZHRoXG4gICAgICAgICAgaWNvbi5oZWlnaHQgPSBvYmoub24uaGVpZ2h0XG4gICAgICAgIGljb24uc3RhdGUgPSAnb24nXG4gICAgICBlbHNlXG4gICAgICAgIGlmIGlvcy5kZXZpY2UubmFtZSAhPSAnaXBhZC1wcm8nXG4gICAgICAgICAgaWNvbi5odG1sID0gb2JqLm9mZi5zdmdcbiAgICAgICAgICBpY29uLndpZHRoID0gb2JqLm9uLndpZHRoXG4gICAgICAgICAgaWNvbi5oZWlnaHQgPSBvYmoub24uaGVpZ2h0XG4gICAgICAgIGljb24uc3RhdGUgPSAnb2ZmJ1xuICAgICAgaW9zLnV0aWxzLmNoYW5nZUZpbGwoaWNvbiwgY29sb3JzLmNvbG9yKVxuICAgIGlmIG9iai5zdGF0ZVxuICAgICAgaWNvbi50b2dnbGUoJ29uJylcbiAgICBlbHNlXG4gICAgICBpY29uLnRvZ2dsZSgnb2ZmJylcblxuXG4gICAgcmV0dXJuIGljb25cblxuICBjYXBpdGFsaXplS2V5cyA9IC0+XG4gICAgZm9yIGtleSBpbiBib2FyZC5rZXlzQXJyYXlcbiAgICAgIGlmIGJvYXJkLmlzQ2FwaXRhbFxuICAgICAgICBpZiBrZXkuaHRtbC5sZW5ndGggPT0gMSAmJiBrZXkuaHRtbC5tYXRjaCgvW2Etel0vaSlcbiAgICAgICAgICBrZXkuaHRtbCA9IGtleS5odG1sLnRvVXBwZXJDYXNlKClcbiAgICAgICAgICBrZXkudmFsdWUgPSBrZXkuaHRtbFxuICAgICAgICBpZiBrZXkuYWx0XG4gICAgICAgICAga2V5LmFsdC5kZXN0cm95KClcbiAgICAgICAgICBrZXkuYWx0ID0gdW5kZWZpbmVkXG4gICAgICAgIGlmIGtleS5oZWlnaHQgPiBpb3MucHgoNDYpXG4gICAgICAgICAga2V5LnN0eWxlLmxpbmVIZWlnaHQgPSBpb3MucHgoc3BlY3MubGV0dGVyS2V5LmhlaWdodCkgKyAncHgnXG4gICAgICAgICAga2V5LnN0eWxlLmZvbnRTaXplID0gaW9zLnB4KDIzKSArICdweCdcbiAgICAgICAgZWxzZVxuICAgICAgICAgIGlmIGlvcy5kZXZpY2UubmFtZSA9PSAnaXBhZC1wcm8nXG4gICAgICAgICAgICBrZXkuc3R5bGUubGluZUhlaWdodCA9IGlvcy5weCg0NikgKyAncHgnXG4gICAgICAgICAgZWxzZVxuICAgICAgICAgICAga2V5LnN0eWxlLmxpbmVIZWlnaHQgPSBpb3MucHgoc3BlY3MubGluZUhlaWdodCkgKyAncHgnXG4gICAgICAgICAga2V5LnN0eWxlLmZvbnRTaXplID0gaW9zLnB4KDIwKSArICdweCdcbiAgICAgICAga2V5LnZhbHVlID0ga2V5Lmh0bWxcbiAgICAgIGVsc2VcbiAgICAgICAgaWYga2V5Lmh0bWwubGVuZ3RoID09IDEgJiYga2V5Lmh0bWwubWF0Y2goL1thLXpdL2kpXG4gICAgICAgICAga2V5Lmh0bWwgPSBrZXkuaHRtbC50b0xvd2VyQ2FzZSgpXG4gICAgICAgICAga2V5LnZhbHVlID0ga2V5Lmh0bWxcbiAgICAgICAgZWxzZVxuICAgICAgICAgIGlmIGtleS5hbHQgPT0gdW5kZWZpbmVkXG4gICAgICAgICAgICBrZXkuYWx0ID0gbmV3IGlvcy5UZXh0XG4gICAgICAgICAgICAgIHRleHQ6XCJcIlxuICAgICAgICAgICAgICBzdXBlckxheWVyOmtleVxuICAgICAgICAgICAgICBjb2xvcjpjb2xvcnMuY29sb3JcbiAgICAgICAgICAgICAgY29uc3RyYWludHM6XG4gICAgICAgICAgICAgICAgYWxpZ246XCJob3Jpem9udGFsXCJcbiAgICAgICAgICAgICAgICBib3R0b206NFxuICAgICAgICAgICAgICBmb250U2l6ZTpzcGVjcy5sZXR0ZXJLZXkuZm9udFNpemVcbiAgICAgICAgICAgIGlmIGJvYXJkLnRvcFJvd1xuICAgICAgICAgICAgICBpZiBib2FyZC50b3BSb3cuaW5kZXhPZihrZXkpICE9IC0xXG4gICAgICAgICAgICAgICAga2V5LnN0eWxlLmxpbmVIZWlnaHQgPSBpb3MucHgoMjMpICsgJ3B4J1xuICAgICAgICAgICAgICAgIGtleS5zdHlsZS5mb250U2l6ZSA9IGlvcy5weCgxNikgKyAncHgnXG4gICAgICAgICAgICAgICAga2V5LmFsdC5zdHlsZS5mb250U2l6ZSA9IGlvcy5weCgxNikgKyAncHgnXG4gICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICBrZXkuc3R5bGUubGluZUhlaWdodCA9IGlvcy5weCgzNikgKyAncHgnXG4gICAgICAgICAgICAgICAga2V5LnN0eWxlLmZvbnRTaXplID0gaW9zLnB4KDIwKSArICdweCdcbiAgICAgICAgICAgICAgICBrZXkuYWx0LnN0eWxlLmZvbnRTaXplID0gaW9zLnB4KDIwKSArICdweCdcbiAgICAgICAgICAgICAgICBrZXkuYWx0LmNvbnN0cmFpbnRzLmJvdHRvbSA9IDhcbiAgICAgICAgICAgIHN3aXRjaCBrZXkudmFsdWVcbiAgICAgICAgICAgICAgd2hlbiBcIiZsdDtcIlxuICAgICAgICAgICAgICAgIGtleS5hbHQuaHRtbCA9IFwiLlwiXG4gICAgICAgICAgICAgIHdoZW4gXCImZ3Q7XCJcbiAgICAgICAgICAgICAgICBrZXkuYWx0Lmh0bWwgPSBcIixcIlxuICAgICAgICAgICAgICB3aGVuIFwiPFwiXG4gICAgICAgICAgICAgICAga2V5LmFsdC5odG1sID0gXCIuXCJcbiAgICAgICAgICAgICAgd2hlbiBcIj5cIlxuICAgICAgICAgICAgICAgIGtleS5hbHQuaHRtbCA9IFwiLFwiXG4gICAgICAgICAgICAgIHdoZW4gXCI/XCJcbiAgICAgICAgICAgICAgICBrZXkuYWx0Lmh0bWwgPSBcIi5cIlxuICAgICAgICAgICAgICB3aGVuIFwie1wiXG4gICAgICAgICAgICAgICAga2V5LmFsdC5odG1sID0gXCJbXCJcbiAgICAgICAgICAgICAgd2hlbiBcIn1cIlxuICAgICAgICAgICAgICAgIGtleS5hbHQuaHRtbCA9IFwifVwiXG4gICAgICAgICAgICAgIHdoZW4gXCJcXHxcIlxuICAgICAgICAgICAgICAgIGtleS5hbHQuaHRtbCA9IFwiXFxcXFwiXG4gICAgICAgICAgICAgIHdoZW4gXCJ+XCJcbiAgICAgICAgICAgICAgICBrZXkuYWx0Lmh0bWwgPSBcImBcIlxuICAgICAgICAgICAgICB3aGVuIFwiIVwiXG4gICAgICAgICAgICAgICAga2V5LmFsdC5odG1sID0gXCIuXCJcbiAgICAgICAgICAgICAgd2hlbiBcIkBcIlxuICAgICAgICAgICAgICAgIGtleS5hbHQuaHRtbCA9IFwiMlwiXG4gICAgICAgICAgICAgIHdoZW4gXCIjXCJcbiAgICAgICAgICAgICAgICBrZXkuYWx0Lmh0bWwgPSBcIjNcIlxuICAgICAgICAgICAgICB3aGVuIFwiJFwiXG4gICAgICAgICAgICAgICAga2V5LmFsdC5odG1sID0gXCI0XCJcbiAgICAgICAgICAgICAgd2hlbiBcIiVcIlxuICAgICAgICAgICAgICAgIGtleS5hbHQuaHRtbCA9IFwiNVwiXG4gICAgICAgICAgICAgIHdoZW4gXCJeXCJcbiAgICAgICAgICAgICAgICBrZXkuYWx0Lmh0bWwgPSBcIjZcIlxuICAgICAgICAgICAgICB3aGVuIFwiJmFtcDtcIlxuICAgICAgICAgICAgICAgIGtleS5hbHQuaHRtbCA9IFwiN1wiXG4gICAgICAgICAgICAgIHdoZW4gXCImXCJcbiAgICAgICAgICAgICAgICBrZXkuYWx0Lmh0bWwgPSBcIjdcIlxuICAgICAgICAgICAgICB3aGVuIFwiKlwiXG4gICAgICAgICAgICAgICAga2V5LmFsdC5odG1sID0gXCI4XCJcbiAgICAgICAgICAgICAgd2hlbiBcIihcIlxuICAgICAgICAgICAgICAgIGtleS5hbHQuaHRtbCA9IFwiOVwiXG4gICAgICAgICAgICAgIHdoZW4gXCIpXCJcbiAgICAgICAgICAgICAgICBrZXkuYWx0Lmh0bWwgPSBcIjBcIlxuICAgICAgICAgICAgICB3aGVuIFwiX1wiXG4gICAgICAgICAgICAgICAga2V5LmFsdC5odG1sID0gXCItXCJcbiAgICAgICAgICAgICAgd2hlbiBcIitcIlxuICAgICAgICAgICAgICAgIGtleS5hbHQuaHRtbCA9IFwiPVwiXG4gICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICBrZXkuYWx0Lmh0bWwgPSBcIiZwcmltZTtcIlxuICAgICAgICAgICAgaW9zLmxheW91dC5zZXQoa2V5LmFsdClcbiAgICAgICAgICAgIGlmIGlvcy5kZXZpY2UubmFtZSA9PSAnaXBhZC1wcm8nICYmIGtleS52YWx1ZSA9PSAnIScgdGhlbiBrZXkuYWx0Lmh0bWwgPSAnMSdcbiAgICAgICAgICAgIGlmIGlvcy5kZXZpY2UubmFtZSA9PSAnaXBhZC1wcm8nICYmIGtleS52YWx1ZSA9PSAnPycgdGhlbiBrZXkuYWx0Lmh0bWwgPSAnLydcbiAgICAgICAgICAgIGlmIGlvcy5kZXZpY2UubmFtZSA9PSAnaXBhZC1wcm8nICYmIGtleS52YWx1ZSA9PSAnOicgdGhlbiBrZXkuYWx0Lmh0bWwgPSAnOydcbiAgICAgICAgICAgIGlmIGlvcy5kZXZpY2UubmFtZSA9PSAnaXBhZC1wcm8nICYmIGtleS52YWx1ZSA9PSAnJnJkcXVvOycgdGhlbiBrZXkuYWx0Lmh0bWwgPSAnJnByaW1lOydcbiAgICAgICAgICAgIGtleS52YWx1ZSA9IGtleS5hbHQuaHRtbFxuXG4gIGhhbmRsZUtleUNvbG9yID0gKGtleSkgLT5cbiAgICBpZiBpb3MuaXNQaG9uZVxuICAgICAgaWYga2V5Lmljb24uc3RhdGUgPT0gJ29uJyB0aGVuIGtleS5iYWNrZ3JvdW5kQ29sb3IgPSBjb2xvcnMua2V5QkdcbiAgICAgIGVsc2Uga2V5LmJhY2tncm91bmRDb2xvciA9IGNvbG9ycy5zcGVjaWFsS2V5QkdcblxuICBTcGFjZSA9IChvYmopIC0+XG4gICAga2V5ID0gbmV3IExldHRlciBvYmpcbiAgICBrZXkuaHRtbCA9ICdzcGFjZSdcbiAgICBrZXkuYmFja2dyb3VuZENvbG9yID0gY29sb3JzLmtleUJHXG4gICAga2V5LnN0eWxlLmxpbmVIZWlnaHQgPSBpb3MucHgoc3BlY3Muc3BlY2lhbEtleUhlaWdodCkgKyBcInB4XCJcbiAgICBrZXkuc3R5bGUuZm9udFNpemUgPSBpb3MucHgoMTYpICsgJ3B4J1xuICAgIHJldHVybiBrZXlcblxuICBTaGlmdCA9IChvYmopIC0+XG4gICAga2V5ID0gbmV3IFNwZWNpYWxLZXkgb2JqXG4gICAga2V5Lmljb24gPSBuZXcgSWNvbldpdGhTdGF0ZVxuICAgICAgc3VwZXJMYXllcjprZXlcbiAgICAgIHN0YXRlOm9iai5zaGlmdFxuICAgICAgb246aW9zLnV0aWxzLnN2Zyhpb3MuYXNzZXRzLnNoaWZ0Lm9uKVxuICAgICAgb2ZmOmlvcy51dGlscy5zdmcoaW9zLmFzc2V0cy5zaGlmdC5vZmYpXG4gICAgaGFuZGxlS2V5Q29sb3Ioa2V5KVxuXG4gICAga2V5Lm9uIEV2ZW50cy5Ub3VjaEVuZCwgLT5cbiAgICAgIEAuaWNvbi50b2dnbGUoKVxuICAgICAgaGFuZGxlS2V5Q29sb3Ioa2V5KVxuICAgICAgaWYgQC5pY29uLnN0YXRlID09ICdvbidcbiAgICAgICAgYm9hcmQuaXNDYXBpdGFsID0gdHJ1ZVxuICAgICAgZWxzZVxuICAgICAgICBib2FyZC5pc0NhcGl0YWwgPSBmYWxzZVxuICAgICAgY2FwaXRhbGl6ZUtleXMoKVxuXG4gICAga2V5LmRvd24gPSAtPlxuICAgICAga2V5Lmljb24udG9nZ2xlKCdvbicpXG4gICAgICBoYW5kbGVLZXlDb2xvcihrZXkpXG4gICAgICBib2FyZC5pc0NhcGl0YWwgPSB0cnVlXG4gICAgICBjYXBpdGFsaXplS2V5cygpXG5cbiAgICBrZXkudXAgPSAtPlxuICAgICAga2V5Lmljb24udG9nZ2xlKCdvZmYnKVxuICAgICAgaGFuZGxlS2V5Q29sb3Ioa2V5KVxuICAgICAgYm9hcmQuaXNDYXBpdGFsID0gZmFsc2VcbiAgICAgIGNhcGl0YWxpemVLZXlzKClcblxuICAgIGlvcy5sYXlvdXQuc2V0KGtleS5pY29uKVxuXG4gICAgaWYgaW9zLmlzUGFkKClcbiAgICAgIGtleS5vbiBFdmVudHMuVG91Y2hFbmQsIC0+XG4gICAgICAgIGlmIEAuaWNvbi5zdGF0ZSA9PSAnb24nXG4gICAgICAgICAgYm9hcmQua2V5cy5zaGlmdC5pY29uLnRvZ2dsZSgnb24nKVxuICAgICAgICAgIGJvYXJkLmtleXMuc2hpZnRhbHQuaWNvbi50b2dnbGUoJ29uJylcbiAgICAgICAgZWxzZVxuICAgICAgICAgIGJvYXJkLmtleXMuc2hpZnQuaWNvbi50b2dnbGUoJ29mZicpXG4gICAgICAgICAgYm9hcmQua2V5cy5zaGlmdGFsdC5pY29uLnRvZ2dsZSgnb2ZmJylcbiAgICAgICAgaGFuZGxlS2V5Q29sb3IoYm9hcmQua2V5cy5zaGlmdClcbiAgICAgICAgaGFuZGxlS2V5Q29sb3IoYm9hcmQua2V5cy5zaGlmdGFsdClcbiAgICByZXR1cm4ga2V5XG5cbiAgRGVsZXRlID0gKG9iaikgLT5cbiAgICBrZXkgPSBuZXcgU3BlY2lhbEtleSBvYmpcbiAgICBrZXkuaWNvbiA9IG5ldyBJY29uV2l0aFN0YXRlXG4gICAgICBzdXBlckxheWVyOmtleVxuICAgICAgb246aW9zLnV0aWxzLnN2Zyhpb3MuYXNzZXRzLmRlbGV0ZS5vbilcbiAgICAgIG9mZjppb3MudXRpbHMuc3ZnKGlvcy5hc3NldHMuZGVsZXRlLm9mZilcblxuICAgIGtleS5maXJlID0gLT4gYm9hcmQuZGVsZXRlKClcblxuICAgIGtleS5kb3duID0gLT5cbiAgICAgIGtleS5pY29uLnRvZ2dsZSgnb24nKVxuICAgICAgaGFuZGxlS2V5Q29sb3Ioa2V5KVxuICAgICAga2V5LmZpcmUoKVxuXG4gICAga2V5LnVwID0gLT5cbiAgICAgIGtleS5pY29uLnRvZ2dsZSgnb2ZmJylcbiAgICAgIGhhbmRsZUtleUNvbG9yKGtleSlcblxuICAgIGtleS5vbiBFdmVudHMuVG91Y2hTdGFydCwgLT4ga2V5LmRvd24oKVxuICAgIGtleS5vbiBFdmVudHMuVG91Y2hFbmQsIC0+IGtleS51cCgpXG5cblxuICAgIHJldHVybiBrZXlcblxuICBOdW1iZXJzICA9IChvYmopIC0+XG4gICAga2V5ID0gbmV3IFNwZWNpYWxLZXkgb2JqXG4gICAgaWYgaW9zLmlzUGhvbmUoKVxuICAgICAga2V5Lmh0bWwgPSAnMTIzJ1xuICAgIGVsc2VcbiAgICAgIGtleS5odG1sID0nLj8xMjMnXG4gICAga2V5LnN0eWxlLmxpbmVIZWlnaHQgPSBpb3MucHgoc3BlY3Muc3BlY2lhbEtleUhlaWdodCkgKyBcInB4XCJcbiAgICByZXR1cm4ga2V5XG5cbiAgRW1vamkgPSAob2JqKSAtPlxuICAgIGtleSA9IG5ldyBTcGVjaWFsS2V5IG9ialxuICAgIGtleS5pY29uID0gbmV3IEljb25cbiAgICAgIHN1cGVyTGF5ZXI6a2V5XG4gICAgICBpY29uOmlvcy51dGlscy5zdmcoaW9zLmFzc2V0cy5lbW9qaSlcbiAgICByZXR1cm4ga2V5XG5cbiAgUmV0dXJuID0gKG9iaikgLT5cbiAgICBrZXkgPSBuZXcgU3BlY2lhbEtleSBvYmpcbiAgICBrZXkuYmFja2dyb3VuZENvbG9yID0gY29sb3JzLnJldHVybkJHXG4gICAga2V5Lmh0bWwgPSBzZXR1cC5yZXR1cm5UZXh0XG4gICAga2V5LnN0eWxlLmxpbmVIZWlnaHQgPSBpb3MucHgoc3BlY3Muc3BlY2lhbEtleUhlaWdodCkgKyBcInB4XCJcbiAgICBrZXkuY29sb3IgPSBpb3MudXRpbHMuYXV0b0NvbG9yKGNvbG9ycy5yZXR1cm5CRylcbiAgICBrZXkuZG93biA9IC0+XG4gICAgICBub3RoaW5nSGFwcGVucyA9IHRydWVcblxuICAgIGtleS51cCA9IC0+XG4gICAgICBib2FyZC5kaXNtaXNzKClcbiAgICAgIGlmIGJvYXJkLnRhcmdldFxuICAgICAgICBpZiBib2FyZC50YXJnZXQucGFyZW50XG4gICAgICAgICAgYm9hcmQudGFyZ2V0LnBhcmVudC5hY3RpdmUgPSBmYWxzZVxuICAgIGtleS5vbiBFdmVudHMuVG91Y2hFbmQsIC0+IGtleS5kb3duKClcbiAgICBrZXkub24gRXZlbnRzLlRvdWNoU3RhcnQsIC0+IGtleS51cCgpXG4gICAgcmV0dXJuIGtleVxuXG4gIERpc21pc3MgPSAob2JqKSAtPlxuICAgIGtleSA9IG5ldyBTcGVjaWFsS2V5IG9ialxuICAgIGtleS5pY29uID0gbmV3IEljb25cbiAgICAgIHN1cGVyTGF5ZXI6a2V5XG4gICAgICBpY29uOmlvcy51dGlscy5zdmcoaW9zLmFzc2V0cy5rZXlib2FyZClcbiAgICBrZXkuaWNvbi5zY2FsZSA9IC44XG4gICAga2V5Lmljb24uY29uc3RyYWludHMgPVxuICAgICAgYm90dG9tOjEyXG4gICAgICB0cmFpbGluZzoxMlxuICAgIGlvcy5sYXlvdXQuc2V0KGtleS5pY29uKVxuXG4gICAga2V5LmRvd24gPSAtPiBib2FyZC5kaXNtaXNzKClcbiAgICBrZXkudXAgPSAtPiBub3RoaW5nSGFwcGVucyA9IGZhbHNlXG4gICAga2V5Lm9uIEV2ZW50cy5Ub3VjaEVuZCwgLT4ga2V5LmRvd24oKVxuICAgIHJldHVybiBrZXlcblxuICBUYWIgPSAob2JqKSAtPlxuICAgIGtleSA9IG5ldyBTcGVjaWFsS2V5IG9ialxuICAgIGtleS5odG1sID0gJ3RhYidcbiAgICBrZXkuc3R5bGUubGluZUhlaWdodCA9IGlvcy5weCg3MCkgKyAncHgnXG4gICAga2V5LnN0eWxlLnRleHRBbGlnbiA9ICdsZWZ0J1xuICAgIGtleS5zdHlsZS5wYWRkaW5nTGVmdCA9IGlvcy5weCgxMikgKyAncHgnXG4gICAgcmV0dXJuIGtleVxuXG4gIGJvYXJkLnN3aXRjaExldHRlcnMgPSAtPlxuICAgIHJvdzFCcmVhayA9IDEwXG4gICAgcm93MkJyZWFrID0gMTlcbiAgICBpZiBpb3MuaXNQYWQoKVxuICAgICAgbGV0dGVycy5wdXNoICchJ1xuICAgICAgbGV0dGVycy5wdXNoICc/J1xuICAgIGlmIGlvcy5kZXZpY2UubmFtZSA9PSBcImlwYWQtcHJvXCJcbiAgICAgIGxldHRlcnMgPSBbXCJxXCIsIFwid1wiLCBcImVcIiwgXCJyXCIsIFwidFwiLCBcInlcIiwgXCJ1XCIsIFwiaVwiLCBcIm9cIiwgXCJwXCIsIFwie1wiLCBcIn1cIiwgXCJcXHxcIiwgXCJhXCIsIFwic1wiLCBcImRcIiwgXCJmXCIsIFwiZ1wiLCBcImhcIiwgXCJqXCIsIFwia1wiLCBcImxcIiwgXCI6XCIsIFwiJnJkcXVvO1wiLCBcInpcIiwgXCJ4XCIsIFwiY1wiLCBcInZcIiwgIFwiYlwiLCBcIm5cIiwgXCJtXCIsIFwiPFwiLCBcIj5cIiwgXCI/XCJdXG4gICAgICB0b3BMZXR0ZXJzID0gW1wiflwiLCBcIiFcIiwgXCJAXCIsIFwiI1wiLCBcIiRcIiwgXCIlXCIsIFwiXlwiLCBcIiZcIiwgXCIqXCIsIFwiKFwiLCBcIilcIiwgXCJfXCIsIFwiK1wiXVxuICAgICAgcm93MUJyZWFrID0gMTNcbiAgICAgIHJvdzJCcmVhayA9IDI0XG4gICAgZm9yIGwsIGkgaW4gbGV0dGVyc1xuICAgICAga2V5ID0gbmV3IExldHRlclxuICAgICAgICBuYW1lOmxcbiAgICAgICAgY29uc3RyYWludHM6XG4gICAgICAgICAgaGVpZ2h0OnNwZWNzLmxldHRlcktleS5oZWlnaHRcbiAgICAgICAgICB3aWR0aDpzcGVjcy5sZXR0ZXJLZXkud2lkdGhcbiAgICAgICAgbGV0dGVyOmxcbiAgICAgIGlmIGwgPT0gJ3cnIHx8IGwgPT0gJ3InIHx8IGwgPT0gJ3knIHx8IGwgPT0gJ2knIHx8IGwgPT0gJ3AnXG4gICAgICAgIGtleS5jb25zdHJhaW50cy53aWR0aCA9IGtleS5jb25zdHJhaW50cy53aWR0aCArIDFcbiAgICAgIGJvYXJkLmtleXNbbF0gPSBrZXlcbiAgICAgIGJvYXJkLmtleXNBcnJheS5wdXNoIGtleVxuICAgICAgaWYgaSA9PSAwXG4gICAgICAgIGtleS5jb25zdHJhaW50cy5sZWFkaW5nID0gc3BlY3Mucm93MS5sZWFkaW5nXG4gICAgICAgIGtleS5jb25zdHJhaW50cy50b3AgPSBzcGVjcy5yb3cxLnRvcFxuICAgICAgaWYgaSA+IDAgJiYgaSA8IHJvdzFCcmVha1xuICAgICAgICBrZXkuY29uc3RyYWludHMubGVhZGluZyA9IFtib2FyZC5rZXlzQXJyYXlbaSAtIDFdLCBzcGVjcy5zcGFjZV1cbiAgICAgICAga2V5LmNvbnN0cmFpbnRzLnRvcCA9IHNwZWNzLnJvdzEudG9wXG4gICAgICBpZiBpID09IHJvdzFCcmVha1xuICAgICAgICBrZXkuY29uc3RyYWludHMubGVhZGluZyA9IHNwZWNzLnJvdzIubGVhZGluZ1xuICAgICAgICBrZXkuY29uc3RyYWludHMudG9wID0gW2JvYXJkLmtleXNBcnJheVswXSwgc3BlY3Mucm93Mi50b3BdXG4gICAgICBpZiBpID4gcm93MUJyZWFrICYmIGkgPCByb3cyQnJlYWtcbiAgICAgICAga2V5LmNvbnN0cmFpbnRzLmxlYWRpbmcgPSBbYm9hcmQua2V5c0FycmF5W2kgLSAxXSwgc3BlY3Muc3BhY2VdXG4gICAgICAgIGtleS5jb25zdHJhaW50cy50b3AgPSBbYm9hcmQua2V5c0FycmF5WzBdLCBzcGVjcy5yb3cyLnRvcF1cbiAgICAgIGlmIGkgPT0gcm93MkJyZWFrXG4gICAgICAgIGtleS5jb25zdHJhaW50cy5sZWFkaW5nID0gc3BlY3Mucm93My5sZWFkaW5nXG4gICAgICAgIGtleS5jb25zdHJhaW50cy50b3AgPSBbYm9hcmQua2V5c0FycmF5W3JvdzFCcmVha10sIHNwZWNzLnJvdzMudG9wXVxuICAgICAgaWYgaSA+IHJvdzJCcmVha1xuICAgICAgICBrZXkuY29uc3RyYWludHMubGVhZGluZyA9IFtib2FyZC5rZXlzQXJyYXlbaSAtIDFdLCBzcGVjcy5zcGFjZV1cbiAgICAgICAga2V5LmNvbnN0cmFpbnRzLnRvcCA9IFtib2FyZC5rZXlzQXJyYXlbcm93MUJyZWFrXSwgc3BlY3Mucm93My50b3BdXG4gICAgICBpb3MubGF5b3V0LnNldChrZXkpXG5cbiAgICBib2FyZC5rZXlzLnNoaWZ0ID0gbmV3IFNoaWZ0XG4gICAgICBuYW1lOlwic2hpZnRcIlxuICAgICAgc2hpZnQ6c2V0dXAuc2hpZnRcbiAgICAgIGNvbnN0cmFpbnRzOlxuICAgICAgICBoZWlnaHQ6c3BlY3Muc3BlY2lhbEtleUhlaWdodFxuICAgICAgICB3aWR0aDpzcGVjcy5zcGVjaWFsS2V5V2lkdGhcbiAgICAgICAgYm90dG9tRWRnZXM6Ym9hcmQua2V5cy56XG5cbiAgICBib2FyZC5rZXlzLmRlbGV0ZSA9IG5ldyBEZWxldGVcbiAgICAgIG5hbWU6XCJkZWxldGVcIlxuICAgICAgY29uc3RyYWludHM6XG4gICAgICAgIGhlaWdodDpzcGVjcy5zcGVjaWFsS2V5SGVpZ2h0XG4gICAgICAgIHdpZHRoOnNwZWNzLnNwZWNpYWxLZXlXaWR0aFxuICAgICAgICBib3R0b21FZGdlczpib2FyZC5rZXlzLnpcbiAgICAgICAgdHJhaWxpbmc6MFxuXG4gICAgYm9hcmQua2V5cy5udW1iZXJzID0gbmV3IE51bWJlcnNcbiAgICAgIG5hbWU6XCJudW1iZXJzXCJcbiAgICAgIGNvbnN0cmFpbnRzOlxuICAgICAgICBoZWlnaHQ6c3BlY3Muc3BlY2lhbEtleUhlaWdodFxuICAgICAgICB3aWR0aDpzcGVjcy5zcGVjaWFsS2V5V2lkdGhcbiAgICAgICAgYm90dG9tOjBcbiAgICAgICAgbGVhZGluZzowXG5cbiAgICBib2FyZC5rZXlzLmVtb2ppID0gbmV3IEVtb2ppXG4gICAgICBuYW1lOlwiZW1vamlcIlxuICAgICAgY29uc3RyYWludHM6XG4gICAgICAgIGhlaWdodDpzcGVjcy5zcGVjaWFsS2V5SGVpZ2h0XG4gICAgICAgIHdpZHRoOnNwZWNzLnNwZWNpYWxLZXlXaWR0aFxuICAgICAgICBsZWFkaW5nOltib2FyZC5rZXlzLm51bWJlcnMsIHNwZWNzLnNwYWNlXVxuICAgICAgICBib3R0b206MFxuXG4gICAgYm9hcmQua2V5cy5yZXR1cm4gPSBuZXcgUmV0dXJuXG4gICAgICBuYW1lOlwicmV0dXJuXCJcbiAgICAgIGNvbnN0cmFpbnRzOlxuICAgICAgICBib3R0b206MFxuICAgICAgICB0cmFpbGluZzowXG4gICAgICAgIHdpZHRoOnNwZWNzLnJldHVybldpZHRoXG4gICAgICAgIGhlaWdodDpzcGVjcy5zcGVjaWFsS2V5SGVpZ2h0XG5cbiAgICBib2FyZC5rZXlzLnNwYWNlID0gbmV3IFNwYWNlXG4gICAgICBuYW1lOlwic3BhY2VcIlxuICAgICAgbGV0dGVyOlwic3BhY2VcIlxuICAgICAgY29uc3RyYWludHM6XG4gICAgICAgIGxlYWRpbmc6W2JvYXJkLmtleXMuZW1vamksIHNwZWNzLnNwYWNlXVxuICAgICAgICB0cmFpbGluZzpbYm9hcmQua2V5cy5yZXR1cm4sIHNwZWNzLnNwYWNlXVxuICAgICAgICBib3R0b206MFxuICAgICAgICBoZWlnaHQ6c3BlY3Muc3BlY2lhbEtleUhlaWdodFxuXG5cbiAgICBpZiBpb3MuaXNQYWQoKVxuICAgICAgYm9hcmQua2V5cy5yZXR1cm4uY29uc3RyYWludHMuYm90dG9tID0gdW5kZWZpbmVkXG4gICAgICBib2FyZC5rZXlzLnJldHVybi5jb25zdHJhaW50cy5ib3R0b21FZGdlcyA9IGJvYXJkLmtleXNBcnJheVtyb3cxQnJlYWtdXG4gICAgICBib2FyZC5rZXlzLmRlbGV0ZS5jb25zdHJhaW50cy50b3AgPSAwXG4gICAgICBib2FyZC5rZXlzLmRlbGV0ZS5jb25zdHJhaW50cy5ib3R0b21FZGdlcyA9IHVuZGVmaW5lZFxuICAgICAgYm9hcmQua2V5cy5kZWxldGUuY29uc3RyYWludHMud2lkdGggPSA2MVxuXG4gICAgICBib2FyZC5rZXlzLnNoaWZ0YWx0ID0gbmV3IFNoaWZ0XG4gICAgICAgIG5hbWU6XCJzaGlmdGFsdFwiXG4gICAgICAgIHNoaWZ0OnNldHVwLnNoaWZ0XG4gICAgICAgIGNvbnN0cmFpbnRzOlxuICAgICAgICAgIGhlaWdodDpzcGVjcy5zcGVjaWFsS2V5SGVpZ2h0XG4gICAgICAgICAgd2lkdGg6NzZcbiAgICAgICAgICBib3R0b21FZGdlczpib2FyZC5rZXlzLnpcbiAgICAgICAgICB0cmFpbGluZzowXG5cbiAgICAgIGJvYXJkLmtleXMuZGlzbWlzcyA9IG5ldyBEaXNtaXNzXG4gICAgICAgIG5hbWU6XCJkaXNtaXNzXCJcbiAgICAgICAgY29uc3RyYWludHM6XG4gICAgICAgICAgaGVpZ2h0OnNwZWNzLnNwZWNpYWxLZXlIZWlnaHRcbiAgICAgICAgICB3aWR0aDpzcGVjcy5zcGVjaWFsS2V5V2lkdGhcbiAgICAgICAgICBib3R0b206MFxuICAgICAgICAgIHRyYWlsaW5nOjBcblxuICAgICAgYm9hcmQua2V5cy5udW1iZXJzYWx0ID0gbmV3IE51bWJlcnNcbiAgICAgICAgbmFtZTpcIm51bWJlcnNhbHRcIlxuICAgICAgICBjb25zdHJhaW50czpcbiAgICAgICAgICBoZWlnaHQ6c3BlY3Muc3BlY2lhbEtleUhlaWdodFxuICAgICAgICAgIHdpZHRoOjkzXG4gICAgICAgICAgYm90dG9tOjBcbiAgICAgICAgICB0cmFpbGluZzpbYm9hcmQua2V5cy5kaXNtaXNzLCBzcGVjcy5zcGFjZV1cblxuICAgICAgYm9hcmQua2V5cy5zcGFjZS5odG1sID0gXCJcIlxuICAgICAgYm9hcmQua2V5cy5zcGFjZS5jb25zdHJhaW50cy50cmFpbGluZyA9IFtib2FyZC5rZXlzLm51bWJlcnNhbHQsIHNwZWNzLnNwYWNlXVxuXG4gICAgICBpb3MubGF5b3V0LnNldCgpXG4gICAgYm9hcmQudG9wUm93ID0gW11cbiAgICBpZiBpb3MuZGV2aWNlLm5hbWUgPT0gJ2lwYWQtcHJvJ1xuICAgICAgZm9yIGwsaSBpbiB0b3BMZXR0ZXJzXG4gICAgICAgICAgdG9wS2V5ID0gbmV3IExldHRlclxuICAgICAgICAgICAgbGV0dGVyOmxcbiAgICAgICAgICAgIG5hbWU6bFxuICAgICAgICAgICAgY29uc3RyYWludHM6XG4gICAgICAgICAgICAgIGhlaWdodDo0NlxuICAgICAgICAgICAgICB3aWR0aDo2M1xuICAgICAgICAgICAgICB0b3A6MFxuICAgICAgICAgIGlmIGkgPT0gMFxuICAgICAgICAgICAgdG9wS2V5LmNvbnN0cmFpbnRzLmxlYWRpbmcgPSAwXG4gICAgICAgICAgZWxzZVxuICAgICAgICAgICAgdG9wS2V5LmNvbnN0cmFpbnRzLmxlYWRpbmcgPSBbYm9hcmQudG9wUm93W2kgLSAxXSwgc3BlY3Muc3BhY2VdXG4gICAgICAgICAgdG9wS2V5LnN0eWxlLmxpbmVIZWlnaHQgPSBpb3MucHgoNDYpICsgJ3B4J1xuICAgICAgICAgIGlvcy5sYXlvdXQuc2V0KHRvcEtleSlcbiAgICAgICAgICBib2FyZC50b3BSb3cucHVzaCB0b3BLZXlcbiAgICAgICAgICBib2FyZC5rZXlzQXJyYXkucHVzaCB0b3BLZXlcbiAgICAgICAgICBib2FyZC5rZXlzW2xdID0gdG9wS2V5XG5cbiAgICAgIGJvYXJkLmtleXMuZGVsZXRlLmljb24uZGVzdHJveSgpXG4gICAgICBib2FyZC5rZXlzLmRlbGV0ZS5odG1sID0gJ2RlbGV0ZSdcbiAgICAgIGJvYXJkLmtleXMuZGVsZXRlLnN0eWxlLmxpbmVIZWlnaHQgPSBpb3MucHgoNTMpICsgJ3B4J1xuICAgICAgYm9hcmQua2V5cy5kZWxldGUuc3R5bGUudGV4dEFsaWduID0gJ3JpZ2h0J1xuICAgICAgYm9hcmQua2V5cy5kZWxldGUuc3R5bGUucGFkZGluZ1JpZ2h0ID0gaW9zLnB4KDEyKSArICdweCdcbiAgICAgIGJvYXJkLmtleXMuZGVsZXRlLmNvbnN0cmFpbnRzID1cbiAgICAgICAgdG9wOjBcbiAgICAgICAgdHJhaWxpbmc6MFxuICAgICAgICBoZWlnaHQ6NDZcbiAgICAgICAgd2lkdGg6MTA2XG5cbiAgICAgIGJvYXJkLmtleXMuc2hpZnQuaWNvbi5kZXN0cm95KClcbiAgICAgIGJvYXJkLmtleXMuc2hpZnQuaHRtbCA9ICdzaGlmdCdcbiAgICAgIGJvYXJkLmtleXMuc2hpZnQuc3R5bGUubGluZUhlaWdodCA9IGlvcy5weCg3MCkgKyAncHgnXG4gICAgICBib2FyZC5rZXlzLnNoaWZ0LnN0eWxlLnRleHRBbGlnbiA9ICdsZWZ0J1xuICAgICAgYm9hcmQua2V5cy5zaGlmdC5zdHlsZS5wYWRkaW5nTGVmdCA9IGlvcy5weCgxMikgKyAncHgnXG4gICAgICBib2FyZC5rZXlzLnNoaWZ0LmNvbnN0cmFpbnRzLndpZHRoID0gMTU0XG5cbiAgICAgIGJvYXJkLmtleXMuc2hpZnRhbHQuaWNvbi5kZXN0cm95KClcbiAgICAgIGJvYXJkLmtleXMuc2hpZnRhbHQuaHRtbCA9ICdzaGlmdCdcbiAgICAgIGJvYXJkLmtleXMuc2hpZnRhbHQuc3R5bGUubGluZUhlaWdodCA9IGlvcy5weCg3MCkgKyAncHgnXG4gICAgICBib2FyZC5rZXlzLnNoaWZ0YWx0LnN0eWxlLnRleHRBbGlnbiA9ICdyaWdodCdcbiAgICAgIGJvYXJkLmtleXMuc2hpZnRhbHQuc3R5bGUucGFkZGluZ1JpZ2h0ID0gaW9zLnB4KDEyKSArICdweCdcbiAgICAgIGJvYXJkLmtleXMuc2hpZnRhbHQuY29uc3RyYWludHMud2lkdGggPSAxNTVcblxuICAgICAgYm9hcmQua2V5cy5lbW9qaS5pY29uLmNvbnN0cmFpbnRzID0ge2xlYWRpbmc6MTUsIGJvdHRvbToxMX1cbiAgICAgIGJvYXJkLmtleXMuZW1vamkuY29uc3RyYWludHMgPVxuICAgICAgICB3aWR0aDoxNDRcbiAgICAgICAgaGVpZ2h0OjYxXG4gICAgICAgIGxlYWRpbmc6MFxuICAgICAgICBib3R0b206MFxuICAgICAgaW9zLmxheW91dC5zZXQoKVxuXG4gICAgICBib2FyZC5rZXlzLm51bWJlcnNhbHQuY29uc3RyYWludHMud2lkdGggPSA5M1xuICAgICAgYm9hcmQua2V5cy5kaXNtaXNzLmNvbnN0cmFpbnRzLndpZHRoID0gOTNcblxuICAgICAgYm9hcmQua2V5cy5jb20gPSBuZXcgTGV0dGVyXG4gICAgICAgIG5hbWU6Jy5jb20nXG4gICAgICAgIGxldHRlcjonLmNvbSdcbiAgICAgICAgY29uc3RyYWludHM6XG4gICAgICAgICAgaGVpZ2h0OnNwZWNzLmxldHRlcktleS5oZWlnaHRcbiAgICAgICAgICB3aWR0aDpzcGVjcy5sZXR0ZXJLZXkud2lkdGhcbiAgICAgICAgICBib3R0b206MFxuICAgICAgICAgIHRyYWlsaW5nOltib2FyZC5rZXlzLm51bWJlcnNhbHQsIHNwZWNzLnNwYWNlXVxuXG4gICAgICBib2FyZC5rZXlzLmNvbS5zdHlsZS5mb250U2l6ZSA9IGlvcy5weCgxNikgKyAncHgnXG5cbiAgICAgIGJvYXJkLmtleXMubnVtYmVycy5jb25zdHJhaW50cyA9XG4gICAgICAgIHdpZHRoOjE0M1xuICAgICAgICBoZWlnaHQ6NjFcbiAgICAgICAgbGVhZGluZzpbYm9hcmQua2V5cy5lbW9qaSwgc3BlY3Muc3BhY2VdXG4gICAgICBib2FyZC5rZXlzLm51bWJlcnMuc3R5bGUubGluZUhlaWdodCA9IGlvcy5weCg3MCkgKyAncHgnXG4gICAgICBib2FyZC5rZXlzLm51bWJlcnMuc3R5bGUudGV4dEFsaWduID0gJ2xlZnQnXG4gICAgICBib2FyZC5rZXlzLm51bWJlcnMuc3R5bGUucGFkZGluZ0xlZnQgPSBpb3MucHgoMTIpICsgJ3B4J1xuXG5cbiAgICAgIGJvYXJkLmtleXMucmV0dXJuLnN0eWxlLmxpbmVIZWlnaHQgPSBpb3MucHgoNzApICsgJ3B4J1xuICAgICAgYm9hcmQua2V5cy5yZXR1cm4uc3R5bGUudGV4dEFsaWduID0gJ3JpZ2h0J1xuICAgICAgYm9hcmQua2V5cy5yZXR1cm4uc3R5bGUucGFkZGluZ1JpZ2h0ID0gaW9zLnB4KDEyKSArICdweCdcblxuXG4gICAgICBib2FyZC5rZXlzLnNwYWNlLmNvbnN0cmFpbnRzLmxlYWRpbmcgPSBbYm9hcmQua2V5cy5udW1iZXJzLCBzcGVjcy5zcGFjZV1cbiAgICAgIGJvYXJkLmtleXMuc3BhY2UuY29uc3RyYWludHMudHJhaWxpbmcgPSBbYm9hcmQua2V5cy5jb20sIHNwZWNzLnNwYWNlXVxuXG5cbiAgICAgIGJvYXJkLmtleXMuY2FwcyA9IG5ldyBTaGlmdFxuICAgICAgICBuYW1lOidjYXBzJ1xuICAgICAgICBjYXBzOiB0cnVlXG4gICAgICAgIGNvbnN0cmFpbnRzOlxuICAgICAgICAgIGhlaWdodDpzcGVjcy5zcGVjaWFsS2V5SGVpZ2h0XG4gICAgICAgICAgd2lkdGg6MTE5XG4gICAgICAgICAgYm90dG9tRWRnZXM6Ym9hcmQua2V5c0FycmF5W3JvdzFCcmVha11cbiAgICAgIGJvYXJkLmtleXMuY2Fwcy5pY29uLmRlc3Ryb3koKVxuICAgICAgYm9hcmQua2V5cy5jYXBzLmh0bWwgPSAnY2FwcyBsb2NrJ1xuICAgICAgYm9hcmQua2V5cy5jYXBzLnN0eWxlLmxpbmVIZWlnaHQgPSBpb3MucHgoNzApICsgJ3B4J1xuICAgICAgYm9hcmQua2V5cy5jYXBzLnN0eWxlLnRleHRBbGlnbiA9ICdsZWZ0J1xuICAgICAgYm9hcmQua2V5cy5jYXBzLnN0eWxlLnBhZGRpbmdMZWZ0ID0gaW9zLnB4KDEyKSArICdweCdcblxuXG5cbiAgICAgIGJvYXJkLmtleXMuY2Fwcy5kb3duID0gLT5cbiAgICAgICAgaWYgYm9hcmQuaXNDYXBzTG9ja1xuICAgICAgICAgIGJvYXJkLmlzQ2Fwc0xvY2sgPSBmYWxzZVxuICAgICAgICBlbHNlXG4gICAgICAgICAgYm9hcmQuY2Fwc0xvY2soKVxuICAgICAgYm9hcmQua2V5cy5jYXBzLm9uIEV2ZW50cy5Ub3VjaEVuZCwgLT5cbiAgICAgICAgYm9hcmQua2V5cy5jYXBzLmRvd24oKVxuICAgICAgYm9hcmQua2V5cy5jYXBzLnVwID0gLT5cbiAgICAgICAgbm90aGluZ0hhcHBlbnMgPSB0cnVlXG5cbiAgICAgIGJvYXJkLmtleXMudGFiID0gbmV3IFRhYlxuICAgICAgICBuYW1lOid0YWInXG4gICAgICAgIGNvbnN0cmFpbnRzOlxuICAgICAgICAgIGhlaWdodDpzcGVjcy5zcGVjaWFsS2V5SGVpZ2h0XG4gICAgICAgICAgd2lkdGg6MTA2XG4gICAgICAgICAgYm90dG9tRWRnZXM6Ym9hcmQua2V5c0FycmF5WzBdXG5cbiAgICAgIGlvcy5sYXlvdXQuc2V0KClcbiAgaWYgaW9zLmlzUGhvbmUoKVxuICAgIHBvcFVwID0gaW9zLnV0aWxzLnN2Zyhpb3MuYXNzZXRzLmtleVBvcFVwW3NldHVwLnN0eWxlXVtpb3MuZGV2aWNlLm5hbWVdKVxuICAgIGJvYXJkLnBvcFVwID0gbmV3IExheWVyXG4gICAgICBoZWlnaHQ6cG9wVXAuaGVpZ2h0XG4gICAgICB3aWR0aDpwb3BVcC53aWR0aFxuICAgICAgYmFja2dyb3VuZENvbG9yOid0cmFuc3BhcmVudCdcbiAgICAgIG5hbWU6Jy5wb3BVcCdcbiAgICAgIHN1cGVyTGF5ZXI6Ym9hcmQuYXJlYVxuICAgICAgdmlzaWJsZTpmYWxzZVxuXG4gICAgYm9hcmQucG9wVXAuc3ZnID0gbmV3IExheWVyXG4gICAgICBodG1sOnBvcFVwLnN2Z1xuICAgICAgaGVpZ2h0OnBvcFVwLmhlaWdodFxuICAgICAgd2lkdGg6cG9wVXAud2lkdGhcbiAgICAgIHN1cGVyTGF5ZXI6Ym9hcmQucG9wVXBcbiAgICAgIG5hbWU6Jy5zdmcnXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6J3RyYW5zcGFyZW50J1xuXG4gICAgYm9hcmQucG9wVXAudGV4dCA9IG5ldyBpb3MuVGV4dFxuICAgICAgdGV4dDonQSdcbiAgICAgIHN1cGVyTGF5ZXI6Ym9hcmQucG9wVXBcbiAgICAgIGZvbnRTaXplOnNwZWNzLnBvcFVwQ2hhclxuICAgICAgZm9udFdlaWdodDozMDBcbiAgICAgIGNvbG9yOmNvbG9ycy5jb2xvclxuICAgICAgdGV4dEFsaWduOidjZW50ZXInXG4gICAgICBjb25zdHJhaW50czpcbiAgICAgICAgYWxpZ246J2hvcml6b250YWwnXG4gICAgICAgIHRvcDpzcGVjcy5wb3BVcFRvcFxuICAgICAgICB3aWR0aDppb3MucHQocG9wVXAud2lkdGgpXG5cbiAgICBib2FyZC5wb3BVcC5jZW50ZXIoKVxuICAgIHN3aXRjaCBpb3MuZGV2aWNlLm5hbWVcbiAgICAgIHdoZW4gJ2lwaG9uZS02cy1wbHVzJ1xuICAgICAgICBib2FyZC5wb3BVcC53aWR0aCA9IGJvYXJkLnBvcFVwLndpZHRoIC0gMThcbiAgICAgICAgYm9hcmQucG9wVXAuaGVpZ2h0ID0gYm9hcmQucG9wVXAuaGVpZ2h0IC0gMjRcbiAgICAgICAgYm9hcmQucG9wVXAuc3ZnLnggPSBpb3MucHgoLTMpXG4gICAgICAgIGJvYXJkLnBvcFVwLnN2Zy55ID0gaW9zLnB4KC0zKVxuICAgICAgd2hlbiAnaXBob25lLTZzJ1xuICAgICAgICBib2FyZC5wb3BVcC53aWR0aCA9IGJvYXJkLnBvcFVwLndpZHRoIC0gMTJcbiAgICAgICAgYm9hcmQucG9wVXAuaGVpZ2h0ID0gYm9hcmQucG9wVXAuaGVpZ2h0IC0gMTJcbiAgICAgICAgYm9hcmQucG9wVXAuc3ZnLnggPSBpb3MucHgoLTMpXG4gICAgICAgIGJvYXJkLnBvcFVwLnN2Zy55ID0gaW9zLnB4KC0yKVxuICAgICAgd2hlbiAnaXBob25lLTUnXG4gICAgICAgIGJvYXJkLnBvcFVwLndpZHRoID0gYm9hcmQucG9wVXAud2lkdGggLSAxMlxuICAgICAgICBib2FyZC5wb3BVcC5oZWlnaHQgPSBib2FyZC5wb3BVcC5oZWlnaHQgLSAxMlxuICAgICAgICBib2FyZC5wb3BVcC5zdmcueCA9IGlvcy5weCgtMylcbiAgICAgICAgYm9hcmQucG9wVXAuc3ZnLnkgPSBpb3MucHgoLTIpXG5cbiAgICBjYXBpdGFsaXplS2V5cygpXG4gIGJvYXJkLnN3aXRjaCA9IChzdGF0ZSkgLT5cbiAgICBzd2l0Y2ggc3RhdGVcbiAgICAgIHdoZW4gXCJsZXR0ZXJzXCJcbiAgICAgICAgYm9hcmQuc3dpdGNoTGV0dGVycygpXG5cbiAgYm9hcmQuc3dpdGNoKFwibGV0dGVyc1wiKVxuXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIgJ2tleWRvd24nLCAoZSkgLT5cbiAgICBpZiBhcnJheU9mQ29kZXMuaW5kZXhPZihlLmtleUNvZGUudG9TdHJpbmcoKSkgIT0gLTFcbiAgICAgIGtleSA9IGJvYXJkLmtleXNbY29kZU1hcFtlLmtleUNvZGVdLnRvTG93ZXJDYXNlKCldXG4gICAgICBpZiBrZXkgdGhlbiBrZXkuZG93bigpXG4gICAgICBpZiBpb3MuaXNQYWQoKVxuICAgICAgICBpZiBrZXkgPT0gYm9hcmQua2V5cy5zaGlmdCB8fCBrZXkgPT0gYm9hcmQua2V5cy5zaGlmdGFsdFxuICAgICAgICAgIGJvYXJkLmtleXMuc2hpZnQuZG93bigpXG4gICAgICAgICAgYm9hcmQua2V5cy5zaGlmdGFsdC5pY29uLnRvZ2dsZSgnb24nKVxuICAgICAgICAgIGhhbmRsZUtleUNvbG9yKGJvYXJkLmtleXMuc2hpZnRhbHQpXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIgJ2tleXVwJywgKGUpIC0+XG4gICAgaWYgYXJyYXlPZkNvZGVzLmluZGV4T2YoZS5rZXlDb2RlLnRvU3RyaW5nKCkpICE9IC0xXG4gICAgICBrZXkgPSBib2FyZC5rZXlzW2NvZGVNYXBbZS5rZXlDb2RlXS50b0xvd2VyQ2FzZSgpXVxuICAgICAgaWYga2V5IHRoZW4ga2V5LnVwKClcbiAgICAgIGlmIGlvcy5pc1BhZCgpXG4gICAgICAgIGlmIGtleSA9PSBib2FyZC5rZXlzLnNoaWZ0IHx8IGtleSA9PSBib2FyZC5rZXlzLnNoaWZ0YWx0XG4gICAgICAgICAgYm9hcmQua2V5cy5zaGlmdC51cCgpXG4gICAgICAgICAgYm9hcmQua2V5cy5zaGlmdGFsdC5pY29uLnRvZ2dsZSgnb2ZmJylcbiAgICAgICAgICBoYW5kbGVLZXlDb2xvcihib2FyZC5rZXlzLnNoaWZ0YWx0KVxuICBjYXBpdGFsaXplS2V5cygpXG4gIHJldHVybiBib2FyZFxuIiwiaW9zID0gcmVxdWlyZSAnaW9zLWtpdCdcblxuZXhwb3J0cy5kZWZhdWx0cyA9XG5cdG5hbWU6J2ZpZWxkJ1xuXHRhY3RpdmU6ZmFsc2Vcblx0a2V5Ym9hcmQ6dHJ1ZVxuXHRwbGFjZWhvbGRlcjpcIkVudGVyIHRleHRcIlxuXHRwbGFjZWhvbGRlckNvbG9yOlwiIzk5OVwiXG5cdHN1cGVyTGF5ZXI6dW5kZWZpbmVkXG5cdGJhY2tncm91bmRDb2xvcjpcIndoaXRlXCJcblx0Ym9yZGVyQ29sb3I6XCIjQ0NDQ0NDXCJcblx0Ym9yZGVyUmFkaXVzOmlvcy5weCg1KVxuXHRib3JkZXJXaWR0aDppb3MucHgoMSlcblx0aGVpZ2h0Omlvcy5weCgzMClcblx0d2lkdGg6aW9zLnB4KDk3KVxuXHRmb250U2l6ZToxN1xuXHRjb2xvcjonYmxhY2snXG5cdHRleHRDb25zdHJhaW50czpcblx0XHRsZWFkaW5nOjRcblx0XHRhbGlnbjpcInZlcnRpY2FsXCJcblx0Y29uc3RyYWludHM6XG5cdFx0aGVpZ2h0OjMwXG5cdFx0d2lkdGg6OTdcblx0XHRhbGlnbjpcImNlbnRlclwiXG5cblxuZXhwb3J0cy5kZWZhdWx0cy5wcm9wcyA9IE9iamVjdC5rZXlzKGV4cG9ydHMuZGVmYXVsdHMpXG5cbmV4cG9ydHMuY3JlYXRlID0gKGFycmF5KSAtPlxuXHRzZXR1cCA9IGlvcy51dGlscy5zZXR1cENvbXBvbmVudChhcnJheSwgZXhwb3J0cy5kZWZhdWx0cylcblxuXHRmaWVsZCA9IG5ldyBpb3MuVmlld1xuXHRcdG5hbWU6c2V0dXAubmFtZVxuXHRcdGNvbnN0cmFpbnRzOnNldHVwLmNvbnN0cmFpbnRzXG5cdFx0YmFja2dyb3VuZENvbG9yOnNldHVwLmJhY2tncm91bmRDb2xvclxuXHRcdGJvcmRlckNvbG9yOnNldHVwLmJvcmRlckNvbG9yXG5cdFx0Ym9yZGVyUmFkaXVzOnNldHVwLmJvcmRlclJhZGl1c1xuXHRcdGJvcmRlcldpZHRoOnNldHVwLmJvcmRlcldpZHRoXG5cdFx0aGVpZ2h0OnNldHVwLmhlaWdodFxuXHRcdHdpZHRoOnNldHVwLndpZHRoXG5cdFx0Y2xpcDp0cnVlXG5cdFx0c3VwZXJMYXllcjpzZXR1cC5zdXBlckxheWVyXG5cblx0ZmllbGQudGV4dCA9IG5ldyBpb3MuVGV4dFxuXHRcdHN1cGVyTGF5ZXI6ZmllbGRcblx0XHRuYW1lOlwiLnRleHRcIlxuXHRcdGNvbnN0cmFpbnRzOnNldHVwLnRleHRDb25zdHJhaW50c1xuXHRcdHRleHQ6Jydcblx0XHRmb250U2l6ZToxN1xuXHRcdGNvbG9yOnNldHVwLmNvbG9yXG5cblx0ZmllbGQudGV4dC5wbGFjZWhvbGRlciA9IG5ldyBpb3MuVGV4dFxuXHRcdHN1cGVyTGF5ZXI6ZmllbGRcblx0XHRuYW1lOlwiLnBsYWNlaG9sZGVyXCJcblx0XHRjb25zdHJhaW50czpzZXR1cC50ZXh0Q29uc3RyYWludHNcblx0XHR0ZXh0OnNldHVwLnBsYWNlaG9sZGVyXG5cdFx0Zm9udFNpemU6MTdcblx0XHRjb2xvcjpzZXR1cC5wbGFjZWhvbGRlckNvbG9yXG5cblx0ZmllbGQuYWN0aXZlID0gc2V0dXAuYWN0aXZlXG5cdGZpZWxkLnR5cGUgPSAnZmllbGQnXG5cblx0ZmllbGQub24gRXZlbnRzLlRvdWNoRW5kLCAtPlxuXG5cdFx0aWYgZmllbGQuYWN0aXZlICE9IHRydWVcblx0XHRcdGZpZWxkLmFjdGl2ZSA9IHRydWVcblxuXHRcdFx0aWYgc2V0dXAua2V5Ym9hcmQgPT0gdHJ1ZSAmJiBmaWVsZC5rZXlib2FyZCA9PSB1bmRlZmluZWRcblx0XHRcdFx0ZmllbGQua2V5Ym9hcmQgPSBuZXcgaW9zLktleWJvYXJkXG5cdFx0XHRcdFx0b3V0cHV0OmZpZWxkLnRleHRcblx0XHRcdFx0XHRoaWRkZW46dHJ1ZVxuXG5cdFx0XHRpZiB0eXBlb2Ygc2V0dXAua2V5Ym9hcmQgPT0gJ29iamVjdCdcblx0XHRcdFx0ZmllbGQuaW5wdXQoc2V0dXAua2V5Ym9hcmQpXG5cdFx0XHRcdGZpZWxkLmtleWJvYXJkID0gc2V0dXAua2V5Ym9hcmRcblxuXHRcdFx0ZmllbGQua2V5Ym9hcmQuY2FsbCgpXG5cdFx0XHRmaWVsZC50ZXh0LmN1cnNvciA9IG5ldyBpb3MuVmlld1xuXHRcdFx0XHRzdXBlckxheWVyOmZpZWxkXG5cdFx0XHRcdG5hbWU6XCJjdXJzb3JcIlxuXHRcdFx0XHRiYWNrZ3JvdW5kQ29sb3I6aW9zLmNvbG9yKFwiYmx1ZVwiKVxuXHRcdFx0XHRjb25zdHJhaW50czpcblx0XHRcdFx0XHR3aWR0aDoyXG5cdFx0XHRcdFx0aGVpZ2h0OnNldHVwLmZvbnRTaXplICsgNlxuXHRcdFx0XHRcdGxlYWRpbmc6NFxuXHRcdFx0XHRcdGFsaWduOlwidmVydGljYWxcIlxuXG5cdFx0XHRpZiBmaWVsZC50ZXh0Lmh0bWwgIT0gc2V0dXAucGxhY2Vob2xkZXJcblx0XHRcdFx0ZmllbGQudGV4dC5jdXJzb3IuY29uc3RyYWludHMubGVhZGluZyA9IGZpZWxkLnRleHRcblx0XHRcdFx0aW9zLmxheW91dC5zZXQoZmllbGQudGV4dC5jdXJzb3IpXG5cdFx0XHRmaWVsZC5saXN0ZW5pbmdUb0ZpZWxkID0gVXRpbHMuaW50ZXJ2YWwgLjEsIC0+XG5cdFx0XHRcdGlmIGZpZWxkLmFjdGl2ZSA9PSBmYWxzZVxuXHRcdFx0XHRcdGNsZWFySW50ZXJ2YWwoZmllbGQuaW50ZXJ2YWwpXG5cdFx0XHRcdFx0Y2xlYXJJbnRlcnZhbChmaWVsZC5saXN0ZW5pbmdUb0ZpZWxkKVxuXHRcdFx0XHRcdGZpZWxkLnRleHQuY3Vyc29yLmRlc3Ryb3koKVxuXG5cblx0XHRcdGZpZWxkLmludGVydmFsID0gVXRpbHMuaW50ZXJ2YWwgLjYsIC0+XG5cdFx0XHRcdGlmIGZpZWxkLmFjdGl2ZVxuXHRcdFx0XHRcdGlmIGZpZWxkLnRleHQuY3Vyc29yLm9wYWNpdHlcblx0XHRcdFx0XHRcdGZpZWxkLnRleHQuY3Vyc29yLmFuaW1hdGVcblx0XHRcdFx0XHRcdFx0cHJvcGVydGllczoob3BhY2l0eTowKVxuXHRcdFx0XHRcdFx0XHR0aW1lOi41XG5cdFx0XHRcdFx0ZWxzZVxuXHRcdFx0XHRcdFx0ZmllbGQudGV4dC5jdXJzb3IuYW5pbWF0ZVxuXHRcdFx0XHRcdFx0XHRwcm9wZXJ0aWVzOihvcGFjaXR5OjEpXG5cdFx0XHRcdFx0XHRcdHRpbWU6LjVcblxuXG5cdFx0XHRmaWVsZC50ZXh0Lm9uIFwiY2hhbmdlOmh0bWxcIiwgLT5cblx0XHRcdFx0QC5jdXJzb3IuY29uc3RyYWludHMubGVhZGluZyA9IEBcblx0XHRcdFx0aWYgQC5odG1sID09ICcnXG5cdFx0XHRcdFx0QC5wbGFjZWhvbGRlci52aXNpYmxlID0gdHJ1ZVxuXHRcdFx0XHRlbHNlXG5cdFx0XHRcdFx0QC5wbGFjZWhvbGRlci52aXNpYmxlID0gZmFsc2Vcblx0XHRcdFx0aWYgQC5odG1sLmluZGV4T2YoQC5wbGFjZWhvbGRlcikgIT0gLTFcblx0XHRcdFx0XHRALmh0bWwgPSBALmh0bWwucmVwbGFjZShALnBsYWNlaG9sZGVyLCAnJylcblxuXHRcdFx0XHRpb3MubGF5b3V0LnNldChALmN1cnNvcilcblxuXHRmaWVsZC5pbnB1dCA9IChrZXlib2FyZCkgLT5cblx0XHRrZXlib2FyZC5vdXRwdXQoZmllbGQpXG5cblx0cmV0dXJuIGZpZWxkXG4iLCJpb3MgPSByZXF1aXJlICdpb3Mta2l0J1xuXG5nZW5DU1MgPSAoY3NzQXJyYXkpIC0+XG4gIGNzc09iaiA9IHt9XG4gIGZvciBwcm9wLGkgaW4gY3NzQXJyYXlcbiAgICBjb2xvbkluZGV4ID0gcHJvcC5pbmRleE9mKFwiOlwiKVxuICAgIGtleSA9IHByb3Auc2xpY2UoMCwgY29sb25JbmRleClcbiAgICB2YWx1ZSA9IHByb3Auc2xpY2UoY29sb25JbmRleCArIDIsIHByb3AubGVuZ3RoIC0gMSlcbiAgICBjc3NPYmpba2V5XSA9IHZhbHVlXG4gIHJldHVybiBjc3NPYmpcblxuZXhwb3J0cy5jb252ZXJ0ID0gKG9iaikgLT5cblxuICBnZXREZXNpZ25lZERldmljZSA9ICh3KSAtPlxuICAgIGRldmljZSA9IHt9XG4gICAgc3dpdGNoIHdcbiAgICAgIHdoZW4gMzIwLCA0ODAsIDY0MCwgOTYwLCAxMjgwXG4gICAgICAgIGRldmljZS5zY2FsZSA9IDJcbiAgICAgICAgZGV2aWNlLmhlaWdodCA9IDU2OFxuICAgICAgICBkZXZpY2Uud2lkdGggPSAzMjBcbiAgICAgICAgZGV2aWNlLm5hbWUgPSAnaXBob25lLTUnXG4gICAgICB3aGVuIDM3NSwgNTYyLjUsIDc1MCwgMTEyNSwgMTUwMFxuICAgICAgICBkZXZpY2Uuc2NhbGUgPSAyXG4gICAgICAgIGRldmljZS5oZWlnaHQgPSA2NjdcbiAgICAgICAgZGV2aWNlLndpZHRoID0gMzc1XG4gICAgICAgIGRldmljZS5uYW1lID0gJ2lwaG9uZS02cydcbiAgICAgIHdoZW4gNDE0LCA2MjEsIDgyOCwgMTI0MiwgMTY1NlxuICAgICAgICBkZXZpY2Uuc2NhbGUgPSAzXG4gICAgICAgIGRldmljZS5oZWlnaHQgPSA3MzZcbiAgICAgICAgZGV2aWNlLndpZHRoID0gNDE0XG4gICAgICAgIGRldmljZS5uYW1lID0gJ2lwaG9uZS02cy1wbHVzJ1xuICAgICAgd2hlbiA3NjgsIDExNTIsIDE1MzYsIDIzMDQsIDMwNzJcbiAgICAgICAgZGV2aWNlLnNjYWxlID0gMlxuICAgICAgICBkZXZpY2UuaGVpZ2h0ID0gMTAyNFxuICAgICAgICBkZXZpY2Uud2lkdGggPSA3NjhcbiAgICAgICAgZGV2aWNlLm5hbWUgPSAnaXBhZCdcbiAgICAgIHdoZW4gMTAyNCwgMTUzNiwgMjA0OCwgMzA3MiwgNDA5NlxuICAgICAgICBkZXZpY2Uuc2NhbGUgPSAyXG4gICAgICAgIGRldmljZS5oZWlnaHQgPSAxMzY2XG4gICAgICAgIGRldmljZS53aWR0aCA9IDEwMjRcbiAgICAgICAgZGV2aWNlLm5hbWUgPSAnaXBhZC1wcm8nXG4gICAgc3dpdGNoIHdcbiAgICAgIHdoZW4gMzIwLCAzNzUsIDQxNCwgNzY4LCAxMDI0XG4gICAgICAgIGRldmljZS5pU2NhbGUgPSAxXG4gICAgICB3aGVuIDQ4MCwgNTYyLjUsIDYyMSwgMTE1MiwgMTUzNlxuICAgICAgICBkZXZpY2UuaVNjYWxlID0gMS41XG4gICAgICB3aGVuIDY0MCwgNzUwLCA4MjgsIDE1MzYsIDIwNDhcbiAgICAgICAgZGV2aWNlLmlTY2FsZSA9IDJcbiAgICAgIHdoZW4gOTYwLCAxMTI1LCAxMjQyLCAyMzA0LCAzMDcyXG4gICAgICAgIGRldmljZS5pU2NhbGUgPSAzXG4gICAgICB3aGVuIDEyODAsIDE1MDAsIDE2NTYsIDMwNzIsIDQwOTZcbiAgICAgICAgZGV2aWNlLmlTY2FsZSA9IDRcbiAgICBkZXZpY2Uub2JqID0gJ2RldmljZSdcbiAgICByZXR1cm4gZGV2aWNlXG5cbiAgIyBHcmFiIGtleXNcbiAgbGF5ZXJLZXlzID0gT2JqZWN0LmtleXMob2JqKVxuXG4gICMgQWRkIGxheWVycyBpbiBvYmogdG8gYXJyYXkgdXNpbmcga2V5c1xuICBsYXllcnMgPSBbXVxuICBhcnRib2FyZHMgPSBbXVxuICBuZXdMYXllcnMgPSB7fVxuICBuZXdBcnRib2FyZHMgPSBbXVxuXG4gIGZvciBrZXkgaW4gbGF5ZXJLZXlzXG4gICAgaWYgb2JqW2tleV0uX2luZm8ua2luZCA9PSAnYXJ0Ym9hcmQnXG4gICAgICBhcnRib2FyZHMucHVzaCBvYmpba2V5XVxuXG4gIGZvciBiIGluIGFydGJvYXJkc1xuXG4gICAgZGV2aWNlID0gZ2V0RGVzaWduZWREZXZpY2UoYi53aWR0aClcblxuICAgIEFydGJvYXJkID0gKGFydGJvYXJkKSAtPlxuICAgICAgYm9hcmQgPSBuZXcgaW9zLlZpZXdcbiAgICAgICAgbmFtZTphcnRib2FyZC5uYW1lXG4gICAgICAgIGJhY2tncm91bmRDb2xvcjpiLmJhY2tncm91bmRDb2xvclxuICAgICAgICBjb25zdHJhaW50czoge3RvcDowLCBib3R0b206MCwgbGVhZGluZzowLCB0cmFpbGluZzowfVxuICAgICAgcmV0dXJuIGJvYXJkXG5cbiAgICAjR2V0IFN0YXRlbWVudHNcbiAgICBnZXRTdHJpbmcgPSAobCkgLT4gcmV0dXJuIGwuX2luZm8ubWV0YWRhdGEuc3RyaW5nXG4gICAgZ2V0Q1NTID0gKGwpIC0+IHJldHVybiBnZW5DU1MobC5faW5mby5tZXRhZGF0YS5jc3MpXG4gICAgZ2V0Q29sb3JTdHJpbmcgPSAobCkgLT4gcmV0dXJuICctJyArIGdldENTUyhsKS5jb2xvciArICcgJyArIGdldFN0cmluZyhsKVxuICAgIGdldEltYWdlID0gKGwpIC0+IHJldHVybiBsLmltYWdlXG4gICAgZ2V0TGF5ZXIgPSAobCkgLT4gcmV0dXJuIGwuY29weSgpXG5cblxuICAgIGZvdW5kID0gKG8sdCkgLT4gaWYgby5pbmRleE9mKHQpICE9IC0xIHRoZW4gcmV0dXJuIHRydWVcblxuICAgIGdlbkNvbnN0cmFpbnRzID0gKGwpIC0+XG4gICAgICBjb25zdHJhaW50cyA9IHt9XG4gICAgICBzID0gZGV2aWNlLmlTY2FsZVxuICAgICAgY1ggPSBkZXZpY2Uud2lkdGgvMlxuICAgICAgY1kgPSBkZXZpY2UuaGVpZ2h0LzJcbiAgICAgIHRZID0gZGV2aWNlLmhlaWdodC80ICogM1xuICAgICAgYlkgPSBkZXZpY2UuaGVpZ2h0LzQgKiAzXG4gICAgICBsWCA9IGRldmljZS53aWR0aC80ICogM1xuICAgICAgdFggPSBkZXZpY2Uud2lkdGgvNCAqIDNcblxuICAgICAgciA9IChuKSAtPiByZXR1cm4gTWF0aC5yb3VuZChuKVxuICAgICAgZiA9IChuKSAtPiByZXR1cm4gTWF0aC5mbG9vcihuKVxuXG4gICAgICBpZiBjWCA9PSBsLm1pZFgvcyB8fCByKGNYKSA9PSByKGwubWlkWC9zKSAgfHwgZihjWCkgPT0gZihsLm1pZFgvcylcbiAgICAgICAgY29uc3RyYWludHMuYWxpZ24gPSAnaG9yaXpvbnRhbCdcblxuICAgICAgaWYgY1kgPT0gbC5taWRZL3MgfHwgcihjWSkgPT0gcihsLm1pZFkvcykgfHwgZihjWSkgPT0gZihsLm1pZFkvcylcbiAgICAgICAgaWYgY29uc3RyYWludHMuYWxpZ24gPT0gJ2hvcml6b250YWwnXG4gICAgICAgICAgY29uc3RyYWludHMuYWxpZ24gPSAnY2VudGVyJ1xuICAgICAgICBlbHNlXG4gICAgICAgICAgY29uc3RyYWludHMuYWxpZ24gPSAndmVydGljYWwnXG5cbiAgICAgIGlmIGwueC9zIDwgbFhcbiAgICAgICAgY29uc3RyYWludHMubGVhZGluZyA9IHIobC54L3MpXG4gICAgICBpZiBsLngvcyA+IHRYXG4gICAgICAgIGNvbnN0cmFpbnRzLnRyYWlsaW5nID0gcihsLnBhcmVudC53aWR0aC9zIC0gbC5tYXhYL3MpXG5cbiAgICAgIGlmIGwueS9zIDwgdFlcbiAgICAgICAgY29uc3RyYWludHMudG9wID0gcihsLnkvcylcbiAgICAgIGlmIGwueS9zID4gYllcbiAgICAgICAgY29uc3RyYWludHMuYm90dG9tID0gcihsLnBhcmVudC5oZWlnaHQvcyAtIGwubWF4WS9zKVxuXG4gICAgICBpZiBsLndpZHRoL3MgPT0gZGV2aWNlLndpZHRoXG4gICAgICAgIGNvbnN0cmFpbnRzLmxlYWRpbmcgPSAwXG4gICAgICAgIGNvbnN0cmFpbnRzLnRyYWlsaW5nID0gMFxuICAgICAgZWxzZVxuICAgICAgICBjb25zdHJhaW50cy53aWR0aCA9IGwud2lkdGgvc1xuXG4gICAgICBpZiBsLmhlaWdodC9zID09IGRldmljZS5oZWlnaHRcbiAgICAgICAgY29uc3RyYWludHMudG9wID0gMFxuICAgICAgICBjb25zdHJhaW50cy5ib3R0b20gPSAwXG4gICAgICBlbHNlXG4gICAgICAgIGNvbnN0cmFpbnRzLmhlaWdodCA9IGwuaGVpZ2h0L3NcblxuICAgICAgcmV0dXJuIGNvbnN0cmFpbnRzXG5cbiAgICBnZW5MYXllciA9IChsLCBwYXJlbnQpIC0+XG4gICAgICBwcm9wcyA9XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjondHJhbnNwYXJlbnQnXG4gICAgICAgIG5hbWU6bC5uYW1lXG4gICAgICAgIGltYWdlOmwuaW1hZ2VcbiAgICAgICAgc3VwZXJMYXllcjogcGFyZW50XG4gICAgICAgIGNvbnN0cmFpbnRzOiBnZW5Db25zdHJhaW50cyhsKVxuXG4gICAgICByZXR1cm4gbmV3IGlvcy5WaWV3IHByb3BzXG5cbiAgICBnZW5BbGVydCA9IChsLCBuUCkgLT5cbiAgICAgIHByb3BzID1cbiAgICAgICAgYWN0aW9uczpbXVxuICAgICAgICBzdXBlckxheWVyOm5QXG4gICAgICBmb3IgYyBpbiBsLmNoaWxkcmVuXG4gICAgICAgIG4gPSBjLm5hbWVcbiAgICAgICAgaWYgZm91bmQobiwgJ3RpdGxlJykgdGhlbiBwcm9wcy50aXRsZSA9IGdldFN0cmluZyhjKVxuICAgICAgICBpZiBmb3VuZChuLCAnbWVzc2FnZScpIHRoZW4gcHJvcHMubWVzc2FnZSA9IGdldFN0cmluZyhjKVxuICAgICAgICBpZiBmb3VuZChuLCAnYWN0aW9uJykgdGhlbiBwcm9wcy5hY3Rpb25zLnVuc2hpZnQgZ2V0Q29sb3JTdHJpbmcoYylcbiAgICAgICAgYy5kZXN0cm95KClcbiAgICAgIHJldHVybiBuZXcgaW9zLkFsZXJ0IHByb3BzXG5cbiAgICBnZW5CYW5uZXIgPSAobCwgblApIC0+XG4gICAgICBwcm9wcyA9IHtzdXBlckxheWVyOm5QfVxuICAgICAgZm9yIGMgaW4gbC5jaGlsZHJlblxuICAgICAgICBuID0gYy5uYW1lXG4gICAgICAgIGlmIGZvdW5kKG4sICdhcHAnKSB0aGVuIHByb3BzLmFwcCA9IGdldFN0cmluZyhjKVxuICAgICAgICBpZiBmb3VuZChuLCAndGl0bGUnKSB0aGVuIHByb3BzLnRpdGxlID0gZ2V0U3RyaW5nKGMpXG4gICAgICAgIGlmIGZvdW5kKG4sICdtZXNzYWdlJykgdGhlbiBwcm9wcy5tZXNzYWdlID0gZ2V0U3RyaW5nKGMpXG4gICAgICAgIGlmIGZvdW5kKG4sICd0aW1lJykgdGhlbiBwcm9wcy50aW1lID0gZ2V0U3RyaW5nKGMpXG4gICAgICAgIGlmIGZvdW5kKG4sICdpY29uJykgdGhlbiBwcm9wcy5pY29uID0gZ2V0TGF5ZXIoYylcbiAgICAgICAgYy5kZXN0cm95KClcbiAgICAgIHJldHVybiBuZXcgaW9zLkJhbm5lciBwcm9wc1xuXG4gICAgZ2VuQnV0dG9uID0gKGwsIG5QKSAtPlxuICAgICAgcHJvcHMgPVxuICAgICAgICBzdXBlckxheWVyOm5QXG4gICAgICAgIGNvbnN0cmFpbnRzOmdlbkNvbnN0cmFpbnRzKGwpXG5cbiAgICAgIGZvciBjIGluIGwuY2hpbGRyZW5cbiAgICAgICAgbiA9IGMubmFtZVxuICAgICAgICBpZiBmb3VuZChuLCAnc21hbGwnKSB0aGVuIHByb3BzLnR5cGUgPSAnc21hbGwnXG4gICAgICAgIGlmIGZvdW5kKG4sICdiaWcnKSB0aGVuIHByb3BzLnR5cGUgPSAnYmlnJ1xuICAgICAgICBpZiBmb3VuZChuLCAnZGFyaycpIHRoZW4gcHJvcHMuc3R5bGUgPSAnZGFyaydcbiAgICAgICAgaWYgZm91bmQobiwgJ2xhYmVsJylcbiAgICAgICAgICBwcm9wcy50ZXh0ID0gZ2V0U3RyaW5nKGMpXG4gICAgICAgICAgcHJvcHMuY29sb3IgPSBnZXRDU1MoYykuY29sb3JcbiAgICAgICAgICBwcm9wcy5mb250U2l6ZSA9IGdldENTUyhjKVsnZm9udC1zaXplJ10ucmVwbGFjZSgncHgnLCAnJylcbiAgICAgICAgYy5kZXN0cm95KClcbiAgICAgIHJldHVybiBuZXcgaW9zLkJ1dHRvbiBwcm9wc1xuXG4gICAgZ2VuRmllbGQgPSAobCwgblApIC0+XG4gICAgICBwcm9wcyA9XG4gICAgICAgIHN1cGVyTGF5ZXI6blBcbiAgICAgICAgY29uc3RyYWludHM6Z2VuQ29uc3RyYWludHMobClcbiAgICAgIGZvciBjIGluIGwuY2hpbGRyZW5cbiAgICAgICAgbiA9IGMubmFtZVxuXG4gICAgICAgIGlmIGZvdW5kKG4sICdwbGFjZWhvbGRlcicpXG4gICAgICAgICAgcHJvcHMucGxhY2Vob2xkZXIgPSBnZXRTdHJpbmcoYylcbiAgICAgICAgYy5kZXN0cm95KClcbiAgICAgIHJldHVybiBuZXcgaW9zLkZpZWxkIHByb3BzXG5cbiAgICBnZW5LZXlib2FyZCA9IChsLCBuUCkgLT5cbiAgICAgIHByb3BzID1cbiAgICAgICAgc3VwZXJMYXllcjpuUFxuXG4gICAgICBmb3IgYyBpbiBsLmNoaWxkcmVuXG4gICAgICAgIG4gPSBjLm5hbWVcblxuICAgICAgICBpZiBmb3VuZChuLCAncmV0dXJuJykgdGhlbiBwcm9wcy5yZXR1cm5UZXh0ID0gZ2V0U3RyaW5nKGMpXG4gICAgICAgIGlmIGZvdW5kKG4sICdkYXJrJykgdGhlbiBwcm9wcy5zdHlsZSA9ICdkYXJrJ1xuICAgICAgICBjLmRlc3Ryb3koKVxuICAgICAgcmV0dXJuIG5ldyBpb3MuS2V5Ym9hcmQgcHJvcHNcblxuICAgIGdlbk5hdkJhciA9IChsLCBuUCkgLT5cbiAgICAgIHByb3BzID1cbiAgICAgICAgc3VwZXJMYXllcjpuUFxuICAgICAgZm9yIGMgaW4gbC5jaGlsZHJlblxuICAgICAgICBuID0gYy5uYW1lXG4gICAgICAgIGlmIGZvdW5kKG4sICd0aXRsZScpXG4gICAgICAgICAgcHJvcHMudGl0bGUgPSBnZXRTdHJpbmcoYylcbiAgICAgICAgICBwcm9wcy50aXRsZUNvbG9yID0gZ2V0Q1NTKGMpLmNvbG9yXG4gICAgICAgIGlmIGZvdW5kKG4sICdyaWdodCcpXG4gICAgICAgICAgcHJvcHMucmlnaHQgPSBnZXRTdHJpbmcoYylcbiAgICAgICAgICBwcm9wcy5jb2xvciA9IGdldENTUyhjKS5jb2xvclxuICAgICAgICBpZiBmb3VuZChuLCAnbGVmdCcpIHRoZW4gcHJvcHMubGVmdCA9IGdldFN0cmluZyhjKVxuICAgICAgICBjLmRlc3Ryb3koKVxuICAgICAgcmV0dXJuIG5ldyBpb3MuTmF2QmFyIHByb3BzXG5cbiAgICBnZW5TaGVldCA9IChsLCBuUCkgLT5cbiAgICAgIHByb3BzID1cbiAgICAgICAgYWN0aW9uczpbXVxuICAgICAgICBzdXBlckxheWVyOiBuUFxuXG4gICAgICBmb3IgYywgaSBpbiBsLmNoaWxkcmVuXG4gICAgICAgIG4gPSBjLm5hbWVcbiAgICAgICAgaWYgZm91bmQobiwgJ2FjdGlvbicpIHRoZW4gcHJvcHMuYWN0aW9ucy5wdXNoIGdldENvbG9yU3RyaW5nKGMpXG4gICAgICAgIGlmIGZvdW5kKG4sICdleGl0JykgdGhlbiBwcm9wcy5leGl0ID0gZ2V0U3RyaW5nKGMpXG4gICAgICAgIGMuZGVzdHJveSgpXG5cbiAgICAgIHJldHVybiBuZXcgaW9zLlNoZWV0IHByb3BzXG5cbiAgICBnZW5TdGF0dXNCYXIgPSAobCwgblApIC0+XG4gICAgICBwcm9wcyA9XG4gICAgICAgIHN1cGVyTGF5ZXI6IG5QXG5cbiAgICAgIGZvciBjIGluIGwuY2hpbGRyZW5cbiAgICAgICAgbiA9IGMubmFtZVxuICAgICAgICBpZiBmb3VuZChuLCAnY2FycmllcicpIHRoZW4gcHJvcHMuY2FycmllciA9IGdldFN0cmluZyhjKVxuICAgICAgICBpZiBmb3VuZChuLCAnYmF0dGVyeScpIHRoZW4gcHJvcHMuYmF0dGVyeSA9IGdldFN0cmluZyhjKS5yZXBsYWNlKCclJywgJycpXG4gICAgICAgIGlmIGZvdW5kKG4sICduZXR3b3JrJykgdGhlbiBwcm9wcy5uZXR3b3JrID0gZ2V0U3RyaW5nKGMpXG4gICAgICAgIGlmIGZvdW5kKG4sICdkYXJrJykgdGhlbiBwcm9wcy5zdHlsZSA9ICdsaWdodCdcbiAgICAgICAgYy5kZXN0cm95KClcbiAgICAgIHJldHVybiBuZXcgaW9zLlN0YXR1c0JhciBwcm9wc1xuXG4gICAgZ2VuVGFiQmFyID0gKGwsIG5QKSAtPlxuICAgICAgcHJvcHMgPVxuICAgICAgICB0YWJzOiBbXVxuICAgICAgICBzdXBlckxheWVyOm5QXG5cbiAgICAgIGZvciBjIGluIGwuY2hpbGRyZW5cbiAgICAgICAgbiA9IGMubmFtZVxuICAgICAgICB0cHJvcHMgPSB7fVxuICAgICAgICBmb3IgdCBpbiBjLmNoaWxkcmVuXG4gICAgICAgICAgdG4gPSB0Lm5hbWVcblxuICAgICAgICAgIGlmIG4gPT0gJ3RhYl9hY3RpdmUnICYmIHRuLmluZGV4T2YoJ2xhYmVsJykgIT0gLTFcbiAgICAgICAgICAgIHByb3BzLmFjdGl2ZUNvbG9yID0gZ2V0Q1NTKHQpLmNvbG9yXG4gICAgICAgICAgaWYgbiAhPSAndGFiX2FjdGl2ZScgJiYgdG4uaW5kZXhPZignbGFiZWwnKSAhPSAtMVxuICAgICAgICAgICAgcHJvcHMuaW5hY3RpdmVDb2xvciA9IGdldENTUyh0KS5jb2xvclxuXG4gICAgICAgICAgaWYgZm91bmQodG4sICdhY3RpdmUnKSAmJiB0bi5pbmRleE9mKCdpbmFjdGl2ZScpID09IC0xIHRoZW4gdHByb3BzLmFjdGl2ZSA9IGdldExheWVyKHQpXG4gICAgICAgICAgaWYgZm91bmQodG4sICdpbmFjdGl2ZScpIHRoZW4gdHByb3BzLmluYWN0aXZlID0gZ2V0TGF5ZXIodClcbiAgICAgICAgICBpZiBmb3VuZCh0biwgJ2xhYmVsJykgdGhlbiB0cHJvcHMubGFiZWwgPSBnZXRTdHJpbmcodClcblxuICAgICAgICAgIHQuZGVzdHJveSgpXG4gICAgICAgIHByb3BzLnRhYnMudW5zaGlmdCBuZXcgaW9zLlRhYiB0cHJvcHNcblxuXG4gICAgICAgIGMuZGVzdHJveSgpXG5cbiAgICAgIHJldHVybiBuZXcgaW9zLlRhYkJhciBwcm9wc1xuXG4gICAgZ2VuVGV4dCA9IChsLCBuUCkgLT5cbiAgICAgIHByb3BzID1cbiAgICAgICAgc3VwZXJMYXllcjpuUFxuICAgICAgICB0ZXh0OmdldFN0cmluZyhsKVxuICAgICAgICBjb25zdHJhaW50czpnZW5Db25zdHJhaW50cyhsKVxuICAgICAgY3NzID0gZ2V0Q1NTKGwpXG4gICAgICBrZXlzID0gT2JqZWN0LmtleXMoZ2V0Q1NTKGwpKVxuICAgICAgZm9yIGsgaW4ga2V5c1xuICAgICAgICBpZiBmb3VuZChrLCAnZm9udC1mYW1pbHknKSB0aGVuIHByb3BzLmZvbnRGYW1pbHkgPSBjc3Nba11cbiAgICAgICAgaWYgZm91bmQoaywgJ29wYWNpdHknKSB0aGVuIHByb3BzLm9wYWNpdHkgPSBOdW1iZXIoY3NzW2tdKVxuICAgICAgICBpZiBmb3VuZChrLCAnY29sb3InKSB0aGVuIHByb3BzLmNvbG9yID0gY3NzW2tdXG4gICAgICAgIGlmIGZvdW5kKGssICdmb250LXNpemUnKSB0aGVuIHByb3BzLmZvbnRTaXplID0gY3NzW2tdLnJlcGxhY2UoJ3B4JywgJycpXG4gICAgICAgIGlmIGZvdW5kKGssICdsZXR0ZXItc3BhY2luZycpIHRoZW4gcHJvcHMubGV0dGVyU3BhY2luZyA9IGNzc1trXVxuICAgICAgICBpZiBmb3VuZChrLCAnbGluZS1oZWlnaHQnKSB0aGVuIHByb3BzLmxpbmVIZWlnaHQgPSBjc3Nba10ucmVwbGFjZSgncHgnLCAnJylcbiAgICAgIHJldHVybiBuZXcgaW9zLlRleHQgcHJvcHNcblxuICAgIGNoaWxkcmVuID0gKHAsIG5QKSAtPlxuXG4gICAgICBmb3IgYyBpbiBwLmNoaWxkcmVuXG4gICAgICAgIG4gPSBjLm5hbWVcbiAgICAgICAgbmV3TGF5ZXIgPSAwXG4gICAgICAgIGlmIGMubmFtZVswXSA9PSAnXydcbiAgICAgICAgICBpZiBmb3VuZChuLCAnX0FsZXJ0JykgdGhlbiAgbmV3TGF5ZXIgPSBnZW5BbGVydChjLCBuUClcbiAgICAgICAgICBpZiBmb3VuZChuLCdfQmFubmVyJykgdGhlbiBuZXdMYXllciA9IGdlbkJhbm5lcihjLCBuUClcbiAgICAgICAgICBpZiBmb3VuZChuLCAnX0J1dHRvbicpIHRoZW4gbmV3TGF5ZXIgPSBnZW5CdXR0b24oYywgblApXG4gICAgICAgICAgaWYgZm91bmQobiwgJ19GaWVsZCcpIHRoZW4gbmV3TGF5ZXIgPSBnZW5GaWVsZChjLCBuUClcbiAgICAgICAgICBpZiBmb3VuZChuLCAnX0tleWJvYXJkJykgdGhlbiBuZXdMYXllciA9IGdlbktleWJvYXJkKGMsIG5QKVxuICAgICAgICAgIGlmIGZvdW5kKG4sJ19OYXZCYXInKSB0aGVuIG5ld0xheWVyID0gZ2VuTmF2QmFyKGMsIG5QKVxuICAgICAgICAgIGlmIGZvdW5kKG4sICdfU2hlZXQnKSB0aGVuIG5ld0xheWVyID0gZ2VuU2hlZXQoYywgblApXG4gICAgICAgICAgaWYgZm91bmQobiwgJ19UYWJCYXInKSB0aGVuIG5ld0xheWVyID0gZ2VuVGFiQmFyKGMsIG5QKVxuICAgICAgICAgIGlmIGZvdW5kKG4sICdfU3RhdHVzQmFyJykgdGhlbiBuZXdMYXllciA9IG5ldyBnZW5TdGF0dXNCYXIoYywgblApXG4gICAgICAgICAgaWYgZm91bmQobiwgJ19UZXh0JykgdGhlbiBuZXdMYXllciA9IGdlblRleHQoYywgblApXG4gICAgICAgICAgaWYgbmV3TGF5ZXIgPT0gdW5kZWZpbmVkIHRoZW4gbmV3TGF5ZXIgPSBnZW5MYXllcihjLCBuUClcbiAgICAgICAgZWxzZVxuICAgICAgICAgIG5ld0xheWVyID0gZ2VuTGF5ZXIoYywgblApXG5cbiAgICAgICAgbmV3TGF5ZXJzW25dID0gbmV3TGF5ZXJcblxuICAgICAgICBpZiBjLmNoaWxkcmVuXG4gICAgICAgICAgY2hpbGRyZW4oYywgbmV3TGF5ZXIpXG5cbiAgICAgICAgYy5kZXN0cm95KClcblxuICAgIGlvcy5sW2IubmFtZV0gPSBuZXcgQXJ0Ym9hcmQgYlxuXG4gICAgY2hpbGRyZW4oYiwgaW9zLmxbYi5uYW1lXSlcblxuICAgIGIuZGVzdHJveSgpXG5cbiAgICBuZXdBcnRib2FyZHMucHVzaCBpb3MubFtiLm5hbWVdXG4gICAgbmV3TGF5ZXJzW2IubmFtZV0gPSBpb3MubFtiLm5hbWVdXG5cbiAgcmV0dXJuIG5ld0xheWVyc1xuIiwiaW9zID0gcmVxdWlyZSAnaW9zLWtpdCdcblxuZXhwb3J0cy5kZWZhdWx0cyA9XG5cdFx0dGV4dDpcIkJ1dHRvblwiXG5cdFx0dHlwZTpcInRleHRcIlxuXHRcdHN0eWxlOlwibGlnaHRcIlxuXHRcdGJhY2tncm91bmRDb2xvcjpcIndoaXRlXCJcblx0XHRjb2xvcjpcIiMwMDdBRkZcIlxuXHRcdGZvbnRTaXplOjE3XG5cdFx0Zm9udFdlaWdodDpcInJlZ3VsYXJcIlxuXHRcdG5hbWU6XCJidXR0b25cIlxuXHRcdGJsdXI6dHJ1ZVxuXHRcdHN1cGVyTGF5ZXI6dW5kZWZpbmVkXG5cdFx0Y29uc3RyYWludHM6dW5kZWZpbmVkXG5cbmV4cG9ydHMuZGVmYXVsdHMucHJvcHMgPSBPYmplY3Qua2V5cyhleHBvcnRzLmRlZmF1bHRzKVxuXG5leHBvcnRzLmNyZWF0ZSA9IChhcnJheSkgLT5cblx0c2V0dXAgPSBpb3MudXRpbHMuc2V0dXBDb21wb25lbnQoYXJyYXksIGV4cG9ydHMuZGVmYXVsdHMpXG5cblx0YnV0dG9uID0gbmV3IGlvcy5WaWV3XG5cdFx0bmFtZTpzZXR1cC5uYW1lXG5cdFx0Y29uc3RyYWludHM6c2V0dXAuY29uc3RyYWludHNcblx0XHRzdXBlckxheWVyOnNldHVwLnN1cGVyTGF5ZXJcblx0YnV0dG9uLnR5cGUgPSBzZXR1cC50eXBlXG5cblx0Y29sb3IgPSBcIlwiXG5cblx0c3dpdGNoIHNldHVwLnR5cGVcblx0XHR3aGVuIFwiYmlnXCJcblx0XHRcdHNldHVwLmZvbnRTaXplID0gMjBcblx0XHRcdHNldHVwLmZvbnRXZWlnaHQgPSBcIm1lZGl1bVwiXG5cblx0XHRcdGJ1dHRvbi5ib3JkZXJSYWRpdXMgPSBpb3MudXRpbHMucHgoMTIuNSlcblx0XHRcdGJhY2tncm91bmRDb2xvciA9IFwiXCJcblxuXHRcdFx0aWYgYnV0dG9uLmNvbnN0cmFpbnRzID09IHVuZGVmaW5lZCB0aGVuIGJ1dHRvbi5jb25zdHJhaW50cyA9IHt9XG5cdFx0XHRidXR0b24uY29uc3RyYWludHMubGVhZGluZyA9IDEwXG5cdFx0XHRidXR0b24uY29uc3RyYWludHMudHJhaWxpbmcgPSAxMFxuXHRcdFx0YnV0dG9uLmNvbnN0cmFpbnRzLmhlaWdodCA9IDU3XG5cblx0XHRcdHN3aXRjaCBzZXR1cC5zdHlsZVxuXHRcdFx0XHR3aGVuIFwibGlnaHRcIlxuXHRcdFx0XHRcdGNvbG9yID0gaW9zLnV0aWxzLmNvbG9yKFwiYmx1ZVwiKVxuXHRcdFx0XHRcdGlmIHNldHVwLmJsdXJcblx0XHRcdFx0XHRcdGJhY2tncm91bmRDb2xvciA9IFwicmdiYSgyNTUsIDI1NSwgMjU1LCAuOSlcIlxuXHRcdFx0XHRcdFx0aW9zLnV0aWxzLmJnQmx1cihidXR0b24pXG5cdFx0XHRcdFx0ZWxzZVxuXHRcdFx0XHRcdFx0YmFja2dyb3VuZENvbG9yID0gXCJ3aGl0ZVwiXG5cblx0XHRcdFx0d2hlbiBcImRhcmtcIlxuXHRcdFx0XHRcdGNvbG9yID0gXCIjRkZGXCJcblx0XHRcdFx0XHRpZiBzZXR1cC5ibHVyXG5cdFx0XHRcdFx0XHRiYWNrZ3JvdW5kQ29sb3IgPSBcInJnYmEoNDMsIDQzLCA0MywgLjkpXCJcblx0XHRcdFx0XHRcdGlvcy51dGlscy5iZ0JsdXIoYnV0dG9uKVxuXHRcdFx0XHRcdGVsc2Vcblx0XHRcdFx0XHRcdGJhY2tncm91bmRDb2xvciA9IFwiIzI4MjgyOFwiXG5cdFx0XHRcdGVsc2Vcblx0XHRcdFx0XHRpZiBzZXR1cC5ibHVyXG5cdFx0XHRcdFx0XHRjb2xvciA9IHNldHVwLmNvbG9yXG5cdFx0XHRcdFx0XHRiYWNrZ3JvdW5kQ29sb3IgPSBuZXcgQ29sb3Ioc2V0dXAuYmFja2dyb3VuZENvbG9yKVxuXHRcdFx0XHRcdFx0cmdiU3RyaW5nID0gYmFja2dyb3VuZENvbG9yLnRvUmdiU3RyaW5nKClcblx0XHRcdFx0XHRcdHJnYmFTdHJpbmcgPSByZ2JTdHJpbmcucmVwbGFjZShcIilcIiwgXCIsIC45KVwiKVxuXHRcdFx0XHRcdFx0cmdiYVN0cmluZyAgPSByZ2JhU3RyaW5nLnJlcGxhY2UoXCJyZ2JcIiwgXCJyZ2JhXCIpXG5cdFx0XHRcdFx0XHRiYWNrZ3JvdW5kQ29sb3IgPSByZ2JhU3RyaW5nXG5cdFx0XHRcdFx0XHRpb3MudXRpbHMuYmdCbHVyKGJ1dHRvbilcblx0XHRcdFx0XHRlbHNlXG5cdFx0XHRcdFx0XHRjb2xvciA9IHNldHVwLmNvbG9yXG5cdFx0XHRcdFx0XHRiYWNrZ3JvdW5kQ29sb3IgPSBuZXcgQ29sb3Ioc2V0dXAuYmFja2dyb3VuZENvbG9yKVxuXG5cdFx0XHRidXR0b24uYmFja2dyb3VuZENvbG9yID0gYmFja2dyb3VuZENvbG9yXG5cblx0XHRcdGJ1dHRvbi5vbiBFdmVudHMuVG91Y2hTdGFydCwgLT5cblx0XHRcdFx0bmV3Q29sb3IgPSBcIlwiXG5cdFx0XHRcdGlmIHNldHVwLnN0eWxlID09IFwiZGFya1wiXG5cdFx0XHRcdFx0bmV3Q29sb3IgPSBidXR0b24uYmFja2dyb3VuZENvbG9yLmxpZ2h0ZW4oMTApXG5cdFx0XHRcdGVsc2Vcblx0XHRcdFx0XHRuZXdDb2xvciA9IGJ1dHRvbi5iYWNrZ3JvdW5kQ29sb3IuZGFya2VuKDEwKVxuXHRcdFx0XHRidXR0b24uYW5pbWF0ZVxuXHRcdFx0XHRcdHByb3BlcnRpZXM6KGJhY2tncm91bmRDb2xvcjpuZXdDb2xvcilcblx0XHRcdFx0XHR0aW1lOi41XG5cblx0XHRcdGJ1dHRvbi5vbiBFdmVudHMuVG91Y2hFbmQsIC0+XG5cdFx0XHRcdGJ1dHRvbi5hbmltYXRlXG5cdFx0XHRcdFx0cHJvcGVydGllczooYmFja2dyb3VuZENvbG9yOmJhY2tncm91bmRDb2xvcilcblx0XHRcdFx0XHR0aW1lOi41XG5cblx0XHR3aGVuIFwic21hbGxcIlxuXHRcdFx0c2V0dXAuZm9udFNpemUgPSAxNFxuXHRcdFx0c2V0dXAudG9wID0gNFxuXHRcdFx0YnV0dG9uLmJvcmRlclJhZGl1cyA9IGlvcy51dGlscy5weCgyLjUpXG5cdFx0XHRzZXR1cC5mb250V2VpZ2h0ID0gNTAwXG5cdFx0XHRzZXR1cC50ZXh0ID0gc2V0dXAudGV4dC50b1VwcGVyQ2FzZSgpXG5cdFx0XHRjb2xvciA9IHNldHVwLmNvbG9yXG5cdFx0XHRidXR0b24uYm9yZGVyQ29sb3IgPSBzZXR1cC5jb2xvclxuXG5cdFx0XHRidXR0b24uYmFja2dyb3VuZENvbG9yID0gXCJ0cmFuc3BhcmVudFwiXG5cdFx0XHRidXR0b24uYm9yZGVyV2lkdGggPSBpb3MudXRpbHMucHgoMSlcblxuXHRcdGVsc2Vcblx0XHRcdGJ1dHRvbi5iYWNrZ3JvdW5kQ29sb3IgPSBcInRyYW5zcGFyZW50XCJcblx0XHRcdGJ1dHRvbi5vcmlnQ29sb3IgPSBpb3MudXRpbHMuc3BlY2lhbENoYXIoYnV0dG9uKVxuXG5cdFx0XHRjb2xvciA9IHNldHVwLmNvbG9yXG5cdFx0XHRidXR0b24ubGFiZWxPcmlnQ29sb3IgPSBjb2xvclxuXG5cblx0XHRcdGJ1dHRvbi5vbiBFdmVudHMuVG91Y2hTdGFydCwgLT5cblx0XHRcdFx0QC5sYWJlbE9yaWdDb2xvciA9IGJ1dHRvbi5sYWJlbC5jb2xvclxuXHRcdFx0XHRuZXdDb2xvciA9IGJ1dHRvbi5zdWJMYXllcnNbMF0uY29sb3IubGlnaHRlbigzMClcblx0XHRcdFx0YnV0dG9uLnN1YkxheWVyc1swXS5hbmltYXRlXG5cdFx0XHRcdFx0cHJvcGVydGllczooY29sb3I6bmV3Q29sb3IpXG5cdFx0XHRcdFx0dGltZTouNVxuXG5cdFx0XHRidXR0b24ub24gRXZlbnRzLlRvdWNoRW5kLCAtPlxuXHRcdFx0XHRALnN1YkxheWVyc1swXS5hbmltYXRlXG5cdFx0XHRcdFx0cHJvcGVydGllczooY29sb3I6aW9zLnV0aWxzLmNvbG9yKEAubGFiZWxPcmlnQ29sb3IpKVxuXHRcdFx0XHRcdHRpbWU6LjVcblxuXHRidXR0b24ubGFiZWwgPSBuZXcgaW9zLlRleHRcblx0XHRuYW1lOlwiLmxhYmVsXCJcblx0XHR0ZXh0OnNldHVwLnRleHRcblx0XHRjb2xvcjpjb2xvclxuXHRcdGxpbmVIZWlnaHQ6MTZcblx0XHRzdXBlckxheWVyOmJ1dHRvblxuXHRcdGZvbnRTaXplOnNldHVwLmZvbnRTaXplXG5cdFx0Zm9udFdlaWdodDpzZXR1cC5mb250V2VpZ2h0XG5cdFx0Y29uc3RyYWludHM6XG5cdFx0XHRhbGlnbjpcImNlbnRlclwiXG5cblx0c3dpdGNoIHNldHVwLnR5cGVcblx0XHR3aGVuIFwic21hbGxcIlxuXHRcdFx0YnV0dG9uLnByb3BzID0gKHdpZHRoOmJ1dHRvbi5sYWJlbC53aWR0aCArIGlvcy51dGlscy5weCgyMCksIGhlaWdodDogYnV0dG9uLmxhYmVsLmhlaWdodCArIGlvcy51dGlscy5weCgxMCkpXG5cblx0XHRcdGJ1dHRvbi5vbiBFdmVudHMuVG91Y2hTdGFydCwgLT5cblx0XHRcdFx0YnV0dG9uLmFuaW1hdGVcblx0XHRcdFx0XHRwcm9wZXJ0aWVzOihiYWNrZ3JvdW5kQ29sb3I6Y29sb3IpXG5cdFx0XHRcdFx0dGltZTouNVxuXHRcdFx0XHRidXR0b24ubGFiZWwuYW5pbWF0ZVxuXHRcdFx0XHRcdHByb3BlcnRpZXM6KGNvbG9yOlwiI0ZGRlwiKVxuXHRcdFx0XHRcdHRpbWU6LjVcblx0XHRcdGJ1dHRvbi5vbiBFdmVudHMuVG91Y2hFbmQsIC0+XG5cdFx0XHRcdGJ1dHRvbi5hbmltYXRlXG5cdFx0XHRcdFx0cHJvcGVydGllczooYmFja2dyb3VuZENvbG9yOlwidHJhbnNwYXJlbnRcIilcblx0XHRcdFx0XHR0aW1lOi41XG5cdFx0XHRcdGJ1dHRvbi5sYWJlbC5hbmltYXRlXG5cdFx0XHRcdFx0cHJvcGVydGllczooY29sb3I6Y29sb3IpXG5cdFx0XHRcdFx0dGltZTouNVxuXHRcdGVsc2Vcblx0XHRcdGJ1dHRvbi5wcm9wcyA9ICh3aWR0aDpidXR0b24ubGFiZWwud2lkdGgsIGhlaWdodDpidXR0b24ubGFiZWwuaGVpZ2h0KVxuXG5cblx0aW9zLmxheW91dC5zZXRcblx0XHR0YXJnZXQ6YnV0dG9uXG5cblx0aW9zLmxheW91dC5zZXRcblx0XHR0YXJnZXQ6YnV0dG9uLmxhYmVsXG5cdHJldHVybiBidXR0b25cbiIsIiMgQmFubmVyXG5pb3MgPSByZXF1aXJlICdpb3Mta2l0J1xuXG5leHBvcnRzLmRlZmF1bHRzID1cblx0dGl0bGU6IFwiVGl0bGVcIlxuXHRtZXNzYWdlOlwiTWVzc2FnZVwiXG5cdGFjdGlvbjpcIkFjdGlvblwiXG5cdHRpbWU6XCJub3dcIlxuXHRhcHA6XCJhcHBcIlxuXHRpY29uOnVuZGVmaW5lZFxuXHRkdXJhdGlvbjo3XG5cdGFuaW1hdGVkOnRydWVcblx0cmVwbHk6dHJ1ZVxuXG5leHBvcnRzLmRlZmF1bHRzLnByb3BzID0gT2JqZWN0LmtleXMoZXhwb3J0cy5kZWZhdWx0cylcblxuZXhwb3J0cy5jcmVhdGUgPSAob2JqKSAtPlxuXHRzZXR1cCA9IGlvcy51dGlscy5zZXR1cENvbXBvbmVudChvYmosIGV4cG9ydHMuZGVmYXVsdHMpXG5cblx0I3NldCBzcGVjcyBmb3IgZWFjaCBkZXZpY2Vcblx0c3BlY3MgPVxuXHRcdGxlYWRpbmdJY29uOiAxNVxuXHRcdHRvcEljb246IDhcblx0XHR0b3BUaXRsZTogNlxuXHRcdHdpZHRoOjBcblxuXHRzd2l0Y2ggaW9zLmRldmljZS5uYW1lXG5cdFx0d2hlbiBcImlwaG9uZS01XCJcblx0XHRcdHNwZWNzLndpZHRoID0gMzA0XG5cdFx0d2hlbiBcImlwaG9uZS02c1wiXG5cdFx0XHRzcGVjcy53aWR0aCA9IDM1OVxuXHRcdHdoZW4gXCJpcGhvbmUtNnMtcGx1c1wiXG5cdFx0XHRzcGVjcy5sZWFkaW5nSWNvbiA9IDE1XG5cdFx0XHRzcGVjcy50b3BJY29uID0gMTJcblx0XHRcdHNwZWNzLnRvcFRpdGxlID0gMTBcblx0XHRcdHNwZWNzLndpZHRoID0gMzk4XG5cdFx0d2hlbiBcImlwYWRcIlxuXHRcdFx0c3BlY3MubGVhZGluZ0ljb24gPSA4XG5cdFx0XHRzcGVjcy50b3BJY29uID0gOFxuXHRcdFx0c3BlY3MudG9wVGl0bGUgPSAxMVxuXHRcdFx0c3BlY3Mud2lkdGggPSAzOThcblx0XHR3aGVuIFwiaXBhZC1wcm9cIlxuXHRcdFx0c3BlY3MubGVhZGluZ0ljb24gPSA4XG5cdFx0XHRzcGVjcy50b3BJY29uID0gOFxuXHRcdFx0c3BlY3MudG9wVGl0bGUgPSA5XG5cdFx0XHRzcGVjcy53aWR0aCA9IDU1NlxuXG5cblx0YmFubmVyID0gbmV3IGlvcy5WaWV3XG5cdFx0YmFja2dyb3VuZENvbG9yOlwicmdiYSgyNTUsMjU1LDI1NSwuNilcIlxuXHRcdG5hbWU6XCJiYW5uZXJcIlxuXHRcdGJvcmRlclJhZGl1czppb3MucHgoMTIpXG5cdFx0c2hhZG93Q29sb3I6XCJyZ2JhKDAsMCwwLC4zKVwiXG5cdFx0c2hhZG93WTppb3MucHgoMilcblx0XHRzaGFkb3dCbHVyOmlvcy5weCgxMClcblx0XHRjbGlwOnRydWVcblx0XHRjb25zdHJhaW50czpcblx0XHRcdGFsaWduOidob3Jpem9udGFsJ1xuXHRcdFx0d2lkdGg6c3BlY3Mud2lkdGhcblx0XHRcdHRvcDo4XG5cdFx0XHRoZWlnaHQ6OTNcblxuXHRiYW5uZXIuaGVhZGVyID0gbmV3IGlvcy5WaWV3XG5cdFx0YmFja2dyb3VuZENvbG9yOlwicmdiYSgyNTUsMjU1LDI1NSwgLjMpXCJcblx0XHRuYW1lOlwiLmhlYWRlclwiXG5cdFx0c3VwZXJMYXllcjpiYW5uZXJcblx0XHRjb25zdHJhaW50czpcblx0XHRcdGhlaWdodDozNlxuXHRcdFx0bGVhZGluZzowXG5cdFx0XHR0cmFpbGluZzowXG5cblx0aWYgc2V0dXAuaWNvbiA9PSB1bmRlZmluZWRcblxuXHRcdGJhbm5lci5pY29uID0gbmV3IGlvcy5WaWV3XG5cdFx0XHRzdXBlckxheWVyOmJhbm5lci5oZWFkZXJcblx0XHRiYW5uZXIuaWNvbi5zdHlsZVtcImJhY2tncm91bmRcIl0gPSBcImxpbmVhci1ncmFkaWVudCgtMTgwZGVnLCAjNjdGRjgxIDAlLCAjMDFCNDFGIDEwMCUpXCJcblxuXHRlbHNlXG5cblx0XHRiYW5uZXIuaGVhZGVyLmFkZFN1YkxheWVyKHNldHVwLmljb24pXG5cdFx0YmFubmVyLmljb24gPSBzZXR1cC5pY29uXG5cblxuXHRiYW5uZXIuaWNvbi5ib3JkZXJSYWRpdXMgPSBpb3MudXRpbHMucHgoNC41KVxuXHRiYW5uZXIuaWNvbi5uYW1lID0gXCIuaWNvblwiXG5cdGJhbm5lci5pY29uLmNvbnN0cmFpbnRzID1cblx0XHRoZWlnaHQ6MjBcblx0XHR3aWR0aDoyMFxuXHRcdGxlYWRpbmc6c3BlY3MubGVhZGluZ0ljb25cblx0XHRhbGlnbjpcInZlcnRpY2FsXCJcblxuXHRpb3MubGF5b3V0LnNldChiYW5uZXIuaWNvbilcblxuXHRiYW5uZXIuYXBwID0gbmV3IGlvcy5UZXh0XG5cdFx0dGV4dDpzZXR1cC5hcHAudG9VcHBlckNhc2UoKVxuXHRcdGNvbG9yOlwicmdiYSgwLDAsMCwuNSlcIlxuXHRcdGZvbnRTaXplOjEzXG5cdFx0bGV0dGVyU3BhY2luZzouNVxuXHRcdHN1cGVyTGF5ZXI6YmFubmVyLmhlYWRlclxuXHRcdGNvbnN0cmFpbnRzOlxuXHRcdFx0bGVhZGluZzpbYmFubmVyLmljb24sIDZdXG5cdFx0XHRhbGlnbjpcInZlcnRpY2FsXCJcblxuXHRiYW5uZXIudGl0bGUgPSBuZXcgaW9zLlRleHRcblx0XHR0ZXh0OnNldHVwLnRpdGxlXG5cdFx0Y29sb3I6XCJibGFja1wiXG5cdFx0Zm9udFdlaWdodDpcInNlbWlib2xkXCJcblx0XHRmb250U2l6ZToxNVxuXHRcdHN1cGVyTGF5ZXI6YmFubmVyXG5cdFx0bmFtZTpcIi50aXRsZVwiXG5cdFx0Y29uc3RyYWludHM6XG5cdFx0XHR0b3A6NDVcblx0XHRcdGxlYWRpbmc6MTVcblxuXHRiYW5uZXIubWVzc2FnZSA9IG5ldyBpb3MuVGV4dFxuXHRcdHRleHQ6c2V0dXAubWVzc2FnZVxuXHRcdGNvbG9yOlwiYmxhY2tcIlxuXHRcdGZvbnRTaXplOjE1XG5cdFx0Zm9udFdlaWdodDpcImxpZ2h0XCJcblx0XHRzdXBlckxheWVyOmJhbm5lclxuXHRcdG5hbWU6XCIubWVzc2FnZVwiXG5cdFx0Y29uc3RyYWludHM6XG5cdFx0XHRsZWFkaW5nRWRnZXM6YmFubmVyLnRpdGxlXG5cdFx0XHR0b3A6W2Jhbm5lci50aXRsZSwgNl1cblxuXHRiYW5uZXIudGltZSA9IG5ldyBpb3MuVGV4dFxuXHRcdHRleHQ6c2V0dXAudGltZVxuXHRcdGNvbG9yOlwicmdiYSgwLDAsMCwuNSlcIlxuXHRcdGZvbnRTaXplOjEzXG5cdFx0c3VwZXJMYXllcjpiYW5uZXIuaGVhZGVyXG5cdFx0bmFtZTpcIi50aW1lXCJcblx0XHRjb25zdHJhaW50czpcblx0XHRcdHRyYWlsaW5nOjE2XG5cdFx0XHRhbGlnbjpcInZlcnRpY2FsXCJcblxuXHRpZiBpb3MuZGV2aWNlLm5hbWUgPT0gXCJpcGFkXCIgfHwgaW9zLmRldmljZS5uYW1lID09IFwiaXBhZC1wcm9cIlxuXHRcdGJhbm5lci50aW1lLmNvbnN0cmFpbnRzID1cblx0XHRcdGJvdHRvbUVkZ2VzOiBiYW5uZXIudGl0bGVcblx0XHRcdHRyYWlsaW5nOiBzcGVjcy5sZWFkaW5nSWNvblxuXG5cblx0aW9zLnV0aWxzLmJnQmx1cihiYW5uZXIpXG5cblx0IyMgQmFubmVyIERyYWcgc2V0dGluZ3Ncblx0YmFubmVyLmRyYWdnYWJsZSA9IHRydWVcblx0YmFubmVyLmRyYWdnYWJsZS5ob3Jpem9udGFsID0gZmFsc2Vcblx0YmFubmVyLmRyYWdnYWJsZS5jb25zdHJhaW50cyA9XG5cdFx0eTppb3MucHgoOClcblx0XHR4Omlvcy5weCg4KVxuXG5cdGJhbm5lci5kcmFnZ2FibGUuYm91bmNlT3B0aW9ucyA9XG5cdCAgICBmcmljdGlvbjogMjVcblx0ICAgIHRlbnNpb246IDI1MFxuXG5cdGJhbm5lci5vbiBFdmVudHMuRHJhZ0VuZCwgLT5cblx0XHRpZiBiYW5uZXIubWF4WSA8IGlvcy51dGlscy5weCg2OClcblx0XHRcdGJhbm5lci5hbmltYXRlXG5cdFx0XHRcdHByb3BlcnRpZXM6KG1heFk6MClcblx0XHRcdFx0dGltZTouMTVcblx0XHRcdFx0Y3VydmU6XCJlYXNlLWluLW91dFwiXG5cdFx0XHRVdGlscy5kZWxheSAuMjUsIC0+XG5cdFx0XHRcdGJhbm5lci5kZXN0cm95KClcblxuXHQjIEFuaW1hdGUtaW5cblx0aWYgc2V0dXAuYW5pbWF0ZWQgPT0gdHJ1ZVxuXHRcdGJhbm5lci55ID0gMCAtIGJhbm5lci5oZWlnaHRcblx0XHRpb3MubGF5b3V0LmFuaW1hdGVcblx0XHRcdHRhcmdldDpiYW5uZXJcblx0XHRcdHRpbWU6LjI1XG5cdFx0XHRjdXJ2ZTonZWFzZS1pbi1vdXQnXG5cdCMgQW5pbWF0ZS1vdXRcblx0aWYgc2V0dXAuZHVyYXRpb25cblx0XHRVdGlscy5kZWxheSBzZXR1cC5kdXJhdGlvbiwgLT5cblx0XHRcdGJhbm5lci5hbmltYXRlXG5cdFx0XHRcdHByb3BlcnRpZXM6KG1heFk6MClcblx0XHRcdFx0dGltZTouMjVcblx0XHRcdFx0Y3VydmU6XCJlYXNlLWluLW91dFwiXG5cdFx0VXRpbHMuZGVsYXkgc2V0dXAuZHVyYXRpb24gKyAuMjUsIC0+XG5cdFx0XHRiYW5uZXIuZGVzdHJveSgpXG5cblx0cmV0dXJuIGJhbm5lclxuIiwiIyBBbGVydFxuaW9zID0gcmVxdWlyZSAnaW9zLWtpdCdcblxuZXhwb3J0cy5kZWZhdWx0cyA9XG5cdHRpdGxlOiBcIlRpdGxlXCJcblx0bWVzc2FnZTpcIlwiXG5cdGFjdGlvbnM6W1wiT0tcIl1cblxuZXhwb3J0cy5kZWZhdWx0cy5wcm9wcyA9IE9iamVjdC5rZXlzKGV4cG9ydHMuZGVmYXVsdHMpXG5cbmV4cG9ydHMuY3JlYXRlID0gKG9iaikgLT5cblx0c2V0dXAgPSBpb3MudXRpbHMuc2V0dXBDb21wb25lbnQob2JqLCBleHBvcnRzLmRlZmF1bHRzKVxuXG5cdGFsZXJ0ID0gbmV3IGlvcy5WaWV3XG5cdFx0YmFja2dyb3VuZENvbG9yOlwidHJhbnNwYXJlbnRcIlxuXHRcdG5hbWU6XCJhbGVydFwiXG5cdFx0Y29uc3RyYWludHM6XG5cdFx0XHRsZWFkaW5nOjBcblx0XHRcdHRyYWlsaW5nOjBcblx0XHRcdHRvcDowXG5cdFx0XHRib3R0b206MFxuXG5cdGFsZXJ0Lm92ZXJsYXkgPSBuZXcgaW9zLlZpZXdcblx0XHRiYWNrZ3JvdW5kQ29sb3I6XCJyZ2JhKDAsMCwwLC4zKVwiXG5cdFx0c3VwZXJMYXllcjphbGVydFxuXHRcdG5hbWU6XCIub3ZlcmxheVwiXG5cdFx0Y29uc3RyYWludHM6XG5cdFx0XHRsZWFkaW5nOjBcblx0XHRcdHRyYWlsaW5nOjBcblx0XHRcdHRvcDowXG5cdFx0XHRib3R0b206MFxuXG5cdGFsZXJ0Lm1vZGFsID0gbmV3IGlvcy5WaWV3XG5cdFx0YmFja2dyb3VuZENvbG9yOlwid2hpdGVcIlxuXHRcdHN1cGVyTGF5ZXI6YWxlcnRcblx0XHRib3JkZXJSYWRpdXM6aW9zLnV0aWxzLnB4KDEwKVxuXHRcdG5hbWU6XCIubW9kYWxcIlxuXHRcdGNvbnN0cmFpbnRzOlxuXHRcdFx0YWxpZ246XCJjZW50ZXJcIlxuXHRcdFx0d2lkdGg6MjgwXG5cdFx0XHRoZWlnaHQ6NDAwXG5cblx0YWxlcnQudGl0bGUgPSBuZXcgaW9zLlRleHRcblx0XHRzdXBlckxheWVyOmFsZXJ0Lm1vZGFsXG5cdFx0dGV4dDpzZXR1cC50aXRsZVxuXHRcdGZvbnRXZWlnaHQ6XCJzZW1pYm9sZFwiXG5cdFx0bmFtZTpcIi50aXRsZVwiXG5cdFx0dGV4dEFsaWduOlwiY2VudGVyXCJcblx0XHRsaW5lSGVpZ2h0OjIwXG5cdFx0Y29uc3RyYWludHM6XG5cdFx0XHR0b3A6MjBcblx0XHRcdHdpZHRoOjIyMFxuXHRcdFx0YWxpZ246XCJob3Jpem9udGFsXCJcblxuXHRhbGVydC5tZXNzYWdlID0gbmV3IGlvcy5UZXh0XG5cdFx0c3VwZXJMYXllcjphbGVydC5tb2RhbFxuXHRcdHRleHQ6c2V0dXAubWVzc2FnZVxuXHRcdGZvbnRTaXplOjEzXG5cdFx0bmFtZTpcIi5tZXNzYWdlXCJcblx0XHR0ZXh0QWxpZ246XCJjZW50ZXJcIlxuXHRcdGxpbmVIZWlnaHQ6MTZcblx0XHRjb25zdHJhaW50czpcblx0XHRcdHRvcDogW2FsZXJ0LnRpdGxlLCAxMF1cblx0XHRcdGFsaWduOlwiaG9yaXpvbnRhbFwiXG5cdFx0XHR3aWR0aDogMjIwXG5cblx0aWYgc2V0dXAubWVzc2FnZS5sZW5ndGggPT0gMFxuXHRcdGFsZXJ0Lm1lc3NhZ2UuaGVpZ2h0ID0gLTI0XG5cblxuXHRhbGVydC5ob3JpRGl2aWRlciA9IG5ldyBpb3MuVmlld1xuXHRcdHN1cGVyTGF5ZXI6YWxlcnQubW9kYWxcblx0XHRiYWNrZ3JvdW5kQ29sb3I6XCIjRTJFOEVCXCJcblx0XHRuYW1lOlwiLmhvcmlEaXZpZGVyXCJcblx0XHRjb25zdHJhaW50czpcblx0XHRcdGxlYWRpbmc6MFxuXHRcdFx0dHJhaWxpbmc6MFxuXHRcdFx0aGVpZ2h0OjFcblx0XHRcdGJvdHRvbTo0NFxuXG5cdGNsZWFuTmFtZSA9IChuKSAtPlxuXHRcdGlmIG5bMF0gPT0gXCItXCJcblx0XHRcdHJldHVybiBuLnNsaWNlKDkpXG5cdFx0ZWxzZVxuXHRcdFx0cmV0dXJuIG5cblx0I1RpdGxlICsgTWVzc2FnZSArIDEgc2V0IG9mIGFjdGlvbnNcblx0YWxlcnQubW9kYWwuY29uc3RyYWludHNbXCJoZWlnaHRcIl0gPSAyMCArIGlvcy51dGlscy5wdChhbGVydC50aXRsZS5oZWlnaHQpICsgMTAgKyBpb3MudXRpbHMucHQoYWxlcnQubWVzc2FnZS5oZWlnaHQpICsgMjQgKyA0NFxuXG5cdGFjdGlvbnMgPSBbXVxuXHRzd2l0Y2ggc2V0dXAuYWN0aW9ucy5sZW5ndGhcblx0XHR3aGVuIDFcblxuXHRcdFx0YWN0TGFiZWwgPSBpb3MudXRpbHMuY2FwaXRhbGl6ZShzZXR1cC5hY3Rpb25zWzBdKVxuXG5cdFx0XHRhY3Rpb24gPSBuZXcgaW9zLlZpZXdcblx0XHRcdFx0c3VwZXJMYXllcjphbGVydC5tb2RhbFxuXHRcdFx0XHRiYWNrZ3JvdW5kQ29sb3I6XCJ3aGl0ZVwiXG5cdFx0XHRcdG5hbWU6Y2xlYW5OYW1lKHNldHVwLmFjdGlvbnNbMF0pXG5cdFx0XHRcdGJvcmRlclJhZGl1czppb3MudXRpbHMucHgoMTApXG5cdFx0XHRcdGNvbnN0cmFpbnRzOlxuXHRcdFx0XHRcdGxlYWRpbmc6MFxuXHRcdFx0XHRcdHRyYWlsaW5nOjBcblx0XHRcdFx0XHRib3R0b206MFxuXHRcdFx0XHRcdGhlaWdodDo0NFxuXG5cdFx0XHRhY3Rpb24ubGFiZWwgPSBuZXcgaW9zLlRleHRcblx0XHRcdFx0Y29sb3I6aW9zLnV0aWxzLmNvbG9yKFwiYmx1ZVwiKVxuXHRcdFx0XHRzdXBlckxheWVyOmFjdGlvblxuXHRcdFx0XHR0ZXh0OmFjdExhYmVsXG5cdFx0XHRcdG5hbWU6XCJsYWJlbFwiXG5cdFx0XHRcdGNvbnN0cmFpbnRzOlxuXHRcdFx0XHRcdGFsaWduOlwiaG9yaXpvbnRhbFwiXG5cdFx0XHRcdFx0Ym90dG9tOjE2XG5cblx0XHRcdGFjdGlvbnMucHVzaCBhY3Rpb25cblxuXHRcdHdoZW4gMlxuXG5cdFx0XHRhY3RMYWJlbCA9IGlvcy51dGlscy5jYXBpdGFsaXplKHNldHVwLmFjdGlvbnNbMF0pXG5cblx0XHRcdGFjdGlvbiA9IG5ldyBpb3MuVmlld1xuXHRcdFx0XHRzdXBlckxheWVyOmFsZXJ0Lm1vZGFsXG5cdFx0XHRcdG5hbWU6Y2xlYW5OYW1lKHNldHVwLmFjdGlvbnNbMF0pXG5cdFx0XHRcdGJvcmRlclJhZGl1czppb3MudXRpbHMucHgoMTApXG5cdFx0XHRcdGJhY2tncm91bmRDb2xvcjpcIndoaXRlXCJcblx0XHRcdFx0Y29uc3RyYWludHM6XG5cdFx0XHRcdFx0bGVhZGluZzowXG5cdFx0XHRcdFx0dHJhaWxpbmc6aW9zLnV0aWxzLnB0KGFsZXJ0Lm1vZGFsLndpZHRoLzIpXG5cdFx0XHRcdFx0Ym90dG9tOjBcblx0XHRcdFx0XHRoZWlnaHQ6NDRcblxuXHRcdFx0YWN0aW9uLmxhYmVsID0gbmV3IGlvcy5UZXh0XG5cdFx0XHRcdGNvbG9yOmlvcy51dGlscy5jb2xvcihcImJsdWVcIilcblx0XHRcdFx0c3VwZXJMYXllcjphY3Rpb25cblx0XHRcdFx0dGV4dDphY3RMYWJlbFxuXHRcdFx0XHRuYW1lOlwibGFiZWxcIlxuXHRcdFx0XHRjb25zdHJhaW50czpcblx0XHRcdFx0XHRhbGlnbjpcImhvcml6b250YWxcIlxuXHRcdFx0XHRcdGJvdHRvbToxNlxuXG5cdFx0XHRhY3Rpb25zLnB1c2ggYWN0aW9uXG5cblx0XHRcdGFsZXJ0LnZlcnREaXZpZGVyID0gbmV3IGlvcy5WaWV3XG5cdFx0XHRcdHN1cGVyTGF5ZXI6YWxlcnQubW9kYWxcblx0XHRcdFx0YmFja2dyb3VuZENvbG9yOlwiI0UyRThFQlwiXG5cdFx0XHRcdG5hbWU6XCIudmVydERpdmlkZXJcIlxuXHRcdFx0XHRjb25zdHJhaW50czpcblx0XHRcdFx0XHR3aWR0aDoxXG5cdFx0XHRcdFx0Ym90dG9tOjBcblx0XHRcdFx0XHRoZWlnaHQ6NDRcblx0XHRcdFx0XHRhbGlnbjpcImhvcml6b250YWxcIlxuXG5cdFx0XHRhY3RMYWJlbDIgPSBpb3MudXRpbHMuY2FwaXRhbGl6ZShzZXR1cC5hY3Rpb25zWzFdKVxuXG5cdFx0XHRhY3Rpb24yID0gbmV3IGlvcy5WaWV3XG5cdFx0XHRcdHN1cGVyTGF5ZXI6YWxlcnQubW9kYWxcblx0XHRcdFx0bmFtZTpjbGVhbk5hbWUoc2V0dXAuYWN0aW9uc1sxXSlcblx0XHRcdFx0Ym9yZGVyUmFkaXVzOmlvcy51dGlscy5weCgxMClcblx0XHRcdFx0YmFja2dyb3VuZENvbG9yOlwid2hpdGVcIlxuXHRcdFx0XHRjb25zdHJhaW50czpcblx0XHRcdFx0XHRsZWFkaW5nOmlvcy51dGlscy5wdChhbGVydC5tb2RhbC53aWR0aC8yKVxuXHRcdFx0XHRcdHRyYWlsaW5nOjBcblx0XHRcdFx0XHRib3R0b206MFxuXHRcdFx0XHRcdGhlaWdodDo0NFxuXG5cdFx0XHRhY3Rpb24yLmxhYmVsID0gbmV3IGlvcy5UZXh0XG5cdFx0XHRcdGNvbG9yOmlvcy51dGlscy5jb2xvcihcImJsdWVcIilcblx0XHRcdFx0c3VwZXJMYXllcjphY3Rpb24yXG5cdFx0XHRcdHRleHQ6YWN0TGFiZWwyXG5cdFx0XHRcdG5hbWU6XCJsYWJlbFwiXG5cdFx0XHRcdGNvbnN0cmFpbnRzOlxuXHRcdFx0XHRcdGFsaWduOlwiaG9yaXpvbnRhbFwiXG5cdFx0XHRcdFx0Ym90dG9tOjE2XG5cblx0XHRcdGFjdGlvbnMucHVzaCBhY3Rpb24yXG5cblx0XHRlbHNlXG5cdFx0XHRmb3IgYWN0LCBpbmRleCBpbiBzZXR1cC5hY3Rpb25zXG5cblx0XHRcdFx0YWN0TGFiZWwgPSBpb3MudXRpbHMuY2FwaXRhbGl6ZShhY3QpXG5cblx0XHRcdFx0YWN0aW9uID0gbmV3IGlvcy5WaWV3XG5cdFx0XHRcdFx0c3VwZXJMYXllcjphbGVydC5tb2RhbFxuXHRcdFx0XHRcdG5hbWU6Y2xlYW5OYW1lKGFjdClcblx0XHRcdFx0XHRib3JkZXJSYWRpdXM6aW9zLnV0aWxzLnB4KDEwKVxuXHRcdFx0XHRcdGJhY2tncm91bmRDb2xvcjpcIndoaXRlXCJcblx0XHRcdFx0XHRjb25zdHJhaW50czpcblx0XHRcdFx0XHRcdGxlYWRpbmc6MFxuXHRcdFx0XHRcdFx0dHJhaWxpbmc6MFxuXHRcdFx0XHRcdFx0Ym90dG9tOjAgKyAoKHNldHVwLmFjdGlvbnMubGVuZ3RoIC0gaW5kZXggLSAxKSAqIDQ0KVxuXHRcdFx0XHRcdFx0aGVpZ2h0OjQ0XG5cblx0XHRcdFx0YWN0aW9uRGl2aWRlciA9IG5ldyBpb3MuVmlld1xuXHRcdFx0XHRcdHN1cGVyTGF5ZXI6YWxlcnQubW9kYWxcblx0XHRcdFx0XHRiYWNrZ3JvdW5kQ29sb3I6XCIjRTJFOEVCXCJcblx0XHRcdFx0XHRuYW1lOlwiYWN0aW9uIGRpdmlkZXJcIlxuXHRcdFx0XHRcdGNvbnN0cmFpbnRzOlxuXHRcdFx0XHRcdFx0bGVhZGluZzowXG5cdFx0XHRcdFx0XHR0cmFpbGluZzowXG5cdFx0XHRcdFx0XHRoZWlnaHQ6MVxuXHRcdFx0XHRcdFx0Ym90dG9tOjAgKyAoKHNldHVwLmFjdGlvbnMubGVuZ3RoIC0gaW5kZXgpICogNDQpXG5cblx0XHRcdFx0YWN0aW9uLmxhYmVsID0gbmV3IGlvcy5UZXh0XG5cdFx0XHRcdFx0c3R5bGU6XCJhbGVydEFjdGlvblwiXG5cdFx0XHRcdFx0Y29sb3I6aW9zLnV0aWxzLmNvbG9yKFwiYmx1ZVwiKVxuXHRcdFx0XHRcdHN1cGVyTGF5ZXI6YWN0aW9uXG5cdFx0XHRcdFx0dGV4dDphY3RMYWJlbFxuXHRcdFx0XHRcdG5hbWU6XCJsYWJlbFwiXG5cdFx0XHRcdFx0Y29uc3RyYWludHM6XG5cdFx0XHRcdFx0XHRhbGlnbjpcImhvcml6b250YWxcIlxuXHRcdFx0XHRcdFx0Ym90dG9tOjE0XG5cblxuXHRcdFx0XHRhY3Rpb25zLnB1c2ggYWN0aW9uXG5cdFx0XHRcdGFsZXJ0Lm1vZGFsLmNvbnN0cmFpbnRzW1wiaGVpZ2h0XCJdID0gYWxlcnQubW9kYWwuY29uc3RyYWludHNbXCJoZWlnaHRcIl0gKyA0MiAtIDEyXG5cblx0YWxlcnQuYWN0aW9ucyA9IHt9XG5cdGZvciBhY3QsaW5kZXggaW4gYWN0aW9uc1xuXG5cdFx0I0hhbmRsZSBzcGVjaWFsIGNoYXJhY3RlcnNcblx0XHRhY3QudHlwZSA9IFwiYnV0dG9uXCJcblx0XHRpb3MudXRpbHMuc3BlY2lhbENoYXIoYWN0KVxuXG5cdFx0aWYgc2V0dXAuYWN0aW9uc1tpbmRleF0uaW5kZXhPZihcIi1yXCIpID09IDBcblx0XHRcdGFjdC5vcmlnQ29sb3IgPSBpb3MudXRpbHMuY29sb3IoXCJyZWRcIilcblx0XHRlbHNlXG5cdFx0XHRhY3Qub3JpZ0NvbG9yID0gaW9zLnV0aWxzLmNvbG9yKFwiYmx1ZVwiKVxuXHRcdGlvcy5sYXlvdXQuc2V0KGFjdC5sYWJlbClcblx0XHQjQWRkIFRvdWNoIEV2ZW50c1xuXHRcdGFjdC5vbiBFdmVudHMuVG91Y2hTdGFydCwgLT5cblx0XHRcdEAuYmFja2dyb3VuZENvbG9yID0gXCJ3aGl0ZVwiXG5cdFx0XHRALmFuaW1hdGVcblx0XHRcdFx0cHJvcGVydGllczooYmFja2dyb3VuZENvbG9yOmFjdC5iYWNrZ3JvdW5kQ29sb3IuZGFya2VuKDUpKVxuXHRcdFx0XHR0aW1lOi4yNVxuXHRcdFx0QC5sYWJlbC5hbmltYXRlXG5cdFx0XHRcdHByb3BlcnRpZXM6KGNvbG9yOkAub3JpZ0NvbG9yLmxpZ2h0ZW4oMTApKVxuXHRcdFx0XHR0aW1lOi4yNVxuXG5cdFx0YWN0Lm9uIEV2ZW50cy5Ub3VjaEVuZCwgLT5cblx0XHRcdEAuYW5pbWF0ZVxuXHRcdFx0XHRwcm9wZXJ0aWVzOihiYWNrZ3JvdW5kQ29sb3I6XCJ3aGl0ZVwiKVxuXHRcdFx0XHR0aW1lOi4yNVxuXHRcdFx0QC5sYWJlbC5hbmltYXRlXG5cdFx0XHRcdHByb3BlcnRpZXM6KGNvbG9yOkAub3JpZ0NvbG9yKVxuXHRcdFx0XHR0aW1lOi4yNVxuXHRcdFx0YWxlcnQuZGVzdHJveSgpXG5cblx0XHQjIEV4cG9ydCBhY3Rpb25zXG5cdFx0YWxlcnQuYWN0aW9uc1thY3QubmFtZV0gPSBhY3RcblxuXHRpb3MubGF5b3V0LnNldChhY3Rpb25zW2FjdGlvbnMubGVuZ3RoIC0gMV0pXG5cdHJldHVybiBhbGVydFxuIiwiIyMjXG5cdHRhYkJhck1vZHVsZVxuXHTigJNcblx0Q3JlYXRlZCBieSBQZXR0ZXIgTmlsc3NvblxuXHRodHRwOi8vcGV0dGVyLnByb1xuIyMjXG5cbiMgRGVmYXVsdCBzdHlsZXNcbmRlZmF1bHRzID0ge1xuXHRzY3JlZW5XaWR0aDogU2NyZWVuLndpZHRoXG5cdHNjcmVlbkhlaWdodDogU2NyZWVuLmhlaWdodFxuXHRiYXJIZWlnaHQ6IDk4XG5cdGxhYmVsT2Zmc2V0OiAtMjhcblx0aWNvbk9mZnNldDogLTEyXG5cdHRpbnRDb2xvcjogXCIjMDA3YWZmXCJcblx0dGludENvbG9yVW5zZWxlY3RlZDogXCIjOTI5MjkyXCJcblx0Ymx1cjogNDBcblx0b3BhY2l0eTogMC43NVxuXHRib3JkZXJTaGFkb3c6IFwiMHB4IC0xcHggMHB4IDBweCByZ2JhKDAsMCwwLDAuMzIpXCJcblx0YmFja2dyb3VuZENvbG9yOiBcIiNmOGY4ZjhcIlxuXHRzaG93TGFiZWxzOiB0cnVlXG5cdGJhZGdlU2l6ZTogMzZcblx0YmFkZ2VDb2xvcjogXCIjRkYzQjMwXCJcbn1cbmRlZmF1bHRzLmxhYmVsVGV4dFN0eWxlID0ge1xuXHRmb250U2l6ZTogXCIyMHB4XCJcblx0dGV4dEFsaWduOiBcImNlbnRlclwiXG5cdGZvbnRGYW1pbHk6IFwiSGVsdmV0aWNhIE5ldWUnLCBzYW5zLXNlcmlmXCJcbn1cbmRlZmF1bHRzLmJhZGdlVGV4dFN0eWxlID0ge1xuXHRmb250U2l6ZTogXCIyNnB4XCJcblx0bGluZUhlaWdodDogXCIzNnB4XCJcblx0Y29sb3I6IFwiI2ZmZlwiXG5cdHRleHRBbGlnbjogXCJjZW50ZXJcIlxuXHRmb250RmFtaWx5OiBcIkhlbHZldGljYSBOZXVlJywgc2Fucy1zZXJpZlwiXG59XG5leHBvcnRzLmRlZmF1bHRzID0gZGVmYXVsdHNcblxuXG5nZXRJdGVtRnJvbU5hbWUgPSAobmFtZSkgLT5cblx0IyBSZXR1cm5zIGEgdGFiIGJhciBpdGVtIGlmIG5hbWVzIG1hdGNoZXNcblxuXHRmb3IgaXRlbSBpbiBAaXRlbXNcblx0XHRyZXR1cm4gaXRlbSBpZiBpdGVtLm5hbWUgaXMgbmFtZVxuXG5cbnVwZGF0ZVZpZXdzID0gKHNlbGVjdGVkSXRlbSkgLT5cblx0IyBTaG93cy9oaWRlcyB2aWV3cyBiYXNlZCBvbiBzZWxlY3RlZCB0YWIgYmFyIGl0ZW1cblxuXHRmb3IgaXRlbSBpbiBAaXRlbXNcblx0XHRpZiBpdGVtLnZpZXc/XG5cdFx0XHRpZiBpdGVtLnZpZXcgaXMgc2VsZWN0ZWRJdGVtLnZpZXcgdGhlbiBpdGVtLnZpZXcudmlzaWJsZSA9IHRydWUgZWxzZSBpdGVtLnZpZXcudmlzaWJsZSA9IGZhbHNlXG5cdFx0XHRpZiBpdGVtLmJsdXJWaWV3IGlzIHNlbGVjdGVkSXRlbS5ibHVyVmlldyB0aGVuIGl0ZW0uYmx1clZpZXcudmlzaWJsZSA9IHRydWUgZWxzZSBpdGVtLmJsdXJWaWV3LnZpc2libGUgPSBmYWxzZVxuXG5cbnNldFNlbGVjdGVkID0gKG5hbWUpIC0+XG5cdCMgU2V0cyBzZWxlY3RlZCB0YWIgaXRlbSBmcm9tIHRoZSBrZXkgKG5hbWUpIHVzZWQgd2hlbiBjcmVhdGluZyBpdFxuXG5cdGlmIG5hbWUgIT0gQHNlbGVjdGVkXG5cdFx0Zm9yIGl0ZW0gaW4gQGl0ZW1zXG5cdFx0XHRpZiBpdGVtLm5hbWUgaXMgbmFtZVxuXHRcdFx0XHRpdGVtLmljb25MYXllci5iYWNrZ3JvdW5kQ29sb3IgPSBkZWZhdWx0cy50aW50Q29sb3Jcblx0XHRcdFx0aXRlbS5sYWJlbExheWVyLnN0eWxlID0gXCJjb2xvclwiOiBkZWZhdWx0cy50aW50Q29sb3IgaWYgaXRlbS5sYWJlbExheWVyXG5cdFx0XHRcdGl0ZW0uaWNvbkxheWVyLmltYWdlID0gaXRlbS5pY29uTGF5ZXIuc2VsZWN0ZWRJY29uIGlmIGl0ZW0uaWNvbkxheWVyLnNlbGVjdGVkSWNvblxuXHRcdFx0XHRAc2VsZWN0ZWQgPSBpdGVtLm5hbWVcblx0XHRcdFx0QHVwZGF0ZVZpZXdzKGl0ZW0pXG5cdFx0XHRcdEAuZW1pdChcInRhYkJhckRpZFN3aXRjaFwiLCBpdGVtLm5hbWUpXG5cdFx0XHRlbHNlXG5cdFx0XHRcdGl0ZW0uaWNvbkxheWVyLmJhY2tncm91bmRDb2xvciA9IGRlZmF1bHRzLnRpbnRDb2xvclVuc2VsZWN0ZWRcblx0XHRcdFx0aXRlbS5sYWJlbExheWVyLnN0eWxlID0gXCJjb2xvclwiOiBkZWZhdWx0cy50aW50Q29sb3JVbnNlbGVjdGVkIGlmIGl0ZW0ubGFiZWxMYXllclxuXHRcdFx0XHRpdGVtLmljb25MYXllci5pbWFnZSA9IGl0ZW0uaWNvbkxheWVyLmljb24gaWYgaXRlbS5pY29uTGF5ZXIuc2VsZWN0ZWRJY29uXG5cblxuc2V0QmFkZ2VWYWx1ZSA9IChuYW1lLCB2YWx1ZSkgLT5cblx0IyBBZGRzIGEgYmFkZ2UgdG8gdGhlIHRhYiBpdGVtIGlmIHZhbHVlIGlzIGEgbnVtYmVyID4gMCBhbmQgcmVtb3ZlcyB0aGUgYmFkZ2UgaWYgbnVsbFxuXG5cdGZvciBpdGVtIGluIEBpdGVtc1xuXHRcdGlmIGl0ZW0ubmFtZSBpcyBuYW1lXG5cdFx0XHRpZiB2YWx1ZVxuXHRcdFx0XHRpdGVtLmJhZGdlTGF5ZXIuaHRtbCA9IHZhbHVlXG5cdFx0XHRcdGl0ZW0uYmFkZ2VMYXllci52aXNpYmxlID0gdHJ1ZVxuXHRcdFx0ZWxzZVxuXHRcdFx0XHRpdGVtLmJhZGdlTGF5ZXIudmlzaWJsZSA9IGZhbHNlXG5cblxuZXhwb3J0cy50YWJCYXIgPSAoYmFySXRlbXMpIC0+XG5cdCMgQ3JlYXRlcyBhbmQgc2V0LXVwcyB0aGUgdGFiIGJhclxuXG5cdHRhYkJhciA9IG5ldyBMYXllclxuXHRcdHg6IDBcblx0XHR5OiBkZWZhdWx0cy5zY3JlZW5IZWlnaHQgLSBkZWZhdWx0cy5iYXJIZWlnaHRcblx0XHR3aWR0aDogZGVmYXVsdHMuc2NyZWVuV2lkdGhcblx0XHRoZWlnaHQ6IGRlZmF1bHRzLmJhckhlaWdodFxuXHRcdGJhY2tncm91bmRDb2xvcjogZGVmYXVsdHMuYmFja2dyb3VuZENvbG9yXG5cdFx0bGFiZWw6IFwidGFiQmFyXCJcblxuXHR0YWJCYXIuc3R5bGUgPSBcImJveC1zaGFkb3dcIjogZGVmYXVsdHMuYm9yZGVyU2hhZG93XG5cdHRhYkJhci5nZXRJdGVtRnJvbU5hbWUgPSBnZXRJdGVtRnJvbU5hbWVcblx0dGFiQmFyLnVwZGF0ZVZpZXdzID0gdXBkYXRlVmlld3Ncblx0dGFiQmFyLnNldFNlbGVjdGVkID0gc2V0U2VsZWN0ZWRcblx0dGFiQmFyLnNldEJhZGdlVmFsdWUgPSBzZXRCYWRnZVZhbHVlXG5cdHRhYkJhci5zZWxlY3RlZCA9IG51bGxcblx0dGFiQmFyLml0ZW1zID0gW11cblxuXHRiYWNrZ3JvdW5kID0gbmV3IExheWVyXG5cdFx0eDogMFxuXHRcdHk6IDBcblx0XHR3aWR0aDogZGVmYXVsdHMuc2NyZWVuV2lkdGhcblx0XHRoZWlnaHQ6IGRlZmF1bHRzLmJhckhlaWdodFxuXHRcdGJhY2tncm91bmRDb2xvcjogZGVmYXVsdHMuYmFja2dyb3VuZENvbG9yXG5cdFx0b3BhY2l0eTogZGVmYXVsdHMub3BhY2l0eVxuXHRcdHN1cGVyTGF5ZXI6IHRhYkJhclxuXG5cdGl0ZW1Db3VudCA9IE9iamVjdC5rZXlzKGJhckl0ZW1zKS5sZW5ndGhcblx0aSA9IDBcblxuXHRmb3IgbmFtZSwgcGFyYW1zIG9mIGJhckl0ZW1zXG5cdFx0aXRlbUxheWVyID0gbmV3IExheWVyXG5cdFx0XHRiYWNrZ3JvdW5kQ29sb3I6IFwibm9uZVwiXG5cdFx0XHR3aWR0aDogZGVmYXVsdHMuc2NyZWVuV2lkdGggLyBpdGVtQ291bnRcblx0XHRcdGhlaWdodDogZGVmYXVsdHMuYmFySGVpZ2h0XG5cdFx0XHR4OiBpICogKGRlZmF1bHRzLnNjcmVlbldpZHRoIC8gaXRlbUNvdW50KVxuXHRcdFx0eTogMFxuXHRcdFx0c3VwZXJMYXllcjogdGFiQmFyXG5cdFx0XHRuYW1lOiBuYW1lXG5cblx0XHRpZiBwYXJhbXMudmlldz9cblx0XHRcdCMgQ3JlYXRlIGEgY29weSBvZiB0aGUgdmlldywgYmx1ciBpdCBhbmQgdXNlIGl0IGFzIGEgYmFja2dyb3VuZFxuXHRcdFx0Ymx1clZpZXcgPSBwYXJhbXMudmlldy5jb3B5KClcblx0XHRcdGlmIFNjcm9sbENvbXBvbmVudC5wcm90b3R5cGUuaXNQcm90b3R5cGVPZihibHVyVmlldylcblx0XHRcdFx0Ymx1clZpZXcuY29udGVudC5ibHVyID0gZGVmYXVsdHMuYmx1clxuXHRcdFx0ZWxzZVxuXHRcdFx0XHRibHVyVmlldy5ibHVyID0gZGVmYXVsdHMuYmx1clxuXHRcdFx0Ymx1clZpZXcuc3VwZXJMYXllciA9IHRhYkJhclxuXHRcdFx0Ymx1clZpZXcuaW5kZXggPSAwXG5cdFx0XHRibHVyVmlldy55ID0gYmx1clZpZXcueSAtIChkZWZhdWx0cy5zY3JlZW5IZWlnaHQgLSBkZWZhdWx0cy5iYXJIZWlnaHQpXG5cblx0XHRcdGl0ZW1MYXllci52aWV3ID0gcGFyYW1zLnZpZXdcblx0XHRcdGl0ZW1MYXllci5ibHVyVmlldyA9IGJsdXJWaWV3XG5cblx0XHRpY29uTGF5ZXIgPSBuZXcgTGF5ZXJcblx0XHRcdHdpZHRoOiA2MFxuXHRcdFx0aGVpZ2h0OiA2MFxuXHRcdFx0c3VwZXJMYXllcjogaXRlbUxheWVyXG5cdFx0aWNvbkxheWVyLmljb24gPSBwYXJhbXMuaWNvblxuXHRcdGljb25MYXllci5zZWxlY3RlZEljb24gPSBwYXJhbXMuc2VsZWN0ZWRJY29uIGlmIHBhcmFtcy5zZWxlY3RlZEljb24/XG5cblx0XHQjIFRoaXMgYmxhY2sgbWFnaWMgaXMgdXNlZCB0byB0aW50IHRoZSBQTkcgaW1hZ2VzLiBPbmx5IHdvcmtzIG9uIHdlYmtpdCBicm93c2VycyA6L1xuXHRcdGljb25MYXllci5zdHlsZSA9XG5cdFx0XHRcIi13ZWJraXQtbWFzay1pbWFnZVwiOiBcInVybChcIiArIGljb25MYXllci5pY29uICsgXCIpXCJcblx0XHRcdFwiLXdlYmtpdC1tYXNrLXJlcGVhdFwiOiBcIm5vLXJlcGVhdFwiXG5cdFx0XHRcIi13ZWJraXQtbWFzay1wb3NpdGlvblwiOiBcImNlbnRlciBjZW50ZXJcIlxuXHRcdGljb25MYXllci5jZW50ZXJYKClcblx0XHRpY29uTGF5ZXIuY2VudGVyWShkZWZhdWx0cy5pY29uT2Zmc2V0KVxuXHRcdGl0ZW1MYXllci5pY29uTGF5ZXIgPSBpY29uTGF5ZXJcblxuXHRcdGlmIGRlZmF1bHRzLnNob3dMYWJlbHNcblx0XHRcdGxhYmVsTGF5ZXIgPSBuZXcgTGF5ZXJcblx0XHRcdFx0d2lkdGg6IGl0ZW1MYXllci53aWR0aFxuXHRcdFx0XHR4OiAwXG5cdFx0XHRcdHk6IGRlZmF1bHRzLmJhckhlaWdodCArIGRlZmF1bHRzLmxhYmVsT2Zmc2V0XG5cdFx0XHRcdHN1cGVyTGF5ZXI6IGl0ZW1MYXllclxuXHRcdFx0XHRiYWNrZ3JvdW5kQ29sb3I6IFwibm9uZVwiXG5cdFx0XHRsYWJlbExheWVyLmh0bWwgPSBuYW1lXG5cdFx0XHRsYWJlbExheWVyLnN0eWxlID0gZGVmYXVsdHMubGFiZWxUZXh0U3R5bGVcblx0XHRcdGl0ZW1MYXllci5sYWJlbExheWVyID0gbGFiZWxMYXllclxuXG5cdFx0YmFkZ2VMYXllciA9IG5ldyBMYXllclxuXHRcdFx0d2lkdGg6IGRlZmF1bHRzLmJhZGdlU2l6ZVxuXHRcdFx0aGVpZ2h0OiBkZWZhdWx0cy5iYWRnZVNpemVcblx0XHRcdHg6IDBcblx0XHRcdHk6IDZcblx0XHRcdGJvcmRlclJhZGl1czogMThcblx0XHRcdHN1cGVyTGF5ZXI6IGl0ZW1MYXllclxuXHRcdFx0YmFja2dyb3VuZENvbG9yOiBkZWZhdWx0cy5iYWRnZUNvbG9yXG5cdFx0YmFkZ2VMYXllci5zdHlsZSA9IGRlZmF1bHRzLmJhZGdlVGV4dFN0eWxlXG5cdFx0YmFkZ2VMYXllci5jZW50ZXJYKDI2KVxuXG5cdFx0aXRlbUxheWVyLmJhZGdlTGF5ZXIgPSBiYWRnZUxheWVyXG5cdFx0aXRlbUxheWVyLmJhZGdlTGF5ZXIudmlzaWJsZSA9IGZhbHNlXG5cblx0XHR0YWJCYXIuaXRlbXMucHVzaChpdGVtTGF5ZXIpXG5cblx0XHRpdGVtTGF5ZXIub24gRXZlbnRzLkNsaWNrLCAtPlxuXHRcdFx0dGFiQmFyLnNldFNlbGVjdGVkKEBuYW1lKVxuXG5cdFx0aSsrXG5cblx0IyBTZWxlY3QgdGhlIGZpcnN0IGl0ZW0gaW4gdGhlIHRhYiBiYXJcblx0dGFiQmFyLnNldFNlbGVjdGVkKHRhYkJhci5pdGVtc1swXS5uYW1lKVxuXG5cdHJldHVybiB0YWJCYXJcbiIsIiMjI1xuXHQjIFVTSU5HIFNUQVRVU0JBUkxBWUVSXG5cblx0IyBSZXF1aXJlIHRoZSBtb2R1bGVcblx0U3RhdHVzQmFyTGF5ZXIgPSByZXF1aXJlIFwiU3RhdHVzQmFyTGF5ZXJcIlxuXG5cdG15U3RhdHVzQmFyID0gbmV3IFN0YXR1c0JhckxheWVyXG5cdFx0IyBpT1MgdmVyc2lvblxuXHRcdHZlcnNpb246IDxudW1iZXI+ICgxMCB8fCAxMSlcblxuXHRcdCMgVGV4dFxuXHRcdGNhcnJpZXI6IDxzdHJpbmc+XG5cdFx0dGltZTogPHN0cmluZz4gIyBpZiBub3Qgc2V0LCB3aWxsIHVzZSBsb2NhbCB0aW1lXG5cdFx0cGVyY2VudDogPG51bWJlcj5cblxuXHRcdCMgU2hvdyBvciBoaWRlIHN0YXR1cyBpdGVtc1xuXHRcdHNpZ25hbDogPGJvb2xlYW4+XG5cdFx0d2lmaTogPGJvb2xlYW4+XG5cdFx0cG93ZXJlZDogPGJvb2xlYW4+XG5cdFx0c2hvd1BlcmNlbnRhZ2U6IDxib29sZWFuPlxuXHRcdGlwb2Q6IDxib29sZWFuPiAjIGFsc28gYWZmZWN0cyBzaWduYWwgYW5kIGNhcnJpZXJcblxuXHRcdCMgQ29sb3JzXG5cdFx0c3R5bGU6IDxzdHJpbmc+IChcImxpZ2h0XCIgfHwgXCJkYXJrXCIpXG5cdFx0Zm9yZWdyb3VuZENvbG9yOiA8c3RyaW5nPiAoaGV4IG9yIHJnYmEpXG5cdFx0YmFja2dyb3VuZENvbG9yOiA8c3RyaW5nPiAoaGV4IG9yIHJnYmEpXG5cdFx0dmlicmFudDogPGJvb2xlYW4+XG5cblx0XHQjIEJlaGF2aW9yXG5cdFx0aGlkZTogPGJvb2xlYW4+ICMgaW5pdGlhbCB2aXNpYmlsaXR5XG5cdFx0YXV0b0hpZGU6IDxib29sZWFuPiAjIGhpZGUgaW4gbGFuZHNjYXBlIHdoZXJlIGRldmljZS1hcHByb3ByaWF0ZVxuXG5cdFx0IyBTaW11bGF0ZSBjYWxsXG5cdFx0bXlTdGF0dXNCYXIuc3RhcnRDYWxsKG1lc3NhZ2UsIGNvbG9yKSAjIDxzdHJpbmc+LCA8c3RyaW5nPiAoaGV4IG9yIHJnYmEpXG5cdFx0bXlTdGF0dXNCYXIuZW5kQ2FsbCgpXG5cblx0XHQjIENoZWNrIHZpc2liaWxpdHkgYW5kIGNhbGwgc3RhdHVzXG5cdFx0cHJpbnQgbXlTdGF0dXNCYXIuaGlkZGVuXG5cdFx0cHJpbnQgbXlTdGF0dXNCYXIub25DYWxsXG4jIyNcblxuZGVmYXVsdHMgPVxuXHRzdHlsZTogXCJsaWdodFwiXG5cdHBvd2VyZWQ6IGZhbHNlXG5cdGNhcnJpZXI6IFwiQ2FycmllclwiXG5cdGZvcmVncm91bmRDb2xvcjogXCJcIlxuXHRiYWNrZ3JvdW5kQ29sb3I6IFwiXCJcblx0dGltZTogXCJcIlxuXHRwZXJjZW50OiAxMDBcblx0c2hvd1BlcmNlbnRhZ2U6IHRydWVcblx0d2lmaTogdHJ1ZVxuXHRzaWduYWw6IHRydWVcblx0aXBvZDogZmFsc2Vcblx0aGlkZTogZmFsc2Vcblx0YXV0b0hpZGU6IHRydWVcblx0b25DYWxsOiBmYWxzZVxuXHR2aWJyYW50OiBmYWxzZVxuXHR2ZXJzaW9uOiAxMVxuXG4jIGlPUyAxMSB1bmZpbGxlZCBzaWduYWwgYmFyIGlzIDI1JVxuIyBpT1MgMTEgYmF0dGVyeSBzdHJva2UgaXMgMzUlXG5cbmNsYXNzIFN0YXR1c0JhckxheWVyIGV4dGVuZHMgTGF5ZXJcblxuXHRiYXR0ZXJ5R3JlZW4gPSBcIiM0Y2Q5NjRcIlxuXHRvbkNhbGxDb2xvciA9IFwiIzRjZDk2NFwiXG5cblx0Y29uc3RydWN0b3I6IChAb3B0aW9ucz17fSkgLT5cblx0XHRAb3B0aW9ucyA9IF8uYXNzaWduKHt9LCBkZWZhdWx0cywgQG9wdGlvbnMpXG5cblx0XHRmb250V2VpZ2h0ID0gNDAwXG5cdFx0dGltZUZvbnRXZWlnaHQgPSA2MDBcblxuXHRcdGlzaVBob25lUGx1cyA9ICgpIC0+XG5cdFx0XHRpZiBfLmluY2x1ZGVzKEZyYW1lci5EZXZpY2UuZGV2aWNlVHlwZSwgXCJwbHVzXCIpXG5cdFx0XHRcdHJldHVybiB0cnVlXG5cdFx0XHRlbHNlXG5cdFx0XHRcdHJldHVybiBmYWxzZVxuXG5cdFx0c3VwZXIgQG9wdGlvbnNcblxuXHRcdGdldFRvcE1hcmdpbiA9ICgpID0+XG5cdFx0XHRzd2l0Y2ggaXNpUGhvbmVQbHVzKClcblx0XHRcdFx0d2hlbiB0cnVlIHRoZW4gcmV0dXJuIDhcblx0XHRcdFx0ZWxzZSByZXR1cm4gNVxuXG5cdFx0Z2V0T25DYWxsTWFyZ2luID0gKCkgPT5cblx0XHRcdHN3aXRjaCBpc2lQaG9uZVBsdXMoKVxuXHRcdFx0XHR3aGVuIHRydWUgdGhlbiByZXR1cm4gNTNcblx0XHRcdFx0ZWxzZSByZXR1cm4gMzhcblxuXHRcdGdldEJhdHRlcnlNYXJnaW4gPSAoKSA9PlxuXHRcdFx0aWYgQG9wdGlvbnMucG93ZXJlZCA9PSBmYWxzZVxuXHRcdFx0XHRpZiBpc2lQaG9uZVBsdXMoKSBhbmQgQG9wdGlvbnMudmVyc2lvbiA+IDEwXG5cdFx0XHRcdFx0cmV0dXJuIDVcblx0XHRcdFx0ZWxzZVxuXHRcdFx0XHRcdHJldHVybiA1LjVcblx0XHRcdGVsc2Vcblx0XHRcdFx0cmV0dXJuIDIuNVxuXG5cdFx0Z2V0QmF0dGVyeVdpZHRoID0gKCkgPT5cblx0XHRcdGlmIEBvcHRpb25zLnZlcnNpb24gPiAxMCBhbmQgaXNpUGhvbmVQbHVzKClcblx0XHRcdFx0cmV0dXJuIDI2XG5cdFx0XHRlbHNlIGlmIEBvcHRpb25zLnZlcnNpb24gPiAxMFxuXHRcdFx0XHRyZXR1cm4gMjYuNVxuXHRcdFx0ZWxzZVxuXHRcdFx0XHRyZXR1cm4gMjQuNVxuXG5cdFx0Z2V0QmF0dGVyeVNWRyA9ICgpID0+XG5cdFx0XHRzaXplID0gaWYgaXNpUGhvbmVQbHVzKCkgdGhlbiBcImF0M3hcIiBlbHNlIFwiYXQyeFwiXG5cdFx0XHRyZXR1cm4gc3ZnW1wiYmF0dGVyeVwiXVtcInZcIiArIEBvcHRpb25zLnZlcnNpb25dW3NpemVdXG5cblx0XHRnZXRTaWduYWxTVkcgPSAoKSA9PlxuXHRcdFx0c2l6ZSA9IGlmIGlzaVBob25lUGx1cygpIHRoZW4gXCJhdDN4XCIgZWxzZSBcImF0MnhcIlxuXHRcdFx0cmV0dXJuIHN2Z1tcInNpZ25hbFwiXVtcInZcIiArIEBvcHRpb25zLnZlcnNpb25dW3NpemVdXG5cblx0XHRzdGF0dXNCYXJIZWlnaHQgPSAyMFxuXHRcdHRvcE1hcmdpbiA9IGdldFRvcE1hcmdpbigpXG5cdFx0b25DYWxsTWFyZ2luID0gdG9wTWFyZ2luICsgZ2V0T25DYWxsTWFyZ2luKClcblx0XHRjYXJyaWVyTWFyZ2luID0gaWYgaXNpUGhvbmVQbHVzKCkgdGhlbiAyIGVsc2UgNC41XG5cdFx0c2lnbmFsTWFyZ2luID0gaWYgaXNpUGhvbmVQbHVzKCkgdGhlbiA2IGVsc2UgNi41XG5cdFx0d2lmaU1hcmdpbiA9IGlmIGlzaVBob25lUGx1cygpIHRoZW4gLTQgZWxzZSA0XG5cdFx0cG93ZXJNYXJnaW4gPSA1LjVcblx0XHRwZXJjZW50YWdlTWFyZ2luID0gMi41XG5cdFx0YWxhcm1NYXJnaW4gPSA2LjVcblx0XHRsb2NhdGlvbk1hcmdpbiA9IDZcblx0XHRpcG9kTWFyZ2luID0gNlxuXHRcdGJhc2VGb250U2l6ZSA9IDEyXG5cdFx0b25DYWxsRm9udFNpemUgPSAxMy41XG5cdFx0bGV0dGVyU3BhY2luZyA9IGlmIGlzaVBob25lUGx1cygpIHRoZW4gMiBlbHNlIDBcblx0XHRvbkNhbGxMZXR0ZXJTcGFjaW5nID0gMFxuXHRcdG9uQ2FsbFdvcmRTcGFjaW5nID0gMFxuXG5cdFx0QC5oZWlnaHQgPSBzdGF0dXNCYXJIZWlnaHRcblxuXHRcdGlmIEBvcHRpb25zLmlwb2QgPT0gdHJ1ZVxuXHRcdFx0QG9wdGlvbnMuY2FycmllciA9IFwiaVBvZFwiXG5cdFx0XHRAb3B0aW9ucy5zaWduYWwgPSBmYWxzZVxuXG5cdFx0aWYgQG9wdGlvbnMucG93ZXJlZCA9PSB0cnVlXG5cdFx0XHRiYXR0ZXJ5Q29sb3IgPSBiYXR0ZXJ5R3JlZW5cblx0XHRlbHNlXG5cdFx0XHRiYXR0ZXJ5Q29sb3IgPSBAb3B0aW9ucy5mb3JlZ3JvdW5kQ29sb3JcblxuXHRcdGdldEJhdHRlcnlMZXZlbCA9IChkZWZhdWx0QmF0dGVyeVdpZHRoKSA9PlxuXHRcdFx0cGVyY2VudGFnZVdpZHRoID0gQG9wdGlvbnMucGVyY2VudCAvIDEwMCAqIGRlZmF1bHRCYXR0ZXJ5V2lkdGhcblx0XHRcdHBlcmNlbnRhZ2VXaWR0aCA9IE1hdGgucm91bmQocGVyY2VudGFnZVdpZHRoKVxuXHRcdFx0cmV0dXJuIHBlcmNlbnRhZ2VXaWR0aFxuXG5cblx0XHRzaWduYWxfdjEwXzJ4ID0gXCI8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgdmlld0JveD0nMCAwIDM0IDE2Jz48Y2lyY2xlIGN4PScyLjc1JyBjeT0nMi43NScgcj0nMi43NScgZmlsbD0nI3tAb3B0aW9ucy5mb3JlZ3JvdW5kQ29sb3J9JyAvPjxjaXJjbGUgY3g9JzkuNzUnIGN5PScyLjc1JyByPScyLjc1JyBmaWxsPScje0BvcHRpb25zLmZvcmVncm91bmRDb2xvcn0nIC8+PGNpcmNsZSBjeD0nMTYuNzUnIGN5PScyLjc1JyByPScyLjc1JyBmaWxsPScje0BvcHRpb25zLmZvcmVncm91bmRDb2xvcn0nIC8+PGNpcmNsZSBjeD0nMjMuNzUnIGN5PScyLjc1JyByPScyLjc1JyBmaWxsPScje0BvcHRpb25zLmZvcmVncm91bmRDb2xvcn0nIC8+PGNpcmNsZSBjeD0nMzAuNzUnIGN5PScyLjc1JyByPScyLjUnIHN0cm9rZT0nI3tAb3B0aW9ucy5mb3JlZ3JvdW5kQ29sb3J9JyBzdHJva2Utd2lkdGg9JzAuNScgZmlsbC1vcGFjaXR5PScwJyBjbGFzcz0nc3Ryb2tlZCcgLz48L3N2Zz5cIlxuXHRcdHNpZ25hbF92MTFfMnggPSBcIjxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PScwIDAgMzMgMzMnPjxyZWN0IHg9JzAnIHk9JzExJyB3aWR0aD0nNicgaGVpZ2h0PSc5JyByeD0nMicgZmlsbD0nI3tAb3B0aW9ucy5mb3JlZ3JvdW5kQ29sb3J9JyAvPjxyZWN0IHg9JzknIHk9JzgnIHdpZHRoPSc2JyBoZWlnaHQ9JzEyJyByeD0nMicgZmlsbD0nI3tAb3B0aW9ucy5mb3JlZ3JvdW5kQ29sb3J9JyAvPjxyZWN0IHg9JzE4JyB5PSc0JyB3aWR0aD0nNicgaGVpZ2h0PScxNicgcng9JzInIGZpbGw9JyN7QG9wdGlvbnMuZm9yZWdyb3VuZENvbG9yfScgLz48cmVjdCB4PScyNycgeT0nMCcgd2lkdGg9JzYnIGhlaWdodD0nMjAnIHJ4PScyJyBmaWxsPScje0BvcHRpb25zLmZvcmVncm91bmRDb2xvcn0nIC8+PC9zdmc+XCJcblx0XHRzaWduYWxfdjEwXzN4ID0gXCI8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgdmlld0JveD0nMCAwIDY3IDMyJz48Y2lyY2xlIGN4PSc1LjUnIGN5PSc1LjUnIHI9JzUuNScgZmlsbD0nI3tAb3B0aW9ucy5mb3JlZ3JvdW5kQ29sb3J9JyAvPjxjaXJjbGUgY3g9JzE5LjUnIGN5PSc1LjUnIHI9JzUuNScgZmlsbD0nI3tAb3B0aW9ucy5mb3JlZ3JvdW5kQ29sb3J9JyAvPjxjaXJjbGUgY3g9JzMzLjUnIGN5PSc1LjUnIHI9JzUuNScgZmlsbD0nI3tAb3B0aW9ucy5mb3JlZ3JvdW5kQ29sb3J9JyAvPjxjaXJjbGUgY3g9JzQ3LjUnIGN5PSc1LjUnIHI9JzUuNScgZmlsbD0nI3tAb3B0aW9ucy5mb3JlZ3JvdW5kQ29sb3J9JyAvPjxwYXRoIGQ9J002MS41LDFBNC41LDQuNSwwLDEsMSw1Nyw1LjUsNC41MSw0LjUxLDAsMCwxLDYxLjUsMW0wLTFBNS41LDUuNSwwLDEsMCw2Nyw1LjUsNS41LDUuNSwwLDAsMCw2MS41LDBaJyBmaWxsPScje0BvcHRpb25zLmZvcmVncm91bmRDb2xvcn0nIC8+PC9zdmc+XCJcblx0XHRzaWduYWxfdjExXzN4ID0gXCI8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgdmlld0JveD0nMCAwIDQ5LjUgNjAnPjxyZWN0IHg9JzAnIHk9JzE3JyB3aWR0aD0nOScgaGVpZ2h0PScxMycgcng9JzMnIGZpbGw9JyN7QG9wdGlvbnMuZm9yZWdyb3VuZENvbG9yfScgLz48cmVjdCB4PScxMycgeT0nMTInIHdpZHRoPSc5JyBoZWlnaHQ9JzE4JyByeD0nMycgZmlsbD0nI3tAb3B0aW9ucy5mb3JlZ3JvdW5kQ29sb3J9JyAvPjxyZWN0IHg9JzI2JyB5PSc2JyB3aWR0aD0nOScgaGVpZ2h0PScyNCcgcng9JzMnIGZpbGw9JyN7QG9wdGlvbnMuZm9yZWdyb3VuZENvbG9yfScgLz48cmVjdCB4PSczOScgeT0nMCcgd2lkdGg9JzknIGhlaWdodD0nMzAnIHJ4PSczJyBmaWxsPScje0BvcHRpb25zLmZvcmVncm91bmRDb2xvcn0nIC8+PC9zdmc+XCJcblx0XHR3aWZpU1ZHID0gXCI8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgdmlld0JveD0nMCAwIDI0IDM2Jz48cGF0aCBkPSdNIDguMDg1IDEzLjYzIEwgMTEuOTk1IDE4IEwgMTUuOTA1IDEzLjYzIEMgMTMuNzUyIDExLjQ1NCAxMC4yMzggMTEuNDU0IDguMDg1IDEzLjYzIFogTSA0LjA4NSA5LjE2IEwgNi4wODUgMTEuMzkgQyA5LjM3NiA4LjE5MiAxNC42MTQgOC4xOTIgMTcuOTA1IDExLjM5IEwgMTkuOTA1IDkuMTYgQyAxNS40NzkgNC45NDMgOC41MjEgNC45NDMgNC4wOTUgOS4xNiBaIE0gMTEuOTk1IDAgQyA3LjU3NiAwLjAwMSAzLjMyMiAxLjY4MSAwLjA5NSA0LjcgTCAyLjA5NSA2LjkzIEMgNy42NTkgMS42OTEgMTYuMzQxIDEuNjkxIDIxLjkwNSA2LjkzIEwgMjMuOTA1IDQuNyBDIDIwLjY3NiAxLjY3OCAxNi40MTggLTAuMDAyIDExLjk5NSAwIFonIGZpbGw9JyN7QG9wdGlvbnMuZm9yZWdyb3VuZENvbG9yfScgLz48L3N2Zz5cIlxuXHRcdGJhdHRlcnlfdjEwXzJ4ID0gXCI8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgdmlld0JveD0nMCAwIDQ5IDMyJz48cmVjdCB4PScwLjUnIHk9JzAuNScgIHdpZHRoPSc0NCcgaGVpZ2h0PScxOCcgcng9JzMnIHJ5PSczJyBzdHJva2U9JyN7QG9wdGlvbnMuZm9yZWdyb3VuZENvbG9yfScgZmlsbC1vcGFjaXR5PScwJyBjbGFzcz0nc3Ryb2tlZCcgLz48cmVjdCB4PScyJyB5PScyJyB3aWR0aD0nI3tnZXRCYXR0ZXJ5TGV2ZWwoNDEpfScgaGVpZ2h0PScxNScgcng9JzEuNScgcnk9JzEuNScgZmlsbD0nI3tiYXR0ZXJ5Q29sb3J9JyBpZD0nYmF0dGVyeUZpbGwnIC8+PHBhdGggZD0nTTQ2LDZ2N2EzLjI4LDMuMjgsMCwwLDAsMy0zLjVBMy4yOCwzLjI4LDAsMCwwLDQ2LDZaJyBmaWxsPScje0BvcHRpb25zLmZvcmVncm91bmRDb2xvcn0nLz48L3N2Zz5cIlxuXHRcdGJhdHRlcnlfdjExXzJ4ID0gXCI8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgdmlld0JveD0nMCAwIDUzIDMyJz48cmVjdCBmaWxsPScje0BvcHRpb25zLmZvcmVncm91bmRDb2xvcn0nIHg9JzQnIHk9JzQnIHdpZHRoPScje2dldEJhdHRlcnlMZXZlbCg0MCl9JyBoZWlnaHQ9JzE1JyByeD0nMicgLz48cmVjdCBzdHJva2U9JyN7QG9wdGlvbnMuZm9yZWdyb3VuZENvbG9yfScgZmlsbC1vcGFjaXR5PScwJyBjbGFzcz0nc3Ryb2tlZCcgc3Ryb2tlLXdpZHRoPScyJyBvcGFjaXR5PScwLjQnIHg9JzEnIHk9JzEnIHdpZHRoPSc0NicgaGVpZ2h0PScyMScgcng9JzUnIC8+PHBhdGggZD0nTTUwLDcuMjU2MDU4NTYgQzUxLjc0Nzc4ODYsNy44NzM4MTMxNyA1Myw5LjU0MDY3MTc2IDUzLDExLjUgQzUzLDEzLjQ1OTMyODIgNTEuNzQ3Nzg4NiwxNS4xMjYxODY4IDUwLDE1Ljc0Mzk0MTQgTDUwLDcuMjU2MDU4NTYgWicgZmlsbD0nI3tAb3B0aW9ucy5mb3JlZ3JvdW5kQ29sb3J9JyBvcGFjaXR5PScwLjQnIC8+PC9zdmc+XCJcblx0XHRiYXR0ZXJ5X3YxMF8zeCA9IFwiPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA3MyA0Mic+PHBhdGggZD0nTTYyLDBINUE1LDUsMCwwLDAsMCw1VjI0YTUsNSwwLDAsMCw1LDVINjJhNSw1LDAsMCwwLDUtNVY1QTUsNSwwLDAsMCw2MiwwWm00LDI0YTQsNCwwLDAsMS00LDRINWE0LDQsMCwwLDEtNC00VjVBNCw0LDAsMCwxLDUsMUg2MmE0LDQsMCwwLDEsNCw0WicgZmlsbD0nI3tAb3B0aW9ucy5mb3JlZ3JvdW5kQ29sb3J9JyAvPjxyZWN0IHg9JzInIHk9JzInIHdpZHRoPScje2dldEJhdHRlcnlMZXZlbCg2Myl9JyBoZWlnaHQ9JzI1JyByeD0nMycgcnk9JzMnIGZpbGw9JyN7YmF0dGVyeUNvbG9yfScgaWQ9J2JhdHRlcnlGaWxsJyAvPjxwYXRoIGQ9J002OSwxMC4wNnY5Ljg5QTQuODIsNC44MiwwLDAsMCw3MywxNSw0LjgyLDQuODIsMCwwLDAsNjksMTAuMDZaJyBmaWxsPScje0BvcHRpb25zLmZvcmVncm91bmRDb2xvcn0nIC8+PC9zdmc+XCJcblx0XHRiYXR0ZXJ5X3YxMV8zeCA9IFwiPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA3OCA0Mic+PHJlY3QgZmlsbD0nI3tiYXR0ZXJ5Q29sb3J9JyBpZD0nYmF0dGVyeUZpbGwnIHg9JzYnIHk9JzYnIHdpZHRoPScje2dldEJhdHRlcnlMZXZlbCg1OSl9JyBoZWlnaHQ9JzIyJyByeD0nMycgLz48cmVjdCBzdHJva2U9JyN7QG9wdGlvbnMuZm9yZWdyb3VuZENvbG9yfScgZmlsbC1vcGFjaXR5PScwJyBjbGFzcz0nc3Ryb2tlZCcgc3Ryb2tlLXdpZHRoPSczJyBvcGFjaXR5PScwLjQnIHg9JzEuNScgeT0nMS41JyB3aWR0aD0nNjgnIGhlaWdodD0nMzEnIHJ4PSc3LjUnIC8+PHBhdGggZD0nTSA3NCAxMC42NzQgQyA3Ni4zNjUgMTEuNzk3IDc4IDE0LjIwOCA3OCAxNyBDIDc4IDE5Ljc5MiA3Ni4zNjUgMjIuMjAzIDc0IDIzLjMyNiBMIDc0IDEwLjY3NCBaJyBmaWxsPScje0BvcHRpb25zLmZvcmVncm91bmRDb2xvcn0nIG9wYWNpdHk9JzAuNCcvPjwvc3ZnPlwiXG5cdFx0cG93ZXJTVkcgPSBcIjxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PScwIDAgNiAxNyc+PHBvbHlnb24gcG9pbnRzPSc2IDMuNzUgMy40MyAzLjc1IDQuNSAwIDAuNSA1LjI1IDIuOTggNS4yNSAxLjUgOS41IDYgMy43NScgZmlsbD0nI3tAb3B0aW9ucy5mb3JlZ3JvdW5kQ29sb3J9JyAvPjwvc3ZnPlwiXG5cblx0XHRzdmcgPVxuXHRcdFx0YmF0dGVyeTpcblx0XHRcdFx0djEwOlxuXHRcdFx0XHRcdGF0Mng6IGJhdHRlcnlfdjEwXzJ4XG5cdFx0XHRcdFx0YXQzeDogYmF0dGVyeV92MTBfM3hcblx0XHRcdFx0djExOlxuXHRcdFx0XHRcdGF0Mng6IGJhdHRlcnlfdjExXzJ4XG5cdFx0XHRcdFx0YXQzeDogYmF0dGVyeV92MTFfM3hcblx0XHRcdHNpZ25hbDpcblx0XHRcdFx0djEwOlxuXHRcdFx0XHRcdGF0Mng6IHNpZ25hbF92MTBfMnhcblx0XHRcdFx0XHRhdDN4OiBzaWduYWxfdjEwXzN4XG5cdFx0XHRcdHYxMTpcblx0XHRcdFx0XHRhdDJ4OiBzaWduYWxfdjExXzJ4XG5cdFx0XHRcdFx0YXQzeDogc2lnbmFsX3YxMV8zeFxuXHRcdFx0d2lmaTogd2lmaVNWR1xuXHRcdFx0cG93ZXI6IHBvd2VyU1ZHXG5cblx0XHRvbkNhbGxCbG9jayA9IG5ldyBMYXllclxuXHRcdFx0cGFyZW50OiBAXG5cdFx0XHRuYW1lOiBcIm9uQ2FsbEJsb2NrXCJcblx0XHRcdGhlaWdodDogc3RhdHVzQmFySGVpZ2h0XG5cblx0XHRALm9uQ2FsbEJsb2NrID0gb25DYWxsQmxvY2tcblxuXHRcdG9uQ2FsbE1lc3NhZ2UgPSBuZXcgVGV4dExheWVyXG5cdFx0XHRwYXJlbnQ6IEBcblx0XHRcdG5hbWU6IFwib25DYWxsTWVzc2FnZVwiXG5cdFx0XHRwYWRkaW5nOlxuXHRcdFx0XHR0b3A6IG9uQ2FsbE1hcmdpblxuXHRcdFx0dGV4dDogXCJcIlxuXHRcdFx0Zm9udFNpemU6IG9uQ2FsbEZvbnRTaXplXG5cdFx0XHRmb250V2VpZ2h0OiBmb250V2VpZ2h0XG5cdFx0XHR0ZXh0QWxpZ246IFwiY2VudGVyXCJcblx0XHRcdGNvbG9yOiBcIndoaXRlXCJcblx0XHRcdGxldHRlclNwYWNpbmc6IG9uQ2FsbExldHRlclNwYWNpbmdcblx0XHRcdHdvcmRTcGFjaW5nOiBvbkNhbGxXb3JkU3BhY2luZ1xuXG5cdFx0QC5vbkNhbGxNZXNzYWdlID0gb25DYWxsTWVzc2FnZVxuXG5cdFx0Y2FycmllciA9IG5ldyBUZXh0TGF5ZXJcblx0XHRcdHBhcmVudDogQFxuXHRcdFx0bmFtZTogXCJjYXJyaWVyXCJcblx0XHRcdHBhZGRpbmc6XG5cdFx0XHRcdHRvcDogZ2V0VG9wTWFyZ2luKClcblx0XHRcdHRleHQ6IEBvcHRpb25zLmNhcnJpZXJcblx0XHRcdGZvbnRTaXplOiBiYXNlRm9udFNpemVcblx0XHRcdGZvbnRXZWlnaHQ6IGZvbnRXZWlnaHRcblx0XHRcdGxldHRlclNwYWNpbmc6IGxldHRlclNwYWNpbmdcblxuXHRcdEAuY2FycmllciA9IGNhcnJpZXJcblxuXHRcdHNpZ25hbCA9IG5ldyBMYXllclxuXHRcdFx0cGFyZW50OiBAXG5cdFx0XHRuYW1lOiBcInNpZ25hbFwiXG5cdFx0XHR3aWR0aDogaWYgQG9wdGlvbnMudmVyc2lvbiA+IDEwIHRoZW4gMTYuNSBlbHNlIDM0XG5cdFx0XHRoZWlnaHQ6IGlmIEBvcHRpb25zLnZlcnNpb24gPiAxMCB0aGVuIDEwIGVsc2UgNlxuXHRcdFx0eTogQWxpZ24uY2VudGVyXG5cdFx0XHRodG1sOiBnZXRTaWduYWxTVkcoKVxuXG5cdFx0QC5zaWduYWwgPSBzaWduYWxcblxuXHRcdHdpZmkgPSBuZXcgTGF5ZXJcblx0XHRcdHBhcmVudDogQFxuXHRcdFx0bmFtZTogXCJ3aWZpXCJcblx0XHRcdHk6IEFsaWduLmNlbnRlclxuXHRcdFx0d2lkdGg6IDEzXG5cdFx0XHRoZWlnaHQ6IDlcblx0XHRcdGh0bWw6IHdpZmlTVkdcblxuXHRcdEAud2lmaSA9IHdpZmlcblxuXHRcdGdldFRpbWUgPSAoKSA9PlxuXHRcdFx0dG9kYXkgPSBuZXcgRGF0ZVxuXHRcdFx0ZGF5ID0gdG9kYXkuZ2V0RGF5KClcblx0XHRcdGhvdXIgPSB0b2RheS5nZXRIb3VycygpXG5cdFx0XHRtaW51dGUgPSB0b2RheS5nZXRNaW51dGVzKClcblx0XHRcdHNlY29uZCA9IHRvZGF5LmdldFNlY29uZHMoKVxuXHRcdFx0c3VmZml4ID0gaWYgaG91ciA+PSAxMiB0aGVuICcgUE0nIGVsc2UgJyBBTSdcblx0XHRcdGhvdXIgPSBpZiBob3VyID4gMTIgdGhlbiBob3VyIC0gMTIgZWxzZSBob3VyXG5cdFx0XHRtaW51dGUgPSBpZiBtaW51dGUgPCAxMCB0aGVuIFwiMFwiICsgbWludXRlIGVsc2UgbWludXRlXG5cdFx0XHRpZiBAb3B0aW9ucy50aW1lID09IFwiXCJcblx0XHRcdFx0cmV0dXJuIGhvdXIgKyAnOicgKyBtaW51dGUgKyBzdWZmaXhcblx0XHRcdGVsc2Vcblx0XHRcdFx0cmV0dXJuIEBvcHRpb25zLnRpbWVcblxuXHRcdHRpbWUgPSBuZXcgVGV4dExheWVyXG5cdFx0XHRwYXJlbnQ6IEBcblx0XHRcdG5hbWU6IFwidGltZVwiXG5cdFx0XHR3aWR0aDogQC53aWR0aFxuXHRcdFx0cGFkZGluZzpcblx0XHRcdFx0dG9wOiBnZXRUb3BNYXJnaW4oKVxuXHRcdFx0dGV4dDogZ2V0VGltZSgpXG5cdFx0XHRmb250U2l6ZTogYmFzZUZvbnRTaXplXG5cdFx0XHRmb250V2VpZ2h0OiB0aW1lRm9udFdlaWdodFxuXHRcdFx0dGV4dEFsaWduOiBcImNlbnRlclwiXG5cdFx0XHRsZXR0ZXJTcGFjaW5nOiBsZXR0ZXJTcGFjaW5nXG5cblx0XHRALnRpbWUgPSB0aW1lXG5cblx0XHRwb3dlciA9IG5ldyBMYXllclxuXHRcdFx0cGFyZW50OiBAXG5cdFx0XHRuYW1lOiBcInBvd2VyXCJcblx0XHRcdHk6IEFsaWduLmNlbnRlclxuXHRcdFx0d2lkdGg6IDUuNVxuXHRcdFx0aGVpZ2h0OiA5LjVcblx0XHRcdGh0bWw6IHBvd2VyU1ZHXG5cblx0XHRALnBvd2VyID0gcG93ZXJcblxuXHRcdGJhdHRlcnkgPSBuZXcgTGF5ZXJcblx0XHRcdHBhcmVudDogQFxuXHRcdFx0bmFtZTogXCJiYXR0ZXJ5XCJcblx0XHRcdHk6IEFsaWduLmNlbnRlclxuXHRcdFx0d2lkdGg6IGdldEJhdHRlcnlXaWR0aCgpXG5cdFx0XHRoZWlnaHQ6IGlmIEBvcHRpb25zLnZlcnNpb24gPiAxMCB0aGVuIDExLjUgZWxzZSA5XG5cdFx0XHRodG1sOiBnZXRCYXR0ZXJ5U1ZHKClcblxuXHRcdEAuYmF0dGVyeSA9IGJhdHRlcnlcblxuXHRcdHBlcmNlbnRhZ2UgPSBuZXcgVGV4dExheWVyXG5cdFx0XHRwYXJlbnQ6IEBcblx0XHRcdG5hbWU6IFwicGVyY2VudGFnZVwiXG5cdFx0XHRwYWRkaW5nOlxuXHRcdFx0XHR0b3A6IGdldFRvcE1hcmdpbigpXG5cdFx0XHR0ZXh0OiBAb3B0aW9ucy5wZXJjZW50ICsgXCIlXCJcblx0XHRcdGZvbnRTaXplOiBiYXNlRm9udFNpemVcblx0XHRcdGZvbnRXZWlnaHQ6IGZvbnRXZWlnaHRcblx0XHRcdHRleHRBbGlnbjogXCJyaWdodFwiXG5cdFx0XHRsZXR0ZXJTcGFjaW5nOiBsZXR0ZXJTcGFjaW5nXG5cblx0XHRALnBlcmNlbnRhZ2UgPSBwZXJjZW50YWdlXG5cblx0XHRmb3IgbGF5ZXIgaW4gQC5zdWJMYXllcnNcblx0XHRcdGxheWVyLmJhY2tncm91bmRDb2xvciA9IFwiY2xlYXJcIlxuXG5cdFx0QGhpZGUgPSAoKSA9PlxuXHRcdFx0QG9wdGlvbnMuaGlkZSA9IHRydWVcblx0XHRcdEAuYW5pbWF0ZVxuXHRcdFx0XHRwcm9wZXJ0aWVzOlxuXHRcdFx0XHRcdHk6IDAgLSBzdGF0dXNCYXJIZWlnaHRcblx0XHRcdFx0dGltZTpcblx0XHRcdFx0XHQwLjI1XG5cblx0XHRAc2hvdyA9ICgpID0+XG5cdFx0XHRAb3B0aW9ucy5oaWRlID0gZmFsc2Vcblx0XHRcdEAuYW5pbWF0ZVxuXHRcdFx0XHRwcm9wZXJ0aWVzOlxuXHRcdFx0XHRcdHk6IDBcblx0XHRcdFx0dGltZTpcblx0XHRcdFx0XHQwLjI1XG5cblx0XHRAbGF5b3V0ID0gKCkgPT5cblx0XHRcdEAud2lkdGggPSBTY3JlZW4ud2lkdGhcblx0XHRcdGlmIEBvcHRpb25zLmhpZGUgPT0gdHJ1ZVxuXHRcdFx0XHRAaGlkZSgpXG5cdFx0XHRlbHNlIGlmIEBvcHRpb25zLmF1dG9IaWRlID09IHRydWVcblx0XHRcdFx0aWYgRnJhbWVyLkRldmljZS5vcmllbnRhdGlvbiA+IDAgJiYgKFNjcmVlbi53aWR0aCA9PSAyMjA4IHx8IFNjcmVlbi53aWR0aCA9PSAxMzM0IHx8IFNjcmVlbi53aWR0aCA9PSAxMTM2IHx8IFNjcmVlbi53aWR0aCA9PSA3MzYgfHwgU2NyZWVuLndpZHRoID09IDY2Nylcblx0XHRcdFx0XHQjIERldmljZSBpcyBsYW5kc2NhcGUgaVBob25lLCBzaG91bGQgYXV0by1oaWRlXG5cdFx0XHRcdFx0QGhpZGUoKVxuXHRcdFx0ZWxzZVxuXHRcdFx0XHRAc2hvdygpXG5cdFx0XHQjIExlZnQtc2lkZSBpdGVtc1xuXHRcdFx0aWYgQG9wdGlvbnMuY2FycmllciA9PSBcIlwiXG5cdFx0XHRcdGNhcnJpZXJNYXJnaW4gPSAwXG5cdFx0XHRpZiBAb3B0aW9ucy5zaWduYWwgPT0gdHJ1ZVxuXHRcdFx0XHRzaWduYWwudmlzaWJsZSA9IHRydWVcblx0XHRcdFx0c2lnbmFsLnggPSBzaWduYWxNYXJnaW5cblx0XHRcdFx0Y2Fycmllci54ID0gc2lnbmFsLnggKyBzaWduYWwud2lkdGggKyBjYXJyaWVyTWFyZ2luXG5cdFx0XHRlbHNlXG5cdFx0XHRcdHNpZ25hbC52aXNpYmxlID0gZmFsc2Vcblx0XHRcdFx0Y2Fycmllci54ID0gaXBvZE1hcmdpblxuXHRcdFx0aWYgQG9wdGlvbnMud2lmaSA9PSB0cnVlXG5cdFx0XHRcdHdpZmkudmlzaWJsZSA9IHRydWVcblx0XHRcdGVsc2Vcblx0XHRcdFx0d2lmaS52aXNpYmxlID0gZmFsc2Vcblx0XHRcdHdpZmkueCA9IGNhcnJpZXIueCArIGNhcnJpZXIud2lkdGggKyB3aWZpTWFyZ2luXG5cdFx0XHQjIENlbnRlciBjdXJyZW50IHRpbWUgYW5kIG9uLWNhbGxcblx0XHRcdHRpbWUud2lkdGggPSBTY3JlZW4ud2lkdGhcblx0XHRcdG9uQ2FsbEJsb2NrLndpZHRoID0gU2NyZWVuLndpZHRoXG5cdFx0XHRvbkNhbGxNZXNzYWdlLndpZHRoID0gU2NyZWVuLndpZHRoXG5cdFx0XHQjIFJpZ2h0LXNpZGUgaXRlbXNcblx0XHRcdGlmIEBvcHRpb25zLnBvd2VyZWQgPT0gdHJ1ZVxuXHRcdFx0XHRwb3dlci54ID0gQWxpZ24ucmlnaHQoLXBvd2VyTWFyZ2luKVxuXHRcdFx0ZWxzZVxuXHRcdFx0XHRwb3dlci54ID0gU2NyZWVuLndpZHRoXG5cdFx0XHRiYXR0ZXJ5LnggPSBwb3dlci54IC0gYmF0dGVyeS53aWR0aCAtIGdldEJhdHRlcnlNYXJnaW4oKVxuXHRcdFx0aWYgQG9wdGlvbnMuc2hvd1BlcmNlbnRhZ2UgPT0gZmFsc2Vcblx0XHRcdFx0cGVyY2VudGFnZU1hcmdpbiA9IDBcblx0XHRcdFx0cGVyY2VudGFnZS50ZXh0ID0gXCJcIlxuXHRcdFx0ZWxzZVxuXHRcdFx0XHRwZXJjZW50YWdlLnRleHQgPSBAb3B0aW9ucy5wZXJjZW50ICsgXCIlXCJcblx0XHRcdHBlcmNlbnRhZ2UubWF4WCA9IGJhdHRlcnkueCAtIHBlcmNlbnRhZ2VNYXJnaW5cblxuXHRcdGdldFRpbWUoKVxuXHRcdEBsYXlvdXQoKVxuXG5cdFx0Zm9yZWdyb3VuZEl0ZW1zID0gW3BlcmNlbnRhZ2UsIHBvd2VyLCB0aW1lLCB3aWZpLCBzaWduYWwsIGNhcnJpZXIsIGJhdHRlcnldXG5cblx0XHRzZWxlY3RGb3JlZ3JvdW5kQ29sb3IgPSAoKSA9PlxuXHRcdFx0aWYgQG9wdGlvbnMuZm9yZWdyb3VuZENvbG9yID09IFwiXCJcblx0XHRcdFx0aWYgQG9wdGlvbnMuc3R5bGUgPT0gXCJkYXJrXCJcblx0XHRcdFx0XHRyZXR1cm4gXCJ3aGl0ZVwiXG5cdFx0XHRcdGVsc2Vcblx0XHRcdFx0XHRyZXR1cm4gXCJibGFja1wiXG5cdFx0XHRlbHNlXG5cdFx0XHRcdHJldHVybiBAb3B0aW9ucy5mb3JlZ3JvdW5kQ29sb3JcblxuXHRcdGNvbG9yRm9yZWdyb3VuZCA9IChjb2xvciA9IFwiXCIpID0+XG5cdFx0XHRpZiBjb2xvciA9PSBcIlwiIHRoZW4gY29sb3IgPSBzZWxlY3RGb3JlZ3JvdW5kQ29sb3IoKVxuXHRcdFx0Zm9yIGxheWVyIGluIGZvcmVncm91bmRJdGVtc1xuXHRcdFx0XHRsYXllci5jb2xvciA9IGNvbG9yXG5cdFx0XHRcdGxheWVyU1ZHID0gbGF5ZXIucXVlcnlTZWxlY3RvckFsbCgncGF0aCwgY2lyY2xlLCByZWN0LCBwb2x5Z29uJylcblx0XHRcdFx0c3Ryb2tlZFNWRyA9IGxheWVyLnF1ZXJ5U2VsZWN0b3JBbGwoJy5zdHJva2VkJylcblx0XHRcdFx0Zm9yIFNWRyBpbiBsYXllclNWR1xuXHRcdFx0XHRcdFNWRy5zZXRBdHRyaWJ1dGUoJ2ZpbGwnLCBjb2xvcilcblx0XHRcdFx0Zm9yIFNWRyBpbiBzdHJva2VkU1ZHXG5cdFx0XHRcdFx0U1ZHLnNldEF0dHJpYnV0ZSgnc3Ryb2tlJywgY29sb3IpXG5cdFx0XHRcdFx0U1ZHLnNldEF0dHJpYnV0ZSgnZmlsbC1vcGFjaXR5JywgJzAnKVxuXG5cdFx0Y29sb3JCYXR0ZXJ5ID0gKCkgPT5cblx0XHRcdGJhdHRlcnlGaWxsU1ZHID0gbGF5ZXIucXVlcnlTZWxlY3RvckFsbCgnI2JhdHRlcnlGaWxsJylcblx0XHRcdGlmIEBvcHRpb25zLm9uQ2FsbCA9PSB0cnVlXG5cdFx0XHRcdGZvciBTVkcgaW4gYmF0dGVyeUZpbGxTVkdcblx0XHRcdFx0XHRTVkcuc3R5bGUuV2Via2l0VHJhbnNpdGlvbiA9ICdhbGwgMC4yNXMnO1xuXHRcdFx0XHRcdFNWRy5zZXRBdHRyaWJ1dGUoJ2ZpbGwnLCBcIndoaXRlXCIpXG5cdFx0XHRlbHNlIGlmIEBvcHRpb25zLnBvd2VyZWQgPT0gdHJ1ZVxuXHRcdFx0XHRmb3IgU1ZHIGluIGJhdHRlcnlGaWxsU1ZHXG5cdFx0XHRcdFx0U1ZHLnN0eWxlLldlYmtpdFRyYW5zaXRpb24gPSAnYWxsIDAuMjVzJztcblx0XHRcdFx0XHRTVkcuc2V0QXR0cmlidXRlKCdmaWxsJywgYmF0dGVyeUdyZWVuKVxuXHRcdFx0ZWxzZVxuXHRcdFx0XHRmb3IgU1ZHIGluIGJhdHRlcnlGaWxsU1ZHXG5cdFx0XHRcdFx0U1ZHLnN0eWxlLldlYmtpdFRyYW5zaXRpb24gPSAnYWxsIDAuMjVzJztcblx0XHRcdFx0XHRTVkcuc2V0QXR0cmlidXRlKCdmaWxsJywgc2VsZWN0Rm9yZWdyb3VuZENvbG9yKCkpXG5cblx0XHRzdHlsZUJhciA9IChzdHlsZSwgYmFja2dyb3VuZENvbG9yID0gXCJcIikgPT5cblx0XHRcdGlmIGJhY2tncm91bmRDb2xvciA9PSBcIlwiXG5cdFx0XHRcdEAuc3R5bGUgPVxuXHRcdFx0XHRcdFwiLXdlYmtpdC1iYWNrZHJvcC1maWx0ZXJcIjogXCJibHVyKDYwcHgpXCJcblx0XHRcdFx0aWYgc3R5bGUgPT0gXCJkYXJrXCJcblx0XHRcdFx0XHRALmJhY2tncm91bmRDb2xvciA9IFwicmdiYSgwLCAwLCAwLCAwLjUpXCJcblx0XHRcdFx0ZWxzZVxuXHRcdFx0XHRcdEAuYmFja2dyb3VuZENvbG9yID0gXCJyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSlcIlxuXHRcdFx0ZWxzZVxuXHRcdFx0XHRALmJhY2tncm91bmRDb2xvciA9IGJhY2tncm91bmRDb2xvclxuXHRcdFx0aWYgQG9wdGlvbnMudmlicmFudCA9PSB0cnVlXG5cdFx0XHRcdGJhckNvbG9yID0gbmV3IENvbG9yKGJhY2tncm91bmRDb2xvcikuYWxwaGEoLjUpXG5cdFx0XHRcdEAuYmFja2dyb3VuZENvbG9yID0gYmFyQ29sb3Jcblx0XHRcdFx0QC5zdHlsZSA9XG5cdFx0XHRcdFx0XCItd2Via2l0LWJhY2tkcm9wLWZpbHRlclwiOiBcImJsdXIoNjBweClcIlxuXG5cblx0XHRAYXBwbHlTdHlsZSA9IChzdHlsZSA9IEBvcHRpb25zLnN0eWxlLCBmb3JlZ3JvdW5kQ29sb3IgPSBAb3B0aW9ucy5mb3JlZ3JvdW5kQ29sb3IsIGJhY2tncm91bmRDb2xvciA9IEBvcHRpb25zLmJhY2tncm91bmRDb2xvcikgPT5cblx0XHRcdGlmIHN0eWxlID09IFwibGlnaHRcIiAmJiBmb3JlZ3JvdW5kQ29sb3IgPT0gXCJcIlxuXHRcdFx0XHRmb3JlZ3JvdW5kQ29sb3IgPSBcImJsYWNrXCJcblx0XHRcdGlmIHN0eWxlID09IFwiZGFya1wiICYmIGZvcmVncm91bmRDb2xvciA9PSBcIlwiXG5cdFx0XHRcdGZvcmVncm91bmRDb2xvciA9IFwid2hpdGVcIlxuXHRcdFx0c3R5bGVCYXIoc3R5bGUsIGJhY2tncm91bmRDb2xvcilcblx0XHRcdGNvbG9yRm9yZWdyb3VuZCgpXG5cdFx0XHRjb2xvckJhdHRlcnkoKVxuXG5cdFx0QGFwcGx5U3R5bGUoKVxuXG5cdFx0QHN0YXJ0Q2FsbCA9IChtZXNzYWdlID0gXCJUb3VjaCB0byByZXR1cm4gdG8gY2FsbCAwOjMwXCIsIGNvbG9yID0gb25DYWxsQ29sb3IpID0+XG5cdFx0XHRAb3B0aW9ucy5vbkNhbGwgPSB0cnVlXG5cdFx0XHRjb2xvckZvcmVncm91bmQoXCJ3aGl0ZVwiKVxuXHRcdFx0Y29sb3JCYXR0ZXJ5KClcblx0XHRcdG9uQ2FsbEJsb2NrLmFuaW1hdGVcblx0XHRcdFx0cHJvcGVydGllczpcblx0XHRcdFx0XHRiYWNrZ3JvdW5kQ29sb3I6IGNvbG9yXG5cdFx0XHRcdFx0b3BhY2l0eTogMVxuXHRcdFx0XHRcdGhlaWdodDogc3RhdHVzQmFySGVpZ2h0ICogMlxuXHRcdFx0XHR0aW1lOlxuXHRcdFx0XHRcdDAuMjVcblx0XHRcdG9uQ2FsbEJsb2NrLm9uQW5pbWF0aW9uRW5kID0+XG5cdFx0XHRcdGlmIEBvcHRpb25zLm9uQ2FsbCA9PSB0cnVlXG5cdFx0XHRcdFx0b25DYWxsTWVzc2FnZS50ZXh0ID0gbWVzc2FnZVxuXG5cdFx0QGVuZENhbGwgPSAoKSA9PlxuXHRcdFx0QG9wdGlvbnMub25DYWxsID0gZmFsc2Vcblx0XHRcdG9uQ2FsbE1lc3NhZ2UudGV4dCA9IFwiXCJcblx0XHRcdG9uQ2FsbEJsb2NrLmFuaW1hdGVcblx0XHRcdFx0cHJvcGVydGllczpcblx0XHRcdFx0XHRvcGFjaXR5OiAwXG5cdFx0XHRcdFx0aGVpZ2h0OiBzdGF0dXNCYXJIZWlnaHRcblx0XHRcdFx0dGltZTpcblx0XHRcdFx0XHQwLjI1XG5cdFx0XHRAYXBwbHlTdHlsZSgpXG5cblx0XHR1cGRhdGVPcmllbnRhdGlvbiA9IChkZXZpY2UpID0+XG5cdFx0IyBTZXR1cCB2YWx1ZSB0byBiZSBlaXRoZXIgRnJhbWVyLkRldmljZS5vcmllbnRhdGlvbiBpZiB0eXBlIGlzIFwiRnJhbWVyXCJcblx0XHQjIE9yIHdpbmRvdy5vcmllbnRhdGlvbiBpZiBkZXZpY2UgaXMgb24gbW9iaWxlXG5cdFx0XHR2YWx1ZSA9IGlmIGRldmljZSBpcyBcIkZyYW1lclwiIHRoZW4gRnJhbWVyLkRldmljZS5vcmllbnRhdGlvbiBlbHNlIHdpbmRvdy5vcmllbnRhdGlvblxuXHRcdFx0IyBDb25kaXRpb24gdG8gbWF0Y2ggaU9TXG5cdFx0XHQjIEluIEZyYW1lciwgcm90YXRpbmcgdG8gbGFuZHNjYXBlIG1ha2VzIGl0IGEgbmVnYXRpdmUgcm90YXRpb24sIG5vdCBwb3NpdGl2ZVxuXHRcdFx0IyBUbyBiZSBjb25zaXN0ZW50LCBhdXRvbWF0aWNhbGx5IG1ha2luZyBpdCBzZXQgdmFsdWUgY29ycmVjdGx5XG5cdFx0XHRpZiB2YWx1ZSA8IDAgJiYgZGV2aWNlIGlzIFwiRnJhbWVyXCJcblx0XHRcdFx0dmFsdWUgPSBNYXRoLmFicyh2YWx1ZSlcblx0XHRcdCMgU3dpdGNoIHRvIGNoZWNrIHRoZSB2YWx1ZVxuXHRcdFx0cm90YXRpb24gPSBzd2l0Y2hcblx0XHRcdFx0d2hlbiB2YWx1ZSBpcyAwXG5cdFx0XHRcdFx0ZGV2aWNlUm90YXRpb24gPSBcIlBvcnRyYWl0XCJcblx0XHRcdFx0d2hlbiB2YWx1ZSBpcyAxODBcblx0XHRcdFx0XHRkZXZpY2VSb3RhdGlvbiA9IFwiUG9ydHJhaXQgKFVwc2lkZS1Eb3duKVwiXG5cdFx0XHRcdHdoZW4gdmFsdWUgaXMgLTkwXG5cdFx0XHRcdFx0ZGV2aWNlUm90YXRpb24gPSBcIkxhbmRzY2FwZSAoQ2xvY2t3aXNlKVwiXG5cdFx0XHRcdHdoZW4gdmFsdWUgaXMgOTBcblx0XHRcdFx0XHRkZXZpY2VSb3RhdGlvbiA9IFwiTGFuZHNjYXBlIChDb3VudGVyY2xvY2t3aXNlKVwiXG5cdFx0XHQjIFNldCBkZXZpY2VPcmllbnRhdGlvbiBhcyBkZXZpY2VSb3RhdGlvblxuXHRcdFx0ZGV2aWNlT3JpZW50YXRpb24gPSBkZXZpY2VSb3RhdGlvblxuXHRcdFx0QGxheW91dCgpXG5cdFx0IyBDaGVjayB3aGV0aGVyIHRoZSBkZXZpY2UgaXMgbW9iaWxlIG9yIG5vdCAodmVyc3VzIEZyYW1lcilcblx0XHRpZiBVdGlscy5pc01vYmlsZSgpXG5cdFx0XHQjIFNldCB0eXBlXG5cdFx0XHRkZXZpY2UgPSBcIm1vYmlsZVwiXG5cdFx0XHQjIEFkZCBldmVudCBsaXN0ZW5lciBvbiBvcmllbnRhdGlvbiBjaGFuZ2Vcblx0XHRcdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyIFwib3JpZW50YXRpb25jaGFuZ2VcIiwgLT5cblx0XHRcdFx0IyBTZW5kIGV2ZW50IGhhbmRsaW5nIHRvIGZ1bmN0aW9uIGFsb25nIHdpdGggZGV2aWNlIHR5cGVcblx0XHRcdFx0dXBkYXRlT3JpZW50YXRpb24oZGV2aWNlKVxuXHRcdGVsc2Vcblx0XHRcdCMgTGlzdGVuIGZvciBvcmllbnRhdGlvbiBjaGFuZ2VzIG9uIHRoZSBkZXZpY2Ugdmlld1xuXHRcdFx0RnJhbWVyLkRldmljZS5vbiBcImNoYW5nZTpvcmllbnRhdGlvblwiLCAtPlxuXHRcdFx0XHQjIFNldCB0eXBlXG5cdFx0XHRcdGRldmljZSA9IFwiRnJhbWVyXCJcblx0XHRcdFx0IyBTZW5kIGV2ZW50IGhhbmRsaW5nIHRvIGZ1bmN0aW9uIHdpdGggZGV2aWNlIHR5cGVcblx0XHRcdFx0dXBkYXRlT3JpZW50YXRpb24oZGV2aWNlKVxuXG5cdEBkZWZpbmUgJ2hpZGRlbicsIGdldDogKCkgLT4gQG9wdGlvbnMuaGlkZVxuXHRAZGVmaW5lICdvbkNhbGwnLCBnZXQ6ICgpIC0+IEBvcHRpb25zLm9uQ2FsbFxuXG5tb2R1bGUuZXhwb3J0cyA9IFN0YXR1c0JhckxheWVyXG4iLCIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQW1DQUE7O0FEQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFBLHdCQUFBO0VBQUE7OztBQXlDQSxRQUFBLEdBQ0M7RUFBQSxLQUFBLEVBQU8sT0FBUDtFQUNBLE9BQUEsRUFBUyxLQURUO0VBRUEsT0FBQSxFQUFTLFNBRlQ7RUFHQSxlQUFBLEVBQWlCLEVBSGpCO0VBSUEsZUFBQSxFQUFpQixFQUpqQjtFQUtBLElBQUEsRUFBTSxFQUxOO0VBTUEsT0FBQSxFQUFTLEdBTlQ7RUFPQSxjQUFBLEVBQWdCLElBUGhCO0VBUUEsSUFBQSxFQUFNLElBUk47RUFTQSxNQUFBLEVBQVEsSUFUUjtFQVVBLElBQUEsRUFBTSxLQVZOO0VBV0EsSUFBQSxFQUFNLEtBWE47RUFZQSxRQUFBLEVBQVUsSUFaVjtFQWFBLE1BQUEsRUFBUSxLQWJSO0VBY0EsT0FBQSxFQUFTLEtBZFQ7RUFlQSxPQUFBLEVBQVMsRUFmVDs7O0FBb0JLO0FBRUwsTUFBQTs7OztFQUFBLFlBQUEsR0FBZTs7RUFDZixXQUFBLEdBQWM7O0VBRUQsd0JBQUMsT0FBRDtBQUNaLFFBQUE7SUFEYSxJQUFDLENBQUEsNEJBQUQsVUFBUztJQUN0QixJQUFDLENBQUEsT0FBRCxHQUFXLENBQUMsQ0FBQyxNQUFGLENBQVMsRUFBVCxFQUFhLFFBQWIsRUFBdUIsSUFBQyxDQUFBLE9BQXhCO0lBRVgsVUFBQSxHQUFhO0lBQ2IsY0FBQSxHQUFpQjtJQUVqQixZQUFBLEdBQWUsU0FBQTtNQUNkLElBQUcsQ0FBQyxDQUFDLFFBQUYsQ0FB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SixFQUFnb0osSUFBaG9KLEVBQXNvSixJQUF0b0osRUFBNG9KLElBQTVvSixFQUFrcEosSUFBbHBKLEVBQXdwSixJQUF4cEosRUFBOHBKLElBQTlwSixFQUFvcUosSUFBcHFKLEVBQTBxSixJQUExcUosRUFBZ3JKLElBQWhySixFQUFzckosSUFBdHJKLEVBQTRySixJQUE1ckosRUFBa3NKLElBQWxzSixFQUF3c0osSUFBeHNKLEVBQThzSixJQUE5c0osRUFBb3RKLElBQXB0SixFQUEwdEosSUFBMXRKLEVBQWd1SixJQUFodUosRUFBc3VKLElBQXR1SixFQUE0dUosSUFBNXVKLEVBQWt2SixJQUFsdkosRUFBd3ZKLElBQXh2SixFQUE4dkosSUFBOXZKLEVBQW93SixJQUFwd0osRUFBMHdKLElBQTF3SixFQUFneEosSUFBaHhKLEVBQXN4SixJQUF0eEosRUFBNHhKLElBQTV4SixFQUFreUosSUFBbHlKLEVBQXd5SixJQUF4eUosRUFBOHlKLElBQTl5SixFQUFvekosSUFBcHpKLEVBQTB6SixJQUExekosRUFBZzBKLElBQWgwSixFQUFzMEosSUFBdDBKLEVBQTQwSixJQUE1MEosRUFBazFKLElBQWwxSixFQUF3MUosR0FBeDFKLEVBQTYxSixJQUE3MUosRUFBbTJKLElBQW4ySixFQUF5MkosSUFBejJKLEVBQSsySixJQUEvMkosRUFBcTNKLElBQXIzSixFQUEyM0osSUFBMzNKLEVBQWk0SixJQUFqNEosRUFBdTRKLElBQXY0SixFQUE2NEosSUFBNzRKLEVBQW01SixJQUFuNUosRUFBeTVKLElBQXo1SixFQUErNUosSUFBLzVKLEVBQXE2SixJQUFyNkosRUFBMjZKLEdBQTM2SixFQUFnN0osSUFBaDdKLEVBQXM3SixJQUF0N0osRUFBNDdKLElBQTU3SixFQUFrOEosSUFBbDhKLEVBQXc4SixJQUF4OEosRUFBODhKLElBQTk4SixFQUFvOUosSUFBcDlKLEVBQTA5SixLQUExOUosRUFBaStKLElBQWorSixFQUF1K0osSUFBditKLEVBQTYrSixLQUE3K0osRUFBby9KLElBQXAvSixFQUEwL0osSUFBMS9KLEVB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QjtFQUNwQixTQUFTLENBQUMsT0FBVixHQUFvQjtFQUNwQixTQUFTLENBQUMsTUFBVixHQUFtQjtBQUNuQixTQUFPO0FBeEtTOzs7O0FEZmpCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFD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Ozs7O0FBT2pCLE1BQU0sQ0FBQyxPQUFQLEdBQWlCOzs7O0FEVmpCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBRGhWQSxJQUFBLGtHQUFBO0VBQUE7Ozs7QUFBQSxLQUFBLEdBQVEsT0FBQSxDQUFRLGtCQUFSOztBQUlSLEtBQUEsR0FDQztFQUFBLE1B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
